<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>巴巴变的博客</title>
        <link>https://blog.bugxch.top/</link>
        <description>Recent content on 巴巴变的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>bugxch</copyright>
        <lastBuildDate>Sat, 01 Jun 2024 21:56:31 +0800</lastBuildDate><atom:link href="https://blog.bugxch.top/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>CSAPP之四——处理器体系结构</title>
        <link>https://blog.bugxch.top/p/csapp%E4%B9%8B%E5%9B%9B%E5%A4%84%E7%90%86%E5%99%A8%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</link>
        <pubDate>Sat, 01 Jun 2024 21:54:52 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/csapp%E4%B9%8B%E5%9B%9B%E5%A4%84%E7%90%86%E5%99%A8%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</guid>
        <description>&lt;img src="https://image-1258996033.cos.ap-shanghai.myqcloud.com/staircase-7718335_1280.jpg?imageSlim" alt="Featured image of post CSAPP之四——处理器体系结构" /&gt;&lt;p&gt;这是CSAPP第四章，作者想通过自己定义的Y86-64的ISA指令集定义、设计、编码以及制造一个简单的单周期流水线化的处理器。作者的思路也非常清晰，包括了上述的所有步骤，在每一步描述了嵌入了处理器设计的基本原则以及需要注意的技术细节。下面是设计的ISA的指令集&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/20240602062649.png?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;前置知识&#34;&gt;前置知识&lt;/h1&gt;
&lt;h2 id=&#34;堆栈操作&#34;&gt;堆栈操作&lt;/h2&gt;
&lt;p&gt;作者在4.1.6和4.3.3两次提到堆栈操作的特殊性，此处做一个基本的回顾。堆栈指令包括 &lt;code&gt;popq&lt;/code&gt; 和 &lt;code&gt;pushq&lt;/code&gt; 两条，作者设计假定栈顶的地址始终保存在寄存器 &lt;code&gt;%rsp&lt;/code&gt; 中，参考&lt;a class=&#34;link&#34; href=&#34;https://blog.bugxch.top/p/%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;程序的机器级表示&lt;/a&gt;中的内容，有如下示意图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6278fd150947543129801e44.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
在理解上面过程之前，我们假设：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;堆栈中保存的是 &lt;strong&gt;8字节&lt;/strong&gt;的元素，而且按照小端法存储的，即低有效位对应低地址；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据在内存中的地址&lt;/strong&gt;，指的是整个数据的&lt;strong&gt;第一个字节在内存中的地址&lt;/strong&gt;，例如保存一个2字节的数据 &lt;code&gt;0x1234&lt;/code&gt; 在内存地址0x100处，那么0x100地址保存字节0x34，0x101处保存字节0x12。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合上面的假设，很容易看出，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;堆栈是从高地址向低地址增长的，推入一个元素栈顶指针地址变小，弹出一个元素则变大；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%rsp&lt;/code&gt; 始终指向栈顶的最后一个元素的地址，也就是最后一个元素在内存中的&lt;strong&gt;起始地址&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于上面的两点，程序的操作就比较好理解了，初始状态 &lt;code&gt;%rsp&lt;/code&gt; 中地址是0x108，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;code&gt;%rax&lt;/code&gt; 寄存器中的数据push进去，所以堆栈元素要增加8字节，为了将新的元素放到堆栈里面，先执行 &lt;code&gt;%rsp = %rsp - 8&lt;/code&gt;，此时 &lt;code&gt;%rsp&lt;/code&gt; 指向要入栈的新元素的其实地址0x100，这时就可以根据 &lt;code&gt;%rsp&lt;/code&gt; 的其实地址连续存储8个字节的新元素了，这个操作类似于
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;subq&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rsp&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// rsp = rsp - 8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;movq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rbp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rsp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// %rbp的元素拷贝到%rsp存储的地址处
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;出栈就是相反的，当前的 &lt;code&gt;%rsp&lt;/code&gt; 保存的就是需要弹出元素的地址，那么可以直接将该地址开始的连续8个字节先拷贝到目的地址，然后 &lt;code&gt;%rsp = %rsp + 8&lt;/code&gt;，此时 &lt;code&gt;%rsp&lt;/code&gt; 指向堆栈的&lt;strong&gt;新的&lt;/strong&gt;最后一个元素的地址。等价于如下的操作
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;movq&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rsp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;subq&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rsp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的操作可以保证，&lt;strong&gt;&lt;code&gt;%rsp&lt;/code&gt; 始终指向栈顶元素的起始地址&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;条件传送-vs-条件分支&#34;&gt;条件传送 vs 条件分支&lt;/h2&gt;
&lt;h1 id=&#34;参考文献&#34;&gt;参考文献&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/35038473/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;汇编语言（第4版） (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文原载于 &lt;a class=&#34;link&#34; href=&#34;http://blog.bugxch.top&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;巴巴变的博客&lt;/a&gt;，遵循 CC BY-NC-SA 4.0协议，复制请保留原文出处。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>周记之二</title>
        <link>https://blog.bugxch.top/p/%E5%91%A8%E8%AE%B0%E4%B9%8B%E4%BA%8C/</link>
        <pubDate>Sun, 14 Jan 2024 08:20:51 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%91%A8%E8%AE%B0%E4%B9%8B%E4%BA%8C/</guid>
        <description>&lt;img src="https://image-1258996033.cos.ap-shanghai.myqcloud.com/undefinedDEFG4941.JPG" alt="Featured image of post 周记之二" /&gt;&lt;p&gt;这周末去了杨浦公园玩，地方不大，公园比较朴素，石桥修得有趣，但是护栏很低，而且人工湖没有护栏，带小孩去玩还是要小心。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/undefinedDEFG4987.JPG&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;DEFG4987.JPG&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;一家三口一起游玩&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/DEFG4985.JPG?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;DEFG4985.JPG&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;湖边没有护栏&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/DEFG4995.JPG?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;DEFG4995.JPG&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;到哪里都可以看到的火箭玩具&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/DEFG5016.JPG?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;DEFG5016.JPG&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;居然在公园发现树上的小松鼠，上次在上海市区看到松鼠都是七八年前的事情了，只记得是在浦西小马路旁边的大树上，具体在哪里记不得了。
&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/IMG_20240113_111803.jpg?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;IMG_20240113_111803.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;桥有点意思，虽然看起来有点简陋，护栏很低，但是有点古朴的味道。
&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/DEFG4961.JPG?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;DEFG4961.JPG&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/DEFG4937.JPG?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;DEFG4937.JPG&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;杨浦公园外面有个花鸟古玩市场，里面非常热闹，我在儿童公园都能听到里面鼎沸的人声。公园外面的人行道上有很多小商贩，电瓶车后面小行李箱打开就是个小货摊，有卖古玩，铜币的，居然有卖经典 CD 和磁带的，里面夹杂着些蓝色小药丸，这些小玩意不知道现在还有谁会买，就像这公园一样古朴。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本文原载于 &lt;a class=&#34;link&#34; href=&#34;http://blog.bugxch.top&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;巴巴变的博客&lt;/a&gt;，遵循 CC BY-NC-SA 4.0 协议，复制请保留原文出处。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>R2S外接风扇设置</title>
        <link>https://blog.bugxch.top/p/r2s%E5%A4%96%E6%8E%A5%E9%A3%8E%E6%89%87%E8%AE%BE%E7%BD%AE/</link>
        <pubDate>Wed, 25 Jan 2023 21:16:42 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/r2s%E5%A4%96%E6%8E%A5%E9%A3%8E%E6%89%87%E8%AE%BE%E7%BD%AE/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/63d13639face21e9efb8dbc4.jpg" alt="Featured image of post R2S外接风扇设置" /&gt;&lt;p&gt;r2s 每更新一次固件版本，就需要重新刷一下风扇的脚本，非常麻烦，记录下，下面是文章全文。&lt;/p&gt;
&lt;p&gt;主要包括如下几个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过ssh登录路由器的shell界面，进入目录 &lt;code&gt;/etc/init.d&lt;/code&gt;目录，查看是否有fa-fancontrol或者pwm-fan等包含fan字段的脚本，如果有则选中删除。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63d1314bface21e9efaf3208.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20230125214026638&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在当前目录，输入以下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /etc/init.d/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch pwm-fan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;777&lt;/span&gt; pwm-fan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/pwm-fan &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开pwm-fan文件，输入如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh /etc/rc.common
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;START&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;99&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;start &lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &amp;gt; /sys/class/pwm/pwmchip0/export
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &amp;gt; /sys/class/pwm/pwmchip0/pwm0/enable
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt; &amp;gt; /sys/class/pwm/pwmchip0/pwm0/period
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &amp;gt; /sys/class/pwm/pwmchip0/pwm0/enable
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;49990&lt;/span&gt; &amp;gt; /sys/class/pwm/pwmchip0/pwm0/duty_cycle&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 初始风扇不转&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nv&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat /sys/class/thermal/thermal_zone0/temp&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#去掉了$旁的空格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$temp&lt;/span&gt; -gt &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 温度高于 50 风扇开始转，可修改，比如65000为65度；&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;30000&lt;/span&gt; &amp;gt; /sys/class/pwm/pwmchip0/pwm0/duty_cycle&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$temp&lt;/span&gt; -le &lt;span class=&#34;m&#34;&gt;45000&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 温度低于 45 风扇停转，可修改，比如55000为55度；&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;49990&lt;/span&gt; &amp;gt; /sys/class/pwm/pwmchip0/pwm0/duty_cycle&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#多加了fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	sleep 1s&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 1s检测一次，正常使用设置为60s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用下面的shell命令改成shell的format&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dos2unix pwm-fan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后我们登陆后台web管理界面，在【系统】&amp;ndash;【启动项】&amp;ndash;“启动脚本”下面能看到99号优先级名为pwm-fan的脚本，点击第二个【启动】按钮，风扇就开始转了，当温度降低到你设定的最低临界值的时候，风扇会自动停止。温度达到你设定的启动临界值的时候风扇会自动启动。最后重启一下你的路由器，确保设置生效。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63d135b3face21e9efb776c1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20230125215915284&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>上海驾考科目二考试总结</title>
        <link>https://blog.bugxch.top/p/%E4%B8%8A%E6%B5%B7%E9%A9%BE%E8%80%83%E7%A7%91%E7%9B%AE%E4%BA%8C%E8%80%83%E8%AF%95%E6%80%BB%E7%BB%93/</link>
        <pubDate>Mon, 02 Jan 2023 11:30:42 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%B8%8A%E6%B5%B7%E9%A9%BE%E8%80%83%E7%A7%91%E7%9B%AE%E4%BA%8C%E8%80%83%E8%AF%95%E6%80%BB%E7%BB%93/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/63b250f65d94efb26fab6812.jpg" alt="Featured image of post 上海驾考科目二考试总结" /&gt;&lt;p&gt;驾考科目二总结，考试要点如下，&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;在考试过程中，在保证不停车的前提下，尽量&lt;strong&gt;以最慢的速度&lt;/strong&gt;完成考试&lt;/li&gt;
&lt;li&gt;转方向盘要&lt;strong&gt;迅速&lt;/strong&gt;，尤其左打满右打满要快；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;熟记&lt;/strong&gt;每一个考试内容的操作要点，按照步骤操作，不要省略、跳过或者打乱步骤&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;驾考内容&#34;&gt;驾考内容&lt;/h2&gt;
&lt;h3 id=&#34;左右倒库&#34;&gt;左右倒库&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63b171472bbf0e7994763073.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;操作步骤&#34;&gt;操作步骤&lt;/h4&gt;
&lt;p&gt;以右倒库为例，左倒库是右倒库的镜像操作。参考上面的示意图&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;入场时从C点开始，沿着绿色箭头方向缓缓驶入考场。此处在开车过程中，方向盘正对图中最右侧的红色标志，&lt;strong&gt;左肩膀与A点处白色虚线平齐&lt;/strong&gt;为止，此时可以保证小车前轮越过白色虚线；&lt;/li&gt;
&lt;li&gt;挂倒挡开始倒车，与左边线平齐行驶，注意观察与左边线垂直的黄色标记，在肩膀与黄色标记平齐时&lt;strong&gt;右打满方向盘&lt;/strong&gt;开始入库。&lt;/li&gt;
&lt;li&gt;在倒车过程中观察&lt;strong&gt;右后视镜&lt;/strong&gt;中的F处入库的虚线，当车身任意部位与&lt;strong&gt;从右往左数第三根虚线&lt;/strong&gt;相交时，注意观察车把前端点与交点的距离P与虚线右端与交点的距离Q的长度。如果P &amp;gt; Q，那么&lt;strong&gt;方向盘回一圈&lt;/strong&gt;，边后退边观察，此时P会慢慢变短，当P = Q时，迅速&lt;strong&gt;右打满方向盘&lt;/strong&gt;，继续倒车&lt;/li&gt;
&lt;li&gt;当右库角（点E）出现在右后视镜时，迅速回正方向盘，观察左后视镜中GH边线与车身的距离，左右微调方向盘，保证前大后小。&lt;/li&gt;
&lt;li&gt;观察车库左边线的黄色的垂直线，待肩膀与黄色线平齐后停车，不可超过。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;操作要点&#34;&gt;操作要点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;左倒库观察左后视镜，右倒库观察右后视镜；’&lt;/li&gt;
&lt;li&gt;上面的第3步是&lt;strong&gt;非常关键的调整机会&lt;/strong&gt;，注意P和Q距离的大小比较，&lt;strong&gt;此处速度能有多慢就调多慢&lt;/strong&gt;，务必保证操作正确；&lt;/li&gt;
&lt;li&gt;方向盘的操作有打满、回一圈、微调3种操作；&lt;/li&gt;
&lt;li&gt;把握方向盘调整的时机，该打满的时候迅速打满，或者可以稍微早点操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;扣分点&#34;&gt;扣分点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;不按规定路线、顺序行驶，不合格&lt;/li&gt;
&lt;li&gt;车身出线，不合格；&lt;/li&gt;
&lt;li&gt;倒库不入，不合格；&lt;/li&gt;
&lt;li&gt;在倒车前，未将两个前轮出地点均驶过控制线；&lt;/li&gt;
&lt;li&gt;项目完成时间超过210秒；&lt;/li&gt;
&lt;li&gt;中途停车时间超过2秒，每次扣5分&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;直角转弯&#34;&gt;直角转弯&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63b2335a5d94efb26f89fb1d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;操作步骤-1&#34;&gt;操作步骤&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;开车过程中需要瞄准B点，保证行驶右车身与右边线A保持在30公分左右的车距；&lt;/li&gt;
&lt;li&gt;车辆摆正后就&lt;strong&gt;打开左转向灯&lt;/strong&gt;，缓慢向前行驶，前面的&lt;strong&gt;边线在前车窗视野中消失&lt;/strong&gt;时关闭左转向灯；&lt;/li&gt;
&lt;li&gt;注意观察左边转弯延长线与车身内门锁把手的交点，待其&lt;strong&gt;稍微超过门锁把手后边沿时迅速左打满&lt;/strong&gt;，开始转弯；&lt;/li&gt;
&lt;li&gt;转弯后，待车辆驶入道路中心时，&lt;strong&gt;回正方向盘&lt;/strong&gt;，此项目考核结束。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;操作要点-1&#34;&gt;操作要点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;不要忘记打转向灯或者错误打灯；&lt;/li&gt;
&lt;li&gt;注意转弯前的右车身与边线的距离；&lt;/li&gt;
&lt;li&gt;转弯时机掌握到位，方向盘操作迅捷不犹豫。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;扣分点-1&#34;&gt;扣分点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;车轮轧道路边缘线，不合格；&lt;/li&gt;
&lt;li&gt;转弯时不使用或者错误使用转向灯，转弯后不关闭转向灯，扣10分。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;侧方停车&#34;&gt;侧方停车&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63b178552bbf0e79947ff6c8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;操作步骤-2&#34;&gt;操作步骤&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;车辆从右往左行驶，注意保持车身和边线AE的距离，保持在30公分左右。开车过程中瞄准前方的点，或者注意左边雨刮器1/3处在右边线上行驶，基本可以保证达标；&lt;/li&gt;
&lt;li&gt;库角A出现在右后视镜中心点时停车，挂R档开始倒车，观察库角A在右后视镜中的位置，它会慢慢消失，在&lt;strong&gt;A点即将消失之前快速右打满方向盘&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;倒车过程中注意观察&lt;strong&gt;左后视镜&lt;/strong&gt;，注意库角从右往左数第二根虚线，当其完全出现在左后视镜时迅速&lt;strong&gt;回正方向盘&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;观察左后轮轴心与地面的垂线P和和入库虚线延长线Q的位置关系，当左后轮中心点在延长线时&lt;strong&gt;迅速左打满方向盘&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;观察左边车身，与入库线的位置关系，当与入库线平行时停车；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;打左转向灯&lt;/strong&gt;，挂前进档，准备驶出车库；&lt;/li&gt;
&lt;li&gt;观察最左边线，如果左边线的延长线在车速表的40时回正方向盘，继续向前开；&lt;/li&gt;
&lt;li&gt;观察左边线延长线到达仪表的160的方向时，&lt;strong&gt;右打一圈&lt;/strong&gt;，待车头摆正后回正方向盘，驶出考试场地。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;操作要点-2&#34;&gt;操作要点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;上面第4步是一个重要的调整节点，需要格外注意车身与入库虚线的夹角，如&lt;strong&gt;夹角比较小&lt;/strong&gt;，那么就需要早一点左打方向盘，否则可以晚一点打方向盘；&lt;/li&gt;
&lt;li&gt;出库的第7步和第8步容易出错，一定要注意操作迅速。第7步回正慢了，就车子离AE边线会比较远，容易碰到边线，如果回正早了，后面第8步容易碰到AE边线。&lt;/li&gt;
&lt;li&gt;第8步时&lt;strong&gt;右打一圈&lt;/strong&gt;，不是半圈，一定要到位。&lt;/li&gt;
&lt;li&gt;此项目出库时&lt;strong&gt;需要打左转向灯&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;扣分情况&#34;&gt;扣分情况&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;车辆入库停止后，车身出现，不合格；&lt;/li&gt;
&lt;li&gt;项目完成时间超过90秒，不合格；&lt;/li&gt;
&lt;li&gt;行驶中车轮触轧车道边线，每次扣10分；&lt;/li&gt;
&lt;li&gt;行驶中车身触碰库位边线，每次扣10分；&lt;/li&gt;
&lt;li&gt;出库时不适用或者错误使用转向灯，扣10分；&lt;/li&gt;
&lt;li&gt;中途停车超过2秒，每次扣5分；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;窄路掉头&#34;&gt;窄路掉头&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63b235f15d94efb26f8df399.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;操作步骤-3&#34;&gt;操作步骤&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;右车身与A边线保持30公分左右距离行驶，缓慢驶入窄路；&lt;/li&gt;
&lt;li&gt;观察前车窗中的B线，待其快消失在车窗前（此时车头与边线B的距离在50公分左右），迅速左打满方向盘；&lt;/li&gt;
&lt;li&gt;观察C边线与车内门锁交点位置，在门锁后端边沿时停车，&lt;strong&gt;挂倒挡，迅速右打满方向盘&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;观察左后轮与边线A的相交情况，当其任意部分与边线接触时停车，&lt;strong&gt;挂前进档，迅速左打满方向盘&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;缓慢驶出考试场地，此项目考核结束。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;操作要点-3&#34;&gt;操作要点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;该项目&lt;strong&gt;不需要打灯&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;操作方向盘的顺序很好记，左打满 -&amp;gt; 右打满 -&amp;gt;左打满，挡位是前进 -&amp;gt; 倒退 - &amp;gt; 前进。&lt;/li&gt;
&lt;li&gt;换挡和转方向盘速度要快，节省时间。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;扣分项&#34;&gt;扣分项&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;超过2分钟未完成，不合格；&lt;/li&gt;
&lt;li&gt;三进二退未完成的，不合格；&lt;/li&gt;
&lt;li&gt;车轮轧道路边缘线的，不合格。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;曲线行驶&#34;&gt;曲线行驶&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63b22cff5d94efb26f84e15c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;操作步骤-4&#34;&gt;操作步骤&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;如图所示，从左向右行驶，在进入曲线之前需要摆正方向盘，&lt;strong&gt;行驶在车道正中间&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;缓慢驶入曲线，观察左边曲线与左后视镜下边沿的交点，它会沿着后视镜下边沿从左往右缓慢移动，等到移动到左后视镜根部时，方向盘&lt;strong&gt;左打一圈&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;在行驶中&lt;strong&gt;随时微调&lt;/strong&gt;方向盘，保持左后视镜的左边沿距离左边曲线&lt;strong&gt;一拳左右的距离&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;当行驶到左边线的大B点时到达了反向弯，提前拉起左前窗的挡风玻璃，继续观察左边曲线与左后视镜下边沿的交点，它会沿着后视镜下边沿从左往右缓慢移动，等到移动到左后视镜根部时，方向盘&lt;strong&gt;迅速回正&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;此时观察左边曲线的出口处边线，随着车辆向前行驶，它会慢慢消失在前车窗的视野中，当它消失时候迅速&lt;strong&gt;右打方向盘一圈&lt;/strong&gt;，头向左&lt;strong&gt;靠在车窗玻璃上&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;观察左边线延长线与车内门锁把手的交点，在行驶中&lt;strong&gt;随时微调&lt;/strong&gt;方向盘，保持该交点始终保持在门锁把手的长度范围内。此处有调节技巧，如果交点&lt;strong&gt;超出门把手前端&lt;/strong&gt;，则&lt;strong&gt;微微向左&lt;/strong&gt;打方向盘，如果交点&lt;strong&gt;超出门把手后端&lt;/strong&gt;，则&lt;strong&gt;微微向右&lt;/strong&gt;打方向盘。&lt;/li&gt;
&lt;li&gt;待车辆驶出曲线出口时，&lt;strong&gt;回正方向盘&lt;/strong&gt;，该项目结束。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;操作要点-4&#34;&gt;操作要点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;始终观察左后视镜和左边线的情况，不需要查看右边的情况；&lt;/li&gt;
&lt;li&gt;方向盘的调整量为一圈，要么左打一圈，要么右打一圈。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;扣分情况-1&#34;&gt;扣分情况&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;车轮轧道路边缘线，不合格；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;疑问点&#34;&gt;疑问点&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;直角转弯，是完成转弯之后关掉转向灯，还是现在这样在准备转弯前就关闭转向灯？&lt;/li&gt;
&lt;li&gt;倒库的步骤3方向盘的调整量是半圈还是一圈？&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/24518251&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何顺利一次性通过驾考科目二考试？ - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;
</description>
        </item>
        <item>
        <title>NAS折腾小记</title>
        <link>https://blog.bugxch.top/p/nas%E6%8A%98%E8%85%BE%E5%B0%8F%E8%AE%B0/</link>
        <pubDate>Mon, 19 Dec 2022 16:35:51 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/nas%E6%8A%98%E8%85%BE%E5%B0%8F%E8%AE%B0/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/63b250255d94efb26faa6c53.jpg" alt="Featured image of post NAS折腾小记" /&gt;&lt;p&gt;前段时间买了个nas，折腾了两个礼拜多，总算摸到点门道。&lt;/p&gt;
&lt;p&gt;本月初心里痒痒拿下威联通TS-216，某东价格1199，为什么会买这个呢？我的脑回路也比较清奇，我在之前给我的R2S计划启用openclash，但是发现那个固件的插件有问题，于是在网上搜索了一番，找到了&lt;a class=&#34;link&#34; href=&#34;https://doc.linkease.com/zh/guide/istoreos/install_r2s.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;R2S/R4S 设备 | 易有云 文档中心&lt;/a&gt;的固件，发现安装之后的界面还挺好看，openclash也顺利用起来了（虽然后面是从&lt;a class=&#34;link&#34; href=&#34;https://github.com/vernesong/OpenClash/tags&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tags · vernesong/OpenClash · GitHub&lt;/a&gt;页面自己下载手动安装的）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63a02655b1fccdcd36738d47.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;细看上图里面有个易有云的存储服务，顺手google 下什么是易有云，发现就是个NAS。我在某宝上搜了，发现盒子比较简陋，可以安装一块硬盘，非常便宜，就下图的样子，看起来玩得花样比较多。联想之前华为发布家用NAS，加上我的时光相册不能上传比较大的图片和视频，让我觉得云盘备份瞬间不香了，要不整个家用NAS玩玩？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63a0265db1fccdcd36739a0a.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;于是，我又在&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/fenlei/nascunchufuwuqi/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;最新NAS存储新品推荐_什么值得买&lt;/a&gt;下面泡了一段时间，发现NAS用的最多的就是群晖和威联通，鉴于威联通颜值能打，而且看到论坛里面的讨论这么全面，将来入手遇到问题也能方便找到解决方案，最终放弃了某宝非常便宜的方案，买了入门款的威联通TS216，先把这个玩熟，等过几年用的差不多了，升级的时候再换更高级的吧。&lt;/p&gt;
&lt;h2 id=&#34;基本配置&#34;&gt;基本配置&lt;/h2&gt;
&lt;p&gt;这个东西买回来很快，但是我发现要真的玩起来还是有比较高的学习成本的，下面是我边学边练的折腾记录。&lt;/p&gt;
&lt;h3 id=&#34;安装系统&#34;&gt;安装系统&lt;/h3&gt;
&lt;p&gt;我刚开始安装的是西数红盘4T plus，后来发现同步照片的时候NAS炒豆子的声音太大了，所以后来又买了两条m.2的闪迪500G固态硬盘，2个硬盘600大洋，所以整个一套下来应该花了3400大洋（还是蛮肉疼的）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63a02668b1fccdcd3673a92d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;安装系统可以参考&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/alldezle/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NAS无法拒绝SSD的N个理由！这些厉害玩法，你知道吗？&lt;/a&gt;，选择RAID 1阵列。为了搞清楚安装里面各种名词，我也看了很多文章，终于搞清楚了存储池、静态卷、厚卷、精简卷和RAID、Qtier这些名词的含义，当时本来计划看说明书的，奈何500页太长了，而且也发现了威联通居然还有个&lt;a class=&#34;link&#34; href=&#34;https://wiki.qnap.com/wiki/Main_Page&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;QNAPedia&lt;/a&gt;网站，全英文你能信？下图是我当前存储池的状态&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63a02672b1fccdcd3673b8b2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;远程访问&#34;&gt;远程访问&lt;/h3&gt;
&lt;p&gt;家用NAS需要能在外部访问才能发挥它最大的威力，这一节从下面的几个步骤一步步做介绍，我主要参考了&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/a0dq84nr/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;威联通 TS-451D外网高速访问：公网IP、DSM主机、端口映射、DDNS动态域名设置_NAS存储_什么值得买&lt;/a&gt;，基本上照着配置即可。需要注意两点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;外网IP申请下来之后，使用中国电信的网络app设置DMZ主机时，需要输入的是&lt;strong&gt;威联通连接的那台路由器在光猫中的IP地址&lt;/strong&gt;。这里要特别提醒使用软路由的朋友，我的网络拓扑是入户光猫 -&amp;gt; r2s软路由 -&amp;gt; 无线硬路由（有线桥接模式）-&amp;gt; 威联通，所以我要输入的就是r2s的软路由在入户光猫中分配的ip地址，这个可以在中国电信网络关键app首页最下面的在线设备中看到。
&lt;img src=&#34;https://pic.imgdb.cn/item/63a02640b1fccdcd36736c3f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我的r2s刷的是openwrt系统，这个系统的内部端口转发可以参考&lt;a class=&#34;link&#34; href=&#34;https://opssh.cn/luyou/167.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenWRT 设置 端口转发 小白教程 - 彧繎博客&lt;/a&gt;，我的端口转发设置长这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/63a02682b1fccdcd3673d099.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果没有外网IP，可以使用威联通自带的myCloud和DDNS服务，但是速度比较慢，设置系统查看状态应该可以，但是下载上传文件就勉为其难了。更好的方案是使用有偿的服务，比如上面易有云就提供内网穿透服务，最高到8M速度，我后来没有用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;域名映射&#34;&gt;域名映射&lt;/h4&gt;
&lt;p&gt;如果外网IP申请下来，一般是在浏览器中直接输入外网IP地址和端口号，但是外网IP会因为光猫重新上电而发生变化，这个就不太方便，所以可以绑定域名，自动DDNS解析解决这个问题。我参考&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/a5ozer6k/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;威联通使用腾讯DNSPod域名DDNS解析完全小白指南+HTTPS证书部署（阿里、华为等国内主流云服务商通用）_NAS存储_什么值得买&lt;/a&gt;设置好的，但是没有做最后的证书配置。&lt;/p&gt;
&lt;h3 id=&#34;安装app&#34;&gt;安装APP&lt;/h3&gt;
&lt;p&gt;以我一周左右的使用经验来看，最有的APP有下面几个，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qsirch，智能搜索各种文档，甚至支持图片的OCR识别后的内容搜索，非常好用，高级搜索功能非常好玩，甚至可以根据相机的镜头筛选照片；&lt;/li&gt;
&lt;li&gt;QuMagic，智能相册，比较有趣的是人物识别、物体分类、地点分类和智能相册；&lt;/li&gt;
&lt;li&gt;Qfiling，非常好用文档整理软件，填写好条件和要求，就可以自动将源目录中的文档按照要求搬移到对应的目的目录里面，比如我喜欢使用相机拍照，就可以使用这个功能，将所有的富士相机的照片按照年/月的文件夹的结构给我归档到多媒体的文件夹里面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面最有用的3个软件具体怎么配置和使用可以参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/a9g4lz35/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Qfiling，我注意你很久了！——威联通文件整理神器使用体验_NAS存储_什么值得买&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/ad9dlk8d/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Qumagie 与 PhotoPrism丨两个NAS相册神级工具，AI人脸、元数据、搜索功能都有_NAS存储_什么值得买&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/awx0wop4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;QNAP威联通发布Qsirch 5.0搜索神器，图片搜索和归档更便捷好用_软件应用_什么值得买&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应用设置&#34;&gt;应用设置&lt;/h2&gt;
&lt;h3 id=&#34;同步obsidian笔记&#34;&gt;同步Obsidian笔记&lt;/h3&gt;
&lt;p&gt;从去年开始，我在&lt;a class=&#34;link&#34; href=&#34;http://blog.bugxch.top/takesmartnotes/#%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;初识卡片笔记写作法 - 不写，就无法思考&lt;/a&gt;里面使用Obsidian，之前也使用过坚果云 + folerSync同步PC端，但是同步效果不理想。这次使用NAS，我发现APP Center里面有&lt;a class=&#34;link&#34; href=&#34;https://www.resilio.com/individuals/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt; Resilio Sync&lt;/a&gt;，顺便就google了下，发现很适合NAS啊，可以参考&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/459403503&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Resilio Sync | 全平台多设备文件同步/传输终极产品 - 知乎&lt;/a&gt;。这个软件特点是可以多达60M+的速率在所有安装该软件的跨平台设备上同步，但是需要保证多个同步文件夹中至少有一个是在线的。所以，我的做法是在NAS上安装该软件作为共享的源文件夹，然后在PC和手机端分别安装并同步这个源文件夹，都赋予读写权限，这样无论哪一端的修改都会同步到其他两端。我在手机上安装后使用，可以实现瞬时同步，体验极佳。&lt;/p&gt;
&lt;h3 id=&#34;同步博客&#34;&gt;同步博客&lt;/h3&gt;
&lt;p&gt;使用类似的方法，我将hugo博客的文件夹也放在了NAS上，PC端与其同步，这样就能实现二者的同步了。&lt;/p&gt;
&lt;h3 id=&#34;搭建书屋&#34;&gt;搭建书屋&lt;/h3&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/a992p6e0/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NAS指南 篇三：打造最强家用NAS之私人书库搭建教程_NAS存储_什么值得买&lt;/a&gt;就能搭建起个人书库，唯一的缺憾是不能批量上传，我把中亚上面的几乎所有电子书和文档全部上传到NAS电子书服务器上了。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/a0dq84nr/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;威联通 TS-451D外网高速访问：公网IP、DSM主机、端口映射、DDNS动态域名设置_NAS存储_什么值得买&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://diy.zol.com.cn/798/7985029.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;新手轻松玩转的NAS丨威联通TS-216 +东芝N300开箱体验_QNAP TS-221_游戏硬件存储-中关村在线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/alldezle/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NAS无法拒绝SSD的N个理由！这些厉害玩法，你知道吗？_NAS存储_什么值得买&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/348134043&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Resilio Sync，兼具文件同步/共享/备份/加密的神器 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;
</description>
        </item>
        <item>
        <title>《指数基金投资指南》笔记</title>
        <link>https://blog.bugxch.top/p/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84%E6%8C%87%E5%8D%97%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Sat, 14 May 2022 09:46:46 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84%E6%8C%87%E5%8D%97%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/627f0a6d09475431294c2403.jpg" alt="Featured image of post 《指数基金投资指南》笔记" /&gt;&lt;p&gt;疫情期间，复习下之前的指数基金投资指南。&lt;/p&gt;
&lt;p&gt;这本书我在2018年10月左右第一次读完的，从那个时候开始投资基金到现在差不多3年半的时间。经历过还算完整的高峰和低谷，直到去年底收益倒还不错，但是今年开年到现在亏损比较严重，刚好疫情居家隔离，正好把这本书复习下，重新理解下之前不甚明了的概念，梳理下内容，系统化投资策略。&lt;/p&gt;
&lt;h2 id=&#34;我的理念&#34;&gt;我的理念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;凡是投资收益强过银行的长期定存收益的方法，都值得学习。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是我开始入坑基金投资的缘由，出身农村，视野狭隘，但是经历过2015年房地产暴涨的行情，我意识到金融的重要性。当劳动所得的收入的涨幅无法追上金融资产的涨幅时，当看到有人凭借房地产买卖早早实现财富自由的时候，我觉得是时候主动去理解经济运行的逻辑了，而且要多元化自己的收入来源，仅仅依靠劳动所得的收入长远看根本抵不过通货膨胀带来的贬值损失。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;越早学习投资受益越大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有工具不用，和没有工具是两回事。学会金融和经济的逻辑，是在现代社会有质量生存的基本技能。我要是很早就是意识到房子的金融属性，也不至于眼睁睁错过2015年房子的涨幅而陷入绝望。越早学习投资，越早意识到金融经济的重要性，受益越大。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;金融市场充满波动，有高峰有低谷，赚钱赚的就是这个利差。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;波动越大，不确定性越大，风险越大，但是峰谷差值越大，利润也越大。&lt;/p&gt;
&lt;h2 id=&#34;基础知识&#34;&gt;基础知识&lt;/h2&gt;
&lt;p&gt;这本书的核心内容是基金介绍和指数基金挑选这两个章节，展开说说。&lt;/p&gt;
&lt;h3 id=&#34;基金分类&#34;&gt;基金分类&lt;/h3&gt;
&lt;p&gt;我把书里面介绍的基金分类罗列在下面的表格里面，一目了然。&lt;/p&gt;
&lt;h4 id=&#34;宽基指数&#34;&gt;宽基指数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基金名称&lt;/th&gt;
&lt;th&gt;基金代码&lt;/th&gt;
&lt;th&gt;指数特点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;上证50&lt;/td&gt;
&lt;td&gt;000016&lt;/td&gt;
&lt;td&gt;大盘股为主，也称为蓝筹股。只有上交所的股票，没有深交所的股票。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;沪深300&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;000300和399300&lt;/td&gt;
&lt;td&gt;上交所和深交所&lt;strong&gt;规模最大、流动性最好&lt;/strong&gt;的300只股票，&lt;strong&gt;影响力十分巨大&lt;/strong&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中证500&lt;/td&gt;
&lt;td&gt;000905和399905&lt;/td&gt;
&lt;td&gt;在沪深300之外的公司和最近一年的日均市值排名前300的企业排除，挑选剩下的前500个企业。国内&lt;strong&gt;中型公司&lt;/strong&gt;的代表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;创业板指数&lt;/td&gt;
&lt;td&gt;399006&lt;/td&gt;
&lt;td&gt;创业板上市公司中，挑选出规模最大、流动性最好的100只股票。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;创业板50指数&lt;/td&gt;
&lt;td&gt;399673&lt;/td&gt;
&lt;td&gt;是从创业板指数的100家企业中，再挑选出流动性最好的50家，相当于创业板的“上证50”。创业板指数容易暴涨暴跌，&lt;strong&gt;中小型公司为主&lt;/strong&gt;，盈利不稳定。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;上证红利指数&lt;/td&gt;
&lt;td&gt;000015&lt;/td&gt;
&lt;td&gt;上交所过去两年平均现金股息率最高的50只股票&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;中证红利指数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;000922/399922&lt;/td&gt;
&lt;td&gt;从上交所和深交所挑选过去两年平均现金股息率最高的股票，成份股数量扩大到100只&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;深证红利指数&lt;/td&gt;
&lt;td&gt;399324&lt;/td&gt;
&lt;td&gt;专门投资深交所的高现金股息率的股票，不过成份股只有40只&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;红利机会指数&lt;/td&gt;
&lt;td&gt;CSPSADRP&lt;/td&gt;
&lt;td&gt;过去3年盈利增长必须为正；过去12个月的净利润必须为正；每只股票权重不超过3%，单个行业不超过33%。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;基本面50指数&lt;/td&gt;
&lt;td&gt;000925/399925&lt;/td&gt;
&lt;td&gt;基本面得分前50名。和上证50相似，但是考察更全面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;央视50指数&lt;/td&gt;
&lt;td&gt;399550&lt;/td&gt;
&lt;td&gt;是专家们投票选出来的50只股票，&lt;strong&gt;规则不透明，主观性较强&lt;/strong&gt;，兼顾龙头企业和小盘股。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;恒生指数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;HSI&lt;/td&gt;
&lt;td&gt;历史悠久、收益稳定。所有在中国香港上市的公司中规模最大的50家企业。投资者以境外为主，容易受到境外市场的影响，避坑老千股。主要通过QDII的ETF联结基金投资。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H股指数&lt;/td&gt;
&lt;td&gt;暂缺&lt;/td&gt;
&lt;td&gt;内地注册，香港上市的前40只成分股。境外人士通过H股投资内地企业，和A股关系密切，与上证50指数重合度高。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;上证50AH优选&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;暂缺&lt;/td&gt;
&lt;td&gt;与上证50几乎相同，但是选的是A股和H股中相对便宜的那一个。推荐华夏上证50AH优选指数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;纳斯达克100指数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;NDX&lt;/td&gt;
&lt;td&gt;全球规模最大信息技术类公司的指数，市值最高前100个公司，基本都是行业龙头。通过QDII基金投资，&lt;strong&gt;如果基金公司的外汇额度不够，会停止申购&lt;/strong&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标普500指数&lt;/td&gt;
&lt;td&gt;SPX&lt;/td&gt;
&lt;td&gt;美国影响最大的指数，并不全是大盘股，同样需要通过QDII基金投资。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;上证综指&lt;/td&gt;
&lt;td&gt;000001&lt;/td&gt;
&lt;td&gt;影响力较大，上证股市的晴雨表，追踪这个指数的基金通过抽样挑选一部分股票。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;此外，还有中证公司开发的其他的指数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中证100：大盘股为主，沪深两市规模最大的100只。&lt;/li&gt;
&lt;li&gt;沪深300：大盘股为主，沪深两市规模最大的300只。&lt;/li&gt;
&lt;li&gt;中证500：中盘股为主，排除沪深300后，沪深两市规模最大的500只。&lt;/li&gt;
&lt;li&gt;中证800：大中盘股，沪深300+中证500。&lt;/li&gt;
&lt;li&gt;中证1000：小盘股为主，除去中证800外，最大的1 000只小盘股&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;行业基金&#34;&gt;行业基金&lt;/h4&gt;
&lt;p&gt;行业分类很多，作者在这里主要推荐日用消费品和医疗保健行业的指数，此外有一部分强周期的行业指数，在底部购入也会比较好。&lt;/p&gt;
&lt;h5 id=&#34;消费行业&#34;&gt;消费行业&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基金名称&lt;/th&gt;
&lt;th&gt;基金特点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;上证消费指数&lt;/td&gt;
&lt;td&gt;从上交所挑选必需消费行业公司&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;上证消费80指数&lt;/td&gt;
&lt;td&gt;从上交所挑选80家规模最大的必需消费行业公司&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中证消费指数&lt;/td&gt;
&lt;td&gt;从中证800，即沪深300和中证500中挑选必需消费行业公司&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全指消费指数&lt;/td&gt;
&lt;td&gt;从所有上市公司中挑选必需消费行业公司，覆盖范围最广&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下面是常见的消费行业基金，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6280c944094754312963ffd8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;医药行业&#34;&gt;医药行业&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;中证医药指数：又称中证800医药指数，是从中证800指数中挑选医药行业。&lt;/li&gt;
&lt;li&gt;中证医药100指数：挑选了100家大型医药股，每只股票买入相同的金额。&lt;/li&gt;
&lt;li&gt;上证医药指数：只投资上交所的医药行业公司。&lt;/li&gt;
&lt;li&gt;全指医药指数：从整个A股中挑选医药行业，它覆盖的医药公司是最全的。&lt;/li&gt;
&lt;li&gt;细分医药指数：挑选了医药行业细分领域的主要公司。&lt;/li&gt;
&lt;li&gt;300医药指数：挑选了沪深300指数里的医药行业公司。&lt;/li&gt;
&lt;li&gt;500医药指数：挑选了中证500指数里的医药行业公司&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2020年新冠疫情之后，医药行业有一波比较强的周期，当前奥密克戎肆虐，很多国外研发了mRNA疫苗，中国内地的复星医药也在研制，可能有一小波机会。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6280c9220947543129639869.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;养老行业&#34;&gt;养老行业&lt;/h5&gt;
&lt;p&gt;覆盖范围较广，人口老龄化越来越严重，长期来看试一个比较好的品类&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6280c9b8094754312965816f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;金融行业&#34;&gt;金融行业&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;银行业&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;书本里面介绍的篇幅比较大，银行业的利润受宏观经济的影响较大，下行周期风险准备金增加，国家降息，银行收益减少。反之就比较好，银行业在宏观周期的波动中反复。书里面重点介绍了银行在国民经济发展中的作用，介绍了银行不同的盈利模式，可以了解下。&lt;/p&gt;
&lt;p&gt;投资银行也有两种方式，之前的的&lt;strong&gt;上证50指数、基本面50指数、H股指数、50AH优选指数&lt;/strong&gt;等相关的指数基金已经包含了很多银行股（当前的银行股在股市中占比很高），或者专门投资银行股的中证银行指数，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6280cd7a0947543129715f2d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;证券业&lt;/p&gt;
&lt;p&gt;应该是金融行业中周期性最强的行业，不适合长期持有，基本面与股价走势趋同，因为我不喜欢投机性很强的行业，所以忽略。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保险业&lt;/p&gt;
&lt;p&gt;保险业的上市公司不多，只有中国平安、中国太保、中国人寿和新华保险这4家，没有纯粹的保险行业指数基金。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结下，基本上如果已经关注了上面的4只指数，就没必要再单独购买持有了。&lt;/p&gt;
&lt;h5 id=&#34;地产&#34;&gt;地产&lt;/h5&gt;
&lt;p&gt;现在基本是下行周期了，长期看恢复乏力，不需要关注。&lt;/p&gt;
&lt;h5 id=&#34;军工行业&#34;&gt;军工行业&lt;/h5&gt;
&lt;p&gt;祖国终将统一，祖国必将统一。这个品种与国家政策影响比较大，投资难度较高。但是，我国最近几年军事工业发展迅猛，可以从&lt;a class=&#34;link&#34; href=&#34;https://chinapower.csis.org/analysis-jiangnan-shipyard/?lang=zh-hans&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;江南造船厂分析报告&lt;/a&gt;看到国内第三艘航母即将下水，未来可期&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6280e8000947543129cbb053.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;白酒&#34;&gt;白酒&lt;/h5&gt;
&lt;p&gt;目前比较惨，目前国内的白酒基本上已经包括在消费行业指数里面了。&lt;/p&gt;
&lt;h5 id=&#34;环保&#34;&gt;环保&lt;/h5&gt;
&lt;p&gt;国内环保长线发展，值得关注。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6280eac00947543129d4e7aa.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他要点&#34;&gt;其他要点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;避开规模较小的指数基金&lt;/strong&gt;。可能强制赎回，导致投资中断，这一条可以在基金的基础资料中看到，一般而言&lt;strong&gt;少于1亿规模&lt;/strong&gt;就不要申购了。&lt;/li&gt;
&lt;li&gt;增强型基金在追踪指数的基础上，去做一些操作来赚取超额收益，但是具体的操作不公开，有一定的风险。指数基金投资尽量挑选&lt;strong&gt;费用较低、规模较大、历史悠久、误差较小&lt;/strong&gt;的指数基金产品，或者是挑选有一定超额收益的&lt;strong&gt;增强型指数基金&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;红利指数有下面的3个特点：
&lt;ul&gt;
&lt;li&gt;高股息率，在&lt;strong&gt;熊市&lt;/strong&gt;更有优势；&lt;/li&gt;
&lt;li&gt;能持续发放现金股息的公司，盈利能力和财务健康状况好的概率越高。&lt;/li&gt;
&lt;li&gt;提供分红现金流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;QDII指数基金，合格境内机构投资者主要用于投资中国香港、美国等市场的股票。&lt;/li&gt;
&lt;li&gt;基金分场内基金和场外基金两种。相对于场外基金仅有”申购赎回”的交易渠道，场内基金还有“买入卖出”的渠道。但是，这里推荐&lt;strong&gt;场外基金&lt;/strong&gt;的投资方式，操作方便，省心省力，对于一般的工薪族来说足够。&lt;/li&gt;
&lt;li&gt;联结基金复制场内的指数，通过场外基金的方式申购和赎回，一般看到的ETF（交易型开放式指数基金）的联结基金就属于这一类。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;价值投资核心理念&#34;&gt;价值投资核心理念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;判断清楚价格与价值的关系，在&lt;strong&gt;价格&lt;/strong&gt;低于&lt;strong&gt;价值&lt;/strong&gt;的时买入，在&lt;strong&gt;价格高于价值&lt;/strong&gt;的时&lt;strong&gt;售出&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这就是价值投资的核心理念，要求能够合理预估投资产品的价值。所以自然就引出两个问题：如何评估股票的价值，评估后如何实操？&lt;/p&gt;
&lt;h3 id=&#34;如何估值股票&#34;&gt;如何估值股票&lt;/h3&gt;
&lt;p&gt;常见的股票估值由下面的评估指标。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指标&lt;/th&gt;
&lt;th&gt;定义&lt;/th&gt;
&lt;th&gt;意义&lt;/th&gt;
&lt;th&gt;适用范围&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;市盈率&lt;/td&gt;
&lt;td&gt;PE，公司市值 / 公司盈利&lt;/td&gt;
&lt;td&gt;愿意为获取1元的净利润付出的代价；估算市值&lt;/td&gt;
&lt;td&gt;流通性好、盈利稳定的品种。周期性行业不适用，高速成长期股票不适用的，一般进入沪深300、中证500指数的股票符合条件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;盈利收益率&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;市盈率的倒数&lt;/td&gt;
&lt;td&gt;购买公司之后一年盈利能够带来的收益&lt;/td&gt;
&lt;td&gt;同市盈率是适用范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;市净率&lt;/td&gt;
&lt;td&gt;PB，市值/净资产&lt;/td&gt;
&lt;td&gt;净资产是资产减去负债，比盈利更加稳定，和企业净资产收益率密切相关，尤其对于拥有大部分有形资产的公司来说比较合适。&lt;/td&gt;
&lt;td&gt;当企业的资产大多是比较容易衡量价值的有形资产，并且是长期保值的资产时，比较适合用市净率来估值。包括证券、航空、航运、能源等行业。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;股息率&lt;/td&gt;
&lt;td&gt;过去一年的现金分红与市值的比率&lt;/td&gt;
&lt;td&gt;股息，则可以将公司的净利润增长映射到投资者的现金收益上。股息是一个既能长期持有股权资产，又能同时享受现金流收益的好方法。&lt;/td&gt;
&lt;td&gt;盈利收益率 * 分红率 = 股息率，一般而言分红率不变，所以股息率间接等同于盈利收益率。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;需要区分股息率和分红率的不同，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;股息率是企业过去一年的现金派息额除以公司的总市值，而分红率是企业过去一年的现金派息额除以公司的总净利润。这两个比率，分子一样，但是分母一个是公司市值，一个是公司当年净利润。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;需要注意，任何一个基金指数本质上是一堆股票的加权和，所以可以将上面的概念推广到这些股票上，比如上证50的盈利收益率就是指数后面的这些股票的盈利总和除以市值总和，以此推算其他数值。本书的作者在自己的公众号的每个股票交易日之后会贴出上述指数的这些指标，可以搜搜&lt;strong&gt;银行螺丝钉&lt;/strong&gt;之后关注后查看。比如下面这张图就是最近一次的指数参数表&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/62888c22094754312906a435.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;投资实操&#34;&gt;投资实操&lt;/h3&gt;
&lt;p&gt;书中介绍了两种不同的方法，大概总结以下&lt;/p&gt;
&lt;h4 id=&#34;盈利收益率法&#34;&gt;盈利收益率法&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;当盈利收益率大于10%时，开始定投，分批买入。当盈利收益率低于6.4%时，暂停定投，分批卖出。其他区段，坚定持有&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按照这个说法，其实参考上面的估值表格，当前可以分批买入恒生指数以上的所有的指数了。盈利收益率法也是有它的&lt;strong&gt;局限性&lt;/strong&gt;的。盈利收益率的使用条件比较苛刻，只适合于流通性比较好、盈利比较稳定的品种。如果是盈利增长速度较快，或者盈利波动比较大的指数基金，则不适合使用盈利收益率法。&lt;/p&gt;
&lt;h4 id=&#34;博格公式法&#34;&gt;博格公式法&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;指数基金未来的年复合收益率 = 指数基金的投资初期股息率 + 指数基金每年的市盈率变化率 + 指数基金的每年的盈利变化率&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的是理论计算公式，后面的两个指数是在若干年之后才能计算出来的结果，实操中实际上就围绕这3个指数进行投资。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;股息率越高，指数越低估，此时可以买入持有。&lt;/li&gt;
&lt;li&gt;市盈率的变化在9~50倍之间周期变动。统计历史上的市盈率变化区间，计算当前市盈率在这个区间中的位置，如果较低则买入基金；&lt;/li&gt;
&lt;li&gt;公司的盈利一般不可预测，与国家经济的发展高度相关，是我们无法控制的变量，放弃&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在前2个指标比较低的时候买入，然后持有后等待均值回归。需要注意的是，对于盈利不稳定或者周期性比较强的行业，可以使用市净率替换市盈率进行评估，即在市净率比较低的时候买入。&lt;/p&gt;
&lt;p&gt;对于&lt;strong&gt;长期亏损&lt;/strong&gt;的企业，上面的两个方法均不适用，放弃即可。&lt;/p&gt;
&lt;h4 id=&#34;实操公式&#34;&gt;实操公式&lt;/h4&gt;
&lt;p&gt;上面的内容已经基本上把这本书的精华讲完了，后面作者补充了一些内容，比较有价值的是实操的具体公式。这个是&lt;strong&gt;定期不定额&lt;/strong&gt;的投资方法的公式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6288937009475431290bbfb3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;另一个博格公式的投资公式是&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/628894ef09475431290cd6f2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这里的$n$是投资的放大系数，一般设置成1就可以了，如果资金比较充裕，设置成2也可以。&lt;/p&gt;
&lt;h4 id=&#34;年龄与投资比例&#34;&gt;年龄与投资比例&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;指数基金是一种风险比较高的资产，我们可以用100减去自己当前的年龄，用得到的数值加上百分号就是适合投入到指数基金中的资金比例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如如果当前是35岁，流动资产100万元，那么可以将100 - 35 =  65万元投入到指数基金中来。作者在书本里面提到一个不错的投资建议，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先将100万元分成20份，每份5万元。取第一份5万元，定投到当前市场中满足条件的低估的指数基金中。剩余的19份，共计95万元，可以投入到货币基金或债券基金中。
随后的19个月，每个月再从货币基金或债券基金中提取5万元，定投到指数基金，直到配置完成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;债券相对盈利相对稳定，这个投资方案也比将大笔的闲置资金放在银行好。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;🚀全文完结&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CSAPP读书笔记</title>
        <link>https://blog.bugxch.top/p/csapp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Sun, 08 May 2022 07:32:49 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/csapp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;img src="https://image-1258996033.cos.ap-shanghai.myqcloud.com/csapptotal.jpeg" alt="Featured image of post CSAPP读书笔记" /&gt;&lt;p&gt;这是之前&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/read/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;读书计划&lt;/a&gt;中《深入理解计算机系统》的读书笔记。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;章节&lt;/th&gt;
&lt;th&gt;读书笔记&lt;/th&gt;
&lt;th&gt;状态&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;第2章&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.bugxch.top/p/%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E5%A4%84%E7%90%86/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;信息的表示和处理&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;完成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第3章&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.bugxch.top/p/%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;程序的机器级表示&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;在写&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;
</description>
        </item>
        <item>
        <title>程序的机器级表示</title>
        <link>https://blog.bugxch.top/p/%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/</link>
        <pubDate>Sun, 08 May 2022 07:27:38 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/6277012f0947543129b619f5.jpg" alt="Featured image of post 程序的机器级表示" /&gt;&lt;p&gt;继续之前的&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/csapp_notes/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CSAPP读书笔记&lt;/a&gt;，这是第3章的读书笔记。&lt;/p&gt;
&lt;p&gt;第3章介绍计算机的底层机器编码，包括常见的基本数据、为了执行机器指令而设置的寄存器、算术和逻辑操作以及控制的指令。3.7节详细介绍了&lt;strong&gt;过程&lt;/strong&gt;的概念，最后是其他数据结构在计算机机器代码的表示。&lt;/p&gt;
&lt;h2 id=&#34;实验工具&#34;&gt;实验工具&lt;/h2&gt;
&lt;p&gt;要想研究底层机器指令，最直观的就是汇编程序，参考书本里面的介绍，以linux系统的gcc程序为工具，有两种方式可以得到。如下图所示，是一个 &lt;code&gt;hello.c&lt;/code&gt;的程序从高级语言程序编译成机器代码的过程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6278b71f0947543129c38bee.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;strong&gt;编译器&lt;/strong&gt;运行如下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc -Og -S hello.c
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以得到 &lt;code&gt;hello.s&lt;/code&gt;的汇编文件，该文件仅仅包括汇编指令，没有二进制的机器码，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6278f45e09475431296b2e6b.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;不过对于&lt;strong&gt;理解本章节的内容已经足够&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用汇编器进一步可以将 &lt;code&gt;hello.s&lt;/code&gt;翻译成机器语言指令，称为&lt;em&gt;可重定位目标程序&lt;/em&gt;，里面全是二进制码，这个就是底层机器指令，肉眼看过去就是一串二进制码，根本不知道是什么东西。可以基于&lt;strong&gt;反汇编&lt;/strong&gt;的方法将该文件反汇编成汇编的代码，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc -Og -c hello.c &lt;span class=&#34;c1&#34;&gt;#生成hello.o文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;objdump -d hello.o &lt;span class=&#34;c1&#34;&gt;#反汇编文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;得到的文件，如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6278f59b09475431296e2a64.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;与上面的方法相比，除了汇编指令之外，还有这些指令的二进制编码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基础概念&#34;&gt;基础概念&lt;/h2&gt;
&lt;h3 id=&#34;数据格式和指令&#34;&gt;数据格式和指令&lt;/h3&gt;
&lt;p&gt;这些是本章的主要内容，也是理解汇编代码的基础。具体的技术细节书本里面已经说清楚了，此处仅仅对于需要特别注意的地方做一个总结。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ISA指令包括16个长度是64bit的寄存器，这是计算机运行的数据保存的地方。需要注意，每个寄存器有长度，可以覆盖1、2、4和8个字节的所有长度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机的寻址方式有如下几种&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6278f8460947543129747901.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据传送指令需要注意下面的点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;传送的指令的&lt;strong&gt;两个操作数不能都指向内存位置&lt;/strong&gt;。因此，没有指令可以直接将&lt;strong&gt;内存中的位置&lt;/strong&gt;A搬移到&lt;strong&gt;内存中的位置&lt;/strong&gt;B，必须先将A搬移到寄存器，之后再从寄存器搬移到内存B；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;movl&lt;/code&gt;这个指令比较特殊，它是传送双字（4个字节）的数据，但是也会同时将目的寄存器的高4个字节一并清零。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有的汇编指令的立即数都是二进制补码编码的，如果是十进制数，也是有符号的整数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一般的栈结构，栈底是高地址，栈顶是低地址，数据在栈顶进出，&lt;code&gt;%rsp&lt;/code&gt;指向栈顶。常见的栈结构如下所示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6278fd150947543129801e44.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;算术指令的所有操作都是在寄存器中进行的，换句话说，如果需要将内存中的两个数相加，第一步是先把它们搬移到寄存器中，然后调用ADD指令再相加，结果也会保存在寄存器中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据&lt;code&gt;TEST&lt;/code&gt;指令可以判断一个数的正负或者零。因为&lt;code&gt;testq %rax %rax&lt;/code&gt;指令不会改变寄存器里面的值，但是会根据&lt;code&gt;(%rax) &amp;amp;&amp;amp; (%rax) = (%rax)&lt;/code&gt;的值来设置条件码的标志位。比如，可以根据指令结束之后的ZF的值判断是否是0，SF的值判断是否是负数等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据上一条指令的cmp结果设置指定寄存器的值，使用下面的表格实现，想起来挺烧脑，了解即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6279003f094754312987963d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;跳转指令的底层机器编码中的跳转地址使用相对编码的形式。注意，汇编器生成的&lt;code&gt;*.s&lt;/code&gt;中是汇编语言，里面跳转指令的地址偏移是绝对值，但是通过链接器或者反汇编得到的&lt;strong&gt;二进制编码就是用相对寻址编码的&lt;/strong&gt;。还是书里面的例子。汇编文件如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/627902eb09475431298e2160.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*.o&lt;/code&gt;反汇编之后的文件如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6279031d09475431298ea166.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;注意第2行的跳转指令的地址二进制编码是03，这个是下一条指令地址的相对值，也就是&lt;strong&gt;跳转的地址（8) = 下一条指令的地址(5) + 偏移量(3)&lt;/strong&gt;。第5行也一样，5 = 0xd + f8(-8)。这样做的好处之一，是可重定位目标程序通过链接器链接之后，指令的虚拟地址发生变化，但是&lt;strong&gt;二进制编码依然保持不变&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;函数跳转&#34;&gt;函数跳转&lt;/h3&gt;
&lt;h2 id=&#34;问题解答&#34;&gt;问题解答&lt;/h2&gt;
&lt;p&gt;学习本章的内容之后，应该可以回答下面的问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么switch的case必须是整数？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;还没写完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>hugo博客更换giscus评论系统</title>
        <link>https://blog.bugxch.top/p/hugo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2giscus%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Sun, 08 May 2022 06:53:47 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/hugo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2giscus%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</guid>
        <description>&lt;p&gt;之前的blog换过很多个评论系统，这次换成giscus试试。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6276f9af0947543129ae0168.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;操作比较简单，参考&lt;a class=&#34;link&#34; href=&#34;https://giscus.app/zh-CN&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;giscus&lt;/a&gt;页面上的配置一步步做就可以了，最后将下面的生成的信息填写进博客的config.toml配置文件即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6276fd040947543129b169d0.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>完全干净卸载双系统</title>
        <link>https://blog.bugxch.top/p/%E5%AE%8C%E5%85%A8%E5%B9%B2%E5%87%80%E5%8D%B8%E8%BD%BD%E5%8F%8C%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Fri, 06 May 2022 08:59:46 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%AE%8C%E5%85%A8%E5%B9%B2%E5%87%80%E5%8D%B8%E8%BD%BD%E5%8F%8C%E7%B3%BB%E7%BB%9F/</guid>
        <description>&lt;p&gt;之前在win10上安装了双系统，最近发现wsl的ubuntu也挺香，所以就尝试卸载manjaro。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6274759009475431296fc792.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;基础流程&#34;&gt;基础流程&lt;/h2&gt;
&lt;p&gt;按照这个视频操作即可。&lt;/p&gt;






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1554y1n7zv&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;参考资料里面是另一种卸载的方法。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_35448976/article/details/113030739&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;win10和ubuntu双系统下彻底删除ubuntu系统和grub引导_喵学长的博客-CSDN博客_双系统删除ubuntu的grub引导&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>什么才是好工作</title>
        <link>https://blog.bugxch.top/p/%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%A5%BD%E5%B7%A5%E4%BD%9C/</link>
        <pubDate>Wed, 04 May 2022 07:28:27 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%A5%BD%E5%B7%A5%E4%BD%9C/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/6271bb480947543129ed3ab6.png" alt="Featured image of post 什么才是好工作" /&gt;&lt;p&gt;四年前跳槽时写的一篇旧文，现在可以贴出来放在这里了。从去年开始，我就有跳槽的想法，陆陆续续面试过华为，中兴和一些其他的企业，到前不久拿到中兴算法offer，跳槽的过程至此告一段落，所以现在是一个静下来好好思考的机会。&lt;/p&gt;
&lt;h2 id=&#34;什么才是好工作&#34;&gt;什么才是好工作？&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6271bd850947543129efd10c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;再有10天我就工作满4年了，虽然目前为止我仅仅在一家公司工作过，但是不管是结合自己的切身感受，还是与朋友同学聊天了解其他公司的情况，又或者通过媒体的报道，对于什么是好工作我自己也有一些体会。&lt;strong&gt;世界上没有十全十美的工作&lt;/strong&gt;，也就是说下面列出的衡量一个工作的指标并不能样样都满足，所以我依照重要程度递减排序，大体上可以分为精神和物质两个方面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;工作内容好&lt;/strong&gt;。抛却功利心，这是我认为最重要的指标，对于大多数人来说每天24小时除了睡觉吃饭之外的大多数时间就是工作，因此是否热爱是否能够全情投入很重要。越是热爱，越会钻研，越能达成不错的成就。这一点细分起来又可以分为不同的层面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;充满挑战&lt;/strong&gt;。每个人都讨厌无聊，相信不管什么工作如果没有挑战性也不会有太大的热情。挑战可以逼迫个人逃离舒适区，在不断赢得挑战的过程中个人的能力就得到锻炼，而且会很有成就感。&lt;strong&gt;需要特别区分工作量饱满和工作内容饱满这两点的不同&lt;/strong&gt;，前者大多数是技能的重复使用，后者是技能的深度和广度的拓展，对个人而言一定要跳出前者的陷阱。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;可持续发展&lt;/strong&gt;。工作的内容很饱满，富于变化，无论从深度还是广度都不错的延伸，值得投入精力去延展。通信行业目前来看还是有蛮大的创新空间，整个行业也在不停向前发展，但是具体到每个岗位还是固定的内容居多，算法岗就比协议岗的内容更加精深，它的横向延展性也更好（可以转深度学习，图像处理等等）。&lt;strong&gt;这一条注定每个人不可能只从事一个岗位，必然会有岗位的变迁和轮换，每个人的职业生涯是个动态变化的过程，个人应该结合自己阶段性的兴趣以及能力主动寻求变迁的机会。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;成长空间大&lt;/strong&gt;。上一条在很大程度上自我可控，这一条更多的是外部条件对自我的认可，成长空间可以分为两方面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;薪酬上涨空间大&lt;/strong&gt;。这是对自我工作的直接的肯定，但是这一点需要看的长远些，可能在目前的公司并不能获得满意的薪水，但是同行业其他公司有不错的待遇，可以将目前的公司当做跳板，一两年后跳槽就可以得到不错的薪水。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;职位升迁空间大&lt;/strong&gt;。基本与薪酬一起涨，好公司不会亏待好员工。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;企业人性化&lt;/strong&gt;。在前面两条满足的前提下，这个是更高级的需求。下面是比较重要的几个问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公司是否尊重员工？&lt;strong&gt;高层是否与底层员工有闭环沟通&lt;/strong&gt;？是否愿意改善员工的工作环境（工具软件/电脑桌椅/办公用具/IT支持等等）以及细微的需求？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;公司是否愿意与员工分享成果&lt;/strong&gt;？是否愿意主动加薪？是否愿意同甘共苦？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公司是否有公平完备的考核体系？每个员工有公平公正的竞争环境，才能保证优秀的员工脱颖而出。&lt;strong&gt;将加班时间作为考核指标，不仅无形消耗员工的健康和热情，而且大部分员工开始磨洋工，浪费精力浪费时间，就是公司人事管理的惰政和无能。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公司是否有考虑员工能力成长？是否有完备的培训体系？是否有轮岗制度？员工内部按需转岗是否顺利？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按照以上的各个指标来看，展讯几乎哪一条都不满足，满足于小恩小惠，就是中了公司的圈套。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前两天我导师告诉我一个机会，他在美国读书认识的朋友回国创业，就在张江创办了一家专注物联网芯片的创业公司，现在缺协议栈的人，问我愿不愿意去。前两天，饭桌上一起聊聊，感觉老板还不错，今天打算过去和他们的团队聊聊。晚上面试，肯定是大家互相了解的过程，我需要理顺自己的思路，想想自己真正想要了解的东西，所以有这篇文章。&lt;/p&gt;
&lt;h2 id=&#34;为什么要从展讯离职&#34;&gt;为什么要从展讯离职？&lt;/h2&gt;
&lt;p&gt;参照上面的好工作的标准，可以总结出来如下三点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;成长空间有限。&lt;strong&gt;技术能力提升有限&lt;/strong&gt;，每天的大部分时间是解决大量重复的简单的客户问题，最大的问题就是你的所有专注的持续的思考总是会被随时打断，技术上比较难专注下去。展讯内部&lt;strong&gt;并不鼓励轮岗&lt;/strong&gt;，因此无论纵向还是横向技术提升的空间都被堵死，这就决定了基本没有技术成长和突破的可能性，这最令我焦虑和恐慌；薪资岗位提升空间有限，技术成长是薪资岗位突破的前提条件，因此我并没有期待会有多好的未来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;企业文化糟糕。展讯已经成为业务驱动型公司，攻占手机中高端芯片的策略基本失败，展讯内部对工程师并不友好，管理团队不信任工程师；恶性加班文化盛行，2014~2016年各个部门为了争取上市利益，恶性竞争加班时间，管理层在年末考评上也会考察员工的加班时长；基层员工和管理层的沟通很少，工程师对公司愿景并不了解，鼓吹奋斗加班拼搏，只谈奉献，不谈薪酬。CEO的很多次谈话里总是无意间表达出对工程师的不屑，个人没有太多归属感，我就是流水线上的一个螺丝钉，想用就用，不想用就扔掉。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;从展讯学到什么&#34;&gt;从展讯学到什么？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;持续稳定的收入，至少可以在社会立足。毋庸置疑，能在上海生存下来，全靠公司了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决问题，精益求精。和学校相比，个人能力和思维完全转换过来，以前以完成任务考取高分为目标，现在已解决问题服务客户为导向。凡事都要准确分析从根本上高效充分地解决，而不是考90分考80分就差不多了。不再应付差事，而是坚定精准完美解决问题，这是学校和公司的办事思维上的最大区别。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;了解公司运作机制。项目从立项，开发到完成的整套流程，基本收有一个清晰的认识。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;为什么来我们公司&#34;&gt;为什么来我们公司？&lt;/h2&gt;
&lt;p&gt;这个问题可以换成，&lt;strong&gt;我们公司吸引你的是什么&lt;/strong&gt;？我想考察如下几个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;成长空间，保证成长的速度。我还年轻，我不甘于全面平庸化，我不想做流水线上的螺丝钉，我还想拓宽技术的深度和广度。我希望公司能有不错的成长的环境，有&lt;strong&gt;足够多的机会去学习交流&lt;/strong&gt;，有&lt;strong&gt;足够好的任务锻炼个人的技术能力&lt;/strong&gt;，有&lt;strong&gt;足够好的团队切磋交流&lt;/strong&gt;。如果没有上面的这些，我呆在大公司更好，因为收入稳定，而且承担的责任更小，我还可以过得更舒服一些。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;企业文化。灵活，公平，工程师的企业文化，很多人全力以赴专注于一件事，&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;我的疑虑是什么&#34;&gt;我的疑虑是什么？&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6271bf550947543129f1cf59.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;关于我自己&#34;&gt;关于我自己&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;我的直接上司是谁？他为什么加入这家公司？平时花费时间最多的事情是什么？&lt;/li&gt;
&lt;li&gt;你们对我的期许是什么？我的职责是什么？能否保证我的工作质量？工作量饱满还是工作内容饱满？&lt;/li&gt;
&lt;li&gt;我是否有机会发展其他技术能力？我是否有机会发展其他软技能？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;团队是否靠谱&#34;&gt;团队是否靠谱&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;管理团队都来自哪里？之前具体做什么工作？是否有丰富的管理经验？&lt;/li&gt;
&lt;li&gt;技术团队都来自哪里？之前具体做什么工作？是否有丰富的技术经验？是否在工程师文化比较浓厚的公司待过？&lt;/li&gt;
&lt;li&gt;基层员工之间以及管理团队和基层员工之间平时是否有充分的交流？有问题如何解决？&lt;/li&gt;
&lt;li&gt;员工的精神状态如何？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;公司的发展前景&#34;&gt;公司的发展前景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;创始人为何创立该公司？一时兴起还是深思熟虑？是否有持续为之奋斗的决心？&lt;/li&gt;
&lt;li&gt;如何理解物联网这个行业？有什么样的期许和愿景？&lt;/li&gt;
&lt;li&gt;竞争对手有哪些？如何脱颖而出？&lt;/li&gt;
&lt;li&gt;公司的发展计划如何？市场定位是否清晰？客户群是什么？什么时候出产品？产品是什么？是否有其他的计划？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;企业文化&#34;&gt;企业文化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;是否能保证公正对待？&lt;/li&gt;
&lt;li&gt;如何激励和惩罚员工？&lt;/li&gt;
&lt;li&gt;是不是有随时被解雇的可能？在什么情况下会解雇我？&lt;/li&gt;
&lt;li&gt;我是否可以掌控自己的节奏并持续发挥影响力？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;回报和收入&#34;&gt;回报和收入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;公司的资金来源有哪些？目前的资金如何？最近一年有没有新的融资计划？&lt;/li&gt;
&lt;li&gt;是否有五险一金等基本的收入保障？&lt;/li&gt;
&lt;li&gt;是否能保证团队成员的收入维持在一个合理的水平上？&lt;/li&gt;
&lt;li&gt;波动有多大？我能维持的最低的生活收入为多少？&lt;/li&gt;
&lt;li&gt;如果伴随公司成长了，我之后会有什么样的回报？&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;个人决策要结合年龄，贷款，能力高低等等因素，目前我这个阶段，要不要去一家公司，要不要继续待在一家公司，我看中以下几点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;时间宝贵，尤其是25~35岁的黄金十年，容不得浪费。&lt;/li&gt;
&lt;li&gt;能力提升，无论是硬技术还是软技能，最好每天都能有技术提升的幸福感。&lt;/li&gt;
&lt;li&gt;内心感受，我是否主动，积极，对要做的事情充满热情。&lt;/li&gt;
&lt;li&gt;物质回报，当然越多越好，至少与我的贡献匹配。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;撇开该不该去创业公司，先聊聊我在展讯这几年工作的感受。26岁入职，到现在4年多，前两2年除了加班累成狗，我还算满意，至少从啥都不懂到能处理大部分工作中的问题，诚惶诚恐得拿到些股票，后来又调薪，无论是技术还是收入感觉都还不错。但是从15年开始，我就觉得迷茫了，工作强度每月100+/小时，工资却不见涨，内容大部分是掉网掉话，我就是个人力bug转发器，技术上没啥成长，心里越来越焦虑，工作越来越没热情，待着没劲。&lt;/p&gt;
&lt;p&gt;回头再看股票，从承诺的200万到15万，再想想套现的时间和将来提现去掉税费之后的所得，我觉得跳槽去华为2年的年终奖直接可以秒杀吧。股票这事，无非就是5年时间，是待在展讯一直等到股票套现所得的收入高呢还是跳槽去别的公司累计获得的薪资和奖金的涨幅更高呢？我觉得大家都不傻，心里都有数。&lt;/p&gt;
&lt;p&gt;能力不见长，当然有我个人的原因，我不够主动，不够敏锐，职场上更多靠自己。但是我觉得也不能全怪个人，你问我想不想看？我想看，但是机会和环境也很重要：第一，有没有机会去做能够提升技能的事情，第二，有没有环境给你去做这件事。我个人觉得机会是很少的，项目少，而且环境也不能保证，因为时间少，展讯的研发不仅是研发也是维护，现在又兼任FAE了，责任重大啊。4年时间我就没有休过长假，最长也就过年时候连续的2天时间，敢说自己是勤勤恳恳，兢兢业业，交给我的任务大部分都能很好解决，没出什么版本回退啊客户退货的乱子。即便是这样，每天过得忙忙碌碌，从前两年支持三星到现在的客户接口人，CS域问题多且杂，我印象里从来没有长时间的比较闲的时候。腾点时间出来看看LTE？三星和客户问题处理起来既费时又心累，三星问题又有新log了，FAE打电话过来催，侯奇你赶紧看啊，今天下午要有更新，客户问题24小时就要逾期了，这个问题96小时能不能解决，上次客户问题开会，有领导还提议你们客户支持接口人不要解bug了，就专心assign和总结组内bug吧，哎，我不想说啥了。&lt;/p&gt;
&lt;p&gt;总之，内心感觉就是心累，干着没劲，而且看不到缓过来的时间，再等半年？再等一年？算了，还是直接找别的锻炼人的地方去吧，时间宝贵，我耗不起。&lt;/p&gt;
&lt;p&gt;至于公司层面的管理水平，激励机制，和我目前关心的个人成长比起来，不太重要，不过到底怎么样，我觉得大家心里都有数，我就不做评判了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;我最想要的是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;志不在协议栈，而是由协议栈引申出来平台，操作系统和DSP等其他的技能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全情主动的投入&lt;/strong&gt;。积极主动，全情投入，不想确认2G版本，不想继续看2G的客户问题，不想在5G研发时候还受到2G的牵绊&lt;/li&gt;
&lt;li&gt;硬技能和软技能的双份提升。不仅是解决技术问题的能力，还有管理团队的经验&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;展讯&lt;/th&gt;
&lt;th&gt;小公司&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;技能提升&lt;/td&gt;
&lt;td&gt;5G协议栈尤其是层2的&lt;strong&gt;设计，调试经验&lt;/strong&gt;，速度一般（70）&lt;/td&gt;
&lt;td&gt;NB-iot的&lt;strong&gt;全栈协议&lt;/strong&gt;，甚至于&lt;strong&gt;DSP/平台的调试经验&lt;/strong&gt;，倒逼成长，速度很快（60）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全情程度&lt;/td&gt;
&lt;td&gt;2G&lt;strong&gt;很可能没法甩干净&lt;/strong&gt;，需要解决紧急客户问题，确认版本case（60）&lt;/td&gt;
&lt;td&gt;全身心投入，无客户问题的忧虑 （90）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;自由度&lt;/td&gt;
&lt;td&gt;PSIT测试，束手束脚，有深度，但是可能想做的一直做不到（60）&lt;/td&gt;
&lt;td&gt;自由度很大，只要能解决问题，工具方法软件技术不限（90）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;薪资待遇&lt;/td&gt;
&lt;td&gt;一般，无成长 （60）&lt;/td&gt;
&lt;td&gt;未来可期 （90）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;成长空间&lt;/td&gt;
&lt;td&gt;一般，职位不会变化 （60）&lt;/td&gt;
&lt;td&gt;未来可期，项目管理经验，带团队经验都会有   （90）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;风险&lt;/td&gt;
&lt;td&gt;两年内风险为0 （100）&lt;/td&gt;
&lt;td&gt;前两年风险不大，随着产品的优劣风险会变化（60）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;
</description>
        </item>
        <item>
        <title>工具服务总结</title>
        <link>https://blog.bugxch.top/p/%E5%B7%A5%E5%85%B7%E6%9C%8D%E5%8A%A1%E6%80%BB%E7%BB%93/</link>
        <pubDate>Tue, 03 May 2022 22:11:34 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%B7%A5%E5%85%B7%E6%9C%8D%E5%8A%A1%E6%80%BB%E7%BB%93/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/62725d110947543129526ae2.png" alt="Featured image of post 工具服务总结" /&gt;&lt;p&gt;工欲善其事，必先利其器。对自己工具软件的一次总结。&lt;/p&gt;
&lt;p&gt;下面表格是对我当前电脑配置的软件工具的总结。&lt;/p&gt;
&lt;h2 id=&#34;软件列表&#34;&gt;软件列表&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;软件&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;平台&lt;/th&gt;
&lt;th&gt;费用&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;使用说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://typora.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Typora&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;默认md编辑器&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;付费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;参考官网的&lt;a class=&#34;link&#34; href=&#34;https://support.typora.io/Quick-Start/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Quick Start - Typora Support&lt;/a&gt;，我现在就在使用这个软件写这篇博客，前段时间更新到了1.0，然后收费了，觉得好用就买了，购买链接&lt;a class=&#34;link&#34; href=&#34;https://sspai.com/item/329&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在此&lt;/a&gt;，89元rmb终身买断，支持最多3个终端。当前使用主题是Mo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://todo.microsoft.com/tasks/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;微软To Do&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;任务管理&lt;/td&gt;
&lt;td&gt;win/android&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;跨平台任务管理软件，使用不到一个月，但是体验极好，win/android全平台同步，尤其是“我的一天”的任务，操作简单，上手容易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Edge浏览器&lt;/td&gt;
&lt;td&gt;浏览器&lt;/td&gt;
&lt;td&gt;win/android&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;微软官方浏览器，之前是IE内核，现在换成chromium内核，支持微软账户书签密码同步，更重要的是兼容chrome插件，chrome用户可以无缝平移。插件丰富，同步无忧，还不占内存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bandisoft.com/bandizip/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Bandizip&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;解压缩&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;简单智能，免费省心&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.scootersoftware.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Beyond Compare&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;文本比较&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;付费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;程序员都知道，我还没有付费，考虑中，或者使用更低的商业版本也够用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.listary.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Listary&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;效率工具&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;可付费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可以使用免费版，我付费买断了，和windows无缝集成，文本搜索，软件搜索，快捷操作不在话下&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.autohotkey.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AutoHotkey&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;效率工具&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;基本上等同一个叫脚本语言了，我主要用于使用快捷键快速打开软件和文件夹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://obsidian.md/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Obsidian&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;知识管理&lt;/td&gt;
&lt;td&gt;win/android&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可以付费购买它的全平台同步功能，但是基本可以通过其他方法绕过来。&lt;strong&gt;第二大脑&lt;/strong&gt;的称谓不是虚的，支持双链笔记，原生支持md，数据在本地存储，支持git，插件丰富，我在2021年发现的&lt;strong&gt;最有价值软件&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.rescuetime.com/dashboard?src=client&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RescueTime&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;时间管理&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;下载在后台静悄悄运行，精细统计每日的电脑时间，知道自己时间花到哪里去了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.internetdownloadmanager.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Internet Download Manager&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;下载&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;付费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;付费买断，下载神器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.edrawsoft.cn/edrawmax/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;亿图图示&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;软件绘图&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;付费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可以使用免费版，visio的替代软件，已经买断&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://picasa.en.uptodown.com/windows&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Picasa&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;图片浏览&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;虽然google在几年前停更了，但是仍然不影响它的使用，迄今用过的&lt;strong&gt;最好看的看图软件&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Molunerfinn/PicGo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PicGo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;图片上传&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;写博客上传图床的工具软件，结合复制图片的快捷键，非常好用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.snipaste.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Snipaste&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;截图&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;好用的截图软件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://notepad-plus-plus.org/downloads/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Notepad++&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;编辑器&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;这个就不介绍了，程序员都知道&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Visual Studio Code&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;编辑器&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;现在应该是No. 1了的编辑器了，插件很丰富&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://visualstudio.microsoft.com/zh-hans/vs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Visual Studio 2022 &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;IDE&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;主要用来练习leetcode，使用C++语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;博客生成&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当前博客的生成工具&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.xiaoyuzhoufm.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;小宇宙播客&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;播客&lt;/td&gt;
&lt;td&gt;android&lt;/td&gt;
&lt;td&gt;免费&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手机上的博客终端，正常通勤路上，我基本上在听它，目前累计收听176小时&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;服务列表&#34;&gt;服务列表&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;服务&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;平台&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://glados.one/console&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GLaDOS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;机场&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;便宜、稳定、好用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.superbed.cn/timeline&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;聚合图床&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;图床&lt;/td&gt;
&lt;td&gt;win&lt;/td&gt;
&lt;td&gt;好用，和Picgo，Obsidian配合使用天衣无缝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.dedao.cn/vip/home?type=ebook&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;得到电子书&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;电子书&lt;/td&gt;
&lt;td&gt;win/android&lt;/td&gt;
&lt;td&gt;收录全面，排版精美&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://flomoapp.com/mine&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;flomo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;知识管理&lt;/td&gt;
&lt;td&gt;win/android&lt;/td&gt;
&lt;td&gt;全平台支持的卡片笔记型知识管理工具，支持标签嵌套，目前整合了得到电子书，有知有行等软件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.duku.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;读库&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;纸质书&lt;/td&gt;
&lt;td&gt;android/纸质书&lt;/td&gt;
&lt;td&gt;从第一期开始就关注，现在是年度会员，之前还给岳父订阅过一年&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;最后，放一张我今年生日买的收音机，外形和声音都很喜欢，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6272689809475431296d98a1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>35岁的一些思考</title>
        <link>https://blog.bugxch.top/p/35%E5%B2%81%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</link>
        <pubDate>Tue, 03 May 2022 22:11:19 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/35%E5%B2%81%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/627138c109475431290724ef.png" alt="Featured image of post 35岁的一些思考" /&gt;&lt;p&gt;今年刚好是35岁，现在正值五一居家隔离，最近读了一些书，看了一些文章，有一些对过半人生的思考。&lt;/p&gt;
&lt;p&gt;按：10年前，我研究生毕业开始工作，当时计划在&lt;a class=&#34;link&#34; href=&#34;https://heysoapbubble.blogspot.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;blogger&lt;/a&gt;写一封给自己未来10年的信，非常可惜，后来还是没有写下来。转眼间这个时刻已经到来，那这人生的黄金十年发生了哪些变化？我达到了我当时期望的样子了吗？&lt;/p&gt;
&lt;h2 id=&#34;期望与变化&#34;&gt;期望与变化&lt;/h2&gt;
&lt;p&gt;虽然没有写博客，但是我记得那时跟朋友描述我将来的样子，非常世俗化，当时设想在一线或者某个二线城市拥有幸福美满的家庭，有一份不错的工作，有一辆代步车，最好出任某个公司的CTO，过得应该不错。按照我现在的状态，确实在一线买房安家，而且建立了一个还算不错的家庭，按照的社会的标准，工作的薪资也还不错，但是没有买车，也没有担任任何公司的CEO，目前仍然是一个普通的技术工人（虽然在公司里面是高级软件工程师了，但是我自认为也就是个经验稍微丰富技术工人的水平）。&lt;/p&gt;
&lt;p&gt;回头看当时自己设想的这些东西非常世俗化，虽然看起来生活还算体面，但是并不能保证深层次的幸福，现在的我就处在拔剑四顾心茫然的状态。只要我愿意，买辆车是很容易的，只是现在看起来基本上没有必要。所以，有了我现在的一切，然后薪资再上一个台阶，就是理想中的生活了吗？So What？我不认为是这样。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;后面做什么在回顾一生时才不会后悔？我继续往前走的原动力是什么？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;原动力转变&#34;&gt;原动力转变&lt;/h3&gt;
&lt;p&gt;在拥有现在的所有以前，我人生的原动力应该就是&lt;strong&gt;对自己所处环境的强烈的改善的欲望&lt;/strong&gt;，出身农村，父母亲戚无一例外得嘱咐我要努力读书，将来去城市坐办公室工作，没有农民的风吹日晒，工作轻松赚钱还容易。小时候帮家里干农活，对于农民生存的艰辛有切身的体会，这也成为我奋勇向前的&lt;strong&gt;原动力&lt;/strong&gt;。如果有人说我是靠笨功夫走出来的，我丝毫不会回避这一点，小学和初中在我们村上和镇上念书，北方冬天的教室早上停电，没有暖气没有空调，我们一边点着蜡烛吸着鼻涕，一边跺脚读书，想想当时确实艰苦。我初中的学业压力最大，因为我要保持年级第一的位置，最魔性的初一，我在姑妈家里借宿，每次年级大考之前，每天醒来的第一件事就是在脑子里面不停计算我昨天考过的科目错了几分，我今天考试的科目哪些还没有背完。初一上学期的期末考试，腊九寒天我早上起来，偷偷到另一个屋子里面把政治课本老师划线的内容从头到尾背了一遍。初中同学常有打架斗殴时间，我曾亲眼目睹同学早读课时候拿砖头拍在另一个同学的脑门上，血流不止，我也听到过某天出门谁又被社会上小混混用刀子捅了，男厕所里面抽烟打架的更不在话下。这么恶劣的环境，一直到我中考结束到宝鸡中学读书有了明显的改善。不知道为什么，虽然非常苦，但是我非常怀念那段时间，就像怀念冬天推着自行车默默走出家门，抬头看到的满天星辰一样。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6271431009475431292b4853.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这种&lt;strong&gt;渴求改善自身境遇&lt;/strong&gt;，通过读书改变命运的原动力伴随着我，一直到大学毕业开始工作。我很感激当时的自己，战战兢兢一路走来，我可以很自豪得说我没有作弊过，每一门课程我都有下功夫去学，我的学业从来没有中断或者荒废过，正是曾经的努力，使我有农民般淳朴&lt;strong&gt;刻苦踏实&lt;/strong&gt;的品质。&lt;/p&gt;
&lt;p&gt;当前的生活水平已经大大改善，不过远远称不上大富大贵，但是对于满足我个人寡淡的物质需求来说已经绰绰有余。小时候有一个梦想是每天吃香蕉，我现在每天牛奶鸡蛋都没有什么问题。我本身不好吃不好喝，面包牛奶，鸡蛋水果，再有些鱼肉和零食，也没有下馆子的习惯，也没有多么广博的社交圈，基本也满足我的营养所需了。至于兴趣爱好，我现在可以花400块买到小时候梦寐以求的高端德生二次变频收音机，花几千大洋买一个富士相机玩摄影，可以想买什么书就买什么书，想买什么会员就买什么会员，相比较儿时精神食粮的匮乏，现在可谓丰裕充足。Emmm, what&amp;rsquo;s next？最近几年，互联网上非常流行财务自由，年薪百万，创业敲钟，但是对我没有太大的吸引力，&lt;strong&gt;我接下来要做什么呢？&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;目标转变&#34;&gt;目标转变&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用更自由的方法站着把钱挣了&lt;/strong&gt;。最基本要求，照顾好自己的家庭，将儿女抚养成人，为父母养老送终，这就要求有比较&lt;strong&gt;坚实的物质基础&lt;/strong&gt;，所以追求物质财富仍然会是将来的主要任务。这里引出一个问题，我是否可以比较自由得赚更多的钱？就像&lt;a class=&#34;link&#34; href=&#34;https://www.bmpi.dev/self/how-to-get-rich/#%E6%89%93%E5%B7%A5%E6%97%A0%E6%B3%95%E5%8F%98%E5%AF%8C&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《财富常识 · 构建我的被动收入》&lt;/a&gt;里面提到的，是否可以有被动收入？是否可以通过杠杆来获得指数级的财富增值？何妨不试一试？余生很短，时间有限，如果一直通过出卖自己的时间赚钱，可以预想当这几年达到顶峰之后不会再有什么质的的突破，而且年老力衰之后赚钱的效率肯定会逐年下降，所以需要&lt;strong&gt;赚巧钱&lt;/strong&gt;。之前的&lt;strong&gt;刻苦踏实&lt;/strong&gt;的品质固然好，但是更聪明得生活&lt;strong&gt;可以使免于担心失业的恐惧&lt;/strong&gt;，换一种&lt;strong&gt;更自由的方法站着把钱挣了&lt;/strong&gt;。当然，不能好高骛远，需要结合所处的行业和自身的特点，&lt;strong&gt;获得独特的知识，打造个人品牌，过简单的生活，慢慢用实力变富&lt;/strong&gt;。里面还有一句话，非常有启发，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;任何能通过培训而获得的知识最终都会被人工智能所替代&lt;/strong&gt;。独特知识可以&lt;strong&gt;被学但无法被教&lt;/strong&gt;。独特知识要么可能与你先天性格有一定的联系，要么与你后天在高度复杂的环境学习有关。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;满足自己的&lt;strong&gt;好奇心&lt;/strong&gt;。之前有一个大学的好朋友聊起来，他问我还在看数学吗？之前高考志愿我本来计划报考数学系（现在回头来看，本科数学 + 研究生计算机是一个非常不错的组合），但是迫于所谓就业的压力放弃了。但是数学依然是我没有放弃的爱好，但是我非常惭愧，基本上把之前购买的数学书籍扔完了。就像&lt;a class=&#34;link&#34; href=&#34;https://macshuo.com/?p=1652&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《年薪百万的迷惘》&lt;/a&gt;里面那个年轻人一样，我之前陷入了迷茫，但是作者的这段话，点醒了我&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但我的状态就和你完全不一样，我感觉生活的大幕才刚刚拉开，未知的东西正在等待着我去发现。在几乎没什么压力的情况下，我身体依然健康强壮，积累了 20 年的工作经验，认知升级，操作系统更新换代，除了做产品、创作，还喜欢拍胶片，听黑胶唱机，打羽毛球，玩滑板，旅行，读书……可以做的事情真的太多了，所以我开了个公司，方便自己继续自由自在的做这些事情。&lt;/p&gt;
&lt;p&gt;从本质上看，我的状态仅仅是对这个世界比你多一点好奇心和激情。这可能来自人的天性，也可能来自我读了很多与金钱、技能提升无关的书籍，也就是「无用之书」。对我来说读书总是让人平静和愉悦，读好书其实是和现存或已经离开这世界的优秀作者对话，对话内容往往是他几年几十年的经历和思考成果。多读书吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以，物质丰裕，精力旺盛的当下才是真正探索的开始，继续保持健康，呵护好没有泯灭的好奇心，肆意发展爱好，去体验这个世界吧。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保持&lt;strong&gt;健康和乐观&lt;/strong&gt;。这一条是上一条接下来的要讲的，健康是人生的基本盘，如果发生问题，会大大影响对于世界的体验。去菊厂的第一年我斥巨资买了健身课程，坚持核心肌肉训练，虽然价格有点小贵，但是以之前加班的高强度我的身体没有出现大问题，健身功不可没。而且，按照当前科技发展的水平，人口的老龄化时代已然来临，我预感生活到八九十岁会成为常态，但是如何保证那时候是有质量得健康的生活，就需要从现在开始注意身体健康的维护。这几天在系统研究营养学，看了几本书，受益匪浅，后面会通过饮食、运动和睡眠改善自己和家人的健康。keep fit, keep moving。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结与展望&#34;&gt;总结与展望&lt;/h2&gt;
&lt;p&gt;回顾之前走过的路，总结下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/627147c609475431293aaa75.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;做对的那些事&#34;&gt;做对的那些事&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;刻苦踏实诚实，立身之本。&lt;/li&gt;
&lt;li&gt;长程的&lt;strong&gt;韧性&lt;/strong&gt;。忍受得了枯燥难磨的工作，渡过困难的时期，但是这一点有时候会变成固执，成为缺点。&lt;/li&gt;
&lt;li&gt;坚持搜罗、阅读、吸收可以获得的&lt;strong&gt;所有信息。&lt;strong&gt;小时候饥渴阅读所有可能的文字材料，包括课本，我小叔留下的课本，各种地摊杂志，得以因为书本走出穷困。有一句话问得挺好，如果没有书本，我们在哪里？那我很可能在某个工厂里。高中时候读杂志听收音机，南周，为学，知道社会上那么多风云人物，知道大学要选985，回头看这些在报刊杂志里获得的信息影响了我后面道路选择的大决定。大学有了图书馆更是一发不可收拾，什么书都读。这件事情虽然没有什么具体的成果，但是却有了&lt;/strong&gt;甄别好书的眼光&lt;/strong&gt;，将宝贵的时间用在那些真正的好东西上，才是最佳成长途径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相信学习的功用&lt;/strong&gt;。生物要不停适应变化的环境才能使基因世代流传下去，人类适应有一个独有的方法，就是向他人的经验学习，而且这经验借助书籍，视频，互联网，自媒体得以无界传播，如果你会几门外语，那简直就是拥有取之无尽的宝库。人类基数足够大，大到我遇到的绝大部分问题肯定有其他人遇到过，我相信通过学习可以习得解决问题的途径和方法。我现在在学习营养学，学习计算机，借助经典书籍，借助便捷的互联网，这是非常不错的体验。&lt;/li&gt;
&lt;li&gt;不浪费时间在没用的事情上。&lt;strong&gt;评判是否有用，就看做这件事情是否有正收益&lt;/strong&gt;。在网上和人吵架，担心某件事但是不采取任何行动，抱怨高昂的房价，抱怨社会的不公，抱怨疫情，后悔之前的某件事，埋怨上司和同事，这些都是没有任何正收益的事情。做这些事情不仅无法改善当下的生活境遇，而且会成为情绪黑洞，不停吞噬能量，习惯于吐槽抱怨，自动放弃改变的努力，所有周围的人最终将离你而去，好运也会离你而去。大家面对的是同样的环境，与其抱怨不如行动，对于无法控制的事情，就像&lt;a class=&#34;link&#34; href=&#34;https://www.ruanyifeng.com/blog/2022/04/weekly-issue-204.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;科技爱好者周刊（第 204 期）：如何度过疫情、裁员、还有战争 - 阮一峰的网络日志&lt;/a&gt;中所说的，Let it go~&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;做错的那些事&#34;&gt;做错的那些事&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;目光短浅。上大学时候就应该考驾照，但是觉得所资不菲，直到现在才开始学车，结果发现时间和资金成本都远比上学时高。在资源匮乏的条件下，很容易做出急功近利的决定，而丢失长远的利益，现在考虑事情可以长远些。&lt;/li&gt;
&lt;li&gt;缺乏&lt;strong&gt;勇气&lt;/strong&gt;。勇气缺失是对未来的不自信，导致自卑，应对方法就是不停尝试，认真做事，积累自信。改变周遭境遇的勇气，当下仍然有不自由的感觉，最重要的原因是我依然在劳动力市场上作为被挑选的那一个，担心下一个合同期公司不会续约。让自己的技能提升，寻找被动收入，或者换一家公司，所有这些改变都需要勇气。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;成长中的新发现&#34;&gt;成长中的新发现&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;读书研究需要行稳致远，构建底层框架，将知识点缀成网，相信&lt;strong&gt;长期主义&lt;/strong&gt;。技能磨砺是一个长程的过程，逐渐积累前期慢达到一个临界点就会突然爆发。深挖洞，广积粮，缓称王，读书要读深，盖房地基打牢。我现在学习CSAPP，&lt;strong&gt;记笔记写博客&lt;/strong&gt;就是弥补计算机知识的空缺，将其学扎实。去年通过公司级别的可信认证，不间断刷&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LeetCode&lt;/a&gt;，倒逼全面学习c++知识，虽然开始看起来知识点庞杂零碎，但是经过长达一年的练习，现在对这门语言的认识越来越清晰深刻，而且我还在坚持学习中。掌握复杂的知识从来就是艰难的事情，需要&lt;strong&gt;长期&lt;/strong&gt;的耐性，大量的练习。&lt;/li&gt;
&lt;li&gt;做事计划周密，步骤可落地，行动果决。这是在华为学到的做事风格，做事情不会漫无边际，拖拖拉拉，紧盯目标，不念其他，凡事都会有真实的可量化的输出。虽然刚开始我很排斥这种冷冰冰的风格，但是回头看确实可以做成很多mission impossible的事情。&lt;/li&gt;
&lt;li&gt;相信自己的直觉，尤其是&lt;strong&gt;内心深处的担忧&lt;/strong&gt;。很庆幸四年前我从原公司跳出来，当时的直觉就是工作内容大量重复，技能得不到提升，公司前景黯淡。有段时间我睡眠不足，非常焦虑，公司就像一架即将失速的飞机，继续做下去就是机毁人亡，现在看我的预感是对的。我急切想脱离那个公司，以致于有点饥不择食，很感谢当时的师傅，他跟我说我可以走，&lt;strong&gt;但是也要找个比现在更好的选项呀。&lt;strong&gt;这是一条非常睿智的建议&lt;/strong&gt;，不要慌不择路，想好接下来要做什么，再做现在的决定。如果对某件事感到焦虑，那必然在将来的某个时间点成为大麻烦，现在就着手面对它，分析它，如果还无法制定详尽的计划，那至少去了解别人的经验，做一些尝试吧，最愚蠢的做法是忽视它，假装生活如常。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;影响我的那些人&#34;&gt;影响我的那些人&lt;/h2&gt;
&lt;p&gt;一路跌跌撞撞，下面的这些人对我的观念产生了很大的影响（排名不分先后），我到现在还在持续关注他们的动态，而且将他们的博客链接放在了&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/collection/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;收集有趣好玩的事情&lt;/a&gt;的页面上，希望对你有用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pmthinking.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;产品沉思录 · Product Thinking&lt;/a&gt;，2020年发现的比较好的产品的网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.sharetechnote.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ShareTechnote&lt;/a&gt;，一个韩国高级工程师搭建的专业知识共享网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://coolshell.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;酷壳 – CoolShell.cn&lt;/a&gt;，左耳朵耗子的官方博客，对我影响比较大的技术大佬&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.ruanyifeng.com/blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阮一峰的网络日志&lt;/a&gt;，IT圈子中小有名气的大佬，比较喜欢他每周一推的科技爱好者周刊系列&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://macshuo.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MacTalk-池建强的随想录 | 让创作成为一种生活方式&lt;/a&gt;，一个持续创业者&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://macshuo.com/?p=1652&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;年薪百万的迷惘 | MacTalk-池建强的随想录&lt;/a&gt;，启发比较大的一篇文章&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bmpi.dev/self/how-to-get-rich/#%E6%89%93%E5%B7%A5%E6%97%A0%E6%B3%95%E5%8F%98%E5%AF%8C&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;财富常识 · 构建我的被动收入&lt;/a&gt;，或许是未来几年努力的方向&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.ruanyifeng.com/blog/2022/04/weekly-issue-204.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;科技爱好者周刊（第 204 期）：如何度过疫情、裁员、还有战争 - 阮一峰的网络日志&lt;/a&gt;，面对疫情应该有的态度&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://justinyan.me/post/4911&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;凯文·凯利70岁生日写的103条人生忠告（中文翻译） | 枫言枫语&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>关于浮点数的迷思</title>
        <link>https://blog.bugxch.top/p/%E5%85%B3%E4%BA%8E%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E8%BF%B7%E6%80%9D/</link>
        <pubDate>Wed, 27 Apr 2022 16:04:05 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%85%B3%E4%BA%8E%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E8%BF%B7%E6%80%9D/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/6268f90d239250f7c59e8af0.jpg" alt="Featured image of post 关于浮点数的迷思" /&gt;&lt;p&gt;这两天研究了下CSAPP中的&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/csapp_ch2/#%E6%B5%AE%E7%82%B9%E6%95%B0%E8%A1%A8%E7%A4%BA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;浮点数的知识&lt;/a&gt;，结合这些知识，终于可以解答之前关于float的一些迷思。&lt;/p&gt;
&lt;h4 id=&#34;c语言中浮点数相等的比较为什么不能用&#34;&gt;C语言中浮点数相等的比较为什么不能用==?&lt;/h4&gt;
&lt;p&gt;A：浮点数的舍入方法引发的。如果要搞清楚这个问题，需要明白下面的两个知识点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;计算机判定两个浮点数相等，基于它们的在计算上的二进制的表示的比特位是否相等。&lt;/li&gt;
&lt;li&gt;计算机上用有限bit位表示的浮点对应到数学上的实数，表示的不是一个点而是一个区域。仔细考察这个结论，参考&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/csapp_ch2/#%E8%88%8D%E5%85%A5rounding&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;信息的表示和处理&lt;/a&gt;中关于浮点数舍入部分的描述和之前的&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/floatincomputer/#float16%E7%9A%84%E6%B5%AE%E7%82%B9%E8%A1%A8%E7%A4%BA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;浮点数在计算机中的表示&lt;/a&gt;，半精度浮点数可以表示的数中有如下的数[126.3, 126.4, 126.44, 126.5]，它们是离散分布在数轴上的，这3个数对应的二进制的表示分别是$[(1.1111100101)_2\times 2^{6},(1.1111100110)_2\times 2^{6},(1.1111100111)_2\times 2^{6}]$，根据之前分析的round to even的舍入规则，所有位于$[(1.11111001011)_2\times 2^{6},(1.11111001101)_2\times 2^{6}]$之间的浮点数都会舍入到$(1.1111100110)_2\times 2^{6}$，换算过来也就是所有位于$[126.34375,126.40625]$区间的实数都会映射到这个值。如果有下面的语句&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;float16&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;126.4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;float16&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;那么&lt;code&gt;b = 126.35&lt;/code&gt;或者&lt;code&gt;b = 126.38&lt;/code&gt;或者&lt;code&gt;b = 126.3876&lt;/code&gt;都是成立的，因为它们都会在浮点数的表示体系下舍入到126.4。数学上不相等，但是在计算机里面是相等的，这就是数学意义和计算机表示意义上的背离，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浮点数的&lt;code&gt;==&lt;/code&gt;和数学意义上严格的相等是&lt;strong&gt;不等价&lt;/strong&gt;的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以为了追求相等的精确性，可以利用$|a-b|&amp;lt;\epsilon$的方式，将$b$限定在以$a$为中心的很短的绝对值区间上，$\epsilon$越小，二者的相等程度就越高。所以可以使用下面的代码做一个等价的处理&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define EPSILON 1e-6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float16&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;126.4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;float16&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;fabs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EPSILON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;什么是浮点数的大数吃小数问题原理是什么&#34;&gt;什么是浮点数的“大数吃小数”问题？原理是什么？&lt;/h4&gt;
&lt;p&gt;A：浮点数在计算中的舍入引发的。在&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26912767/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深入理解计算机系统&lt;/a&gt;第2章浮点运算的章节，作者提到过&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用单精度浮点，3.14 + 1e10 - 1e10 = 0.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这就是一个大数吃小数的问题，严格来讲，在C语言中，当一个比较大的浮点数与一个相对小很多的浮点数相加时，结果是那个比较大的浮点数，就好像小数被“吃掉”了一样。上面的例子中，3.14 + 1e10 = 1e10，也就是说从计算机的角度来看，3.14 + 1e10的二进制表示与1e10的二进制浮点表示没有区别。这是怎么回事？&lt;/p&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/csapp_ch2/#%E6%B5%AE%E7%82%B9%E6%95%B0%E8%AE%A1%E7%AE%97&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;信息的表示和处理&lt;/a&gt;中的内容，模拟它们的二进制加法就能得到答案。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按照浮点数的表示法，在计算机中$(3.14)_{10} = (1.10010001111010111000011)_2\times 2^{1}$，而$(1e10)_{10} = (1.00101010000001011111001)_2\times 2^{33}$。两个的二进制的小数都是23位&lt;/li&gt;
&lt;li&gt;将两个数字的指数对齐，那么$(3.14)_{10} = (1.10010001111010111000011)_2\times 2^{1} = (0.0000000000000000000000000000000110010001111010111000011)_2\times 2^{33}$，但是float的小数点精度只能到23位，所以舍入到小数点后23位，结果就是浮点数的0&lt;/li&gt;
&lt;li&gt;指数相同，小数相加，1e10的小数加的就是0，所以结果还是1e10。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从上面的分析可以看到，如果两个相加的数字由于指数悬殊，而导致在对齐指数中，较小数的浮点数用有限精度的尾数表示为0的时候，就会发生这样奇怪的事情。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>信息的表示和处理</title>
        <link>https://blog.bugxch.top/p/%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E5%A4%84%E7%90%86/</link>
        <pubDate>Fri, 22 Apr 2022 17:13:44 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E5%A4%84%E7%90%86/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/627703420947543129b87e9a.jpg" alt="Featured image of post 信息的表示和处理" /&gt;&lt;p&gt;疫情居家办公，利用时间好好系统学习下CSAPP，年龄大了，好记性不如烂笔头，写写笔记。&lt;/p&gt;
&lt;h2 id=&#34;计算机的字长&#34;&gt;计算机的字长&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;每一台计算机都有字长，指明指针数据的标称大小，字长决定了的最重要的系统参数是虚拟地址空间的最大大小。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;字长决定了指针的存储大小，32位的字长的指针存储空间是4字节，64位是8个字节；&lt;/li&gt;
&lt;li&gt;字长决定了虚拟地址的最大大小，所以32位的寻址空间最大是$2^{32}$Byte = 4GB，64位的是$2^{64}$Byte = 16EB。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;典型的C语言的数据类型的大小参考下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;C声明&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;32bit&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;64bit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;short int&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long int&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long long int&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char *&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;查看上面的表格，32bit和64bit的大部分数据类型的字节长度是一样的，仅有两个不同，long int和char *。可以使用下面的代码查看每个不同类型的字节的大小&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size of char is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size of short is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;short&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size of int is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size of long is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size of long long is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size of double is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size of float is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;size of char* is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我在自己的64位字长的win10电脑上试了下，除了char *的字节数是4，其他的与上面表格的结果一样。&lt;/p&gt;
&lt;h2 id=&#34;整数的表示&#34;&gt;整数的表示&lt;/h2&gt;
&lt;h3 id=&#34;整数范围&#34;&gt;整数范围&lt;/h3&gt;
&lt;p&gt;整数分为无符号和有符号整数，如果表示整数$w$位比特，那么无符号表示的范围是$[0, 2^w-1]$，有符号整数表示的范围是$[-2^{w-1},2^{w-1}-1]$。下面是一些典型值，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6263b5f9239250f7c5732b75.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;参考下表，可以在自己的PC上可以通过下面的代码，得到上面的值&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Macro&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CHAR_BIT&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Defines the number of bits in a byte.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SCHAR_MIN&lt;/td&gt;
&lt;td&gt;-128&lt;/td&gt;
&lt;td&gt;Defines the minimum value for a signed char.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SCHAR_MAX&lt;/td&gt;
&lt;td&gt;+127&lt;/td&gt;
&lt;td&gt;Defines the maximum value for a signed char.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UCHAR_MAX&lt;/td&gt;
&lt;td&gt;255&lt;/td&gt;
&lt;td&gt;Defines the maximum value for an unsigned char.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CHAR_MIN&lt;/td&gt;
&lt;td&gt;-128&lt;/td&gt;
&lt;td&gt;Defines the minimum value for type char and its value will be equal to SCHAR_MIN if char represents negative values, otherwise zero.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CHAR_MAX&lt;/td&gt;
&lt;td&gt;+127&lt;/td&gt;
&lt;td&gt;Defines the value for type char and its value will be equal to SCHAR_MAX if char represents negative values, otherwise UCHAR_MAX.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MB_LEN_MAX&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;Defines the maximum number of bytes in a multi-byte character.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SHRT_MIN&lt;/td&gt;
&lt;td&gt;-32768&lt;/td&gt;
&lt;td&gt;Defines the minimum value for a short int.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SHRT_MAX&lt;/td&gt;
&lt;td&gt;+32767&lt;/td&gt;
&lt;td&gt;Defines the maximum value for a short int.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;USHRT_MAX&lt;/td&gt;
&lt;td&gt;65535&lt;/td&gt;
&lt;td&gt;Defines the maximum value for an unsigned short int.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INT_MIN&lt;/td&gt;
&lt;td&gt;-2147483648&lt;/td&gt;
&lt;td&gt;Defines the minimum value for an int.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INT_MAX&lt;/td&gt;
&lt;td&gt;+2147483647&lt;/td&gt;
&lt;td&gt;Defines the maximum value for an int.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UINT_MAX&lt;/td&gt;
&lt;td&gt;4294967295&lt;/td&gt;
&lt;td&gt;Defines the maximum value for an unsigned int.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONG_MIN&lt;/td&gt;
&lt;td&gt;-9223372036854775808&lt;/td&gt;
&lt;td&gt;Defines the minimum value for a long int.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONG_MAX&lt;/td&gt;
&lt;td&gt;+9223372036854775807&lt;/td&gt;
&lt;td&gt;Defines the maximum value for a long int.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ULONG_MAX&lt;/td&gt;
&lt;td&gt;18446744073709551615&lt;/td&gt;
&lt;td&gt;Defines the maximum value for an unsigned long int.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;limits.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;int max is %d, int min is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT_MIN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;char max is %d, char min is %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CHAR_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CHAR_MIN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;补码表示&#34;&gt;补码表示&lt;/h3&gt;
&lt;p&gt;$w$bit的有符号整数数学表示如下，&lt;/p&gt;
&lt;p&gt;$$
B 2 T_{w}(\vec{x}) \doteq-x_{w-1} 2^{w-1}+\sum_{i=0}^{w-2} x_{i} 2^{i}
$$&lt;/p&gt;
&lt;p&gt;有一个理解的小技巧，与无符号的整数相比，对于这$w$位bit解读差异仅仅在最高位$x_{w-1}$，有符号数的权重是$-2^{w-1}$，无符号数的权重是$2^{w-1}$。这个是理解书本里面内容的技巧。典型数值的补码表示如下所示，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6263bb95239250f7c5832dd2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从上面的表格可以看出，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;相同位宽的无符号整数最大值与有符号整数的-1的底层bit一样；&lt;/li&gt;
&lt;li&gt;$TMin_w = -TMax_w - 1$。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;假如 &lt;code&gt;0xFA&lt;/code&gt;是某个2字节数的补码表示，那么它实际表示的数字是十进制的多少？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个问题的解答可以通过补码的定义（参考上文）逐位计算，&lt;/p&gt;
&lt;p&gt;$$
B2T_{w}(\vec{x}) \doteq-x_{w-1} 2^{w-1}+\sum_{i=0}^{w-2} x_{i} 2^{i} = -x_{w-1} 2^{w-1}+A
$$&lt;/p&gt;
&lt;p&gt;但是还有更简单直观的计算方法，我们知道二进制的无符号整数的定义是&lt;/p&gt;
&lt;p&gt;$$
B2U_{w}(\vec{x}) \doteq x_{w-1} 2^{w-1}+\sum_{i=0}^{w-2} x_{i} 2^{i} = x_{w-1} 2^{w-1}+A
$$&lt;/p&gt;
&lt;p&gt;所以，可以得到$B2U_{w}(\vec{x})  =  B2T_{w}(\vec{x})  + x_{w-1} 2^{w}$，因此，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果最高位是0，二者的结果是一样的；&lt;/li&gt;
&lt;li&gt;如果最高位是1，那么可以进一步推导&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$$
B2T_{w}(\vec{x}) = B2U_{w}(\vec{x}) - x_{w-1} 2^{w} =  -\left[(2^{w} - 1) -B2U_{w}(\vec{x})\right] - 1
$$&lt;/p&gt;
&lt;p&gt;而$(2^{w} - 1) -B2U_{w}(\vec{x}) = x按位取反$，所以可以将这个补码的表示理解成unsigned的数，然后减去长度为$w$的全1的二进制比特，再减去1。&lt;/p&gt;
&lt;p&gt;所以，0xFA是情况2，补码表示的是 &lt;code&gt;-(~0xFA) - 1 = -0x05 - 1 = -6&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;c语言中无符号和有符号的转换&#34;&gt;C语言中无符号和有符号的转换&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;位宽一样的无符号和有符号的整数之间的转换，遵循&lt;strong&gt;底层的bit不变&lt;/strong&gt;的原则，互相进行转换，也就是说无论如何转换，仅仅是底层bit的解读方法不同而已。&lt;/li&gt;
&lt;li&gt;C语言中的无符号数和有符号数的二元计算，都会将&lt;strong&gt;有符号数强制转换为无符号整数&lt;/strong&gt;进行计算。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;整数的扩展和截断&#34;&gt;整数的扩展和截断&lt;/h3&gt;
&lt;p&gt;整数的扩展分为无符号扩展和有符号数的扩展，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无符号数的扩展就往高位bit填充0；&lt;/li&gt;
&lt;li&gt;有符号数的扩展方式是符号扩展，即最高位符号位填充空位。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;整数截断逻辑很简单，就是底层的bit表示按照目的的位宽直接截断。这一小节有一个技巧，如果是位宽较小的有符号转换成为位宽较宽的无符号数，则是&lt;strong&gt;保持符号不变，先改变位宽&lt;/strong&gt;，&lt;strong&gt;再进行转换&lt;/strong&gt;，比如下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;short&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12345&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;uy = %u: &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的代码中，第2行等价于(unsigned int)(int)sx，先应用符号扩展将short扩展到int，然后再使用等宽bit位的无符号的转换。&lt;/p&gt;
&lt;h3 id=&#34;编程建议&#34;&gt;编程建议&lt;/h3&gt;
&lt;p&gt;在实际的软件开发中，尤其要注意无符号整数和有符号整数的转换，比如下面的代码的第4行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sum_element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果length的初始值为0，那么length - 1会是一个非常大的正数，导致对于数组a的越界访问。&lt;/p&gt;
&lt;h2 id=&#34;整数计算&#34;&gt;整数计算&lt;/h2&gt;
&lt;p&gt;这一部分的推导看起来比较复杂，刚开始读比较吃力，但是如果看懂了推导中的原则，理解起来就比较清晰了，作者在这一段的推理非常严谨。&lt;/p&gt;
&lt;h3 id=&#34;整数加法&#34;&gt;整数加法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;无符号加法很简单，直观来讲，就是逐位相加，超过bit表示范围的高位直接截断。有符号数的加法，推理的原则是&lt;strong&gt;有符号数加法补码之和与无符号之和有完全相同的位级表示&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于加法的比较直观的理解，无论是无符号还是有符号数，两个数的加法依然需要在特定位宽的bit位上表示出来，也就是说最终的结果肯定是要落在合理的表示区间的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果$w$位宽的无符号数超过表示区间，那么就$\mod 2^w$，也就是减去$2^w$；&lt;/li&gt;
&lt;li&gt;如果$w$位宽的有符号数超过表示区间，同样是$\mod 2^w$，但是分两种，如果是负溢出，就$+2^w$，如果是负溢出就$-2^w$，举例4bit位宽的（-6）+（-3）= -9，小于-8，所以是负溢出，需要再加16，结果就是7。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要注意这里没有整数减法章节，但是介绍了&lt;strong&gt;逆元&lt;/strong&gt;的概念，$x-^t_w{y} = x + (-^t_w{y})$，两个数相减相当于加上第二个数的逆元。计算的原则同上面的2，如果超过表示区间，就做模运算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;补码的逆元，有一种比较巧妙的方法，所有比特位取反，然后最低位+1，累进相加。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;整数乘法&#34;&gt;整数乘法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;无符号数乘法也很简单，相乘之后取模；&lt;/li&gt;
&lt;li&gt;有符号数的乘法，推理的原则是&lt;strong&gt;有符号数加法补码之积与无符号之积有完全相同的位级表示&lt;/strong&gt;。所以可以将有符号数的乘法，先转换成为无符号数的乘法计算，之后再以有符号数的补码解读位级表示即可。&lt;/li&gt;
&lt;li&gt;与常数的乘积可以转化成为右移位、加法和减法的组合，时钟周期比单纯的乘法更少。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;整数除法&#34;&gt;整数除法&lt;/h3&gt;
&lt;p&gt;书里面没有介绍整数的通用除法，详细推理了整数除以2的幂的过程，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无论无符号还是有符号整数，$x\gg k = \lfloor {x/2^k}\rfloor$；&lt;/li&gt;
&lt;li&gt;对于有符号整数，$(x + (1\ll k) - 1)\gg k = \lceil x/2^k\rceil$，这里实际上是一个数学的小技巧，$(m+n-1)/n = \lceil m/n\rceil$。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;习题2.44是掌握整数运算的试金石。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;浮点数表示&#34;&gt;浮点数表示&lt;/h2&gt;
&lt;h3 id=&#34;ieee-754浮点数的表示法&#34;&gt;IEEE 754浮点数的表示法&lt;/h3&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/floatincomputer/#&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;浮点数在计算机中的表示&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;舍入rounding&#34;&gt;舍入（Rounding）&lt;/h3&gt;
&lt;p&gt;上面的IEEE的浮点数的表示方法解决了二进制bit到浮点数的映射问题，但是如果给定一个任意精度的实数$x$，如果使用给定位宽的浮点数表示这个数呢？这里就要引入舍入的概念。&lt;strong&gt;舍入解决了将数学上的任意精度的实数集合到计算机表示的有限元素的浮点数集合的映射问题&lt;/strong&gt;。从之前的浮点数的表示可以看出，计算机表示的浮点数不可能有无限的精度，将半精度浮点数在数轴上标示出来，它在数轴上的分布是离散的，任意两个离散标示值之间的实数是无穷多的，这些实数如果要用半精度表示就只能通过某种方法&lt;strong&gt;舍入&lt;/strong&gt;到标示的某个值上。以下面的问题为例，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;半精度浮点数有下面的点，[0.01118, 0.011185, 0.01119]，那么0.011183该如何表示成半精度浮点数结果是什么呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;十进制的舍入&#34;&gt;十进制的舍入&lt;/h4&gt;
&lt;p&gt;直觉告诉我，这个数要么就是0.01118，要么就是0.011185，因为这个数字介于二者之间，如果按照误差尽量小的原则，那么可以计算一下与两个备选数字的差的绝对值，然后舍入到绝对值最小的那个上。这个就是C语言当前使用的舍入方法，称为最接近值的舍入（round to nearest)。这里面还有一个特殊的地方，以对于十进制的数字为例，舍入到最近的整数，如果这个数是两个整数的中间的值，也就是X.5的形式，那么舍入到最近的偶数。比如0.5是0和1的中间值，它举例两个数的举例是一样的，舍入到0，3.5是3和4的中间值，舍入到4。这样做可以最小化一组数的舍入误差的均值。因此，这种舍入方法又称为round to even。除此之外，还有如下的舍入方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;向0舍入，数轴上向着0的方向舍入；&lt;/li&gt;
&lt;li&gt;向下舍入，也是向$-\infty$舍入；&lt;/li&gt;
&lt;li&gt;向上舍入，即向$+\infty$舍入&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如下图所示，表示了上面的三种情况，
&lt;img src=&#34;https://pic.imgdb.cn/item/6269d201239250f7c523458b.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;二进制的舍入&#34;&gt;二进制的舍入&lt;/h4&gt;
&lt;p&gt;那如何将十进制的舍入类推到二进制的舍入呢？这里包括两个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确定舍入的位数，对于某个二进制数$0.001001_{2}$，如果是舍入到小数点后3位，那么这个位数就是3；&lt;/li&gt;
&lt;li&gt;确定需要舍入的数是否位于两个数的中间位置。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;如果在中间位置，那么向偶数方向舍入，对于二进制来讲，偶数就是最低有效位为0的数；&lt;/li&gt;
&lt;li&gt;如果不在中间位置，就向最近的数字舍入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上面的数$0.001001_2$为例，就是确认这个数是否在$0.001_2$和$0.010_2$的中间位置，这个位置的数字是$0.0011_2$。很明显$0.001001_2$不是$0.0011_2$，而且小于该值，所以舍入到$0.001_2$。&lt;/p&gt;
&lt;p&gt;可以归纳一下，对于给定小数位的浮点数的舍入，对于形如$x.xxxyxxx_2$的二进制数（x和y是0或者1，而且不同位上的数字相互独立），假如舍入到小数点后4位，那么$y=0$或者$y=1$。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果$y=0$，那么可能舍入的两个二进制数是$x.xxx0_{2}$和$x.xxx1_{2}$，两个的中间值是$x.xxx01_2$（逐位相加，左移1个bit）；&lt;/li&gt;
&lt;li&gt;如果$y=1$，那么可能舍入的两个二进制数是$x.xxx1_{2}$和$x.xx(x+1)0_{2}$，两个的中间值是$x.xxx11_2$。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，无论要舍入的小数位是0或者1，需要舍入的中间值一定是$x.xxxy1_2$形式。&lt;/p&gt;
&lt;h4 id=&#34;问题解答&#34;&gt;问题解答&lt;/h4&gt;
&lt;p&gt;回到最初的问题，$0.01118_{10}$的二进制表示是0010000110111001，按照浮点数的表示法，也就是$1.0110111001_2\times 2^{-7}$，同样的$0.011185_{10}$的二进制表示是0010000110111010，也就是$1.0110111010_2\times 2^{-7}$，如果按照精确到二进制小数点后10位（因为半精度浮点数的尾数是用10个bit来表示的），那么这两个数的中间数应该是$1.01101110011_2\times 2^{-7}$&lt;/p&gt;
&lt;p&gt;$0.011183_{10}$，转换成二进制是$1.0110111001110_2 \times 2 ^{-7}$，与中间数的二进制相比，明显大于中间数，所以舍入到比较大的$0.011185_{10}$。如果按照十进制的方式来处理也是一样的，$0.01118_{10}$和$0.011185_{10}$的中间数是$0.0111825_{10}$，明显大于这个中间数，也是舍入到较大的数。&lt;/p&gt;
&lt;h2 id=&#34;浮点数计算&#34;&gt;浮点数计算&lt;/h2&gt;
&lt;p&gt;书本里面没有做详细的计算规则的说明，参考&lt;a class=&#34;link&#34; href=&#34;https://courses.engr.illinois.edu/cs357/sp2020/notes/ref-5-rounding.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rounding - CS 357&lt;/a&gt;做一下说明。两个浮点数做加法需要完成下面的3个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将两个浮点数调整到相同的指数；&lt;/li&gt;
&lt;li&gt;做简单的数学的二进制加法；&lt;/li&gt;
&lt;li&gt;对结果进行舍入。
以二进制数$a =(1.101)_2$和$b=(1.001)_2\times 2^{-1}$为例，假设计算机系统表示尾数的只有3bit，那么计算就会是这样&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$$
\begin{aligned}
a &amp;amp;=1.101 \times 2^{1} \
b &amp;amp;=0.01001 \times 2^{1} \
a+b &amp;amp;=1.111 \times 2^{1}
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;最后的结果以小数点后3位作为舍入精度位。可以看到无论是哪个数，有效的数字为是4位，所以没有有效数字位的丢失。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>三门问题精解</title>
        <link>https://blog.bugxch.top/p/%E4%B8%89%E9%97%A8%E9%97%AE%E9%A2%98%E7%B2%BE%E8%A7%A3/</link>
        <pubDate>Thu, 21 Apr 2022 20:36:36 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%B8%89%E9%97%A8%E9%97%AE%E9%A2%98%E7%B2%BE%E8%A7%A3/</guid>
        <description>&lt;img src="https://cdn.pixabay.com/photo/2018/10/01/13/53/droplet-3716288_960_720.jpg" alt="Featured image of post 三门问题精解" /&gt;&lt;p&gt;书接&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/detection/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;上文&lt;/a&gt;，使用贝叶斯定理解释著名的&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Monty Hall问题&lt;/a&gt;，思索清楚之后感觉挺有趣，分享下。&lt;/p&gt;
&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;參賽者會看見三扇門，其中一扇門的裏面有一輛汽車，選中裏面是汽車的那扇門，就可以贏得該輛汽車，另外兩扇門裏面則都是一隻山羊。當參賽者選定了一扇門，&lt;strong&gt;主持人會開啟另一扇是山羊的門&lt;/strong&gt;；並問：「要不要換一扇門？」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Monty_open_door.svg/440px-Monty_open_door.svg.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我想大多数人的答案应该是无论换不换门，结果都是一样，赢得比赛的概率是1/2，但是实际的答案是，&lt;strong&gt;换一扇门赢面更大&lt;/strong&gt;，准确得说换一扇门赢得比赛的概率是不换门的2倍。为什么会是这样呢？&lt;/p&gt;
&lt;h2 id=&#34;分析解答&#34;&gt;分析解答&lt;/h2&gt;
&lt;p&gt;为了对这个问题做精确的解答，我们有必要对问题的描述做更详细的澄清。当前的这个游戏满足如下的条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;參賽者在三扇門中挑選一扇。他並不知道內裏有甚麼。&lt;/li&gt;
&lt;li&gt;主持人知道每扇門後面有什麼。&lt;/li&gt;
&lt;li&gt;主持人必須開啓剩下的其中一扇門，並且必須提供換門的機會。&lt;/li&gt;
&lt;li&gt;主持人永遠都會挑一扇有山羊的門。
&lt;ul&gt;
&lt;li&gt;如果參賽者挑了一扇有山羊的門，主持人必須挑另一扇有山羊的門。&lt;/li&gt;
&lt;li&gt;如果參賽者挑了一扇有汽車的門，主持人隨機（概率均勻分佈）在另外兩扇門中挑一扇有山羊的門。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;參賽者會被問是否保持他的原來選擇，還是轉而選擇剩下的那一道門。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;朴素分析&#34;&gt;朴素分析&lt;/h3&gt;
&lt;p&gt;使用穷举法分析概率，假设3扇门的编号分别是1，2，3，根据最初选择的编号，以及奖品所在门的编号，可以画出下面的表格&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;初始选择门编号&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;奖品所在门编号&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;不换门结果&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;换门结果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;赢&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上面的表格囊括了所有的情况。第一行的结果很明显，第二行的情况是，主持人肯定会打开编号3的门（因为只有这个门的后面不是奖品），所以如果换门肯定就是换到2号门，那么就赢了，其他的情况类似。这时，可以数一数后面两列的结果，换门有6次赢，是不换门的2倍（只有3次赢）。&lt;/p&gt;
&lt;h3 id=&#34;贝叶斯定理&#34;&gt;贝叶斯定理&lt;/h3&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/detection/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;新冠检测后面的数学定理&lt;/a&gt;里面的贝叶斯定理，我们推算下这个令人吊诡的结论是如何产生的。我们假设有三扇门的编号分别是A、B和C。在没有任何其他信息的情况下，你选择了A作为答案。此时&lt;/p&gt;
&lt;p&gt;$$
Pr(A) = Pr(B) = Pr(C) = \frac{1}{3}
$$&lt;/p&gt;
&lt;p&gt;其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A表示奖品在A门后的概率&lt;/li&gt;
&lt;li&gt;B表示奖品在B门后的概率&lt;/li&gt;
&lt;li&gt;C表示奖品在C门后的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看出此时无论你选择哪一扇门赢得比赛的概率都一样。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然后，蒙蒂打开了C门，告诉你C门后面没有奖品，所以你知道$Pr(C) = 0$，那此时你对$Pr(A)$和$Pr(B)$的估计还保持原样吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们令E表示蒙蒂选择C门作为展示门（以表明该门后面没有奖品）这个事件，那么实际上要比较的就是$Pr(A|E)$和$Pr(B|E)$的大小关系。根据贝叶斯定理&lt;/p&gt;
&lt;p&gt;现在已知，$Pr(A) = Pr(B) = Pr(C) = \frac{1}{3}$，下一步就是推导&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$Pr(E|A) = 1/2$，因为如果奖品在A门后面，那么蒙蒂可能选择B门也可能选择C门作为展示门，那么选择C门作为展示门的概率是1/2；&lt;/li&gt;
&lt;li&gt;$Pr(E|B) = 1$，因为如果奖品在B门后面，那么蒙蒂只能选择C门作为展示门；&lt;/li&gt;
&lt;li&gt;$Pr(E|C) = 0$，因为如果奖品在C门后面，那么蒙蒂不可能选择C门作为展示门；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上，到这一步已经可以看出来了$Pr(A|E) = \frac{Pr(B|E)} 2$的结果了。但是，可以更进一步计算&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
Pr(E) &amp;amp;= Pr(A)Pr(E|A) + Pr(B)Pr(E|B) + Pr(C)Pr(E|C)\
&amp;amp;=\frac{1}{3}\times \frac{1}{2} + \frac{1}{3}\times 1 + \frac{1}{3}\times 0\
&amp;amp; = \frac{1}{2}
\end{align}
$$&lt;/p&gt;
&lt;p&gt;带入上面的公式，可以得到$Pr(A|E) = \frac{1}{3}$和$Pr(B|E) = \frac{2}{3}$&lt;/p&gt;
&lt;h2 id=&#34;为什么会错&#34;&gt;为什么会错？&lt;/h2&gt;
&lt;p&gt;我们的大脑在分析这个问题时，做了不切实际的假设，并且对这个假设深信不疑。我们习惯于分析&lt;strong&gt;相互独立的随机事件&lt;/strong&gt;，最典型的例子是抛硬币，抛掷一枚硬币正面朝上的概率是0.5，我们得到这个结论的依据是&lt;strong&gt;特定结果数量与结果总数的比例&lt;/strong&gt;，正面的情况是1，总的结果是2，所以概率是1/2。这就是为什么我们认为无论更换与否，赢得的概率一样的原因。但是实际的情况并不是这样的，&lt;strong&gt;选择换门与否并不是相互独立随机事件&lt;/strong&gt;，下面我们做更进一步的说明。&lt;/p&gt;
&lt;p&gt;第一步，随机选择一扇门，这个的确是随机的，无论选择哪一扇门，最终赢得比赛的概率是1/3。但是整个事件的随机独立性在蒙蒂选择打开哪扇门的时候发生了变化，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;他事先不知道没有被你选中的那两扇门后面奖品的情况，他&lt;strong&gt;随机选择&lt;/strong&gt;任意扇门；&lt;/li&gt;
&lt;li&gt;他事先知道另外两扇门后面奖品的情况，他&lt;strong&gt;故意选择&lt;/strong&gt;了那一扇没有奖品的门&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面的两种情况的随机独立性完全不同，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种情况，对于蒙蒂来说选择两扇门中的任意一个就像投掷硬币一样，两扇门对于他来讲是平等的选择，他选择任意扇门的概率是1/2。&lt;/li&gt;
&lt;li&gt;第二种情况，他倾向于选择没有奖品的那扇门，这次的选择不是随机的，而是有意识的选择，尤其当两扇门中有一扇有奖品的时候，他&lt;strong&gt;必然&lt;/strong&gt;会选择没有奖品的那扇门，此时选择那扇门的概率是1，而不是1/2。这样的选择具有&lt;strong&gt;倾向性&lt;/strong&gt;，而不是&lt;strong&gt;随机决策&lt;/strong&gt;的结果。实际上，他排除了不是奖品的那扇门，所以&lt;strong&gt;剩下来的那扇门有奖品的概率更高&lt;/strong&gt;，而不是和他选择打开的那扇门的概率相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里是另一种分析的思路，初始选择中，假设你选择了A，那么A门有奖品的概率是$\frac{1}{3}$，B门和C门有奖品的概率是$\frac{2}{3}$。B门和C门至少有一扇门是没有奖品的，蒙蒂知道奖品的位置，他打开那扇没有奖品的门，假设是C门。那剩下B门有奖品的概率就变成了$\frac{2}{3}$！&lt;strong&gt;蒙蒂帮你排除了没有奖品的那扇门&lt;/strong&gt;，所以你换门之后赢得的概率一定是$\frac{2}{3}$！&lt;/p&gt;
&lt;h2 id=&#34;问题变种&#34;&gt;问题变种&lt;/h2&gt;
&lt;p&gt;这个问题的变种是，在你选定门之后，节目组请另一个嘉宾在你没有选定的两扇门里面随机选定一扇门，那扇门后面没有山羊，那么他打开其中任意一扇门，显示是山羊，此时更换选择的赢面是否更大？注意，这个嘉宾事先不清楚奖品在那一扇门后面。&lt;/p&gt;
&lt;p&gt;答案是否，无论是否更换选择，两个的概率都是1/2。参考之前的贝叶斯定理的推理，假设同前，你选了A门，那么此时嘉宾需要在B和C门直接选一个门，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$Pr(E|A) = 1/2$，因为如果奖品在A门后面，这里的概率分两步，第一步是选择C门，嘉宾选择的概率是1/2，第二步是C门后面是羊的概率，此时是1，所以最终的概率是1/2 * 1 = 1/2；&lt;/li&gt;
&lt;li&gt;$Pr(E|B) = 1/2$，分析同上；&lt;/li&gt;
&lt;li&gt;$Pr(E|C) = 0$，第二步C门后面是羊的概率是0，所以按照上面的分析最终的概率是1/2*0 =0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看出无论更换与否，中奖的概率都是一样的。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.maa.org/external_archive/devlin/devlin_12_05.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Monty Hall revisited&lt;/a&gt;，问题的数学推导&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;蒙提霍爾問題 - Wikiwand&lt;/a&gt;，维基百科描述&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.statisticshowto.com/probability-and-statistics/monty-hall-problem/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Monty Hall Problem: Solution Explained Simply - Statistics How To&lt;/a&gt;，一篇精湛的统计学分析&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;
</description>
        </item>
        <item>
        <title>新冠检测后面的数学定理</title>
        <link>https://blog.bugxch.top/p/%E6%96%B0%E5%86%A0%E6%A3%80%E6%B5%8B%E5%90%8E%E9%9D%A2%E7%9A%84%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86/</link>
        <pubDate>Wed, 23 Mar 2022 20:13:15 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%96%B0%E5%86%A0%E6%A3%80%E6%B5%8B%E5%90%8E%E9%9D%A2%E7%9A%84%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86/</guid>
        <description>&lt;p&gt;新冠检测的科学原理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/624c3253239250f7c5dee479.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;混合检测的数学原理&#34;&gt;混合检测的数学原理&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;当前居家检测的新冠是10人一组或者20人一组进行混检的，为何不是挨个检测？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;检测现状&#34;&gt;检测现状&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;http://p2.img.cctvpic.com/cportal/cnews-yz/img/2020/11/26/1606345435613_225_635x553.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;英国城市利物浦在2020年11月20日刚结束一场大规模的新冠检测项目，这是英国第一次在一个城市做大规模检测。利物浦是英格兰新冠死亡率最高的地区，每百万人感染率是英格兰平均水平约2倍，所以被选为试点。这个试点项目被看作是全英的希望，要在2021年1月之后在英格兰全境推广。但是进度很不理想，原本的目标是在两周内对利物浦全部50万人口进行检测。但两周结束，目标才达成了一半不到，共检测了约20万人，检出来约2000名阳性，600名无症状感染者。所以检测效率是&lt;strong&gt;1.42万人次/天&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/624c40d4239250f7c5fd61a4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;上面是约翰霍普金斯大学的&lt;a class=&#34;link&#34; href=&#34;https://coronavirus.jhu.edu/testing/individual-states&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;美国每日核酸检测的统计数据&lt;/a&gt;，可以看到从2020年4月份到现在，核酸检测的峰值是580万人次/天左右。参考4月4日上海全市核酸检测的速度，&lt;strong&gt;2500万人次/天，相差甚远！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/624c432f239250f7c502f18c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;混检效率&#34;&gt;混检效率&lt;/h3&gt;
&lt;p&gt;如果在27个检测样本中有1个阳性样本，如何以比较少的操作将它检测出来？下面是《自然》杂志给出的新冠病毒几种不同的混检方法&lt;/p&gt;
&lt;h4 id=&#34;方法一&#34;&gt;方法一&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;http://p5.img.cctvpic.com/cportal/cnews-yz/img/2020/11/26/1606351631178_672_732x361.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这个也是&lt;strong&gt;当前上海核酸检测普遍使用的方法&lt;/strong&gt;，总计检测次数是3 + 9 = 12次。这种方法最早是由哈佛大学经济学家Robert Dorfman在20世纪40年代提出的，当时是用于检测二战士兵中有多少人携带梅毒。后来也常被用于筛查无症状人群有多少人携带比如衣原体和淋病病毒。红十字会也会用这种方法来筛查献血者中是否有人携带乙肝、艾滋病毒等。该方法的特点是&lt;strong&gt;操作简单，检测轮数较少&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;方法二&#34;&gt;方法二&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;http://p5.img.cctvpic.com/cportal/cnews-yz/img/2020/11/26/1606345492175_196_555x335.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可以称为方法一的改进版，但是与上面相比，总计检测次数是9次，但是真正检出阳性的轮次更多，如果每轮的检测结果都需要等好久，会导致时间拖很长。而且叫人回来检测3次，也有操作上的难度。&lt;/p&gt;
&lt;h4 id=&#34;方法三&#34;&gt;方法三&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;http://p2.img.cctvpic.com/cportal/cnews-yz/img/2020/11/26/1606345515593_248_555x294.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这个是升维的测试方法，第二轮检测按照行检测3次，再按照列检测3次，总计检测次数是3 + 6 = 9次。但是这个方法实际操作比较复杂，如果有不止一个阳性的时候，需要依靠算法来计算哪些是阳性样本。&lt;/p&gt;
&lt;h4 id=&#34;方法四&#34;&gt;方法四&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;http://p3.img.cctvpic.com/cportal/cnews-yz/img/2020/11/26/1606351706408_226_959x507.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;前几种方法都需要分好几轮，而测第2轮必须要等第1轮结果出来，测第3轮要等到第2轮结果出来。轮次越多，等越久越耽误时间。要比病毒更快，科学家于是研究是否能把轮次压缩到极限？印度理工学院的计算机科学家用数学中的柯克曼三元系（Kirkman triples）来完成“一轮搞定”。上图的例子就是如果测9个人，只需要测6次就能找到唯一阳性。&lt;/p&gt;
&lt;h3 id=&#34;方法一的数学最优问题&#34;&gt;方法一的数学最优问题&lt;/h3&gt;
&lt;p&gt;方法一个问题，如果样本中的阳性不止一个而且不在同一个分组，第一轮检测到就是3组阳性，第二组3组都要分开检测，实际上检测次数就是27+3=30次。所以，方法一有一个最佳混检的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假如现在有100个人需要检测，使用方法一进行混检，可以5人混检也可以10人混检，更极端的可以1人混检（也就是逐个检测），在给定阳性感染率$p$的前提下，检测的分组的规模多大检测的次数最少？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个问题的分析可以使用概率中&lt;strong&gt;期望&lt;/strong&gt;的概念，举例来说，如果你花3块钱买彩票，有3种中奖的面值：第一种是10块，中奖率是1/20，第二种是100块，中奖率1/300，第三种10000块，中奖率是1/60000，那么平均来讲，三张彩票你期望得到中奖的金额是&lt;/p&gt;
&lt;p&gt;$$
10* 1/20 + 100* 1/300 + 10000 * 1/60000 = 1/2+1/3+1/6 = 1
$$&lt;/p&gt;
&lt;p&gt;所以，用3块钱买了1块钱的期望值，另外两块交了愚人税。将期望值的概念用到这个问题的分析中。假设每次检测$k$个样本为一组，所有样本中的阳性率为$p$，那么使用混检方法一，k个检测样本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有阳性的概率是$(1-p)^k$，只需要第一轮检测1次即可；&lt;/li&gt;
&lt;li&gt;有阳性的概率是$1-(1-p)^k$，那么两轮一共需要检测$k+1$次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，总的检测次数的期望是&lt;/p&gt;
&lt;p&gt;$$
(1-p)^k + (1-(1-p)^k)(k+1)
$$&lt;/p&gt;
&lt;p&gt;将这个次数与$k$次相比，如果值小于1，那么说明分组检测有收益，那么问题转化成求&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
f(k) &amp;amp; = \frac{(1-p)^k + (1-(1-p)^k)(k+1)}{k} \
&amp;amp; = 1/k+1-(1-p)^k\
\end{align}
$$&lt;/p&gt;
&lt;p&gt;的最小值的问题。依照微积分的知识，函数的极值一般出现在导数为0的地方，求导数为&lt;/p&gt;
&lt;p&gt;的解就可以求出$k$的数值。另一种近似解的估值可以通过二项式展开的简化得到&lt;/p&gt;
&lt;p&gt;求导得出$k = \frac{1}{\sqrt{p}}$。使用软件绘制函数的图像如下
&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_jpg/C58GFHZjq0icEPV3rWoeiappKkTibuV6aDYt0hcwoQ0NjBxgVpvf4NMdBiaN6juGBsmK2C4CbH7iaNqLwic9zQnHBlxg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从上面的结果可以看出，在阳性率低于4%时，使用每组5个混检比较合适，但是当阳性率高于20%时，混检已经降低到3个一组，当阳性率为40%时，混检的效率已经不如逐个检测了。&lt;/p&gt;
&lt;h2 id=&#34;检测结果为阳性的感染概率&#34;&gt;检测结果为阳性的感染概率&lt;/h2&gt;
&lt;h3 id=&#34;引题&#34;&gt;引题&lt;/h3&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-sg/%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;蒙提霍尔问题 - Wikiwand&lt;/a&gt;， 参赛者会看见三扇门，其中一扇门的里面有一辆汽车，选中里面是汽车的那扇门，就可以赢得该辆汽车，另外两扇门里面则都是一只山羊。当参赛者选定了一扇门，主持人会开启另一扇是山羊的门；并问：“要不要换一扇门？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Monty_open_door.svg/440px-Monty_open_door.svg.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;感染概率&#34;&gt;感染概率&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;居住在金桥居家隔离小区全体人员做核酸检测，很不幸小明第一次核酸检测结果就为阳性，那么小明是否一定感染新冠病毒，感染概率有多大？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个概率与哪些因素相关？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;活动轨迹经过地或者周围环境的新冠病毒浓度水平，他们去过哪些地方？是否是新冠密接？&lt;/li&gt;
&lt;li&gt;他们是否打过疫苗？自身的免疫力如何？&lt;/li&gt;
&lt;li&gt;检测试剂的质量水平如何？受检测人员的感染时间如何？标本取样时受检测者的配合情况如何？检测人员的流程操作熟练度如何？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;假如有人如下的数据，是否可以得到定量的计算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个人在金桥区域在居家隔离期间的感染新冠的概率是1/10000;&lt;/li&gt;
&lt;li&gt;没有感染新冠前提下，新冠试剂检测的**灵敏度(sensitivity)和特异度(specificity)**均为99%（具体的定义参考下图，真的感染之后被判定为阳性的概率，和没有感染被判定为阴性的概率，具体的定义可以参考后面的示意图）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;推导贝叶斯定理&#34;&gt;推导贝叶斯定理&lt;/h3&gt;
&lt;p&gt;对于这个问题的计算可以从如下朴素的定义开始，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;受测者检测为阳性后感染新冠的概率，等于检测结果为阳性的感染新冠病毒的人数与所有检测为阳性人数之比&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;朴素推导&#34;&gt;朴素推导&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;假如金桥地区有10000个居民，根据感染概率，其中真实感染新冠的有10个，剩下的9990个居民实际是没有感染新冠的，也就是在没有其他信息前提下已知该地区的居民的感染率是1/1000；&lt;/li&gt;
&lt;li&gt;在较为理想的情况下，排除其他检测操作不规范的等因素，我们假设试剂检测性能，在100个真实感染病例中可以检测出99个为阴性，1个为阳性（灵敏度是99%），同样的，100个没有真实没有感染的居民中检测出来1个阳性，其他的99个为阴性（特异度是99%)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据上面的假设，计算&lt;/p&gt;
&lt;p&gt;从上面的公式可以看出假阳性人数占比较高，就会造成检测结果的不准确性，所以要提高阳性检测的准确率就需要尽量降低假阳性的病例，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提高试剂检测的特异度，如果将特异度提高到100%，那么就不会有没有感染的人被判定为假阳性，准确率是100%；&lt;/li&gt;
&lt;li&gt;如果真正感染的人数比例较高，那么真阳性就可以占有比较大的份额，检测结果更可信。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;还有一个方法就是重复测试，如果上述条件不变，根据贝叶斯公式推导可以得到，两次复检均为阳性患病的的概率可以提高到90%。&lt;/p&gt;
&lt;h4 id=&#34;理论推导&#34;&gt;理论推导&lt;/h4&gt;
&lt;p&gt;用数学的语言描述就是，如果用事件$D$表示感染新冠，事件$+$表示检测为阳性，那么&lt;/p&gt;
&lt;p&gt;$$
Pr(D|+) = \frac{Pr(+D)}{Pr(+)}
$$&lt;/p&gt;
&lt;p&gt;其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$P(D) = \frac{真正感染的人数}{检测为阳性的人数}$
表示感染新冠病毒的概率，这里是&lt;strong&gt;先验概率&lt;/strong&gt;，表示在&lt;strong&gt;看到化验结果之前&lt;/strong&gt;的感染的概率，称为&lt;strong&gt;先验概率&lt;/strong&gt;，这个值的大小与金桥地区的感染人数，受测者在金桥地区的活动轨迹，受测者自身是否佩戴口罩等环境与受测者自身的因素相关，测算一般比较复杂，可以通过历史统计或者理论推理得到，这里的值就是前面的1/10000&lt;/li&gt;
&lt;li&gt;$P(D|+)$表示检测阳性的情况下，感染新冠的概率，也是需要估算的目标值&lt;/li&gt;
&lt;li&gt;$Pr(+D) = \frac{真正感染并且检测为阳性的人数}{总人数}$
表示感染新冠，并且检测是阳性的概率&lt;/li&gt;
&lt;li&gt;$Pr(+) = \frac {真正感染并且检测为阳性的人数 + 没有感染并且检测为阳性的人数}{总人数}$表示所有受测者检测为阳性的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据全概率公式&lt;/p&gt;
&lt;p&gt;$$
Pr(AB) = Pr(A|B)Pr(B)
$$&lt;/p&gt;
&lt;p&gt;可以得到$Pr(+D) = Pr(+|D)Pr(D)$，带入到上面的式子可以得到&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
Pr(D|+) &amp;amp; = \frac{Pr(+D)}{Pr(+)} \
&amp;amp; = \frac{Pr(+|D)Pr(D)}{Pr(+)} \
\end{align}
$$&lt;/p&gt;
&lt;p&gt;这个就是&lt;strong&gt;贝叶斯定理&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;继续上面公式的推算过程，&lt;/p&gt;
&lt;p&gt;$$
\begin{align}
Pr(D|+) &amp;amp; = \frac{Pr(+D)}{Pr(+)} \
&amp;amp; = \frac{Pr(+|D)Pr(D)}{Pr(+)}
\end{align}
$$&lt;/p&gt;
&lt;p&gt;其中，$Pr(+|D)$表示感染新冠的情况下被检测出为阳性的概率，也就是检测试剂的灵敏度，这个值是0.99，一般这一项称为$+$的后验概率。&lt;/p&gt;
&lt;p&gt;对于$Pr(+)$可以继续使用全概率公式$Pr(+) = Pr(+|D)Pr(D) + Pr(+|\bar D)P(\bar D)$，检测阳性的人数比例，等于感染新冠的人数的检测阳性的概率与没有感染新冠的检测阳性的概率，所以最终的结果是&lt;/p&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$Pr(+|\bar D)$ 表示未感染新冠的情况下被检测出为阳性的概率，这个值是0.01，是1 - 灵敏度的概率。&lt;/li&gt;
&lt;li&gt;$Pr(\bar D)$就是在金桥地区不会感染的概率，为1 - 1/10000 = 9999 / 10000&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;理解贝叶斯定理&#34;&gt;理解贝叶斯定理&lt;/h3&gt;
&lt;p&gt;可以参考&lt;a class=&#34;link&#34; href=&#34;https://www.matongxue.com/madocs/301/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;理解贝叶斯定理&lt;/a&gt;的文章。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-sg/%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;蒙提霍尔问题 - Wikiwand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.yn.gov.cn/ztgg/yqfk/yfzs/202007/t20200703_206971.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;核酸检测准确率有多高？为什么阴性结果有效期定在7天之内？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[法] 黄黎原著,方弦译.贝叶斯的博弈：数学、思维与人工智能.人民邮电出版社.2010:32.
得到电子书：https://d.dedao.cn/Dx3bkkZw5l51Et9R&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://rs.yiigle.com/CN114452202008/1222657.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;七种国产新型冠状病毒核酸检测试剂盒的一致性和检出能力评价研究 - 中华检验医学杂志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-sg/%E9%9D%88%E6%95%8F%E5%BA%A6%E5%92%8C%E7%89%B9%E7%95%B0%E5%BA%A6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;灵敏度和特异度 - Wikiwand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://finance.sina.com.cn/jjxw/2021-11-03/doc-iktzqtyu5141077.shtml?cre=tianyi&amp;amp;mod=pcpager_tech&amp;amp;loc=3&amp;amp;r=0&amp;amp;rfunc=4&amp;amp;tj=cxvertical_pc_pager_spt&amp;amp;tr=174&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这些因素或导致“假阳、假阴”，新冠防控利器如何更精准|RNA_新浪财经_新浪网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://rs.yiigle.com/CN114452202005/1199013.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2019新型冠状病毒特异抗体检测 &amp;quot;假阳性 &amp;quot;原因分析及对策 - 中华检验医学杂志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jaredsmurray.github.io/sta371h/files/05_bayes_rule%20%282%29.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;搜索天蝎号核潜艇&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Bayesian_search_theory&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Bayesian search theory - Wikiwand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://news.uchicago.edu/story/david-l-wallace-statistician-who-helped-identify-federalist-papers-authors-1928-2017&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;David L. Wallace, statistician who helped identify Federalist Papers authors, 1928-2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.shantou.gov.cn/wjj/tpxw/content/post_1869211.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【科普】核酸检测的原理到底是什么？为什么会出现假阴性？_图片新闻_汕头市卫生健康局（中医药局）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>Git分支操作</title>
        <link>https://blog.bugxch.top/p/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/</link>
        <pubDate>Tue, 15 Mar 2022 09:20:00 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/</guid>
        <description>&lt;p&gt;git的一些技术的分支操作笔记。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.pixabay.com/photo/2018/08/14/07/06/landscape-3604825_1280.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;分支操作总览&#34;&gt;分支操作总览&lt;/h2&gt;
&lt;p&gt;下面的表格是git分支操作的总结表格&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git branch X&lt;/code&gt;/&lt;code&gt;git checkout -b X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;第1个命令仅仅创建分支但不切换，第2个命令创建并切换到新分支&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前所有分支列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git log --oneline --decorate --graph --all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列出当前所有分支及其提交的分支图&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git branch -v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看所有的分支及其最后一次提交&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git branch --merged&lt;/code&gt;/&lt;code&gt;git branch --no-merged&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看已经合并或者没有合并的分支&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git checkout X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到分支X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git branch -d X&lt;/code&gt;/&lt;code&gt;git branch -D X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除分支X，强行删除分支X（即使暂存区有代码）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;分支工作流&#34;&gt;分支工作流&lt;/h2&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%AE%80%E4%BB%8B&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git分支简介&lt;/a&gt;中的介绍，想象一种典型的工作流，看看如何使用git的分支管理进行操作。想象如下的一个典型开发场景：小王所在的团队基于master管理代码，小王参与了一个新特性的开发，需要基于master分支开发新的任务，与此同时他有时需要修复master分支上的一些小bug。现在小王需要完成如下的操作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建开发分支iss53，并在该分支上开发代码；&lt;/li&gt;
&lt;li&gt;紧急修复主线上的问题，创建hotfix分支，并在上面修复代码；&lt;/li&gt;
&lt;li&gt;将hotfix的修复代码合并到主线上，并上传到主线；&lt;/li&gt;
&lt;li&gt;切换回iss53分支，继续完成新功能开发，开发完成后将该分支的所有修改提交到master分支&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;新建分支&#34;&gt;新建分支&lt;/h3&gt;
&lt;p&gt;创建分支iss53，并在该分支上工作，你在该分支上做了部分提交和修改&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -b iss53 &lt;span class=&#34;c1&#34;&gt;#创建并切换到iss53分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim test3.txt &lt;span class=&#34;c1&#34;&gt;#修改文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://git-scm.com/book/en/v2/images/basic-branching-2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;切换分支&#34;&gt;切换分支&lt;/h3&gt;
&lt;p&gt;此时发现主干需要修改紧急bug，于是将iss53分支的修改提交之后切换到master&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -a -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;iss53 push&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#在iss53上做提交&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout master &lt;span class=&#34;c1&#34;&gt;#切换到master分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch hotfix &lt;span class=&#34;c1&#34;&gt;#基于master分支新建hotfix的分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout hotfix &lt;span class=&#34;c1&#34;&gt;#切换到hotfix分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要注意，在切换到master分支之前需要将iss53分支上的修改提交，或者使用git stash命令将这些没有提交的还存在在暂存区的修改处理干净。继续在hotfix分支操作，基于这个分支修改代码，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim test3.txt &lt;span class=&#34;c1&#34;&gt;#修改代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -a -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;add a new modification on iss53 branch&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#提交&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://git-scm.com/book/en/v2/images/basic-branching-4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;合并分支1&#34;&gt;合并分支1&lt;/h3&gt;
&lt;p&gt;在hotfix上修复代码之后，需要将修复之后的代码合入到master分支，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout master &lt;span class=&#34;c1&#34;&gt;#在合并修复之前，需要切换到master分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git merge hotfix &lt;span class=&#34;c1&#34;&gt;#将hotfix的修复合入到master分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://git-scm.com/book/en/v2/images/basic-branching-5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;删除分支&#34;&gt;删除分支&lt;/h3&gt;
&lt;p&gt;如上图所示，此时hotfix分支和master分支的代码合并，hotfix的问题已经修复，所以需要删除hotfix的分支&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -d hotfix &lt;span class=&#34;c1&#34;&gt;#删除hotfix分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意，如果hotfix的暂存区仍然有代码，可能使用上面的命令无法删除，需要使用下面的代码删除分支&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -D hotfix
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;继续开发&#34;&gt;继续开发&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://git-scm.com/book/en/v2/images/basic-branching-6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;删除hotfix分支之后，继续返回iss53分支开发，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout iss53
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim test3.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -a -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;develop push&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;合并分支2&#34;&gt;合并分支2&lt;/h3&gt;
&lt;p&gt;假设在C5这个快照的节点，iss53的开发任务完成，需要将开发分支的代码回合到master分支，操作与之前切换到master，然后合并，与之前的合并分支1的操作一样&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git merge iss53
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;合并分支之前的图如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://git-scm.com/book/en/v2/images/basic-merging-1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;此次合并与之前的合并分支1不同，iss53当前节点的父节点向上追溯无法追溯到C4这个节点，所以git在此处做了一个&lt;strong&gt;合并提交&lt;/strong&gt;，它新建了一个commit的节点C6，将C4和C5的快照进行比较之后合并到C6，合并后的节点如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://git-scm.com/book/en/v2/images/basic-merging-2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果没有发生冲突，那么一切ok，删除iss53即可，任务完成。&lt;/p&gt;
&lt;h3 id=&#34;合并分支之冲突解决&#34;&gt;合并分支之冲突解决&lt;/h3&gt;
&lt;p&gt;对于上面的合并分支2的情况，如果C4和后面的C5修改了同一个文件的同一行，那么会有冲突发生。以下为例，可以git接冲突的方法解决后合并。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/622eb66b5baa1a80ab9dd794.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;冲突如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/622eb67f5baa1a80ab9de38d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中上半部分是当前的master分支的情况，下面的iss53的情况的，可以手动解决冲突后继续合并&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/622eb6f45baa1a80ab9e1d97.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到新建了校验和为b700510的节点，master和iss53分支均合入到该节点。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>初识卡片笔记写作法</title>
        <link>https://blog.bugxch.top/p/%E5%88%9D%E8%AF%86%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95/</link>
        <pubDate>Wed, 11 Aug 2021 22:31:58 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%88%9D%E8%AF%86%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/6113da595132923bf8329013.png" alt="Featured image of post 初识卡片笔记写作法" /&gt;&lt;p&gt;卡片笔记写作法的学习总结，部署实践。&lt;/p&gt;
&lt;h2 id=&#34;基本思想及原理&#34;&gt;基本思想及原理&lt;/h2&gt;
&lt;p&gt;最近在阅读&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/35503571/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;卡片笔记写作法&lt;/a&gt;，在正式出版差不多一周的时间，这本书登上了豆瓣的非虚构图书排行榜的No.2，评分高达8.0，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6113dc455132923bf838d9fa.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;顺藤摸瓜，我花了几天时间仔细搜罗了相关的资料文档，发现这是非常好的达到长期主义知识复利的工具，总结下资料，写个博客记录下。&lt;a class=&#34;link&#34; href=&#34;https://zettelkasten.de/introduction/zh/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;卢曼卡片盒笔记法介绍 (Introduction to the Zettelkasten Method) • Zettelkasten Method&lt;/a&gt;是翻译的比较权威的阐述卡片笔记写作法精髓的文章。&lt;/p&gt;
&lt;h2 id=&#34;笔记软件及部署&#34;&gt;笔记软件及部署&lt;/h2&gt;
&lt;p&gt;我选择使用&lt;a class=&#34;link&#34; href=&#34;https://obsidian.md/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Obsidian&lt;/a&gt; +&lt;a class=&#34;link&#34; href=&#34;https://www.jianguoyun.com/#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;坚果云&lt;/a&gt; +&lt;a class=&#34;link&#34; href=&#34;https://play.google.com/store/apps/details?id=dk.tacit.android.foldersync.lite&amp;amp;hl=en_US&amp;amp;gl=US&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FolderSync&lt;/a&gt;作为PC与安卓手机的笔记系统。&lt;/p&gt;
&lt;h3 id=&#34;全平台笔记软件&#34;&gt;全平台笔记软件&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://obsidian.md/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Obsidian&lt;/a&gt;当前的版本是v0.12.12，我上周发现的宝藏笔记软件，最大的特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;非常私密和安全。所有的资料和文档都保存在本地PC和手机，如果需要同步文档可以付费或者通过其他的同步软件实现；&lt;/li&gt;
&lt;li&gt;个人免费。&lt;/li&gt;
&lt;li&gt;支持md文档，支持笔记双向链接，支持Windows/Linux/Mac/Android/ios客户端。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个软件的介绍文档和资料已经很多了，可以参考下面的链接进行学习&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1jB4y1c7p2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;持续更新44集全网最全obsidian教程|搬运分享非原创_哔哩哔哩_bilibili&lt;/a&gt;，B站上推荐非常多视频教程；&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1SA411i7BG&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Obsidian：目前我们眼中最美最好用的免费笔记/知识管理软件_哔哩哔哩_bilibili&lt;/a&gt;，B站上的另一个比较简单的介绍视频，时长比较短；&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sspai.com/post/63481&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;玩转 Obsidian | 基础设置篇 - 少数派&lt;/a&gt;，比较早介绍该款软件的文章&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://publish.obsidian.md/chinesehelp/01&amp;#43;2021%E6%96%B0%E6%95%99%E7%A8%8B/2021%E5%B9%B4%E6%96%B0%E6%95%99%E7%A8%8B&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2021年新教程 - Obsidian中文教程 - Obsidian Publish&lt;/a&gt;，官方中文教程，也是使用obsidian发布的，可以从中看到笔记的链接图。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安卓手机与pc同步&#34;&gt;安卓手机与PC同步&lt;/h3&gt;
&lt;p&gt;具体参考&lt;a class=&#34;link&#34; href=&#34;https://help.jianguoyun.com/?p=2887&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何使用FolderSync在安卓手机上同步文件夹到坚果云？&lt;/a&gt;，按照文章的步骤设置使用即可。&lt;/p&gt;
&lt;h3 id=&#34;辅助技能&#34;&gt;辅助技能&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://einverne.github.io/post/2021/04/obsidian-markdown-webclip.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Obsidian 使用篇一：使用 markdown-clipper 全文保存网页 | Verne in GitHub&lt;/a&gt;，这篇文章介绍了两个非常好用插件，可以通过chrome或者edge将网页的信息摘录到本地的闪念笔记里面，也可以通过插件将网页的内容转换成为md保存在本地。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;全文完🚀&lt;/p&gt;</description>
        </item>
        <item>
        <title>二分查找——从入门到精通</title>
        <link>https://blog.bugxch.top/p/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</link>
        <pubDate>Thu, 06 May 2021 22:33:59 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/60940147d1a9ae528fdc3a1d.png" alt="Featured image of post 二分查找——从入门到精通" /&gt;&lt;p&gt;最近在准备考试，做了一些二分搜索的题目，感觉有点意思，记录下做题的心得😁。&lt;/p&gt;
&lt;h2 id=&#34;文章目标&#34;&gt;文章目标&lt;/h2&gt;
&lt;p&gt;通过阅读本文，可以彻底搞懂二分查找的基本原理及各种变体，可以独立完成下面的力扣题目&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;力扣题目&lt;/th&gt;
&lt;th&gt;考查点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/guess-number-higher-or-lower/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;374. 猜数字大小&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基本模板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/sqrtx/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;69. x 的平方根&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基本模板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/first-bad-version/?utm_source=LCUS&amp;amp;utm_medium=ip_redirect&amp;amp;utm_campaign=transfer2china&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;278. 第一个错误的版本&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;查找左边界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;153. 寻找旋转排序数组中的最小值&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;寻找旋转数组中的目标值（无重复元素）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;154. 寻找旋转排序数组中的最小值 II&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;寻找旋转数组中的目标值（包含重复元素）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;34. 在排序数组中查找元素的第一个和最后一个位置&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;查找左右边界&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;基本原理&#34;&gt;基本原理&lt;/h2&gt;
&lt;p&gt;在计算机科学中，二分搜索又被成为&lt;strong&gt;半区间&lt;/strong&gt;搜索，对数搜索或者二分chop，它用于在排序数列中找到目标值的位置。算法不断比较数列中间元素与目标值，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果目标值与中间元素匹配，那直接返回中间的位置；&lt;/li&gt;
&lt;li&gt;如果目标值比中间元素小，继续搜索低半边的数列；&lt;/li&gt;
&lt;li&gt;如果目标值比中间元素大，那么继续搜索高半边&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意到&lt;strong&gt;每次在比较元素之后搜索的区间会减少一半（去掉目标值不可能在的那一半区间）&lt;/strong&gt;，所以在最坏的情况下，算法的复杂度是$O(logn)$。下面是二分搜索与线性搜索的比较示意图，以&lt;strong&gt;严格单调增且无重复元素&lt;/strong&gt;的序列为例，查找目标值为37的序列值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://devopedia.org/images/article/28/2951.1490520804.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;序列长度是17，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;二分查找第一次寻找整个搜索区间的中间的index（从0开始计数）为(0 + 16) / 2 = 8的数字23，23比37小，所以&lt;strong&gt;更新查找区间为&lt;/strong&gt;[9,16]；&lt;/li&gt;
&lt;li&gt;查找新区间的中间index = (9 + 16) /2 = 12，结果是数字41，比37大，&lt;strong&gt;更新查找区间&lt;/strong&gt;为[9, 11];&lt;/li&gt;
&lt;li&gt;查找新区间的中间index = (9 + 11) / 2 = 10，结果是数字31，比37大，继续&lt;strong&gt;更新查找区间&lt;/strong&gt;为[11, 11]，此时中间元素就是第11号元素，即37，找到目标值，查找结束。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据以上算法步骤，很顺利就可以写出下面的伪代码，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;// basic template
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; binary_search&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;A, n, T&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; is
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    L :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    R :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n − &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; L ≤ R &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        m :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; floor&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;L + R&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; / 2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;m&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &amp;lt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            L :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; m + &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;m&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &amp;gt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            R :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; m − &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; unsuccessful
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用上面的基本模板我们就可以解答文章开始列出的第一道题目了，&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/guess-number-higher-or-lower/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;374. 猜数字大小&lt;/a&gt;题目，给出二分查找的基本模板。这道题目就是最传统的猜大小的谜题，标准的解答模板的代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * Forward declaration of guess API.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @param  num   your guess
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @return 	     -1 if num is lower than the guess number
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *			      1 if num is higher than the guess number
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *               otherwise return 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * int guess(int num);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;guessNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// detail 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// detail 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;guess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// detail 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;关键技术细节&#34;&gt;关键技术细节&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Although the basic idea of binary search is comparatively straightforward, the details can be surprisingly tricky&lt;/em&gt;  &amp;ndash; &lt;strong&gt;Donald Knuth&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就像高德纳所说，二分法的思想简单且易于理解，但是二分法的细节却藏了很多坑，&lt;strong&gt;魔鬼就在细节中&lt;/strong&gt;。为了透彻理解二分法的实现，有必要对上面的代码的下面3个技术细节（标记为&lt;code&gt;detail&lt;/code&gt;注释的地方）进行深究。&lt;/p&gt;
&lt;h4 id=&#34;循环的入口条件&#34;&gt;循环的入口条件&lt;/h4&gt;
&lt;p&gt;代码16行，为什么循环的入口条件是&lt;code&gt;left &amp;lt;= right&lt;/code&gt;？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无论何时$[left, right]$表示&lt;strong&gt;可能包含目标值&lt;/strong&gt;的搜索区间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意这是个&lt;strong&gt;左闭右闭&lt;/strong&gt;的闭区间，单纯从数学角度出发，这个区间&lt;strong&gt;最短的长度就是1&lt;/strong&gt;，也就是$left = right$的时候。如果$left &amp;gt;  right$了，那$[left, right]$就是&lt;strong&gt;空集&lt;/strong&gt;，这个集合&lt;strong&gt;肯定不包含目标值&lt;/strong&gt;，也就&lt;strong&gt;没有继续搜索的必要&lt;/strong&gt;了，所以循环退出。&lt;/p&gt;
&lt;h4 id=&#34;中点计算&#34;&gt;中点计算&lt;/h4&gt;
&lt;p&gt;为什么是&lt;code&gt;mid = left + ((right - left) &amp;gt;&amp;gt; 1)&lt;/code&gt;，也就是数学的$floor((left + right) / 2)$?
这里的中点转换成数学表示就是
$$
\begin{align}
mid = \left \lfloor\frac{left + right}{2}  \right \rfloor
\end{align}
$$
其实，我们还有另外一种选择，将中间值定为
$$
\begin{align}
mid = \left \lceil\frac{left + right}{2}  \right \rceil
\end{align}
$$
第2种方式的中点值的选择是否可行？从后面的分析，**其实是可行的。**那这两个计算公式有什么区别？最大的区别在于$right = left + 1$的时候，也就是搜索区间长度为2左右端点挨着的时候，如下图所示，下一次循环计算mid，第1个公式结果是$mid = 4$，而第2个公式的结果是$mid = 5$，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/609680d8d1a9ae528f734868.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;指针相邻&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;，第1个公式$mid = \left \lfloor\frac{left + right}{2}  \right \rfloor = \left \lfloor\frac{left + left + 1}{2}  \right \rfloor = left$，而第2个公式$mid = \left \lceil\frac{left + right}{2}  \right \rceil = \left \lceil\frac{left + left + 1}{2}  \right \rceil = left + \lceil 0.5\rceil = left + 1 = right$，请记住这个重要的结论。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当搜索区间的&lt;strong&gt;左右两端点挨着&lt;/strong&gt;的时候（即$right = left + 1)$，floor函数计算的中点mid是left，ceil函数计算的中点mid是right&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;请记住这个&lt;strong&gt;特殊的区间情况&lt;/strong&gt;，至于为何基础模板选择floor而没有选择ceil，在后面的变化类型一节很关键。&lt;/p&gt;
&lt;h4 id=&#34;搜索区间调整&#34;&gt;搜索区间调整&lt;/h4&gt;
&lt;p&gt;在每次判断与target的差距之后，搜索区间为什么是这么调整的？
二分法另一个容易搞错的问题是区间调整，$left$和$right$好像可以选择$mid$的3个边界值$mid, mid - 1, mid + 1$中的任意一个，其实&lt;strong&gt;调整的原则&lt;/strong&gt;很简单，&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;排除&lt;/strong&gt;target不可能存在的区间，&lt;strong&gt;保留&lt;/strong&gt;可能存在的区间&lt;/li&gt;
&lt;li&gt;保证&lt;strong&gt;任意判断分支为true时最后都可以跳出循环，尤其当$right = left + 1$时&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;先看第1条原则，基础模板中，根据mid的值与目标值的差距，搜索区间$[left, right]$的调整有3个判断分支：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果和目标值相同$A[mid] = A[target]$，直接&lt;strong&gt;跳出循环&lt;/strong&gt;，返回mid(代码第21行)；&lt;/li&gt;
&lt;li&gt;如果比目标值大$A[mid] &amp;gt; A[target]$，那么肯定$target &amp;lt; mid$，所以$target \le mid - 1$，因此$target$位于区间$[left, mid - 1]$上，更新$right = mid - 1$；&lt;/li&gt;
&lt;li&gt;如果比目标值小$A[mid] &amp;lt; A[target]$，那么肯定$target &amp;gt; mid$，所以$target \ge mid + 1$，因此$target$位于区间$[mid + 1， right]$上更新$left = mid + 1$。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;区间的调整仅仅保留了$target$可能存在的部分。&lt;/p&gt;
&lt;p&gt;分支3的调整情况，看如下图示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/609686fad1a9ae528fbc00c9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;考察第2条原则，&lt;strong&gt;是否可以退出循环&lt;/strong&gt;？这个循环的退出条件是$left &amp;gt; right$。对照上面的3个判断分支分别为true的情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第1个判断分支直接退出循环，符合条件；&lt;/li&gt;
&lt;li&gt;同理，第2个判断分支每次判断之后$right$在变小，所以必然在若干次之后比$left$小，直至退出循环&lt;/li&gt;
&lt;li&gt;第3个判断分支每次调整之后$left$在变大，所以所以必然在若干次之后比$right$大，直至退出循环&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以随着区间的调整，必然会在某一步满足退出的条件。&lt;strong&gt;特别的&lt;/strong&gt;，当$right = left + 1$时，$mid = left$；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第2个判断分支，$right = mid - 1 = left - 1 = right - 2 &amp;lt; left = right - 1$，跳出循环&lt;/li&gt;
&lt;li&gt;第3个判断分支，$left = mid + 1 = left + 1 = right$，再次进入循环，此时$mid = left = right$，$left = mid + 1 = right + 1 &amp;gt; right$，可以看到在迭代2次之后也退出循环&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第2条原则满足。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;结合上面的分析，二分法的步骤包括：&lt;/p&gt;
&lt;p&gt;从$A[mid]$与$target$的大小判断入手，判断它们的各种大小关系分支，确定每个判断分支的区间调整策略，需要满足下面的两条原则&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;排除&lt;/strong&gt;target不可能存在的区间，&lt;strong&gt;保留&lt;/strong&gt;可能存在的区间&lt;/li&gt;
&lt;li&gt;保证&lt;strong&gt;任意判断分支为true时最后都可以跳出循环，尤其当$right = left + 1$时&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;深入探究&#34;&gt;深入探究&lt;/h3&gt;
&lt;p&gt;上一小节讨论了3个关键技术细节，循环入口条件、中点计算和搜索区间调整，下面可以看到在满足上面的原则基础上，它们都可以变化。&lt;/p&gt;
&lt;h4 id=&#34;分支合并&#34;&gt;分支合并&lt;/h4&gt;
&lt;p&gt;当前的基础代码有3个判断分支，是否可以将3个分支合并成2个呢？下面的基础模板就可以。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;guessNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 退出条件变了
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// 调整策略的分支从3个变成了2个
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;guess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;c1&#34;&gt;// 返回的条件也变了
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;guess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;再仔细考察一下，上面的代码，3个地方发生变化（已经在注释种标出）依然可以通过测试，其实还是按照上面的2个原则来看。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;每次调整区间，&lt;strong&gt;排除&lt;/strong&gt;target不可能存在的区间，&lt;strong&gt;保留&lt;/strong&gt;可能存在的区间&lt;/p&gt;
&lt;p&gt;重新分析之前的3个判断分支，比较特殊是第1点，如果$A[mid] = A[target]$，那么$mid = target$，很明显&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判断分支1与判断分支2合并，当$A[mid] \ge A[target]$，$target \le mid$，所以$target$&lt;strong&gt;可能位于&lt;/strong&gt;$[left, mid]$区间，调整$right = mid$，注意此处$right \ne mid -1$&lt;/li&gt;
&lt;li&gt;判断分支1与判断分支3合并，当$A[mid] \le A[target]$，$target \ge mid$，所以$target$&lt;strong&gt;可能位于&lt;/strong&gt;$[mid, right]$区间，调整$left = mid$，注意此处$left \ne mid +1$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这两个策略看起来似乎都可以，结合其他两种情况，如果将3个分支合并为2个，应该有2种调整策略&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# solution 1，另一种正确的方案&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; binary_search_alternative&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;A, n, T&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; is
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    L :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    R :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n − &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; L &amp;lt; R &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        m :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; floor&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;L + R&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; / 2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;m&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            R :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            L :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; m + &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;L&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; unsuccessful
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或者&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# solution 2，错误示范&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; binary_search_alternative&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;A, n, T&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; is
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    L :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    R :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n − &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; L &amp;lt; R &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        m :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; floor&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;L + R&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; / 2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;m&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &amp;lt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            L :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            R :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; m - &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;L&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; unsuccessful
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保证&lt;strong&gt;任意判断分支为true时最后都可以跳出循环，尤其当$right = left + 1$时&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们再看上面的两种伪代码，退出的条件是$left &amp;gt;= right$，直接考察$left = right -1$的情况，如果在搜索的若干步之后搜索的区间变成下面的情况&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/609680d8d1a9ae528f734868.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;指针相邻&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;下一步搜索的$mid = 4$，按照方案2，如果此时&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第2个判断分支为true，$right = mid - 1 = 3 &amp;lt; left$，退出循环；&lt;/li&gt;
&lt;li&gt;第1个判断分支为true（代码第7~8行），那么调整$left = mid = 4$，再次进入之后&lt;strong&gt;会发现陷入死循环&lt;/strong&gt;，核心原因在于中点的选择上，因为使用的是floor函数，导致left永远恒等于mid，换句或说，$left$永远不再增加，而且也进不到更新$right$的分支，陷入死循环，考察方案1就没有这种情况。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以方案2的结果是错的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;中点计算变更&#34;&gt;中点计算变更&lt;/h4&gt;
&lt;p&gt;上面的方案2，因为不满足第2条原则而失败，那有没有办法通过改变其他部分而满足原则呢？第1个判断分支如果为true，当$right = left + 1$时，根据代码第6行，$mid = left$，所以进入分支之后$left = mid = left$，那可以将第6行的代码改成下面这样，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# solution 3，solution 2的改造&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; binary_search_alternative&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;A, n, T&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; is
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    L :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    R :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n − &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; L &amp;lt; R &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        m :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; ceil&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;L + R&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; / 2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# ceil取代floor函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;m&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &amp;lt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            L :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            R :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; m - &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;L&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; unsuccessful
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;再考察一下上面的搜索区间左右端点相邻的情况，下一次搜索的$mid = 5$，无论走哪一个判断分支，最终$left = right$，跳出循环，所以对于第2条原则需要补充&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以通过调整中点的计算方式，满足原则2，从而避免死循环&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;判断条件变更&#34;&gt;判断条件变更&lt;/h4&gt;
&lt;p&gt;需要注意，其他2个的模板的循环条件为$left &amp;lt; right$，当$left \ge right$时退出，如果$left = right$，那么搜索的区间只剩下一个元素，跳出循环之后别忘了要检查这个元素是否满足条件。如果最后的这个元素依然不是target，那么所有的元素也不是了，所以在最后我们加了一个判断，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; A&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;L&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; T &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; unsuccessful
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;变种题目&#34;&gt;变种题目&lt;/h2&gt;
&lt;p&gt;理解上面的分析过程之后，进入进阶版的二分法题目。&lt;/p&gt;
&lt;h3 id=&#34;重复元素左边界&#34;&gt;重复元素左边界&lt;/h3&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/first-bad-version/?utm_source=LCUS&amp;amp;utm_medium=ip_redirect&amp;amp;utm_campaign=transfer2china&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;278. 第一个错误的版本&lt;/a&gt;，从某个版本开始，版本就已经不可用了，但是在这个版本之前，所有的版本均可用，需要找出第一个不可用的版本。假如说，我们有100个版本，从第70个版本开始不用，那么怎么快速找到70呢？如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/609726b8d1a9ae528f1f0aa7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;题目要找到最左边第一个true对应的下标70，也是找到重复的&lt;code&gt;true&lt;/code&gt;区间的左边界。初始化$left = 0, right = 100$，我们还是&lt;strong&gt;从判断分支入手&lt;/strong&gt;，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果$A[mid] = true$，那么$target$可能位于$[mid + 1, right]$区间，调整$left = mid + 1$；&lt;/li&gt;
&lt;li&gt;如果$A[mid] = false$，$mid$可能是$target$，但是$mid + 1$不会是$target$（因为我们要找的是最左边的那个FALSE），那么$target$可能位于$[left, mid]$区间，调整$right = mid$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结合中点的计算原则$mid = floor((left + right)/ 2)$，判断$right = left + 1$时候，2个判断分支最终都可以跳出循环。最终代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// The API isBadVersion is defined for you.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// bool isBadVersion(int version);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;firstBadVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isBadVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;更一般的，假如我们要查找序列$[1,2,3,4,4,5,6,6,7,7,9,10,10,10]$中的&lt;strong&gt;最左边&lt;/strong&gt;的10的index，该如何处理？从分支判断入手，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果$A[mid] \lt 10$，那么10可能位于区间$[mid + 1, right]$区间，调整$left = mid + 1$；&lt;/li&gt;
&lt;li&gt;如果$A[mid] =  10$，那么10可能位于区间$[left, mid]$区间，调整$right = mid$；&lt;/li&gt;
&lt;li&gt;如果$A[mid] \gt  10$，那么10可能位于区间$[left, mid - 1]$区间，调整$right = mid - 1$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;合并分支2和分支3，变成&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果$A[mid] \lt 10$，那么10可能位于区间$[mid + 1, right]$区间，调整$left = mid + 1$；&lt;/li&gt;
&lt;li&gt;如果$A[mid] \ge  10$，那么10可能位于区间$[left, mid]$区间，调整$right = mid$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;判断当$left = right - 1$时，两个分支都可以顺利退出。代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CheckVal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;重复元素右边界&#34;&gt;重复元素右边界&lt;/h3&gt;
&lt;p&gt;假如我们要查找序列$[1,2,3,4,4,5,6,6,7,7,9,10,10,10]$中的&lt;strong&gt;最右边&lt;/strong&gt;的10的index，该如何处理？从分支判断入手，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果$A[mid] \lt 10$，那么最右边的10可能位于区间$[mid + 1, right]$区间，调整$left = mid + 1$；&lt;/li&gt;
&lt;li&gt;如果$A[mid] =  10$，这个$A[mid]$可能是最右边的10，也可能不是，但是$A[mid - 1]$肯定不是最右边的10了，所以目标值可能位于区间$[mid, right]$区间，调整$left = mid$；&lt;/li&gt;
&lt;li&gt;如果$A[mid] \gt  10$，那么最右边的10可能位于区间$[left, mid - 1]$区间，调整$right = mid - 1$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;合并分支1和分支2，变成&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果$A[mid] \le 10$，那么10可能位于区间$[mid, right]$区间，调整$left = mid$；&lt;/li&gt;
&lt;li&gt;如果$A[mid] \gt  10$，那么10可能位于区间$[left, mid - 1]$区间，调整$right = mid - 1$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;判断当$left = right - 1$时，按照floor函数计算，第1个分支会陷入死循环，所以需要调整中点的计算方式为ceil，判断两个分支都可以顺利退出，所以代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CheckVal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;旋转数组无重复元素&#34;&gt;旋转数组（无重复元素）&lt;/h3&gt;
&lt;p&gt;来做文章目标中的&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;153. 寻找旋转排序数组中的最小值&lt;/a&gt;这道题，具体看看示例2中的题目怎么做&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6097b8f2d1a9ae528f55525f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;示例2&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;具体的值和index的分布如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6097bb45d1a9ae528f65bd3f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;初始化搜索范围，$left = 0, right = n - 1 = 6$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$mid = 3$，从判断$A[3] = 7$与$target$的值入手，但是比较棘手的是$target$是多少呢（我们不知道最小值是0，仅仅知道这是一个旋转序列）？那我们根据什么判断$target$存在的可能区间呢？注意下面这幅图
&lt;img src=&#34;https://pic.imgdb.cn/item/6097bf1ad1a9ae528f81404e.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个旋转数组分为前后两个区间，前面区间每一个数字都比后面区间的数字大（因为没有重复数字），分别称为高半区间和低半区间。很明显，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最小值一定在低半区间，且位于低半区间的起始点上；&lt;/li&gt;
&lt;li&gt;我们不知道低半区间的起始点在哪里，也不知道高半区间的终点在哪里；&lt;/li&gt;
&lt;li&gt;我们可以根据当前元素与数组最后一个元素（想想为什么不是第一个元素）的大小确认出具体位于哪个半区间，如果$A[id] &amp;gt; A[n - 1]$，那么在高半区间，否则在低半区间。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那这个和判断$target$所在区间有什么关系呢？如果$mid$位于高半区间，那么可以肯定最小值肯定不在$[left, mid]$中，更新$left = mid + 1$，如果位于低半区间，可以肯定$[mid+ 1, right]$不可能是最小值，更新$right = mid$。于是有下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;findMin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;判断是否在$right = left +1$时，每个分支可以跳出循环，可以👍，完毕。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;旋转数组-包含重复元素左边界&#34;&gt;旋转数组（ 包含重复元素）左边界&lt;/h3&gt;
&lt;p&gt;再来看&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;154. 寻找旋转排序数组中的最小值 II - 力扣（LeetCode）&lt;/a&gt;，这个题目与上面有点区别，就是它有重复元素，如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6097c494d1a9ae528fa7f417.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;看起来可以按照上面的题目如法炮制，判断$A[mid]$与$A[n -1]$的大小，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果$A[mid] &amp;gt; A[n -1]$，$mid$位于高半区间，则最小值肯定不在$[left, mid]$里面，更新$left = mid + 1$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果$A[mid] &amp;lt; A[n -1]$，$mid$位于低半区间，则最小值肯定不在$[mid +1, right]$里面，更新$right = mid$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果$A[mid] = A[n-1]$，这个时候就说不清楚$mid$是在高区间还是低区间了。因为可能有下面的情况&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6097c60ed1a9ae528fb1f46a.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;再仔细想想，其实在这一步，我们不需要知道我们位于哪个区间，我们要清楚$mid$跟最小值的index的关系，参考下面的图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/60993c5ed1a9ae528f9a5b8c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;考虑数组中的最后一个元素$A[right]$，在最小值右侧的元素，它们的值一定都小于等于$A[right]$；而在最小值左侧的元素，它们的值一定都大于等于 $A[right]$。假定中点为$pilot$，比较$A[pilot]$与$A[right]$的大小，可以间接判断出$pilot$和$target$的位置关系。&lt;/p&gt;
&lt;p&gt;第一种情况，$A[pilot]&amp;lt;A[high]$，说明此时最小的点位于$pilot$的左边，所以更新$right = pilot$；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/60993c92d1a9ae528f9c81bd.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;第二种情况，$A[pilot]&amp;gt;A[high]$，说明此时最小的点位于$pilot$的右边，所以更新$left = pilot + 1$；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/60993cb1d1a9ae528f9dcd0e.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;第三种情况，$A[pilot]=A[high]$，此时唯一可以确定的是最小值在$high$的左边，所以更新$right = right - 1$&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/60993cd1d1a9ae528f9f2e8c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;则有如下的答案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;findMin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;low&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;high&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;low&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;high&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pivot&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;low&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;high&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;low&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pivot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;high&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;high&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pivot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pivot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;high&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;low&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pivot&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;high&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;low&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;考察$right = left + 1$时候，三个分支都可以顺利跳出循环，搞定👍&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://segmentfault.com/a/1190000016825704&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;二分查找、二分边界查找算法的模板代码总结 - SegmentFault 思否&lt;/a&gt;，给我很多启发的一篇文章&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Binary_search_algorithm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Binary search algorithm&lt;/a&gt;，维基百科页面，英文版里面的内容很详尽&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;</description>
        </item>
        <item>
        <title>Factory Method模式精解（C&#43;&#43;版本）</title>
        <link>https://blog.bugxch.top/p/factory-method%E6%A8%A1%E5%BC%8F%E7%B2%BE%E8%A7%A3c-%E7%89%88%E6%9C%AC/</link>
        <pubDate>Sun, 02 May 2021 21:43:54 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/factory-method%E6%A8%A1%E5%BC%8F%E7%B2%BE%E8%A7%A3c-%E7%89%88%E6%9C%AC/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/608eae16d1a9ae528f502e1a.png" alt="Featured image of post Factory Method模式精解（C&#43;&#43;版本）" /&gt;&lt;p&gt;继续之前的设计模式第四弹，这次是大名鼎鼎的工厂方法模式。&lt;/p&gt;
&lt;h2 id=&#34;使用情景&#34;&gt;使用情景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method是创建型模式，使一个类的实例化延迟到其子类。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Factory有工厂的意思，简单来看，这个模式利用到了上一篇的&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/dp_3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Template Method模式&lt;/a&gt;用来生成具体的实例，说得更清楚一点，工厂方法模式将创建对象的过程延迟到子类实现，其他的父类的步骤保持完整。&lt;/p&gt;
&lt;h2 id=&#34;问题引入&#34;&gt;问题引入&lt;/h2&gt;
&lt;p&gt;想象一个养殖业的农民，他刚开始仅仅在养马场养马，每个马都需要养殖长大之后在市面出售，后来他获得足够的利润之后，扩展业务也养牛，但是在牛场养牛，每头牛也是需要养殖长大之后在市面出售的。在刚开始的时候，我们需要记录每只马的养殖过程，后面还要记录它的售价。如果你前面只有养马的程序（包括生产、饲养、销售的过程），比如下面这样&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Farm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CreateHorse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;FeedHorse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;SellHorse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Horse&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;horse_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要添加金养牛的程序，那么大多数情况会出现一个&lt;code&gt;switch&lt;/code&gt;的分支，随着饲养的品种越来越多，最后会在生产、饲养和售卖的各个过程中出现多个&lt;code&gt;switch&lt;/code&gt;分支。如果我是农场主，代码会陷入“分支瘫痪”，对维护这一套代码感到厌烦。比如下面这样&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Farm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CreateAnimal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animaltype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;horse&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// create horse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animaltype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// ceate cow
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// create others
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;FeedAnimal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animaltype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;horse&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// feed horse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animaltype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// feed cow
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// feed others
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;SellAnimal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animaltype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;horse&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// sell horse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animaltype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// sell cow
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// sell others
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;animaltype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这样的方案有什么明显的缺点呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高耦合&lt;/strong&gt;，这个大类中的函数有一处需要添加分支，每个函数就都需要变化，但是每个函数实际是售卖动物的不耦合的步骤（生产不影响饲养，饲养不影响售卖），这些步骤之间耦合太紧，导致“霰弹式修改”；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分支瘫痪&lt;/strong&gt;，添加的类别越多，代码的&lt;code&gt;if/else/switch&lt;/code&gt;的分支越多，最后陷入分支瘫痪的状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;
&lt;p&gt;按照&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/20406704/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《设计模式解析》&lt;/a&gt;中的原则，设计模式需要遵循如下的一些原则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;考虑设计中什么应该是可变的；&lt;/li&gt;
&lt;li&gt;对变化的概念进行封装；&lt;/li&gt;
&lt;li&gt;优先使用对象聚集而不是类继承&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;在上面的例子中，有两个基本要素——农场和动物，&lt;strong&gt;每一个类应该对自己的职责负责&lt;/strong&gt;，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;农场负责生产和饲养动物，不同种类的动物&lt;strong&gt;生产和饲养的方式&lt;/strong&gt;都不同；&lt;/li&gt;
&lt;li&gt;动物被售卖，不同的动物&lt;strong&gt;售卖的价格&lt;/strong&gt;均不同；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看出可以将之前的方案拆解成两个类&lt;code&gt;Farm&lt;/code&gt;和&lt;code&gt;Animal&lt;/code&gt;，而且生产、饲养和售卖的方式都是&lt;strong&gt;可变&lt;/strong&gt;的，所以这些方法&lt;strong&gt;都是虚方法&lt;/strong&gt;。对于具体的动物，生成具体的农场和动物。&lt;/p&gt;
&lt;h2 id=&#34;uml表示及其代码&#34;&gt;UML表示及其代码&lt;/h2&gt;
&lt;p&gt;参考解决方案的内容，我们画出这些类的UML的图，如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/608f4683d1a9ae528ff55eb5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;具体的代码如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Animal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;protected&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Horse&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;: Horse sell &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; yuan&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Horse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Cow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;: Cow sell &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; yuan&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Cow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Farm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HorseFarm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Farm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Horse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;CowFarm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Farm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Cow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Farm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;factory&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HorseFarm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;horse&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;horse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Sell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;factory&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CowFarm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;cow&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Sell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;horse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Template Method模式精解（C&#43;&#43;版本）</title>
        <link>https://blog.bugxch.top/p/template-method%E6%A8%A1%E5%BC%8F%E7%B2%BE%E8%A7%A3c-%E7%89%88%E6%9C%AC/</link>
        <pubDate>Fri, 30 Apr 2021 19:52:15 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/template-method%E6%A8%A1%E5%BC%8F%E7%B2%BE%E8%A7%A3c-%E7%89%88%E6%9C%AC/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/608bef5dd1a9ae528f268767.png" alt="Featured image of post Template Method模式精解（C&#43;&#43;版本）" /&gt;&lt;p&gt;设计模式第三弹，设计模式&lt;strong&gt;行为型模式&lt;/strong&gt;中的模板方法，也比较简单。&lt;/p&gt;
&lt;h2 id=&#34;使用情景&#34;&gt;使用情景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。Template Method是行为型模式，使得子类可以不改变算法的结构（步骤）即可重定义该算法的某些特定步骤。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;模板方法将整个算法转换为一系列独立的步骤， 以便子类能对其进行扩展， 同时还可让超类中所定义的结构保持完整。可以设想我们上学时候临摹毛笔字，你可以使用墨汁沿着田字格中的汉字临摹，也可以使用红墨水临摹，无论用哪种颜色的墨水，最后完成的字的形状是一样的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/608bf40bd1a9ae528f53b668.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图片来自网络&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;汉字的字形就是模板，每个学生使用不同的工具或者墨水按照模板习字，就是模板方法。&lt;/p&gt;
&lt;h2 id=&#34;问题引入&#34;&gt;问题引入&lt;/h2&gt;
&lt;p&gt;Template Method就是带有模板功能的模式，它有下面的特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;组成模板的方法被定义在父类中，但是这些方法是抽象方法，具体的方法实现由各个子类实现；&lt;/li&gt;
&lt;li&gt;父类中定义了&lt;strong&gt;处理流程的框架&lt;/strong&gt;，这个流程由上面定义的这些方法&lt;strong&gt;按照特定的步骤完成&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;打一个比方，如果我们村里的每个人盖一座房子，无论是谁都需要完成如下的步骤，准备材料，设计图纸，雇佣施工队，开工建设，完成这些步骤之后才能盖起一座完整的房子。但是不同的人使用的材料不同，设计的图纸不同，施工队的质量也不一样，依照主人的品味和资金实力每一个步骤不同的人做就有不同的效果。这里的所有步骤就是模板方法，不同的人就是子类。&lt;/p&gt;
&lt;h2 id=&#34;uml表示及代码&#34;&gt;UML表示及代码&lt;/h2&gt;
&lt;p&gt;参考《图解设计模式》中第三章的例子，UML图及代码如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/608bf6c0d1a9ae528f6ea0ee.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
每个类的作用如下
&lt;img src=&#34;https://pic.imgdb.cn/item/608bf701d1a9ae528f712d27.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AbstractDisplay&lt;/code&gt;是抽象类，定义了整个的&lt;strong&gt;流程框架&lt;/strong&gt;，即方法&lt;code&gt;display()&lt;/code&gt;，该方法又由3个抽象方法实现&lt;code&gt;open(), print(), close()&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CharDisplay&lt;/code&gt;和&lt;code&gt;StringDisplay&lt;/code&gt;是具体的继承类，它们实现了抽象类中的抽象方法。
仅仅从抽象类看不出来每个抽象方法的具体实现，这些方法由每个类具体负责，上面的所有的类的具体代码如下。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;AbstractDisplay&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;final&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;CharDisplay&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AbstractDisplay&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;CharDisplay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;h&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ch_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ch_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ch_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;StringDisplay&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AbstractDisplay&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;StringDisplay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;printLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;|&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;|&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;printLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;+&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;AbstractDisplay&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CharDisplay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;H&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StringDisplay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StringDisplay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello haha!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;运行结果如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;HHHHH&lt;/span&gt;&amp;gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+----------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello World!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello World!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello World!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello World!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello World!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+----------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+----------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello haha!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello haha!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello haha!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello haha!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Hello haha!&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+----------+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Adapter模式精解（C&#43;&#43;版本）</title>
        <link>https://blog.bugxch.top/p/adapter%E6%A8%A1%E5%BC%8F%E7%B2%BE%E8%A7%A3c-%E7%89%88%E6%9C%AC/</link>
        <pubDate>Thu, 29 Apr 2021 22:39:41 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/adapter%E6%A8%A1%E5%BC%8F%E7%B2%BE%E8%A7%A3c-%E7%89%88%E6%9C%AC/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/608ac85bd1a9ae528fde126e.png" alt="Featured image of post Adapter模式精解（C&#43;&#43;版本）" /&gt;&lt;p&gt;本篇是设计模式第二篇，适配器模式，比较好理解。&lt;/p&gt;
&lt;h2 id=&#34;使用情景&#34;&gt;使用情景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;适配器模式是一种&lt;strong&gt;结构型&lt;/strong&gt;设计模式， 它能使接口&lt;strong&gt;不兼容&lt;/strong&gt;的对象能够相互合作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你有出国的经验，那么在出国前肯定会在淘宝买一个电源的转接插头带在身上，在国外旅行时为手机或者PC充电。为什么需要这个东西？参考这篇&lt;a class=&#34;link&#34; href=&#34;https://www.skyscanner.net/news/international-travel-plug-adapter-guide&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;国际旅行电源适配器指南&lt;/a&gt;，从文章中可以看出，每个不同的国家和地区的电源插座的形状和电压都不同，比如中国家用交流电是220V，而印度是230V，从电压的角度出发，你也需要一个东西将230V的电源转换成为稳定的220V，才能给电脑供电。&lt;/p&gt;
&lt;h2 id=&#34;问题引入&#34;&gt;问题引入&lt;/h2&gt;
&lt;p&gt;那我们的问题自然就是如果我去印度旅行，如何使用工具将230V的电源转换成220V呢？&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;
&lt;p&gt;解决方案也很简单，使用一个电源适配器即可，它负责将230V电源转换成为220V供我使用。&lt;/p&gt;
&lt;h2 id=&#34;uml表示及代码&#34;&gt;UML表示及代码&lt;/h2&gt;
&lt;p&gt;参考《图解设计模式》的章节，我们有两种适配器模式。&lt;/p&gt;
&lt;h3 id=&#34;基于继承的适配器模式&#34;&gt;基于继承的适配器模式&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/608ac9f7d1a9ae528ff52c22.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;类继承&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;上面的图示中，&lt;code&gt;Banner&lt;/code&gt;就是印度的230V电源，&lt;code&gt;PrintBanner&lt;/code&gt;是电源适配器，&lt;code&gt;Print&lt;/code&gt;表示我的电脑插头，&lt;code&gt;Main&lt;/code&gt;函数是我自己。具体的C++代码如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Banner&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Banner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;showWithParen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;showWithAster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;printWeak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printStrong&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;PrintBanner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Banner&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;PrintBanner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Banner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printWeak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;showWithParen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printStrong&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;showWithAster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;printBanner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PrintBanner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;printBanner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printWeak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;printBanner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printStrong&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;printBanner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;基于委托的适配器模式&#34;&gt;基于委托的适配器模式&lt;/h3&gt;
&lt;p&gt;另外一种形式是基于委托的模式，这里的“委托”意思是我将本来需要我自己做的事情，交给别人来做，适配器&lt;code&gt;PrintBanner&lt;/code&gt;将接口的功能&lt;strong&gt;委托&lt;/strong&gt;给&lt;code&gt;Banner&lt;/code&gt;去做。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/608ace89d1a9ae528f402db1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
具体的程序代码如下（与基于继承的代码仅仅在&lt;code&gt;PrintBanner&lt;/code&gt;的类中的内容不同）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;PrintBanner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;PrintBanner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;banner_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Banner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printWeak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;banner_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;showWithParen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printStrong&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;banner_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;showWithAster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintBanner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;banner_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;banner_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Banner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;banner_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Iterator模式精解（C&#43;&#43;版本）</title>
        <link>https://blog.bugxch.top/p/iterator%E6%A8%A1%E5%BC%8F%E7%B2%BE%E8%A7%A3c-%E7%89%88%E6%9C%AC/</link>
        <pubDate>Sat, 10 Apr 2021 22:15:09 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/iterator%E6%A8%A1%E5%BC%8F%E7%B2%BE%E8%A7%A3c-%E7%89%88%E6%9C%AC/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/6086d967d1a9ae528f307ce1.jpg" alt="Featured image of post Iterator模式精解（C&#43;&#43;版本）" /&gt;&lt;p&gt;从本文章开始，参考结城浩的&lt;a class=&#34;link&#34; href=&#34;https://www.ituring.com.cn/book/1811&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《图解设计模式》&lt;/a&gt;写23种设计模式的系列介绍文章，结合网络上其他的设计模式的内容，使用C++的语言编写这些设计模式，记录自己的设计模式的心得。&lt;/p&gt;
&lt;h2 id=&#34;设计模式分类&#34;&gt;设计模式分类&lt;/h2&gt;
&lt;p&gt;在开始设计模式的系列文章之前，先对设计模式的分类做一个说明，下面的说明摘选自&lt;a class=&#34;link&#34; href=&#34;http://c.biancheng.net/view/1320.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GoF 的 23 种设计模式的分类和功能&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;设计模式有两种分类方法，即根据模式的目的来分和根据模式的作用的范围来分。&lt;/p&gt;
&lt;h3 id=&#34;根据目的来分&#34;&gt;根据目的来分&lt;/h3&gt;
&lt;p&gt;根据模式是用来完成什么工作来划分，这种方式可分为创建型模式、结构型模式和行为型模式 3 种。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;创建型模式&lt;/strong&gt;：用于描述“怎样创建对象”，它的主要特点是“将对象的创建与使用分离”。GoF 中提供了单例、原型、工厂方法、抽象工厂、建造者等 5 种创建型模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构型模式&lt;/strong&gt;：用于描述如何将类或对象按某种布局组成更大的结构，GoF 中提供了代理、适配器、桥接、装饰、外观、享元、组合等 7 种结构型模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;行为型模式&lt;/strong&gt;：用于描述类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务，以及怎样分配职责。GoF 中提供了模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器等 11 种行为型模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;根据作用范围来分&#34;&gt;根据作用范围来分&lt;/h3&gt;
&lt;p&gt;根据模式是主要用于类上还是主要用于对象上来分，这种方式可分为类模式和对象模式两种。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类模式：用于处理类与子类之间的关系，这些关系通过继承来建立，是静态的，在编译时刻便确定下来了。GoF中的工厂方法、（类）适配器、模板方法、解释器属于该模式。&lt;/li&gt;
&lt;li&gt;对象模式：用于处理对象之间的关系，这些关系可以通过组合或聚合来实现，在运行时刻是可以变化的，更具动态性。GoF 中除了以上 4 种，其他的都是对象模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般都选用第一种设计模式的分类方法，总结如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/608bf193d1a9ae528f3a4b89.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用情景&#34;&gt;使用情景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;迭代器模式是一种行为设计模式， 提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象内部表示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;C++中比较典型类似与std的vector的前向迭代器&lt;code&gt;begin()&lt;/code&gt;和&lt;code&gt;end()&lt;/code&gt;，以及后向迭代器&lt;code&gt;rbegin()&lt;/code&gt;和&lt;code&gt;rend()&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;问题引入&#34;&gt;问题引入&lt;/h2&gt;
&lt;p&gt;可以设想元素聚合成集合的方式，最简单的方式是顺序存储的数组或者列表，但是也有例如树、图和其他复杂的数据结构。所以，如果要遍历集合中的元素，有下面的两个问题需要解决：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何在不改变元素的前提下，遍历各种不同的集合？&lt;/li&gt;
&lt;li&gt;同一个集合如果有不同的遍历方式（比如树有前中后序3种不同的遍历顺序），如果在不改变集合的前提下，比较容易扩展这些功能呢？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://refactoringguru.cn/images/patterns/diagrams/iterator/problem2.png?id=f9c1a746c787320291c8&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;树的深度和广度遍历&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;
&lt;p&gt;为了满足开闭原则，我们将定义一个迭代器的类，将迭代从集合种抽象出来，作为一个行为的迭代器处理。如下图所示，对于一个树结构，我们定义了两个迭代器的类，DFS和BFS两个迭代器，这样可以将元素遍历和树本身进行解耦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://refactoringguru.cn/images/patterns/diagrams/iterator/solution1.png?id=2f5fbcce6099d8ea09b2&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;uml表示&#34;&gt;UML表示&lt;/h2&gt;
&lt;p&gt;我们以《图解设计模式》中遍历书架中的书本为例，有如下的UML图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6079a1d38322e6675cca8bee.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UML图示&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;对上面的这幅图做进一步的说明，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Aggregate表示集合的接口，书架实现该接口，所以书架必须要有迭代器的方法；&lt;/li&gt;
&lt;li&gt;Iterator表示集合的迭代器的接口，书架的迭代器实现它；
需要说明的是，此处的迭代器只有一种前向的迭代器，也可以定义后向遍历的迭代器。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;c代码&#34;&gt;C++代码&lt;/h2&gt;
&lt;p&gt;我们使用C++按照上面的UML图片实现这个设计模式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;  1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 98
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 99
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;101
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;102
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;103
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;104
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;105
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;106
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;107
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;108
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;109
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;110
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;111
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;112
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;113
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;114
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;115
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;116
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;117
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;118
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;119
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;120
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;121
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;122
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;123
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;124
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;125
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;126
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;127
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;128
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;129
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;130
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;131
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;132
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;RIGHT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;WRONG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;RESERVED&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 书本的类
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 抽象的迭代器类，包括获得下一本书，以及是否有下一本书的判断
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Iterator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 抽象的聚合类，该类有创建迭代器、取得某个位置的书本，弹出书本，计数，加入书本等功能
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Aggregate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CreateIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getBookAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 书架的具体迭代器，实现上面的抽象类的虚函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BookShelfIterator&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;BookShelfIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BookShelfIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getBookAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 具体的聚合类——书架，实现上面的功能
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BookShelf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;BookShelf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxSize_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;CreateIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BookShelfIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getBookAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wrong index&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WRONG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RIGHT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxSize_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bookshelf is full&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BookShelf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;maxSize_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxSize_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// client
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;BookShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BookShelf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;《重构》&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;《图解设计模式》&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;《黎曼猜想》&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CreateIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;书架上有&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;本书：&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;具体的运行结果如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;书架上有3本书：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《重构》
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《图解设计模式》
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《黎曼猜想》
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;分析角色&#34;&gt;分析角色&lt;/h2&gt;
&lt;p&gt;这个模式有实际上由两个角色，&lt;strong&gt;集合以及集合的迭代器&lt;/strong&gt;，这两个事物由分为抽象和具体两种。我们所举的例子中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BookShelf&lt;/code&gt;就是具体的集合，它实现自抽象的集合接口&lt;code&gt;Aggregate&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BookShelfIterator&lt;/code&gt;是具体的迭代器，它实现自抽象的迭代器接口&lt;code&gt;Iterator&lt;/code&gt;。
迭代器接口中定义了迭代器的遍历的所有方法，&lt;code&gt;HasNext&lt;/code&gt;以及&lt;code&gt;Next&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里需要注意的是，在C++的版本里面集合的接口中不仅定义了创建迭代器的方法&lt;code&gt;CreateIterator&lt;/code&gt;，而且定义了集合的个数&lt;code&gt;Count&lt;/code&gt;和集合获取当前元素的方法&lt;code&gt;getBookAt&lt;/code&gt;，这是因为迭代器中的方法实现依赖这些接口。&lt;/p&gt;
&lt;h2 id=&#34;扩展修改&#34;&gt;扩展修改&lt;/h2&gt;
&lt;p&gt;大家可以思考一下为什么我们需要这个模式呢？设计模式的初衷是实现代码的&lt;strong&gt;复用和可扩展&lt;/strong&gt;，这个模式体现在哪里呢？&lt;/p&gt;
&lt;h3 id=&#34;遍历方法和集合本身解耦&#34;&gt;遍历方法和集合本身解耦&lt;/h3&gt;
&lt;p&gt;迭代器模式的重要作用是&lt;strong&gt;将集合的遍历和实现分离开来&lt;/strong&gt;，换句话说，无论实现如何变化，我依然可以使用原来的方法进行遍历，也就是说&lt;strong&gt;遍历这个动作本身&lt;/strong&gt;不会因为书架的实现发生变化而变化，所以下面的代码是不变的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们依然仅仅依靠&lt;code&gt;HasNext&lt;/code&gt;以及&lt;code&gt;Next&lt;/code&gt;接口就可以完成对于书架本身的遍历。&lt;/p&gt;
&lt;h3 id=&#34;遍历需求易于扩展&#34;&gt;遍历需求易于扩展&lt;/h3&gt;
&lt;p&gt;不妨设想一下，假如我们需要在原来的书架上新增一种遍历方式，从后向前实现后向遍历，这个代码该怎么修改呢？应该完成如下的工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在原来的书架类中新增后向遍历的iter指针；&lt;/li&gt;
&lt;li&gt;书架类中包含创建后向迭代器的方法；&lt;/li&gt;
&lt;li&gt;后向迭代器继承自迭代器类别，实现后向迭代器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后就可以继续使用原来的遍历方式遍历集合了，具体的代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;  1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 98
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 99
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;101
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;102
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;103
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;104
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;105
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;106
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;107
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;108
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;109
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;110
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;111
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;112
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;113
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;114
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;115
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;116
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;117
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;118
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;119
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;120
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;121
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;122
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;123
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;124
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;125
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;126
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;127
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;128
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;129
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;130
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;131
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;132
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;133
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;134
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;135
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;136
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;137
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;138
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;139
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;140
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;141
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;142
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;143
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;144
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;145
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;146
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;147
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;148
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;149
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;150
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;151
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;152
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;153
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;154
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;155
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;156
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;157
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;158
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;159
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;160
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;161
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;162
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;163
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;164
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;165
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;166
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;167
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;168
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;169
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;170
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;171
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;172
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;173
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;174
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;175
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;176
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;177
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;178
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;RIGHT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;WRONG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;RESERVED&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// concrete book
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Iterator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Aggregate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CreateForwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;CreateBackwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getBookAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BookShelfBackwardIterator&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;BookShelfBackwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BookShelfBackwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getBookAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BookShelfForwardIterator&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;BookShelfForwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BookShelfForwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getBookAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loc_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BookShelf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;BookShelf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxSize_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backiter_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;CreateBackwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backiter_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;backiter_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BookShelfBackwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backiter_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;CreateForwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BookShelfForwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getBookAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wrong index&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WRONG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RIGHT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxSize_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bookshelf is full&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BookShelf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backiter_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backiter_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;backiter_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;maxSize_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxSize_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;books_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backiter_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// book class
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;BookShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BookShelf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;《重构》&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;《图解设计模式》&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;《黎曼猜想》&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CreateForwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;前向遍历&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;本书：&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CreateBackwardIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;后向遍历&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myShelf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;本书：&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;运行效果如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;前向遍历3本书：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《重构》
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《图解设计模式》
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《黎曼猜想》
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;后向遍历3本书：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《黎曼猜想》
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《图解设计模式》
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;《重构》
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://design-patterns.readthedocs.io/zh_CN/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;图说设计模式 — Graphic Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://edu.heibai.org/%E5%9B%BE%E8%A7%A3%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;图灵程序设计丛书 图解设计模式&lt;/a&gt;，图解设计模式的pdf下载地址&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://refactoringguru.cn/design-patterns/catalog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;设计模式目录：22种设计模式&lt;/a&gt;，乌克兰的某个程序员写的设计模式的网页，非常不错&lt;/li&gt;
&lt;/ol&gt;</description>
        </item>
        <item>
        <title>[转载]表驱动法代码实践</title>
        <link>https://blog.bugxch.top/p/%E8%BD%AC%E8%BD%BD%E8%A1%A8%E9%A9%B1%E5%8A%A8%E6%B3%95%E4%BB%A3%E7%A0%81%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Fri, 22 Jan 2021 08:07:14 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E8%BD%AC%E8%BD%BD%E8%A1%A8%E9%A9%B1%E5%8A%A8%E6%B3%95%E4%BB%A3%E7%A0%81%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/600a17e53ffa7d37b3da9d49.jpg" alt="Featured image of post [转载]表驱动法代码实践" /&gt;&lt;p&gt;这是一篇转载，点击查看&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/clover-toeic/p/3730362.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;原文链接&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数据压倒一切。如果选择了正确的数据结构并把一切组织的井井有条，正确的算法就不言自明。编程的核心是数据结构，而不是算法. &amp;ndash; Rob Pike&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文基于这样的认识：数据是易变的，逻辑是稳定的。本文例举的编程实现多为代码片段，但不影响描述的完整性。本文例举的编程虽然基于C语言，但其编程思想也适用于其他语言。此外，本文不涉及语言相关的运行效率讨论。&lt;/p&gt;
&lt;h2 id=&#34;概念提出&#34;&gt;概念提出&lt;/h2&gt;
&lt;p&gt;所谓表驱动法(Table-Driven Approach)简而言之就是用查表的方法获取数据。此处的“表”通常为数组，但可视为数据库的一种体现。根据字典中的部首检字表查找读音未知的汉字就是典型的表驱动法，即以每个字的字形为依据，计算出一个索引值，并映射到对应的页数。相比一页一页地顺序翻字典查字，部首检字法效率极高。&lt;/p&gt;
&lt;p&gt;具体到编程方面，在数据不多时可用逻辑判断语句(if…else或switch…case)来获取值；但随着数据的增多，逻辑语句会越来越长，此时表驱动法的优势就开始显现。例如，用36进制(A表示10，B表示11，…)表示更大的数字，逻辑判断语句如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ucNumChar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ConvertToChar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ucNumChar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ucNumChar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ucNumChar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//... ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ucNumChar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当然也可以用switch…case结构，但实现都很冗长。而用表驱动法(将numChar存入数组)则非常直观和简洁。如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aNumChars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*3~9*/&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*D~Y*/&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucNumChar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aNumChars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aNumChars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;像这样直接将变量当作下数组下标来读取数值的方法就是直接查表法。注意，如果熟悉字符串操作，则上述写法可以更简洁：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucNumChar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用表驱动法时需要关注两个问题：一是如何查表，从表中读取正确的数据；二是表里存放什么，如数值或函数指针。前者参见1.1节“查表方式”内容，后者参见1.2节“实战示例”内容。&lt;/p&gt;
&lt;h3 id=&#34;查表方式&#34;&gt;查表方式&lt;/h3&gt;
&lt;p&gt;常用的查表方式有直接查找、索引查找和分段查找等。&lt;/p&gt;
&lt;h4 id=&#34;直接查找&#34;&gt;直接查找&lt;/h4&gt;
&lt;p&gt;即直接通过数组下标获取到数据。如果熟悉哈希表的话，可以很容易看出这种查表方式就是哈希表的直接访问法。如获取星期名称，逻辑判断语句如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucDay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pszDayName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Sunday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucDay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pszDayName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Monday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//... ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucDay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pszDayName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Saturday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;而实现同样的功能，可将这些数据存储到一个表里：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paNumChars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Sunday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Monday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Tuesday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wednesday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Thursday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Friday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;&amp;#34;Saturday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszDayName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paNumChars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucDay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;类似哈希表特性，表驱动法适用于无需有序遍历数据，且数据量大小可提前预测的情况。对于过于复杂和庞大的判断，可将数据存为文件，需要时加载文件初始化数组，从而在不修改程序的情况下调整里面的数值。&lt;/p&gt;
&lt;p&gt;有时，访问之前需要先进行一次键值转换。如表驱动法表示端口忙闲时，需将槽位端口号映射为全局编号。所生成的端口数目大小的数组，其下标对应全局端口编号，元素值表示相应端口的忙闲状态。&lt;/p&gt;
&lt;h4 id=&#34;索引查找&#34;&gt;索引查找&lt;/h4&gt;
&lt;p&gt;有时通过一次键值转换，依然无法把数据(如英文单词等)转为键值。此时可将转换的对应关系写到一个索引表里，即索引访问。&lt;/p&gt;
&lt;p&gt;如现有100件商品，4位编号，范围从0000到9999。此时只需要申请一个长度为100的数组，且对应2位键值。但将4位的编号转换为2位的键值，可能过于复杂或没有规律，最合适的方法是建立一个保存该转换关系的索引表。采用索引访问既节省内存，又方便维护。比如索引A表示通过名称访问，索引B表示通过编号访问。&lt;/p&gt;
&lt;h4 id=&#34;分段查找&#34;&gt;分段查找&lt;/h4&gt;
&lt;p&gt;通过确定数据所处的范围确定分类(下标)。有的数据可分成若干区间，即具有阶梯性，如分数等级。此时可将每个区间的上限(或下限)存到一个表中，将对应的值存到另一表中，通过第一个表确定所处的区段，再由区段下标在第二个表里读取相应数值。注意要留意端点，可用二分法查找，另外可考虑通过索引方法来代替。如根据分数查绩效等级：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define MAX_GRADE_LEVEL   (INT8U)5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DOUBLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aRangeLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_GRADE_LEVEL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;50.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;60.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;70.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;80.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;100.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paGrades&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_GRADE_LEVEL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Fail&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Pass&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Credit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Distinction&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;High Distinction&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;EvaluateGrade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DOUBLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dScore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_GRADE_LEVEL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dScore&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aRangeLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paGrades&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paGrades&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上述两张表(数组)也可合并为一张表(结构体数组)，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;DOUBLE&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;aRangeLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszGrade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_GRADE_MAP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;T_GRADE_MAP&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gGradeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX_GRADE_LEVEL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;50.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;              &lt;span class=&#34;s&#34;&gt;&amp;#34;Fail&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;60.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;              &lt;span class=&#34;s&#34;&gt;&amp;#34;Pass&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;70.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;              &lt;span class=&#34;s&#34;&gt;&amp;#34;Credit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;80.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;              &lt;span class=&#34;s&#34;&gt;&amp;#34;Distinction&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;100.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;s&#34;&gt;&amp;#34;High Distinction&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;EvaluateGrade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DOUBLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dScore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_GRADE_LEVEL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dScore&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gGradeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aRangeLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gGradeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszGrade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gGradeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszGrade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该表结构已具备的数据库的雏形，并可扩展支持更为复杂的数据。其查表方式通常为索引查找，偶尔也为分段查找；当索引具有规律性(如连续整数)时，退化为直接查找。&lt;/p&gt;
&lt;p&gt;使用分段查找法时应注意边界，将每一分段范围的上界值都考虑在内。找出所有不在最高一级范围内的值，然后把剩下的值全部归入最高一级中。有时需要人为地为最高一级范围添加一个上界。同时应小心不要错误地用“&amp;lt;”来代替“&amp;lt;=”。要保证循环在找出属于最高一级范围内的值后恰当地结束，同时也要保证恰当处理范围边界。&lt;/p&gt;
&lt;h3 id=&#34;实战示例&#34;&gt;实战示例&lt;/h3&gt;
&lt;p&gt;本节多数示例取自实际项目。表形式为一维数组、二维数组和结构体数组；表内容有数据、字符串和函数指针。基于表驱动的思想，表形式和表内容可衍生出丰富的组合。&lt;/p&gt;
&lt;h4 id=&#34;字符统计&#34;&gt;字符统计&lt;/h4&gt;
&lt;p&gt;问题：统计用户输入的一串数字中每个数字出现的次数。普通解法主体代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aDigitCharNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* 输入字符串中各数字字符出现的次数 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwStrLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;szDigits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwStrIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwStrIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwStrLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwStrIdx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;szDigits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwStrIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;aDigitCharNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;aDigitCharNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;//... ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;aDigitCharNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这种解法的缺点显而易见，既不美观也不灵活。其问题关键在于未将数字字符与数组aDigitCharNum下标直接关联起来。以下示出更简洁的实现方式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwStrIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwStrLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwStrIdx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;aDigitCharNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;szDigits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwStrIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上述实现考虑到0也为数字字符。该解法也可扩展至统计所有ASCII可见字符。&lt;/p&gt;
&lt;h4 id=&#34;月天校验&#34;&gt;月天校验&lt;/h4&gt;
&lt;p&gt;问题：对给定年份和月份的天数进行校验(需区分平年和闰年)。普通解法主体代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;CtcOamLog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTION_Pon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Don&amp;#39;t support this Day: %d(1~31)!!!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;retcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;CtcOamLog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTION_Pon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Don&amp;#39;t support this Day: %d(1~29)!!!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;retcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;CtcOamLog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTION_Pon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Don&amp;#39;t support this Day: %d(1~28)!!!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;retcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;CtcOamLog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTION_Pon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Don&amp;#39;t support this Day: %d(1~30)!!!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;retcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;CtcOamLog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTION_Pon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Don&amp;#39;t support this Month: %d(1~12)!!!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;retcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以下示出更简洁的实现方式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define MONTH_OF_YEAR 12    &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* 一年中的月份数 */&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 闰年：能被4整除且不能被100整除，或能被400整除 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define IS_LEAP_YEAR(year) ((((year) % 4 == 0) &amp;amp;&amp;amp; ((year) % 100 != 0)) || ((year) % 400 == 0))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 平年中的各月天数，下标对应月份 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aDayOfCommonMonth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MONTH_OF_YEAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucMaxDay&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Month&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IS_LEAP_YEAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ucMaxDay&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aDayOfCommonMonth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ucMaxDay&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aDayOfCommonMonth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Month&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucMaxDay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CtcOamLog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTION_Pon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Month %d doesn&amp;#39;t have this Day: %d(1~%d)!!!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Month&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OnuTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucMaxDay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;retcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;名称构造&#34;&gt;名称构造&lt;/h4&gt;
&lt;p&gt;问题：根据WAN接口承载的业务类型(Bitmap)构造业务类型名称字符串。普通解法主体代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Sub_SetServerType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServerType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT16U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wan_servertype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wan_servertype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;strcat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServerType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_INTERNET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wan_servertype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0002&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0002&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;strcat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServerType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_TR069&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wan_servertype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0004&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0004&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;strcat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServerType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_VOIP&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wan_servertype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0008&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0008&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;strcat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServerType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_OTHER&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以下示出C语言中更简洁的实现方式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define  GET_BIT(var, bit)   (((var) &amp;gt;&amp;gt; (bit)) &amp;amp; 0x1)    &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* 获取var变量第bit位，编号从右至左 */&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paSvrNames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;_INTERNET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_TR069&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_VOIP&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_OTHER&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucSvrNameNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paSvrNames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paSvrNames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SetServerType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszSvrType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT16U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wSvrType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucSvrNameNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GET_BIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wSvrType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;strcat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszSvrType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paSvrNames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;新的实现将数据和逻辑分离，维护起来非常方便。只要逻辑(规则)不变，则唯一可能的改动就是数据(paSvrNames)。&lt;/p&gt;
&lt;h4 id=&#34;值名解析&#34;&gt;值名解析&lt;/h4&gt;
&lt;p&gt;问题：根据枚举变量取值输出其对应的字符串，如PORT_FE(1)输出“Fe”。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;//值名映射表结构体定义，用于数值解析器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwElem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//待解析数值，通常为枚举变量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;pszName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//指向数值所对应解析名字符串的指针
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_NAME_PARSER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/******************************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 函数名称:  NameParser
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 功能说明:  数值解析器，将给定数值转换为对应的具名字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 输入参数:  VOID *pvMap       :值名映射表数组，含T_NAME_PARSER结构体类型元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;                                VOID指针允许用户在保持成员数目和类型不变的前提下，
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;                                定制更有意义的结构体名和/或成员名。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;             INT32U dwEntryNum :值名映射表数组条目数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;             INT32U dwElem     :待解析数值，通常为枚举变量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;             INT8U* pszDefName :缺省具名字符串指针，可为空
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 输出参数:  NA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 返回值  :  INT8U *: 数值所对应的具名字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;             当无法解析给定数值时，若pszDefName为空，则返回数值对应的16进制格式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;             字符串；否则返回pszDefName。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;******************************************************************************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pvMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwEntryNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwElem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pszDefName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CHECK_SINGLE_POINTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pvMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;NullPoniter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwEntryIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwEntryIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwEntryIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwEntryNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwEntryIdx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;T_NAME_PARSER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptNameParser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_NAME_PARSER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pvMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwElem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ptNameParser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwElem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ptNameParser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;//ANSI标准禁止对void指针进行算法操作；GNU标准则指定void*算法操作与char*一致。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//若考虑移植性，可将pvMap类型改为INT8U*，或定义INT8U*局部变量指向pvMap。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;pvMap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_NAME_PARSER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pszDefName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pszDefName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;szName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//Max:&amp;#34;0xFFFFFFFF&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;szName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0x%X&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwElem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;szName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以下给出NameParser的简单应用示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//UNI端口类型值名映射表结构体定义
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwPortType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pszPortName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_PORT_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//UNI端口类型解析器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_PORT_NAME&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;s&#34;&gt;&amp;#34;Fe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;s&#34;&gt;&amp;#34;Pots&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;s&#34;&gt;&amp;#34;Vuni&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_PORT_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NameParserTest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%s]&amp;lt;Test Case %u&amp;gt; Result: %s!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Unknown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Unknown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%s]&amp;lt;Test Case %u&amp;gt; Result: %s!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;DefName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;DefName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%s]&amp;lt;Test Case %u&amp;gt; Result: %s!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Fe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Unknown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%s]&amp;lt;Test Case %u&amp;gt; Result: %s!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Pots&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Unknown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%s]&amp;lt;Test Case %u&amp;gt; Result: %s!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Vuni&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%s]&amp;lt;Test Case %u&amp;gt; Result: %s!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Unknown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Unknown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%s]&amp;lt;Test Case %u&amp;gt; Result: %s!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0xABCD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gUniNameMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xABCD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%s]&amp;lt;Test Case %u&amp;gt; Result: %s!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucTestIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;NullPoniter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NameParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UNI_NAM_MAP_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xABCD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;gUniNameMap&lt;/code&gt;在实际项目中有十余个条目，若采用逻辑链实现将非常冗长。&lt;/p&gt;
&lt;h4 id=&#34;取值映射&#34;&gt;取值映射&lt;/h4&gt;
&lt;p&gt;问题：不同模块间同一参数枚举值取值可能有所差异，需要适配。此处不再给出普通的switch…case或if…else if…else结构，而直接示出以下表驱动实现：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;PORTSTATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loopMEState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;PORTSTATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;loopMIBState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LOOPMAPSTRUCT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOPMAPSTRUCT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s_CesLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NO_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                  &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_noloop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAYLOAD_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_PayloadLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LINE_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_LineLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PON_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_OtherLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CES_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_InwardLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PORTSTATE&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ConvertLoopMEStateToMIBState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PORTSTATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vPortState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ii&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ARRAY_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s_CesLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ii&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ii&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ii&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vPortState&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s_CesLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ii&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loopMEState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s_CesLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ii&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loopMIBState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_noloop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;相应地，从loopMIBState映射到loopMEState需要定义一个ConvertLoopMIBStateToMEState函数。更进一步，所有类似的一对一映射关系都必须如上的映射(转换)函数，相当繁琐。事实上，从抽象层面看，该映射关系非常简单。提取共性后定义带参数宏，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**********************************************************
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 功能描述：进行二维数组映射表的一对一映射，用于参数适配
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 参数说明：map        -- 二维数组映射表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;            elemSrc    -- 映射源，即待映射的元素值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;            elemDest   -- 映射源对应的映射结果
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;            direction  -- 映射方向字节，表示从数组哪列映射至哪列。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;                          高4位对应映射源列，低4位对应映射结果列。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;            defaultVal -- 映射失败时置映射结果为缺省值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 示例：    ARRAY_MAPPER(gCesLoopMap, 3, ucLoop, 0x10, NO_LOOP);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;            则ucLoop = 2(LINE_LOOP)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;**********************************************************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define ARRAY_MAPPER(map, elemSrc, elemDest, direction, defaultVal) do{\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    INT8U ucMapIdx = 0, ucMapNum = 0; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    ucMapNum = sizeof(map)/sizeof(map[0]); \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    for(ucMapIdx = 0; ucMapIdx &amp;lt; ucMapNum; ucMapIdx++) \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    { \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;        if((elemSrc) == map[ucMapIdx][((direction)&amp;amp;0xF0)&amp;gt;&amp;gt;4]) \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;        { \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;            elemDest = map[ucMapIdx][(direction)&amp;amp;0x0F]; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;            break; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;        } \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    } \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    if(ucMapIdx == ucMapNum) \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    { \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;        elemDest = (defaultVal); \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    } \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;}while(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;参数取值转换时直接调用统一的映射器宏，如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gCesLoopMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NO_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                  &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_noloop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAYLOAD_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_PayloadLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LINE_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_LineLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PON_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_OtherLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CES_LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_InwardLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ARRAY_MAPPER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gCesLoopMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tPara&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwParaVal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwLoopConf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e_ds1_looptype_noloop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;另举一例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define  CES_DEFAULT_JITTERBUF        (INT32U)2000   &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* 默认jitterbuf为2000us，而1帧=125us */&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define  CES_JITTERBUF_STEP           (INT32U)125    &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* jitterbuf步长为125us，即1帧 */&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define  CES_DEFAULT_QUEUESIZE        (INT32U)5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define  CES_DEFAULT_MAX_QUEUESIZE    (INT32U)7
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define  ARRAY_NUM(array)             (sizeof(array) / sizeof((array)[0]))  &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* 数组元素个数 */&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;dwJitterBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;dwFramePerPkt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;dwQueueSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;QUEUE_SIZE_MAP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* gCesQueueSizeMap也可以(JitterBuffer / FramePerPkt)值为索引，更加紧凑 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;QUEUE_SIZE_MAP&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gCesQueueSizeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**********************************************************
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 函数名称： CalcQueueSize
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 功能描述： 根据JitterBuffer和FramePerPkt计算QueueSize
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 注意事项： 配置的最大缓存深度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;*            = 2 * JitterBuffer / FramePerPkt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;*            = 2 * N Packet = 2 ^ QueueSize
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;*            JitterBuffer为125us帧速率的倍数，
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;*            FramePerPkt为每个分组的帧数，
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;*            QueueSize向上取整，最大为7。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;**********************************************************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;CalcQueueSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwJitterBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dwFramePerPkt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//本函数暂时仅考虑E1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ARRAY_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gCesQueueSizeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwJitterBuffer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gCesQueueSizeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwJitterBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwFramePerPkt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gCesQueueSizeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwFramePerPkt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gCesQueueSizeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwQueueSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CES_DEFAULT_MAX_QUEUESIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;版本控制&#34;&gt;版本控制&lt;/h4&gt;
&lt;p&gt;问题：控制OLT与ONU之间的版本协商。ONU本地设置三比特控制字，其中bit2(MSB)~bit0(LSB)分别对应0x21、0x30和0xAA版本号；且bitX为0表示上报对应版本号，bitX为1表示不上报对应版本号。其他版本号如0x20、0x13和0x1必须上报，即不受控制。最初的实现采用if…else if…else结构，代码非常冗长，如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucLength&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x1f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOamCtrlCode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xaa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOamCtrlCode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//此处省略gOamCtrlCode == 2~6的处理代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOamCtrlCode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以下示出C语言中更简洁的实现方式(基于二维数组)：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**********************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* 版本控制字数组定义
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* gOamCtrlCode:   Bitmap控制字。Bit-X为0时上报对应版本，Bit-X为1时屏蔽对应版本。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* CTRL_VERS_NUM:  可控版本个数。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* CTRL_CODE_NUM:  控制字个数。与CTRL_VERS_NUM有关。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* gOamVerCtrlMap: 版本控制字数组。行对应控制字，列对应可控版本。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;                  元素值为0时不上报对应版本，元素值非0时上报该元素值。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;* Note: 该数组旨在实现“数据与控制隔离”。后续若要新增可控版本，只需修改
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;                  -- CTRL_VERS_NUM
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;                  -- gOamVerCtrlMap新增行(控制字)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;                  -- gOamVerCtrlMap新增列(可控版本)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;**********************************************************************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define CTRL_VERS_NUM    3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define CTRL_CODE_NUM    (1&amp;lt;&amp;lt;CTRL_VERS_NUM)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;u8_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOamVerCtrlMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CTRL_CODE_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CTRL_VERS_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;cm&#34;&gt;/* Ver21         Ver30        VerAA */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;mh&#34;&gt;0x30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;mh&#34;&gt;0xaa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/*gOamCtrlCode = 0*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;mh&#34;&gt;0x30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/*gOamCtrlCode = 1*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;mh&#34;&gt;0xaa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/*gOamCtrlCode = 2*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/*gOamCtrlCode = 3*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;          &lt;span class=&#34;mh&#34;&gt;0x30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;mh&#34;&gt;0xaa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/*gOamCtrlCode = 4*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;          &lt;span class=&#34;mh&#34;&gt;0x30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/*gOamCtrlCode = 5*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;mh&#34;&gt;0xaa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/*gOamCtrlCode = 6*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;     &lt;span class=&#34;cm&#34;&gt;/*gOamCtrlCode = 7*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define INFO_TYPE_VERS_LEN    7  &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* InfoType + Length + OUI + ExtSupport + Version */&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;u8_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;u8_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CTRL_VERS_NUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verIdx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOamVerCtrlMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOamCtrlCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOamVerCtrlMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOamCtrlCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;vosMemCpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctc_oui&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aucVersionList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pstSendTlv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucLength&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INFO_TYPE_VERS_LEN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;消息处理&#34;&gt;消息处理&lt;/h4&gt;
&lt;p&gt;问题：终端输入不同的打印命令，调用相应的打印函数，以控制不同级别的打印。&lt;/p&gt;
&lt;p&gt;这是一段消息(事件)驱动程序。本模块接收其他模块(如串口驱动)发送的消息，根据消息中的打印级别字符串和开关模式，调用不同函数进行处理。常见的实现方法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;logall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;g_log_control&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xFFFFFFFF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;noanylog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;g_log_control&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;logOam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;g_log_control&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FUNCTION_Oam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;nologOam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;g_log_control&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FUNCTION_Oam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//... ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;logExec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CtcOamLog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FUNCTION_Oam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;log %s %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*log*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*字符串比较，不区分大小写*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;logall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;oam&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;logOam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pon&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;logPon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;//... ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;logVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*nolog*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;noanylog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;oam&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;nologOam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pon&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;nologPon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;//... ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;nologVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bad log para&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以下示出C语言中更简洁的实现方式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;OAM_LOG_OFF&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;OAM_LOG_ON&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E_OAM_LOG_MODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;FUNC_STATUS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OamLogHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszLogCls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/* 打印级别 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;E_OAM_LOG_MODE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eLogMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;cm&#34;&gt;/* 打印模式 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;OamLogHandler&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;fnLogHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;cm&#34;&gt;/* 打印函数 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_OAM_LOG_MAP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;T_OAM_LOG_MAP&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOamLogMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;OAM_LOG_OFF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;noanylog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;oam&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;OAM_LOG_OFF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;nologOam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//... ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;OAM_LOG_OFF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;nologVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;OAM_LOG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;logall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;oam&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;OAM_LOG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;logOam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//... ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;OAM_LOG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;logVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOamLogMapNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOamLogMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T_OAM_LOG_MAP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;logExec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOamLogMapNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucSwitch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOamLogMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eLogMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOamLogMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszLogCls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;gOamLogMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fnLogHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOamLogMapNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Unknown LogClass(%s) or LogMode(%d)!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pszName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这种表驱动消息处理实现的优点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增强可读性，消息如何处理从表中一目了然。&lt;/li&gt;
&lt;li&gt;增强可扩展性。更容易修改，要增加新的消息，只要修改数据即可，不需要修改流程。&lt;/li&gt;
&lt;li&gt;降低复杂度。通过把程序逻辑的复杂度转移到人类更容易处理的数据中来，从而达到控制复杂度的目标。&lt;/li&gt;
&lt;li&gt;主干清晰，代码重用。
若各索引为顺序枚举值，则建立多维数组(每维对应一个索引)，根据下标直接定位到处理函数，效率会更高。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，考虑到本节实例中logOam/logPon或nologOam/nologPon等函数本质上是基于打印级别的比特操作，因此可进一步简化。以下例举其相似实现：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 日志控制类型定义 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_NORM&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;cm&#34;&gt;/* 未分类日志，可用于通用日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_FRM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;cm&#34;&gt;/* Frame，OMCI帧日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_PON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;cm&#34;&gt;/* Pon，光链路相关日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_ETH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;cm&#34;&gt;/* Ethernet，Layer2以太网日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_NET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;cm&#34;&gt;/* Internet，Layer3网络日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_MULT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;cm&#34;&gt;/* Multicast，组播日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_QOS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;cm&#34;&gt;/* QOS，流量日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_CES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;cm&#34;&gt;/* Ces，TDM电路仿真日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_VOIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;cm&#34;&gt;/* Voip，语音日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_ALM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;cm&#34;&gt;/* Alarm，告警日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_PERF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;cm&#34;&gt;/* Performance，性能统计日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_VER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;cm&#34;&gt;/* Version，软件升级日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_XDSL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;cm&#34;&gt;/* xDsl日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LOG_DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;              &lt;span class=&#34;cm&#34;&gt;/* 数据库操作日志 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//新日志类型在此处扩展，共支持32种日志类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;LOG_ALL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UINT_MAX&lt;/span&gt;   &lt;span class=&#34;cm&#34;&gt;/* 所有日志类型 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E_LOG_TYPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*****************************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * 变量名称：gOmciLogCtrl
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * 作用描述：OMCI日志控制字，BitMap格式(比特编号从LSB至MSB依次为Bit0-&amp;gt;BitN)。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *           Bit0~N分别对应E_LOG_TYPE各枚举值(除LOG_ALL外)。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *           BitX为0时关闭日志类型对应的日志功能，BitX为1时则予以打开。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * 变量范围：该变量为四字节整型静态全局变量，即支持32种日志类型。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * 访问说明：通过GetOmciLogCtrl/SetOmciLogCtrl/OmciLogCtrl函数访问/设置控制字。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *****************************************************************************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT32U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gOmciLogCtrl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//日志类型字符串数组，下标为各字符串所对应的日志类型枚举值。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paLogTypeName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;Norm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Frame&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;&amp;#34;Pon&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;&amp;#34;Ethernet&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;&amp;#34;Internet&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;Multicast&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;&amp;#34;Qos&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;s&#34;&gt;&amp;#34;Ces&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;&amp;#34;Voip&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;s&#34;&gt;&amp;#34;Alarm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;Performance&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Xdsl&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;&amp;#34;Db&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;ucLogTypeNameNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paLogTypeName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paLogTypeName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SetGlobalLogCtrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E_LOG_TYPE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eLogType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLogSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LOG_ON&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLogSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;gOmciLogCtrl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOG_ALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;gOmciLogCtrl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SetSpecificLogCtrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E_LOG_TYPE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eLogType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLogSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LOG_ON&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLogSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;SET_BIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOmciLogCtrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eLogType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;CLR_BIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gOmciLogCtrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eLogType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;VOID&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;OmciLogCtrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CHAR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszLogType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLogSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strncasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszLogType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;All&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOG_TYPE_CMP_LEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;SetGlobalLogCtrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LOG_ALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLogSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT8U&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLogTypeNameNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strncasecmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pszLogType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paLogTypeName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOG_TYPE_CMP_LEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;SetSpecificLogCtrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ucLogSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;LogType: %s, LogSwitch: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paLogTypeName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucIdx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucLogSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;On&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Off&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;OmciLogHelp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;掩码表&#34;&gt;掩码表&lt;/h4&gt;
&lt;p&gt;参见&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/clover-toeic/p/3732444.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;采用掩码方式简化产品国家地区支持能力的表示 - clover_toeic - 博客园&lt;/a&gt;一文。该例实现中用到消息、掩码、函数指针等概念。&lt;/p&gt;
&lt;h2 id=&#34;编程思想&#34;&gt;编程思想&lt;/h2&gt;
&lt;p&gt;表驱动法属于数据驱动编程的一种，其核心思想在《Unix编程艺术》和《代码大全2》中均有阐述。两者均认为人类阅读复杂数据结构远比复杂的控制流程容易，即&lt;strong&gt;相对于程序逻辑，人类更擅长于处理数据&lt;/strong&gt;。本节将由Unix设计原则中的“分离原则”和“表示原则”展开。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;分离原则：策略同机制分离，接口同引擎分离&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;机制即提供的功能；策略即如何使用功能。策略的变化要远远快于机制的变化。将两者分离，可以使机制相对保持稳定，而同时支持策略的变化。代码大全中提到“隔离变化”的概念，以及设计模式中提到的将易变化的部分和不易变化的部分分离也是这个思路。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;表示原则：把知识叠入数据以求逻辑质朴而健壮&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即使最简单的程序逻辑让人类来验证也很困难，但就算是很复杂的数据，对人类来说，还是相对容易推导和建模的。数据比编程逻辑更容易驾驭。在复杂数据和复杂代码中选择，宁可选择前者。更进一步，在设计中，应该主动将代码的复杂度转移到数据中去(参考“版本控制”)。&lt;/p&gt;
&lt;p&gt;在“消息处理”示例中，每个消息处理的逻辑不变，但消息可能是变化的。将容易变化的消息和不容易变化的查找逻辑分离，即“隔离变化”。此外，该例也体现消息内部的处理逻辑(机制)和不同的消息处理(策略)分离。&lt;/p&gt;
&lt;p&gt;数据驱动编程可以应用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数级设计，如本文示例。&lt;/li&gt;
&lt;li&gt;程序级设计，如用表驱动法实现状态机。&lt;/li&gt;
&lt;li&gt;系统级设计，如DSL。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，数据驱动编程不是全新的编程模型，只是一种设计思路，在Unix/Linux开源社区应用很多。数据驱动编程中，数据不但表示某个对象的状态，实际上还定义程序的流程，这点不同于面向对象设计中的数据“封装”。&lt;/p&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;h3 id=&#34;网友观点&#34;&gt;网友观点&lt;/h3&gt;
&lt;p&gt;(以下观点摘自博客园网友“七心葵”的回帖，非常具有启发性。)&lt;/p&gt;
&lt;p&gt;Booch的《面向对象分析与设计》一书中，提到所有的程序设计语言大概有3个源流：结构化编程、面向对象编程、数据驱动编程。我认为数据驱动编程的本质是“参数化抽象”的思想，不同于OO的“规范化抽象”的思想。&lt;/p&gt;
&lt;p&gt;数据驱动编程在网络游戏开发过程中很常用，但是少有人专门提到这个词。数据驱动编程有很多名字：元编程，解释器/虚拟机，LOP/微语言/DSL等。包括声明式编程、标记语言、甚至所见即所得的拖放控件，都算是数据驱动编程的一种吧。&lt;/p&gt;
&lt;p&gt;数据驱动编程可以帮助处理复杂性，和结构化编程、OO 均可相容。(正交的角度)将变和不变的部分分离，策略和机制分离，由此联想到的还有：(数据和代码的分离，微语言和解释器的分离，被生成代码和代码生成器的分离)；更近一步：(微内核插件式体系结构)。&lt;/p&gt;
&lt;p&gt;元编程应该说是更加泛化的数据驱动编程，元编程不是新加入一个间接层，而是退居一步，使得当前的层变成一个间接层。元编程分为静态元编程(编译时)和动态元编程(运行时)，静态元编程本质上是一种代码生成技术或者编译器技术；动态元编程一般通过解释器(或虚拟机)加以实现。&lt;/p&gt;
&lt;p&gt;数据驱动编程当然也不应该说是“反抽象的”，但的确与“OO抽象”的思维方式是迥然不同，泾渭分明的，如TAOUP一书中所述：“在Unix的模块化传统和围绕OO语言发展起来的使用模式之间，存在着紧张的对立关系”应该说数据驱动编程的思路与结构化编程和OO是正交的，更类似一种“跳出三界外，不在五行中”的做法。&lt;/p&gt;
&lt;h3 id=&#34;编程和人的关系&#34;&gt;编程和人的关系&lt;/h3&gt;
&lt;p&gt;人类心智的限制，一切的背后都有人的因素作为依据：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;人同时关注的信息数量：7+-2 (所以要分模块)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人接收一组新信息的平均时间5s(所以要简单，系统总的模块数不要太多)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人思维的直观性(人的视觉能力和模糊思维能力)，这意味这两点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“直”——更善于思考自己能直接接触把玩的东西；(所以要“浅平透”、使用具象的设计，要尽量代码中只有顺直的流程);&lt;/li&gt;
&lt;li&gt;“观”——更善于观图而不是推算逻辑；(所以要表驱动法，数据驱动编程，要UML，要可视化编程——当然MDA是太理想化了)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人不能持续集中注意力(人在一定的代码行数中产生的bug数量的比例是一定的，所以语言有具有表现力，要体现表达的经济性)，所以要机制与策略分离，要数据和代码分离(数据驱动编程)，要微语言，要DSL，要LOP……&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人是有创造欲，有现实利益心的(只要偶可能总是不够遵从规范，或想创造规范谋利——只要成本能承受，在硬件领域就不行)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另外，开一个有意思的玩笑，Unix编程艺术艺术的英文缩写为TAOUP，我觉得可以理解为UP之TAO——向上抛出之道——将复杂的易变的逻辑作为数据或更高层代码抛给上层！&lt;/p&gt;
&lt;h3 id=&#34;函数指针&#34;&gt;函数指针&lt;/h3&gt;
&lt;p&gt;“消息处理”一节示例中的函数指针有点插件结构的味道。可对这些插件进行方便替换，新增，删除，从而改变程序的行为。而这种改变，对事件处理函数的查找又是隔离的(隔离变化)。&lt;/p&gt;
&lt;p&gt;函数指针非常有用，但使用时需注意其缺陷：无法检查参数(parameter)和返回值(return value)的类型。因为函数已经退化成指针，而指针不携带这些类型信息。缺少类型检查，当参数或返回值不一致时，可能会造成严重的错误。&lt;/p&gt;
&lt;p&gt;例如，定义三个函数，分别具有两个参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;而处理函数却定义为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)())&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中，第三个参数是一个没有参数且返回int型变量的函数指针。但后面却用 &lt;code&gt;process(a,b,max)&lt;/code&gt;的方式进行调用，max带有两个参数。若编译器未检查出错误，而又不小心将 &lt;code&gt;return (*f)(x,y);&lt;/code&gt;写成 &lt;code&gt;return (*f)(x);&lt;/code&gt;，那么后果可能很严重。&lt;/p&gt;
&lt;p&gt;因此在C语言中使用函数指针时，一定要小心&lt;strong&gt;类型陷阱&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;注：夹带一些私货，最近上下班会用耳机后台听tinyfool的一些视频，下面这个是关于学习曲线和规律的，启发比较大。如果要成为一个高手，需要在某个领域有一个合理的学习曲线（视频中所说的乐学者的学习曲线），认真练习和总结，持续学习，总会有所小成。因为这个讲座，最近开始阅读之前买了一直没看的《思考，快与慢》和《异类》这两本书，等读完了写个读书笔记。视频见下方&lt;/p&gt;






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1uU4y147Zi&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;hr&gt;</description>
        </item>
        <item>
        <title>请回答2020</title>
        <link>https://blog.bugxch.top/p/%E8%AF%B7%E5%9B%9E%E7%AD%942020/</link>
        <pubDate>Sat, 02 Jan 2021 22:26:25 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E8%AF%B7%E5%9B%9E%E7%AD%942020/</guid>
        <description>&lt;img src="https://cdn.pixabay.com/photo/2020/12/10/09/21/face-mask-5819709_960_720.jpg" alt="Featured image of post 请回答2020" /&gt;&lt;p&gt;每个人的一生由记忆组成，但是记忆会随着时间模糊甚至消逝，幸好我们有相机，回望这一年，在人生的长河里给它打个鲜亮的标签。&lt;/p&gt;
&lt;p&gt;看到&lt;a class=&#34;link&#34; href=&#34;https://www.cnfeat.com/2021/01/01/question2020/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Question2020 - 笨方法学写作&lt;/a&gt;的这篇文章，有感而发，我也写一篇2020的年终总结。文章里面写下的答案都是凭第一感觉，每个人的记忆都会有偏差，但是在2021年初的这个当下它们是我此时脑中真实的反应。&lt;/p&gt;
&lt;h3 id=&#34;问题清单&#34;&gt;问题清单&lt;/h3&gt;
&lt;p&gt;在过去的一年里，你的什么观念发生了改变？
以可信考试为例，有四点感触比较深。&lt;/p&gt;
&lt;p&gt;第一，如果想要在某个技能上有所突破，必须以&lt;strong&gt;咬定青山不放松的毅力持续投入有效的时间和精力&lt;/strong&gt;，这意味着为了将技能磨练到足够高的水平，必须有足量有效的投入，甚至在&lt;strong&gt;必要的时候放弃休息娱乐的时间&lt;/strong&gt;。比如因为公司的可信考试，我投入大量时间刷leetcode题目，从之前不知道c++的stl为何物，到现在也能熟练完成中等题目，甚至有勇气参加周赛挑战自己，靠的是8月份以来连续3个月的持续不断的刷题。下图就是今年的力扣的年度总结，当前leetcode的排名是全球27000名左右，希望今年还能更进一层，进入到5000以内吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff08aec3ffa7d37b395ada8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;第二，工作之后的学习与学生时代不同，白天大部分时间用于完成日常的工作，而且没有整块的时间预留给你做持续深入的学习，但是又要面临持续提升工作技能的压力，以我学习C++的经历体会，最有效的方法是“&lt;strong&gt;以考促训，预留不被打扰的两小时&lt;/strong&gt;”。如果要想有效精进，每天一定要预留不被打扰的整段时间用于练习，最好是早起后上班前或者下班后睡觉前，腾出时间好好学习和思考。&lt;/p&gt;
&lt;p&gt;第三，相信&lt;strong&gt;功不唐捐&lt;/strong&gt;。持续的微小的积累达到一定的程度之后，往往会发生质变。技能训练尤为明显，借用《为学》的那一段&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。人之为学有难易乎？学之，则难者亦易矣；不学，则易者亦难矣。
不问年龄，不求结果，持续投入，水平必然会有提升。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第四，做一件事情要达到极致，你做到level B是不够的，下定决心之后一定要做到level A。职场上只有惊艳到给别人留下深刻的印象，晋升的机会才会更青睐于你，平平凡凡虽然也没有错，但是如果真的笃定升职，全力以赴做到顶尖才是效率最高的方法。比如，如果要你想给人技术很厉害的印象，那么可信考试科目一做出来两道题是不够的，必须3道全部完成，只有这样的shock才能让别人在心里留下“编程NB”的印象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你的生活有什么大的变化吗？最大的幸福感来自哪里?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应该说从2019年开始，有两件事情，&lt;strong&gt;养育小孩&lt;/strong&gt;和&lt;strong&gt;拥有属于自己的房子&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在有小孩之前，老婆觉得生小孩就是完成女性的生育任务，她的人生是金融界大佬、保代人和投行精英，哪成想生下果果的那一刻起就母性大发，现在恨不得辞职在家天天在家带娃，果果带给我们的快乐确实很多，小孩子天真烂漫，成长中的小趣事能解大人的多重烦忧啊。果果带给我很多&lt;strong&gt;惊奇时刻&lt;/strong&gt;，现在回想起来有两件事情我印象深刻。今年过年之后他第一次回上海，那时候大概14个月大刚学着走路，不会说话，当时我、丫丫和妈妈都在卧室，妈妈问果果“哪个是妈妈呀？”，我以为他不知道，结果他指着丫丫，然后又问“哪个是爸爸？”，他又指着我，问“谁是奶奶？”，指着妈妈。那一刻我直接被shock了，虽然他不会说话，但是实际上已经可以分清楚爸爸、妈妈和奶奶了。&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff0896e3ffa7d37b394f4b7.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;5月份，14个月大的果果&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;今年6月底回湖北最多只能说两个词，9月份回到上海的时候就已经是成天指着这个问“这个是什么？”的好奇宝宝了，耳朵也异常灵敏，听到洗衣机运转的声音就会问，“什么东西响呀？”。我惊叹于人类小孩大脑发育的速度之快，短短几个月语言功能就发展到惊人的程度，有一次他自己在沙发上玩小汽车，玩弄了半天终于把车门打开了，顺口说出“终于打开了”，“终于”这个词语之前没有人跟他提起过，就算是他无意间听到了，也没人教他什么意思怎么用，他正确无误得把这个词语用得恰到好处，我和丫丫、妈妈觉得又可爱又惊讶。&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089913ffa7d37b39505ca.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;9月份，在家乐福，三代同框&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;我小时候因为照片很少，不能知道自己小时候的样子，非常遗憾。我现在随手会给果果拍照片或者录视频，他不会有第2个2岁、3岁和5岁，人生就是一把开弓离弦的箭，不断奔向时间的前方，他长大后回看这些曾经的照片视频，应该是很有意思的一件事情。初步计划会在我的公众号给他开一个专栏，就叫&lt;strong&gt;果果成长记&lt;/strong&gt;系列，不定期更新他的照片和视频，将来就是给他最好的礼物之一。打个广告，请扫描文末的二维码关注我的公众号。&lt;/p&gt;
&lt;p&gt;买房子之后最大的幸福感来自于可以敞开钱包购置自己想买的那些大件商品，比如一个好床垫，一个好书桌，一台好电视。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089983ffa7d37b395094a.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;5月份，逛小区&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

我们在3月份签订了购房居间合同，按照正常的流程应该在贷款下来之后就可以交接入住了，但是房东由于坐月子所以延迟两个月交房，中间我会突然兴起去看小区，经常想着入住之后的样子，幸好房东近两年刚装修完，而且装修风格简洁明快，风格不错，有自己的小窝感觉还是很幸福的。交接之后，我们去宜家挑了书桌、床垫和餐桌，购置了新冰箱，双十一换了新燃气热水器，房子虽小，好好收拾了下书房，不过当下住着还是蛮舒服的。
&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089713ffa7d37b394f612.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;9月份，书房刚收拾好时的样子&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你有哪些有意思的发现？比如公众号，综艺节目或者一本书？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在之前我有一个习惯，发现有意思的网站，都会放在我博客的&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/collection/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;杂记&lt;/a&gt;的页面，2018年收集了很多，但是后来博客迁来迁去丢失了，现在又在慢慢攒。当前我时常浏览的博客就是下面几个，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pmthinking.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;产品沉思录 · Product Thinking&lt;/a&gt;，2020年发现的比较好的&amp;gt; 产品的网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hugoloveit.com/zh-cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LoveIt&lt;/a&gt;，当前网站的主题介绍文章，可以参考文章插入图片、视频和音乐&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.sharetechnote.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ShareTechnote&lt;/a&gt;，一个韩国高级工程师搭建的专业知识共享网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://coolshell.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;酷壳 – CoolShell.cn&lt;/a&gt;，左耳朵耗子的官方博客，对我影响比较大的技术大佬&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://spaces.ac.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;科学空间|Scientific Spaces&lt;/a&gt;，非常不错的后生，天文、数学、AI、竞赛，博文质量极高，在这么小的年龄以十年的尺度更新不辍，非常难得&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.ruanyifeng.com/blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阮一峰的网络日志&lt;/a&gt;，IT圈子中小有名气的大佬，比较喜欢他每周一推的科技爱好者周刊系列
推荐搞IT的同学关注。
另外，推荐腾讯视频的&lt;a class=&#34;link&#34; href=&#34;https://v.qq.com/x/cover/mzc002006bujgo5/c3217pq213q.html?&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《十三邀》&lt;/a&gt;节目，当前最新一期是去年的五条人乐队，这些访谈采访比较随意，不通过制造噱头可以拉高收视率，率真自然，推荐观看。去年没怎么看书，依然推荐老六的&lt;a class=&#34;link&#34; href=&#34;http://www.duku.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《读库》&lt;/a&gt;系列，最近好像涨价了，不过品质一直没变。我最近有强烈的感受，现在我已经对之前大学时期的偏文学社科的书目不太感兴趣了，更多的将精力投入到职业技能的提升上，我去年C++的书籍买了一堆，计划今年攻克这些大部头，愚公移山，犹未为晚也。
&lt;img src=&#34;https://pic.downk.cc/item/5ff187273ffa7d37b37bbda0.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;今年完整看过极力推荐的两部电视剧都改编自紫金陈的小说，&lt;a class=&#34;link&#34; href=&#34;https://movie.douban.com/subject/33404425/?from=subject-page&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;隐秘的角落 (豆瓣)&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://movie.douban.com/subject/33447642/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;沉默的真相 (豆瓣)&lt;/a&gt;，第二部豆瓣给出了9.2的高分，国产电视剧能到8.0以上就值得花时间看了，第二部我是在国庆的客厅沙发上几乎通宵追完的，为此还买了一个月的爱奇艺会员，确实值得。不过今年有一部好剧烂尾了，改编自孙皓晖的&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/3079029/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《大秦帝国》&lt;/a&gt;的终章&lt;a class=&#34;link&#34; href=&#34;https://movie.douban.com/subject/26413293/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《大秦赋 》&lt;/a&gt;，情节冗长拖沓，剧本被资方改得七零八碎，追了大概20集弃剧了，不建议入坑。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;你买到了什么好东西，可以推荐给大家吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今年最大支出是房子，这个就不多谈了，我在设备更新上花钱比较多，年中给我的整体升级了我的小黑硬件配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;500大洋的&lt;a class=&#34;link&#34; href=&#34;https://item.jd.com/6212482.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;三星（SAMSUNG）500GB SSD固态硬盘 SATA3.0接口 860 EVO（MZ-76E500B）&lt;/a&gt;把原来的机械硬盘换到固态硬盘&lt;/li&gt;
&lt;li&gt;200大洋将当前的内存从4G升级到16G，&lt;a class=&#34;link&#34; href=&#34;https://item.jd.com/26139216296.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;三星SAMSUNG内存条4g8g16g32g ddr4 ddr3l&lt;/a&gt;
仅仅700大洋，之前的电脑卡死现象改善明显，开始时间由原来的1分钟降到10秒钟，打开大型文档或者多任务并行也不卡了，电脑体验的大幅改善肉眼可见，幸福感爆棚，建议大家也早点升级自己的硬件装备，早买早享受。&lt;/li&gt;
&lt;li&gt;老婆将自己原来的T460电脑给了岳父，我转手4000大洋在公司内购了一台华为的2019 MateBook 14，内存小了点（8G），512G的固态硬盘，对于老婆这种重文档处理的情景用起来也足够，打开文档嗖嗖快。&lt;/li&gt;
&lt;li&gt;我现在在用公司内测机的Mate 30 Pro，之前一直用iphone SE，今年上半年还曾动过买iphone SE 2的念头，不过现在完全喜欢上手上的这部手机了，华为手机最大优点是续航，但是别的方便做的也不错，很结实耐用，真的是钢铁直男做出来的手机，如果内测机折价卖给我，那肯定就这部了。&lt;/li&gt;
&lt;li&gt;1600大洋，8月份手痒买了&lt;a class=&#34;link&#34; href=&#34;https://time.geekbang.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《极客时间》&lt;/a&gt;的算法训练营课程，现在想来稍微有点贵，因为他视频的课程在3个月之后是要失效的，不能永久保存，上这门课最大的收获是养成了正确的算法练习方法，这个可以再单独写一篇感想。&lt;/li&gt;
&lt;li&gt;剩下的大件就是购置新家的家具，零零碎碎加上电器购置下来也有1w大洋左右了，主要选宜家，这里推荐&lt;strong&gt;宜家&lt;/strong&gt;，质量和售后有保证，9月份买的床垫短了，我在12月份退掉买了个新的，过程有点波折，但是总体感受还可以。
在消费上，在满足自己需求的条件下，我坚持下面两个原则，&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;不看贵贱，买价格和价值最匹配的&lt;/strong&gt;，有可能这个东西比较贵，但是如果他贵的有道理，那就值得它的价格；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于长期需要使用的商品，在可承受的范围之内，我宁可买个贵而且好用的，也不会将就买便宜的&lt;/strong&gt;，比如床垫，冰箱，键盘。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;你的养成了什么好习惯或者坏习惯？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最大的好习惯包括坚持刷题，勤耕不辍，题目做不出来茶饭不思。
坏习惯包括，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;喜欢躺在床上看手机，这个既对颈椎不好而且晚上看久了也影响第二天工作的精力，必须改；&lt;/li&gt;
&lt;li&gt;没有坚持健身，今年体检就有脂肪肝了，问题比往年要多一些，今年也要改善，老婆买了划船机也要定期用起来。&lt;/li&gt;
&lt;li&gt;之前使用随手记记账的习惯也丢了，去年因为买房所以花销肯定比较大，今年从元旦开始重新记账。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;你最大的变化是什么？来年你期待有什么变化？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;相信努力的效果，在强手如林的我司，尤其是我们团队，相信自己能精进技能而且可以找到自己的定位。来年期待可以花更多精力在育儿上，果果慢慢大了，到了狗都嫌的2岁了，现在性格有些胆小，虽然不知道什么原因，但是我发现只要我陪伴多一点他就快乐胆大些。多读些育儿书籍，多与果果互动。还有一个，加强锻炼，已经到了不投入时间健身疾病就会找上门来的年龄了，以长远计，健康的体魄是迎接挑战享受日后人生的保障那~&lt;/p&gt;
&lt;h3 id=&#34;年度照片&#34;&gt;年度照片&lt;/h3&gt;
&lt;p&gt;下面是我的年度照片，每个月挑选1到2张有代表性的意思一下（右键 -&amp;gt; 在新标签页中打开图片可以看到高清大图，博客不知道为什么不能显示最大的清晰度），&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089bc3ffa7d37b395188a.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;1月下旬，因为新冠爆发，我和丫丫只能在上海过年，家乐福购物归来&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089943ffa7d37b3950771.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;2月份，work at home，自制办公桌，后来不小心把显示器掉下来摔坏右上角&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089b53ffa7d37b39515a8.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;2月份，疫情期间在家坚持学习的易老师&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff0897f3ffa7d37b394fd84.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;2月份，第一个上班日，公司严正以待&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089a63ffa7d37b3950fba.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;2月份，同上，连按压取水都要用纸巾衬着&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089a33ffa7d37b3950e2f.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;3月份，与易老师去高行看房，拍照留念小发卡&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089aa3ffa7d37b395112f.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;4月份，老树发新芽的博兴路&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089ad3ffa7d37b39512f9.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;5月份，不记得在哪里拍的了&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff0898a3ffa7d37b39502ae.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;5月份，一家人逛滨江大道&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff0899f3ffa7d37b3950bf3.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;5月份，有起床气的某宝宝&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089823ffa7d37b394feb5.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;5月份，有了自己的房子&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff0896c3ffa7d37b394f356.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;6月份，不肯睡觉喜欢玩妈妈化妆品的某宝宝&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089723ffa7d37b394f781.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;7月份，疫情期间装修停滞的西西弗书店金桥国际店开了&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089753ffa7d37b394f863.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;8月份，和易老师骑行黄浦滨江，美哉&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089793ffa7d37b394fac8.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;8月份，易老师骑行黄浦滨江的曼妙身影&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089843ffa7d37b3950038.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;8月份，搬离最后的出租屋，迁入新家&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff0898e3ffa7d37b395045d.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;9月份，新家阳台所摄，很喜欢满眼的绿色，远处是上海中心大厦&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff0897c3ffa7d37b394fc5a.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;9月份，和易老师到杨浦宜家购置新家具&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089873ffa7d37b3950166.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;10月份，爸爸第一次来上海，祖孙三代合影&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://pic.downk.cc/item/5ff089b83ffa7d37b39516cc.jpg&#34;&gt;&lt;figcaption&gt;
      &lt;h4&gt;12月份，初冬的博兴路&lt;/h4&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;hr&gt;</description>
        </item>
        <item>
        <title>LeetCode区间问题总结</title>
        <link>https://blog.bugxch.top/p/leetcode%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link>
        <pubDate>Sun, 16 Aug 2020 22:31:31 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/leetcode%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid>
        <description>&lt;img src="https://cdn.pixabay.com/photo/2013/07/18/20/26/sea-164989_960_720.jpg" alt="Featured image of post LeetCode区间问题总结" /&gt;&lt;p&gt;上周五考试没有过，其中专业级第二题是关于区间的问题，在leetcode上找到类似的题目，总结复习下。&lt;/p&gt;
&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;先看这道题，&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/corporate-flight-bookings/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;1109. 航班预订统计&lt;/a&gt;，题目是这样的&lt;/p&gt;
&lt;p&gt;这里有&lt;code&gt;n&lt;/code&gt; 个航班，它们分别从 1 到 n 进行编号。&lt;/p&gt;
&lt;p&gt;我们这儿有一份航班预订表，表中第 &lt;code&gt;i&lt;/code&gt; 条预订记录 &lt;code&gt;bookings[i] = [i, j, k]&lt;/code&gt; 意味着我们在从 &lt;code&gt;i&lt;/code&gt; 到&lt;code&gt; j&lt;/code&gt; 的每个航班上预订了 &lt;code&gt;k&lt;/code&gt; 个座位。&lt;/p&gt;
&lt;p&gt;请你返回一个长度为 n 的数组 &lt;code&gt;answer&lt;/code&gt;，按航班编号顺序返回每个航班上预订的座位数。参考示例如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;输入&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bookings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;输出&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;解题思路&#34;&gt;解题思路&lt;/h3&gt;
&lt;p&gt;将这道题的示例画一张表格表示一下，就是下面的结果&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;booking&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;1&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;2&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;3&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;4&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;5&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;55&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;45&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;常规思路就是以航班号为基本坐标，计算每一个航班增加的座位数，然后逐项汇总相加即可。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置初始结果&lt;code&gt;vector&amp;lt;int&amp;gt; res(n, 0)&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;遍历&lt;code&gt;bookings&lt;/code&gt;，每次取其中的航班的预定数，添加到&lt;code&gt;res&lt;/code&gt;对应的数组中，比如第1个booking，那么&lt;code&gt;res[0]+=10; res[1]+=10&lt;/code&gt;，依次类推，直到遍历截止。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面的算法比较简单直观，但是可以分析发现，算法的复杂度有点高，两层遍历算法时间复杂度是$O(n^2)$，空间复杂度是$O(n)$不甚理想。&lt;/p&gt;
&lt;p&gt;有没有复杂度更简单的思路呢？这里有一个类比&lt;strong&gt;公交站的思路&lt;/strong&gt;，可以将航班号码比作公交站牌，比如1号公交站，2号公交站，假定这些公交站是依次按顺序分布在一条直线公路上，&lt;strong&gt;第&lt;code&gt;i&lt;/code&gt;个航班的飞机的预定数目就是公交车在第&lt;code&gt;i&lt;/code&gt;个公交站发车时候的乘客数目（包括了上车和下车的乘客数&lt;/strong&gt;）。&lt;/p&gt;
&lt;p&gt;举例说明，第1行表示，第1站交车上人数是10，说明公交车行驶到第1站时上车10人，到第2站时候车上的乘客仍然是10人，说明没有乘客上下车，到第3站时候车上乘客0人，说明此时有10人下车。如果使用长度为&lt;code&gt;N&lt;/code&gt;的数组&lt;code&gt;count&lt;/code&gt;表示每一站&lt;strong&gt;上下乘客的变化量&lt;/strong&gt;(&lt;code&gt;count[i]&lt;/code&gt; 表示第&lt;code&gt;i + 1&lt;/code&gt;站上下车的乘客变化量），&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于&lt;code&gt;booking = [i,j,k]&lt;/code&gt;，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;表示在公交站第&lt;code&gt;i&lt;/code&gt;站上车&lt;code&gt;k&lt;/code&gt;人，&lt;code&gt;count[i - 1] += k&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;第&lt;code&gt;i + 1&lt;/code&gt;站直到第&lt;code&gt;j&lt;/code&gt;站都没有乘客上下车，&lt;code&gt;count[i],...,count[j - 1]&lt;/code&gt;无操作；&lt;/li&gt;
&lt;li&gt;在第&lt;code&gt;j + 1&lt;/code&gt;站下车&lt;code&gt;k&lt;/code&gt;人，所以&lt;code&gt;count[j] -= k&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了方便起见，&lt;strong&gt;我们缩小问题的规模，以具体的数字代替抽象的代数字母&lt;/strong&gt;，假如我们就只有3个公交站，取示例中的前2行，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;公交车刚开始上的人数是0，&lt;code&gt;vector&amp;lt;int&amp;gt; count(4, 0)&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;读取第1行，到达第1站，公交车上10人，说明&lt;strong&gt;上车10人，无人下车，&lt;code&gt;count[0]+= 10&lt;/code&gt;&lt;/strong&gt;，到达第2站公交车上依然是10人，说明也&lt;strong&gt;无人上车和下车&lt;/strong&gt;，到达第3站，公交车上0人，说明&lt;strong&gt;10人下车，&lt;code&gt;count[2] -= 10&lt;/code&gt;&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;读取第2行，公交车到达第2站，公交车上20人，说明&lt;strong&gt;上车20人无人下车，&lt;code&gt;count[1] += 20&lt;/code&gt;&lt;/strong&gt;，第3站车上20人，说明&lt;strong&gt;无人下车&lt;/strong&gt;，第4站车上0人，说明&lt;strong&gt;有20人下车, &lt;code&gt;count[3]-=20&lt;/code&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;遍历结束，得到&lt;code&gt;count = {10, 20, -10，-20}&lt;/code&gt;，那么最后每个站点的乘客数就很清楚了，到达第1站前车上乘客0人，到达后上车10人，所以第1站发车前车上10人，第2站到站后上车20人，所以第2站发车前车上乘客10 + 20  = 30人，第3站到站后下车10人，所以发车前车上乘客 30 - 10 = 20人。意思搞清楚之后，代码就很好写了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;corpFlightBookings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bookings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;booking&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bookings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;booking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;booking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// 记录每个booking的开始和结尾即可，中间的站点人数无变化
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;booking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// start站上车
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;booking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// end + 1站下车
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;时间复杂度为$O(n)$。&lt;/p&gt;
&lt;h2 id=&#34;通用框架&#34;&gt;通用框架&lt;/h2&gt;
&lt;p&gt;「待补充」&lt;/p&gt;
&lt;h2 id=&#34;典型题目&#34;&gt;典型题目&lt;/h2&gt;
&lt;p&gt;「待补充」&lt;/p&gt;
&lt;h3 id=&#34;no-986-区间列表交集&#34;&gt;No. 986 区间列表交集&lt;/h3&gt;
&lt;p&gt;题目的链接参考&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/interval-list-intersections/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;986. 区间列表的交集 - 力扣（LeetCode）&lt;/a&gt;，&lt;/p&gt;
&lt;h3 id=&#34;no-452-引爆气球&#34;&gt;No. 452 引爆气球&lt;/h3&gt;
&lt;p&gt;题目链接参考&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;452. 用最少数量的箭引爆气球 - 力扣（LeetCode）&lt;/a&gt;，这道题目使用&lt;strong&gt;贪心法&lt;/strong&gt;，将气球的坐标放在坐标轴上，然后从0开始从左到右逐气球扫描，查看是否有交集，图示如下。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;「待补充」&lt;/p&gt;</description>
        </item>
        <item>
        <title>C&#43;&#43;中的sort函数详解</title>
        <link>https://blog.bugxch.top/p/c-%E4%B8%AD%E7%9A%84sort%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sat, 15 Aug 2020 21:25:46 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/c-%E4%B8%AD%E7%9A%84sort%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;img src="https://pic.imgdb.cn/item/6002ed073ffa7d37b305c866.jpg" alt="Featured image of post C&#43;&#43;中的sort函数详解" /&gt;&lt;p&gt;公司认证的leetcode题目中经常会用到sort函数，不是很熟悉，今天系统学习总结下。&lt;/p&gt;
&lt;h2 id=&#34;总述&#34;&gt;总述&lt;/h2&gt;
&lt;p&gt;下面是C++的stl中的排序的所有函数，这个系列的博客会逐一介绍，这次的博客先关注最常用的&lt;code&gt;sort&lt;/code&gt;函数。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数名&lt;/th&gt;
&lt;th&gt;用法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sort (first, last)&lt;/td&gt;
&lt;td&gt;对容器或普通数组中 [first, last) 范围内的元素进行排序，默认进行升序排序。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stable_sort (first, last)&lt;/td&gt;
&lt;td&gt;和 sort() 函数功能相似，不同之处在于，对于 [first, last) 范围内值相同的元素，该函数不会改变它们的相对位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;partial_sort (first, middle, last)&lt;/td&gt;
&lt;td&gt;从 [first,last) 范围内，筛选出 muddle-first 个最小的元素并排序存放在 [first，middle) 区间中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;partial_sort_copy (first, last, result_first, result_last)&lt;/td&gt;
&lt;td&gt;从 [first, last) 范围内筛选出 result_last-result_first 个元素排序并存储到 [result_first, result_last) 指定的范围中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is_sorted (first, last)&lt;/td&gt;
&lt;td&gt;检测 [first, last) 范围内是否已经排好序，默认检测是否按升序排序。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is_sorted_until (first, last)&lt;/td&gt;
&lt;td&gt;和 is_sorted() 函数功能类似，唯一的区别在于，如果 [first, last) 范围的元素没有排好序，则该函数会返回一个指向首个不遵循排序规则的元素的迭代器。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;void nth_element (first, nth, last)&lt;/td&gt;
&lt;td&gt;找到 [first, last) 范围内按照排序规则（默认按照升序排序）应该位于第 nth 个位置处的元素，并将其放置到此位置。同时使该位置左侧的所有元素都比其存放的元素小，该位置右侧的所有元素都比其存放的元素大。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;sort函数&#34;&gt;sort函数&lt;/h2&gt;
&lt;h3 id=&#34;使用范围&#34;&gt;使用范围&lt;/h3&gt;
&lt;p&gt;C++ STL 标准库中的 sort() 函数，本质就是一个模板函数。正如表 1 中描述的，该函数专门用来对容器或普通数组中指定范围内的元素进行排序，排序规则默认以元素值的大小做升序排序，除此之外我们也可以选择标准库提供的其它排序规则（比如&lt;code&gt;std::greater&amp;lt;T&amp;gt;&lt;/code&gt;降序排序规则），甚至还可以自定义排序规则。&lt;/p&gt;
&lt;p&gt;需要注意的是，sort() 函数受到底层实现方式的限制，它仅适用于普通数组和部分类型的容器。换句话说，只有普通数组和具备以下条件的容器，才能使用 sort() 函数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;容器支持的迭代器类型必须为随机访问迭代器。这意味着，sort() 只对 array、vector、deque 这 3 个容器提供支持；&lt;/li&gt;
&lt;li&gt;如果对容器中指定区域的元素做默认升序排序，则元素类型必须支持&lt;code&gt;&amp;lt;&lt;/code&gt;小于运算符；同样，如果选用标准库提供的其它排序规则，元素类型也必须支持该规则底层实现所用的比较运算符；&lt;/li&gt;
&lt;li&gt;sort() 函数在实现排序时，需要交换容器中元素的存储位置。这种情况下，如果容器中存储的是自定义的类对象，则该类的内部必须提供移动构造函数和移动赋值运算符。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;局限&#34;&gt;局限&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sort&lt;/code&gt;函数不保证排序的&lt;a class=&#34;link&#34; href=&#34;https://baike.baidu.com/item/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%A8%B3%E5%AE%9A%E6%80%A7&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;稳定性&lt;/a&gt;，即如果被排序的序列中有多个相同值的元素，并不能保证排序之后他们的相对位置保持不变。&lt;/p&gt;
&lt;h3 id=&#34;使用方法&#34;&gt;使用方法&lt;/h3&gt;
&lt;p&gt;值得一提的是，sort() 函数位于&lt;code&gt;&amp;lt;algorithm&amp;gt;&lt;/code&gt;头文件中，因此在使用该函数前，程序中应包含如下语句：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;sort() 函数有 2 种用法，其语法格式分别为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//对 [first, last) 区域内的元素做默认的升序排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RandomAccessIterator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RandomAccessIterator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//按照指定的 comp 排序规则，对 [first, last) 区域内的元素进行排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RandomAccessIterator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RandomAccessIterator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Compare&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;comp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中，first 和 last 都为随机访问迭代器，它们的组合 [first, last) 用来指定要排序的目标区域；另外在第 2 种格式中，comp 可以是 C++ STL 标准库提供的排序规则（比如 std::greater&lt;T&gt;），也可以是自定义的排序规则。比如，如果需要做&lt;strong&gt;降序&lt;/strong&gt;排序，那么可以使用&lt;code&gt;std::less&amp;lt;T&amp;gt;&lt;/code&gt;，也可以自己写一个降序的函数。具体的用法如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// std::cout
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// std::sort
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// std::vector
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//以普通函数的方式实现自定义排序规则
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mycomp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//以函数对象的方式实现自定义排序规则
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;mycomp2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;71&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;53&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//调用第一种语法格式，对 32、71、12、45 进行排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//(12 32 45 71) 26 80 53 33
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//调用第二种语法格式，利用STL标准库提供的其它比较规则（比如 greater&amp;lt;T&amp;gt;）进行排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;greater&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//(71 45 32 12) 26 80 53 33
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//调用第二种语法格式，通过自定义比较规则进行排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mycomp2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 80 71 53 45 33 32 26 12
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mycomp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 80 71 53 45 12 26 32 33
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//输出 myvector 容器中的元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myvector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;再探自定义比较函数&#34;&gt;再探自定义比较函数&lt;/h2&gt;
&lt;h3 id=&#34;一元谓词和二元谓词&#34;&gt;一元谓词和二元谓词&lt;/h3&gt;
&lt;p&gt;sort的自定义比较函数在C++中成为&lt;strong&gt;谓词&lt;/strong&gt;，在泛型编程中作为参数使用。按照接受参数的个数不同，谓词分为一元谓词和二元谓词两种。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一元谓词，比如&lt;code&gt;for_each&lt;/code&gt;中使用，因为该算法是顺序遍历容器中的每个元素，对每个元素进行操作，所以是一元谓词，如下面的代码片段&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;i&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;love&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;leetcode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;i&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;love&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;coding&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printEle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;for_each&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;printEle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// printEle是一元谓词
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二元谓词，sort算法是对容器的两个元素进行比较，所以接受两个参数，比如上面的&lt;code&gt;mycomp&lt;/code&gt;函数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lambda表达式与可调用对象&#34;&gt;lambda表达式与可调用对象&lt;/h3&gt;
&lt;p&gt;谓词就是一个可调用对象(callable object)，在C++中可调用对象包括4种类型：函数、函数指针、重载函数调用符的类（可以像函数一样使用的类）以及&lt;strong&gt;lambda表达式&lt;/strong&gt;。其实在上面的代码片段中，已经在sort算法中使用过函数以及重载函数调用符的类。此处重点介绍一下lambda表达式。lambda表达式的介绍很多，此处直接贴出来参考资料3中的总结表格&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6132a81044eaada739e80e13.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从表格中可以看出捕获的类型，分为不捕获局部变量、按值捕获、按引用捕获，混合捕获这几种。参考&lt;a class=&#34;link&#34; href=&#34;https://zh.cppreference.com/w/cpp/algorithm/sort&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;std::sort参考手册&lt;/a&gt;中的代码，&lt;code&gt;sort&lt;/code&gt;的用法如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;functional&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 用默认的 operator&amp;lt; 排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;〔方案選單〕&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 用标准库比较函数对象排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;greater&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 用自定义函数对象排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customLess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customLess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 用 lambda 表达式排序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[](&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0 1 2 3 4 5 6 7 8 9
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;9 8 7 6 5 4 3 2 1 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0 1 2 3 4 5 6 7 8 9
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;9 8 7 6 5 4 3 2 1 0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;表示了3种谓词，标准库、函数对象和lambda表达式。这里的二元谓词，告诉了&lt;code&gt;sort&lt;/code&gt;，当比较&lt;strong&gt;其中两个元素&lt;/strong&gt;的时候该如何处理两个元素的位置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customLess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当上面的函数返回为&lt;code&gt;true&lt;/code&gt;时候，那么将&lt;code&gt;a&lt;/code&gt;排在&lt;code&gt;b&lt;/code&gt;的前面，上面的代码种当&lt;code&gt;a &amp;lt; b&lt;/code&gt;时结果为&lt;code&gt;true&lt;/code&gt;，所以小的元素排在前面，下面通过做题来示例它的用法。&lt;/p&gt;
&lt;h3 id=&#34;具体题目&#34;&gt;具体题目&lt;/h3&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/rank-teams-by-votes/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;1366. 通过投票对团队排名 - 力扣（LeetCode）&lt;/a&gt;，具体的代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;rankTeams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ranks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;vote&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;ranks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;vote&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;ranks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PCV&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PCV&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ranking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ranks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ranks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;ranking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// lambda表达式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ranking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ranking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[](&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PCV&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PCV&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ranking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ranking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以题目中的示例1分析题意&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;第一名得票&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;第二名得票&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;第三名得票&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;B&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;C&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;有5个人投票，如果给ABC的3人，从第一名到第三名依次唱票，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果第一名决出胜者，那么该选手获得第一名，剩下的选手角逐第二名；&lt;/li&gt;
&lt;li&gt;如果第二名决出胜者，那么该选手获得第一名，剩下的选手就是第三名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果参选人数超过3人，那么依此类推，直到所有名次所有人都占用为止。这里有一种特殊情况，如果有若干人在所有名次获得相同的选票，那么以人名的字母排序。比如，如果A和B都得了第一名，那么排序A在前，B在后。注意上面的26行~36行的代码。它表示从第一名到最后一名排序，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果两个选手的在第&lt;code&gt;i&lt;/code&gt;个名次上票数相同，那么在第&lt;code&gt;i&lt;/code&gt;个名次上不做任何操作（我们认为他们的名次是不分先后的），继续下一个名次&lt;code&gt;i++&lt;/code&gt;的比较（第33行）；&lt;/li&gt;
&lt;li&gt;如果两个选手在第&lt;code&gt;i&lt;/code&gt;个名次上票数不同，那么以票数多者优先排序，退出循环，后面的名次不需要再比较了（第31行）；&lt;/li&gt;
&lt;li&gt;如果在两个选手在所有的名次上票数均相同，那么最后按照人名排序（第35行）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里的代码告诉了&lt;code&gt;sort&lt;/code&gt;函数该如何对当前所有选手中的两个选手的名次进行排序，它会将其中的两两进行比较给出答案（如何两两比较，我们不用关心），&lt;strong&gt;从微观层面告诉&lt;code&gt;sort&lt;/code&gt;函数的两个元素的操作方法&lt;/strong&gt;，它就能将所有的选手按照这个方法排好序，这个就是lambda表达式的意义。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://c.biancheng.net/view/7457.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C++ sort()排序函数用法详解&lt;/a&gt;，c语言中文网的介绍&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.geeksforgeeks.org/sort-c-stl/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;std::sort() in C++ STL - GeeksforGeeks&lt;/a&gt;，国外的网站介绍&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/25708312/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C++ Primer 中文版&lt;/a&gt;中的10.3节&lt;/li&gt;
&lt;/ol&gt;</description>
        </item>
        <item>
        <title>广度优先搜索详解</title>
        <link>https://blog.bugxch.top/p/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sat, 08 Aug 2020 11:24:24 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;p&gt;总结一下广度优先搜索的原理和用法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Depth-first-tree.svg/640px-Depth-first-tree.svg.png?1596857354686&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;先看这道题&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;104. 二叉树的最大深度&lt;/a&gt;，题目中给出一个二叉树，求这个二叉树的最大深度。例子中给出下面的二叉树&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   / &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    /  &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个如何解决呢？肉眼可见，最大深度是3。&lt;/p&gt;
&lt;h3 id=&#34;构建二叉树&#34;&gt;构建二叉树&lt;/h3&gt;
&lt;p&gt;首先为了便于调试，需要构建一颗二叉树，题目中的给出的是二叉树的层序遍历的结果，我们用&lt;code&gt;INT_MAX&lt;/code&gt;代替null，使用如下函数构造二叉树&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ConstructBinTree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;iq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emplace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;iq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// check vectors for left node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;leftNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;leftNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leftNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;iq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emplace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;leftNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// add right node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rightNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;rightNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rightNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;iq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emplace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rightNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;下面是中序遍历二叉树&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ScanBinMiddle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// handle value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;ScanBinMiddle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;ScanBinMiddle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;递归解法&#34;&gt;递归解法&lt;/h3&gt;
&lt;p&gt;二叉树的比较普遍的解法是使用递归，我们需要找出递归的关系式，然后用程序写出来。递归解决问题的思路包括下面两点&lt;/p&gt;
&lt;h4 id=&#34;描述变量&#34;&gt;描述变量&lt;/h4&gt;
&lt;p&gt;我们有一个关于目标变量的描述，在这个题目中目标变量是整棵树的最大深度，放弃整体的概念，假设你站在根节点往下看，会看到它有左右两个子树，每棵树又有自己的节点和深度。所以假定推导的变量是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;maxdepth[node]&lt;/code&gt;表示以&lt;code&gt;node&lt;/code&gt;为根节点的树的最大深度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;递归关系式&#34;&gt;递归关系式&lt;/h4&gt;
&lt;p&gt;查看这个值和左右子树的关系是什么？3这个node的最大深度是9这个node最大深度和20这个node的最大深度的最大值 + 1，重新表述下就是下面的关系式&lt;code&gt;maxD[node] = max(maxD[node-&amp;gt;left], maxD[node-&amp;gt;right]) + 1&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;终止条件&#34;&gt;终止条件&lt;/h4&gt;
&lt;p&gt;终止条件比较简单，在访问到null节点的时候返回0即可，因为以这个节点为根的树是不存在的，所以深度为0。于是有下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;maxDepth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 终止条件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 关系式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxDepth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxDepth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;广度优先搜索算法bfs&#34;&gt;广度优先搜索算法（BFS）&lt;/h3&gt;
&lt;p&gt;不使用递归，还有另一种解法，一层层观察整棵树，第一层1个节点，第二层2个节点，第三层2个节点。每一层的节点之间使用左右子树联系起来，所以根据第1层的节点可以访问第2层的节点，根据第2层的节点可以访问第3层的节点，所以可以这么做。记录整棵树最深的深度是&lt;code&gt;maxdepth = 0&lt;/code&gt;，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;访问第一层的根节点，如果非空则&lt;code&gt;maxdepth++&lt;/code&gt;，否则返回；&lt;/li&gt;
&lt;li&gt;查看第一层的根节点是否有左右子树，有的话再分别访问左子树和右子树，&lt;code&gt;maxdepth++&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;循环步骤2，直到所有的节点都被访问到。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里可以使用&lt;strong&gt;队列&lt;/strong&gt;保存需要被访问的节点，如下图所示，分别在头和尾弹出和插入节点，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://c.biancheng.net/uploads/allimg/180913/2-1P913113140553.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;结合上面的步骤，&lt;code&gt;depth = 1&lt;/code&gt;，将root的根节点添加到队列结尾&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们一次将一层的节点放入到队列中；&lt;/li&gt;
&lt;li&gt;判断当前队列是否为空。
&lt;ul&gt;
&lt;li&gt;如果当前的队列不为空，那么将队列中的每个节点pop出来之后再考察这个节点的左右子树，如果有就将它们插入到队列的尾巴，&lt;code&gt;depth++&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;如果当前队列为空，return&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以有了下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;maxDepth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 如果为空，那么返回0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 添加根节点
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 考察队列中的每个节点，是否有左子树和右子树
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// 如果有左右子节点，那么添加到队列中
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;下图是资料3中的图示过程，简单明了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ucc.alicdn.com/pic/developer-ecology/f799f2d3440f4cddb47d0b1e28d8198d.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;数据结构&#34;&gt;数据结构&lt;/h2&gt;
&lt;h3 id=&#34;队列&#34;&gt;队列&lt;/h3&gt;
&lt;p&gt;使用&lt;strong&gt;队列&lt;/strong&gt;保存每一层的节点，如下图所示，队列是先进先出的数据结构，包括如下的属性和方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.geeksforgeeks.org/wp-content/cdn-uploads/gq/2014/02/Queue.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;队列头（front），表示队列最开始的元素；&lt;/li&gt;
&lt;li&gt;队列尾（rear），表示队列最后加入的元素；&lt;/li&gt;
&lt;li&gt;队列长度，当前的队列长度，就是rear - front + 1；&lt;/li&gt;
&lt;li&gt;出队（pop），队列头弹出，队列长度-1，front++；&lt;/li&gt;
&lt;li&gt;入队（push），队列尾添加元素，队列长度+1，rear++&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;stl中的queue&#34;&gt;STL中的queue&lt;/h3&gt;
&lt;p&gt;C++的stl使用queue表示队列，常用的操作和属性如下表所示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;front()&lt;/code&gt;：返回 queue 中第一个元素的引用。如果 queue 是常量，就返回一个常引用；如果 queue 为空，返回值是未定义的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;back()&lt;/code&gt;：返回 queue 中最后一个元素的引用。如果 queue 是常量，就返回一个常引用；如果 queue 为空，返回值是未定义的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;push(const T&amp;amp; obj)&lt;/code&gt;：在 queue 的尾部添加一个元素的副本。这是通过调用底层容器的成员函数 push_back() 来完成的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;push(T&amp;amp;&amp;amp; obj)&lt;/code&gt;：以移动的方式在 queue 的尾部添加元素。这是通过调用底层容器的具有右值引用参数的成员函数 push_back() 来完成的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop()&lt;/code&gt;：删除 queue 中的第一个元素。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size()&lt;/code&gt;：返回 queue 中元素的个数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;empty()&lt;/code&gt;：如果 queue 中没有元素的话，返回 true。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;emplace()&lt;/code&gt;：用传给 emplace() 的参数调用 T 的构造函数，在 queue 的尾部生成对象。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swap(queue&amp;lt;T&amp;gt; &amp;amp;other_q)&lt;/code&gt;：将当前 queue 中的元素和参数 queue 中的元素交换。它们需要包含相同类型的元素。也可以调用全局函数模板 swap() 来完成同样的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;典型的使用方法如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// CPP program to illustrate
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Application of push() and pop() function
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// Empty Queue
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myqueue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myqueue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myqueue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myqueue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myqueue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;myqueue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// queue becomes 5, 13, 0, 9, 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// Counting number of elements in queue
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myqueue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;myqueue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;典型题目&#34;&gt;典型题目&lt;/h2&gt;
&lt;h3 id=&#34;二叉树的右视图&#34;&gt;二叉树的右视图&lt;/h3&gt;
&lt;p&gt;题目链接见&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/binary-tree-right-side-view/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;199. 二叉树的右视图 - 力扣（LeetCode）&lt;/a&gt;，如果有了上面题目的框架，这个题目其实很简单，既然每次遍历队列保存的&lt;strong&gt;这一层所有节点&lt;/strong&gt;，而且节点的顺序是从左到右保存的，所以可以在每一层遍历的时候将队列的最后一个node加入到这个vector中，代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rightSideView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// empty rlt for empty tree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// add the last node in the current queue
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emplace_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// add nodes of next layer into the queue
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;二叉树中所有距离为-k-的结点&#34;&gt;二叉树中所有距离为 K 的结点&lt;/h3&gt;
&lt;p&gt;题目见&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/all-nodes-distance-k-in-binary-tree/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;863. 二叉树中所有距离为 K 的结点 - 力扣（LeetCode）&lt;/a&gt;，这道题稍微有点复杂，观察给出的例子（如下图），与5的节点距离为2的节点除了4和7之外还有1，如果仅仅给出4和7是比较简单的，只要以5为根节点，记录depth = 1，套用引子中的程序，将depth = K + 1的所有的节点列出来即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-lc-upload.s3.amazonaws.com/uploads/2018/06/28/sketch0.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;但是往上回溯比较难，换一个思路，我们遍历整个二叉树，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;记录每个节点的&lt;code&gt;father&lt;/code&gt;节点，&lt;code&gt;left&lt;/code&gt;节点和&lt;code&gt;right&lt;/code&gt;节点，将二叉树变成图，表示A与这3个节点的任意一个都是连通的；&lt;/li&gt;
&lt;li&gt;初始化目标节点的&lt;code&gt;depth = 1&lt;/code&gt;，以该节点为圆心，遍历所有的节点，打印出来所有&lt;code&gt;depth = K + 1&lt;/code&gt;的节点&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第2步实际上是对BFS算法的升维，将二叉树转换为图，代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;distanceK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;cm&#34;&gt;/************ PART 1 ************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// find the father node of all the nodes in the tree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;// father node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;// father node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;cm&#34;&gt;/************ PART 2 ************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// find the node with depth of K
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;usedmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;usedmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emplace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;usedmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emplace_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usedmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usedmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usedmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;newQ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//BFS for final rlt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rlt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个程序分为前后两大部分，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一部分遍历二叉树的每一个节点，记录每个节点的父节点，这里我们使用了哈希表来保存每个节点和它的父节点；&lt;/li&gt;
&lt;li&gt;第二部分就是核心代码，以target为圆心，将二叉树当作图来遍历，如果这个node有左右节点或者父节点，则表示它跟其他的节点之间联通，则使用BFS算法访问整个图网络。这里尤其要注意，遍&lt;strong&gt;历图需要标记当前图中的节点是否被访问过&lt;/strong&gt;，否则会被多次重复遍历而陷入到死循环中，在这个程序里面，使用&lt;code&gt;usedmap&lt;/code&gt;来做这件事，其实也可以使用&lt;code&gt;vector&amp;lt;TreeNode *&amp;gt;&lt;/code&gt;来记录。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了方便调试，再补一个寻找target node的程序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FindTargetNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;targetVal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;TreeNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;targetVal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;qu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;颜色交替的最短路径&#34;&gt;颜色交替的最短路径&lt;/h3&gt;
&lt;p&gt;题目见&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/shortest-path-with-alternating-colors/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;1129. 颜色交替的最短路径 - 力扣（LeetCode）&lt;/a&gt;，这道题难度要大一点，但是后面的方法仍然是BFS，代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;89
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BLUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shortestAlternatingPaths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;red_edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blue_edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 由于存在自环或者平行边，所以定义哈希表保存每个结点对应的多条边并初始化
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redGraph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blueGraph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;red&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;red_edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redGraph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;blue&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blue_edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blueGraph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;colorNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 由于存在环和平行边，用数组 visit[x][y][color]=true 代表从节点x到节点y的且颜色为color的边被访问过，防止重复访问
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 第三维[2]有两维，第0维代表红色是否访问，第1维代表蓝色是否访问
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 所有的点初始化为0代表为被访问过
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colorNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// step用于记录当前的步长，即从节点0到各节点的步长，从0逐渐+1自增
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// res代表节点 0 到节点 X 的最短路径的长度，初始化为最大值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;step&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 定义队列进行BFS，并进行初始化，pair&amp;lt;int, int&amp;gt;的意思是 &amp;lt;当前节点, 路径上颜色&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 队列初始化先进&amp;lt;0, 1&amp;gt;, 再进&amp;lt;0, 0&amp;gt;，即我们先访问蓝色，再访问红色。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;lt;node, color&amp;gt; means start from node and select the edge with color
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make_pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BLUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make_pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;// 队首元素出队列，得到其节点，以及颜色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;curNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;curColor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;//若当前已访问的为蓝色边，希望下一个节点的边是红色；反之亦然
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curColor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BLUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;c1&#34;&gt;// 遍历当前节点每一个相邻的节点，寻找相连的红色边
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;nextNode&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blueGraph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;c1&#34;&gt;// 如果 curNode 和 nextNode 相连的红色边未被访问过，访问并加入队列
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                        &lt;span class=&#34;c1&#34;&gt;// 同时需要更新两点之间的最短路径
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;c1&#34;&gt;// make_pair&amp;lt;nextNode, 0&amp;gt; 的含义是标记当前访问的边为红色，下次应该访问蓝色的
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                            &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make_pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curColor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;c1&#34;&gt;// 遍历当前节点每一个相邻的节点，寻找相连的蓝色边
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;nextNode&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redGraph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;c1&#34;&gt;// 如果 curNode 和 nextNode 相连的蓝色边未被访问过，访问并加入队列
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                        &lt;span class=&#34;c1&#34;&gt;// 同时需要更新两点之间的最短路径
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BLUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;c1&#34;&gt;// make_pair&amp;lt;nextNode, 1&amp;gt; 的含义是标记当前访问的边为蓝色，下次应该访问红色的
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                            &lt;span class=&#34;n&#34;&gt;myQue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make_pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BLUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BLUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 根据题意，0 到自身的距离为0；在上述操作后，若 0 到其他节点距离仍为INT_MAX，说明不存在符合要求的路径，设置为-1；
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;从代码可以看出，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;blueGraph/redGraph&lt;/code&gt;保存图中的节点，数据结构是哈希 +  vector，哈希的键是节点，值是和该节点直接相连的其他节点；&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;visited&lt;/code&gt;三维数组标识节点是否被访问过的信息；&lt;/li&gt;
&lt;li&gt;使用队列&lt;code&gt;myQueue&lt;/code&gt;保存BFS中的node，这个队列中的元素是&lt;code&gt;&amp;lt;node, expectColor&amp;gt;&lt;/code&gt;，即从&lt;code&gt;node&lt;/code&gt;出发，从&lt;code&gt;node&lt;/code&gt;起始的边的颜色，如果存在这样的边，那么将这条边的终点node和它的下一条不同颜色的边push进队列，循环往复直到所有的边都被访问到为止。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;接雨水-ii&#34;&gt;接雨水 II&lt;/h3&gt;
&lt;p&gt;题目见&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/trapping-rain-water-ii/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;407. 接雨水 II - 力扣（LeetCode）&lt;/a&gt;，「待补充」。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-hans/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深度优先搜索 - Wikiwand&lt;/a&gt;，维基百科介绍&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://labuladong.gitbook.io/algo/di-ling-zhang-bi-du-xi-lie/bfs-kuang-jia&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BFS 算法解题套路框架 - labuladong的算法小抄&lt;/a&gt;，非常直观富有启发性的介绍文章&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/python27/archive/2011/12/09/2282486.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【算法16】递归算法的时间复杂度终结篇 - python27 - 博客园&lt;/a&gt;，如何评价递归算法的复杂度&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.aliyun.com/article/756316&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;图文详解 DFS 和 BFS | 算法必看系列知识二十四-阿里云开发者社区&lt;/a&gt;，图解DFS和BFS的过程&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>滑动窗口技巧</title>
        <link>https://blog.bugxch.top/p/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%8A%80%E5%B7%A7/</link>
        <pubDate>Sun, 02 Aug 2020 15:40:45 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%8A%80%E5%B7%A7/</guid>
        <description>&lt;p&gt;今天主要刷leetcode的滑动窗口的题目，需要完成如下题目，本文主要记录解题思路和方法，以便加深理解记忆，答案到处都是，只有消化了才是自己的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.cxyxiaowu.com/wp-content/uploads/2020/04/1587885580-7ad02b4170d7e1a.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;首先来看leetcode中No. 3的&lt;strong&gt;无重复字符的最长子串&lt;/strong&gt;这个题目，参考&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;题目链接&lt;/a&gt;，题目很简单&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个字符串，请你找出其中不含有重复字符的 &lt;strong&gt;最长子串&lt;/strong&gt; 的长度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输入: &lt;span class=&#34;s2&#34;&gt;&amp;#34;abcabcbb&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输出: &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;解释: 因为无重复字符的最长子串是 &lt;span class=&#34;s2&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;，所以其长度为 3。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;拿到题目的第一反应就是暴力解法，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先暴力穷举所有的子串$S_i = [S[left], S[right])$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;判断这个子串，如果不含重复字符就记录子串长度$l_i$，此处判断是否有重复字串的时间复杂度是$O(n)$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找出所有记录的子串长度的最大值$max_i{l_i}$。
一段伪代码如下，&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contain&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;重复字符&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;很明显，该方法的时间复杂度是$O(n^3)$，非常费时。这个算法的复杂度主要来自于第一步，仔细想想那个子串伪代码中的第3行有点问题，伪代码可以看作我们用一个窗口截取所有子串，left表示窗口的左边界（包含），right表示窗口的右边界（不包含），如果窗口中含有重复子串，那么不应该继续扩展右边界的，所以right不能一直向右&lt;strong&gt;扩展&lt;/strong&gt;，此时应该向右移动左边界，&lt;strong&gt;缩小&lt;/strong&gt;窗口的长度。以示例中给出的字符串为例，参考下面的示意图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202008/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200802171014.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;所以我们有一个更通用的实现框架。&lt;/p&gt;
&lt;h2 id=&#34;通用框架&#34;&gt;通用框架&lt;/h2&gt;
&lt;p&gt;维护一个&lt;strong&gt;滑动窗口&lt;/strong&gt;，&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;窗口的边界是$[left, right)$，刚开始窗口的长度为0，即left = right = 0；&lt;/li&gt;
&lt;li&gt;维护一个哈希表table，用于记录窗口中的字符的统计情况，比如上面的图一中就&lt;code&gt;table[&#39;a&#39;] = 2, table[&#39;b&#39;] = 1, table[&#39;c&#39;] = 1&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;窗口可&lt;strong&gt;扩展&lt;/strong&gt;可&lt;strong&gt;收缩&lt;/strong&gt;，&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;如果当前窗口中没有重复字符，则窗口扩展，&lt;code&gt;right++&lt;/code&gt;，更新哈希表；&lt;/li&gt;
&lt;li&gt;如果当前窗口中有重复字符，那么窗口收缩，&lt;code&gt;left++&lt;/code&gt;，更新哈希表；&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;直到&lt;code&gt;right&lt;/code&gt;超过需要遍历的字符串的边界为止。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;需要注意，上面的扩展和收缩的时机，对于当前的这个程序，如何判断当前的窗口中是否有重复字符呢？一般的想法是遍历每个键的值，如果有大于1的值就认为有重复字符，而且是在窗口位置发生变化的时候触发遍历动作。其实，这里有一个小技巧，&lt;strong&gt;键值只有在向右扩展的时候才会增长&lt;/strong&gt;，刚开始窗口是没有键的，或者即便有也只能是1，所以在窗口扩展的时候，只要去查看新加入的&lt;code&gt;right&lt;/code&gt;位置的字符的键值是否超过1即可。通过以上分析，我们有了下面的新的伪代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 增大窗口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doesnot&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contain&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repeat&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;charactor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;needs&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shrink&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 缩小窗口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;将上面的伪代码翻译成最后的c++代码，列示如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;lengthOfLongestSubstring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;类似题目&#34;&gt;类似题目&lt;/h2&gt;
&lt;p&gt;下面使用上面的框架解答一下其他的滑动窗口的类似题目&lt;/p&gt;
&lt;h3 id=&#34;最小覆盖子串---力扣leetcode&#34;&gt;最小覆盖子串 - 力扣（LeetCode）&lt;/h3&gt;
&lt;p&gt;题目见&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/minimum-window-substring/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;76. 最小覆盖子串 - 力扣（LeetCode）&lt;/a&gt;：给你一个字符串 S、一个字符串 T，请在字符串 S 里面找出：包含 T 所有字符的最小子串。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;输入:&lt;/strong&gt; S = &amp;ldquo;ADOBECODEBANC&amp;rdquo;, T = &amp;ldquo;ABC&amp;rdquo;
&lt;strong&gt;输出:&lt;/strong&gt; &amp;ldquo;BANC&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也是同样的做法，但是需要搞清楚几个问题&lt;/p&gt;
&lt;h4 id=&#34;何时扩展窗口&#34;&gt;何时扩展窗口？&lt;/h4&gt;
&lt;p&gt;如果窗口中没有将所有的T中的字符包含，那么向右扩展窗口。&lt;/p&gt;
&lt;h4 id=&#34;何时更新长度&#34;&gt;何时更新长度？&lt;/h4&gt;
&lt;p&gt;扩展窗口之后，检查窗口的字符集合。如果当前窗口包含了所有的T中的字符，那么更新子串的起始位置id及长度。&lt;/p&gt;
&lt;h4 id=&#34;何时缩减窗口&#34;&gt;何时缩减窗口？&lt;/h4&gt;
&lt;p&gt;更新长度之后，窗口的左端右移，缩减窗口。于是有了下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// No. 76
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;minWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;startId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rightId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;minLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;matchCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// record the only need characters
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;need&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;need&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;need&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// expand window
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;need&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;matchCount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// shrink the window
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matchCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;need&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;minLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;startId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;rightId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;minLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;need&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;need&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;matchCount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rightId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;startId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rightId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;startId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的写法中，需要注意几个问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;window&lt;/code&gt;仅仅记录了&lt;code&gt;[left, right)&lt;/code&gt;的子串中的出现在need窗口中的字符的情况，并没有对窗口中所有的字符都做统计，其实也没有必要做，因为我们并不关心其他的字符；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minLen&lt;/code&gt;用来记录最短的子串长度，刚开始初始化为字符串的长度+1；&lt;/li&gt;
&lt;li&gt;我们用&lt;code&gt;matchCount&lt;/code&gt;标记匹配的字符的个数，如果匹配了一个字符就加一，否则减一，匹配的标准是该字符的出现次数在window中&lt;strong&gt;不少于&lt;/strong&gt;在need中出现的次数。注意，这个&lt;strong&gt;参数在扩展窗口时增加，在缩减窗口时减少&lt;/strong&gt;，增加或减少之后即刻与need比较判断。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;424-替换后的最长重复字符&#34;&gt;424. 替换后的最长重复字符&lt;/h3&gt;
&lt;p&gt;题目见&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/longest-repeating-character-replacement/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;424. 替换后的最长重复字符 - 力扣（LeetCode）&lt;/a&gt;，题目也比较简单，维护滑动窗口，每次在扩展窗口时候检查当前的窗口中的最多的字符的个数与替换的数量k的和是否大于等于窗口的长度？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果是，则更新窗口的长度，窗口继续扩展；&lt;/li&gt;
&lt;li&gt;如果否，则缩减窗口的长度；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;循环往复，直到窗口的右边界超过了字符串的长度。代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;characterReplacement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// find max count char
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;maxCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;maxLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;1004-最大连续1的个数-iii&#34;&gt;1004. 最大连续1的个数 III&lt;/h3&gt;
&lt;p&gt;题目见&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/max-consecutive-ones-iii/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;1004. 最大连续1的个数 III - 力扣（LeetCode）&lt;/a&gt;，与上一题目类似，直接看代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;longestOnes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rnum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;maxLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看出这个代码与上一题目非常相似，通用框架都是默认扩展窗口，如果不满足某些条件再缩减窗口。&lt;/p&gt;
&lt;h3 id=&#34;992-k个不同整数的数组&#34;&gt;992. K个不同整数的数组&lt;/h3&gt;
&lt;p&gt;题目见&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/subarrays-with-k-different-integers/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;992. K 个不同整数的子数组 - 力扣（LeetCode）&lt;/a&gt;，这个比上面的两道题要复杂点，两次使用双指针解决，基本思路是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;维护像之前一样的滑动窗口，如果当前的窗口不满足条件，那么向右扩张；&lt;/li&gt;
&lt;li&gt;如果窗口满足条件了，停止向右扩张，右边界不变，左边界向右移动（收缩窗口），开始计算满足条件的窗口数目。注意，这里的动作，在满足条件的窗口上再开一个滑动窗口，但是该窗口的右边界不变，不停右移左边界，遍历满足条件的总数；&lt;/li&gt;
&lt;li&gt;如此这般往复循环，直到滑动窗口的右边缘到达字符串的右边界为止。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我第一次提交的代码如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;subarraysWithKDistinct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rnum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// 如果当前的窗口中超过了K个不同的整数，那么需要缩小左边缘（即窗口左移）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;erase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// 当前的窗口有K个不同的整数，移动左边缘，遍历所有满足条件的窗口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;subWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;subWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;erase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;计算结果正确，但是超时了，仔细想想，其实不需要在创建一个subWindow窗口，可以复用原来的窗口，但是遍历完毕需要记得恢复，适当修改代码如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;subarraysWithKDistinct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rnum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;erase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lnum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;erase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// recover the window
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;tmpLeft&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;数据结构&#34;&gt;数据结构&lt;/h2&gt;
&lt;h3 id=&#34;哈希表&#34;&gt;哈希表&lt;/h3&gt;
&lt;p&gt;上面的示例都用到了哈希表，又称为散列表，具体的定义可以参考&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E5%93%88%E5%B8%8C%E8%A1%A8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;哈希表&lt;/a&gt;。与一般的顺序访问的数组等数据结构不同，哈希表将查询的数据映射到表中的位置来记录，加快了查询的速度（类似于数组的下表和数组的值的映射关系）。一般而言，哈希表的查询，插入和删除的性能是$O(1)$。&lt;/p&gt;
&lt;h3 id=&#34;c-stl-中的哈希表&#34;&gt;C++ STL 中的哈希表&lt;/h3&gt;
&lt;p&gt;C++在stl中使用&lt;code&gt;unordered_map&lt;/code&gt;的数据结构保存哈希表，基本的用法如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// C++ program to demonstrate functionality of unordered_map
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// Declaring umap to be of &amp;lt;string, int&amp;gt; type
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;// key will be of string type and mapped value will
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;// be of double type
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// inserting values by using [] operator
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;GeeksforGeeks&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Practice&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Contribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// Traversing an unordered map
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;创建一个哈希表格，在哈希表中添加“键-值”对。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;unordered_map&lt;/code&gt;和&lt;code&gt;unordered_set&lt;/code&gt;有什么区别？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unordered_set&lt;/code&gt;中只保存了键，主要用于查看某元素是否在集合中，不能保存每个键出现的次数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;unordered_map&lt;/code&gt;和&lt;code&gt;map&lt;/code&gt;有什么区别？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;map&lt;/code&gt;中的键值是按序保存的，但是&lt;code&gt;unorederd_map&lt;/code&gt;的键值是无序保存的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二者底层实现的数据结构不同，&lt;code&gt;map&lt;/code&gt;使用的是&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/zh-my/%E7%BA%A2%E9%BB%91%E6%A0%91&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;红黑树&lt;/a&gt;，操作性能分别是$O(logn)$和$O(1)$&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见的操作如下面的代码所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// C++ program to demonstrate functionality of unordered_map
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Declaring umap to be of &amp;lt;string, double&amp;gt; type
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// key will be of string type and mapped value will
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// be of double type
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 新增键值对
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;root2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.414&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;root3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.732&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;log10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.302&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;loge&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 插入键值对，可以使用c++的make_pair函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make_pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;e&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.718&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;PI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 查询方法一
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; not found&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// If key found then iterator to that key is returned
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Found &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 查询方法二
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; not found&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// If key found then iterator to that key is returned
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Found &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 遍历方法一
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;All Elements : &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;itr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// itr works as a pointer to pair&amp;lt;string, double&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// type itr-&amp;gt;first stores the key part and
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// itr-&amp;gt;second stroes the value part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 遍历方法二
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;iter&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要格外注意，除了上面的&lt;code&gt;find&lt;/code&gt;方法之外，查询某个键是否在哈希表中，还可以通过如下代码查询某个键值&lt;code&gt;key&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;umap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; is found&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Not found&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果哈希表中没有这个键值，&lt;strong&gt;那么它会自动添加进去，并赋给它初值&lt;/strong&gt;，所以在查询某个键是否存在时，不要用这样的方法。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://labuladong.gitbook.io/algo/di-ling-zhang-bi-du-xi-lie/hua-dong-chuang-kou-ji-qiao-jin-jie&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;我写了首诗，把滑动窗口算法算法变成了默写题 - labuladong的算法小抄&lt;/a&gt;，非常通俗易懂的算法说明，基本上按照这个顺序来刷题的&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.geeksforgeeks.org/unordered_map-in-cpp-stl/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;unordered_map in C++ STL - GeeksforGeeks&lt;/a&gt;，C++ stl中的unordered_map&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.geeksforgeeks.org/hashing-set-1-introduction/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hashing | Set 1 (Introduction) - GeeksforGeeks&lt;/a&gt;，哈希表的介绍&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>使用linux vs code调试C&#43;&#43;程序</title>
        <link>https://blog.bugxch.top/p/%E4%BD%BF%E7%94%A8linux-vs-code%E8%B0%83%E8%AF%95c-%E7%A8%8B%E5%BA%8F/</link>
        <pubDate>Sun, 26 Jul 2020 08:12:22 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%BD%BF%E7%94%A8linux-vs-code%E8%B0%83%E8%AF%95c-%E7%A8%8B%E5%BA%8F/</guid>
        <description>&lt;p&gt;最近练习leetcode编程，我希望在manjaro系统的vs code上可以单步调试C++代码，找了很多资料都不能正常运行，所以参考&lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/docs/cpp/cpp-debug&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方资料&lt;/a&gt;自己整好了，记录一下。&lt;/p&gt;
&lt;h2 id=&#34;预置条件&#34;&gt;预置条件&lt;/h2&gt;
&lt;p&gt;首先完成如下工作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装vs code;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装插件，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/cpp/cpp/cpp-extension.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确认linux系统已经正确安装gcc，输入如下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc -v &lt;span class=&#34;c1&#34;&gt;# 查看gcc版本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pacman -S build-essential gdb &lt;span class=&#34;c1&#34;&gt;# 安装必要工具軟件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;创建hello-world工程&#34;&gt;创建Hello world工程&lt;/h2&gt;
&lt;p&gt;在本地创建目录，我在本地创建了leetcode的目录，所以有如下的步骤&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir project
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; project
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; helloworld
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;code . &lt;span class=&#34;c1&#34;&gt;# 在当前目录下打开vs code，当前打开的文件夹就是这个“工作空间”&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;阅读完本博客之后，你会在当前的目录下面创建下面的3个文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tasks.json&lt;/code&gt; (compiler build settings)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;launch.json&lt;/code&gt; (debugger settings)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;添加源文件&#34;&gt;添加源文件&lt;/h3&gt;
&lt;p&gt;如图所示，添加新的源文件&lt;code&gt;helloworld.cpp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/cpp/msvc/new-file-button.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在该文件中粘贴如下的源代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;C++&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;from&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;VS Code&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;and the C++ extension!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后保存该文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/cpp/msvc/file-explorer.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;构建helloworldcpp&#34;&gt;构建helloworld.cpp&lt;/h3&gt;
&lt;p&gt;接下来，你将创建一个&lt;code&gt;task.json&lt;/code&gt;文件告诉VS code如何构建(编译)当前的程序。这将触发g++编译器按照源代码创建一个可执行程序。在主菜单选择&lt;strong&gt;终端-&amp;gt;配置默认生成任务&lt;/strong&gt;，然后在下拉菜单选择g++ build active file，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/cpp/wsl/build-active-file.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;你将在&lt;code&gt;.vscode&lt;/code&gt;文件夹下面看到&lt;code&gt;tasks.json&lt;/code&gt;文件，我们进一步编辑这个文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nt&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2.0.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nt&#34;&gt;&amp;#34;tasks&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nt&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;C/C++: g++ build active file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nt&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/bin/g++&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nt&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;s2&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;s2&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;s2&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;s2&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nt&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;nt&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;${workspaceFolder}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nt&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;s2&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nt&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;nt&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;nt&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;关于json文件中变量的具体含义可以进一步参考&lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/docs/editor/variables-reference&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Visual Studio Code Variables Reference&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文件中的指令指定了程序如何运行，当前文件中的&lt;code&gt;args&lt;/code&gt;参数指定了传输给gcc的参数，这些参数必须按照编译器期望的顺序排列。&lt;/p&gt;
&lt;p&gt;这个任务告诉g++将源文件&lt;code&gt;${file}&lt;/code&gt;编译，在当前文件夹下面创建可执行文件&lt;code&gt;helloword&lt;/code&gt;，注意可执行文件的名称和源文件相同，但是去掉了扩展后缀名。&lt;code&gt;label&lt;/code&gt;字段表示你能看到的任务列表，你可以写成任何你想写的东西。&lt;code&gt;group&lt;/code&gt;中的&lt;code&gt;&amp;quot;isDefault&amp;quot;: true&lt;/code&gt;表示你可以使用&lt;code&gt;Ctrl+Shift+B&lt;/code&gt;运行该任务，这个仅仅是为了使用上的方便，你依然可以通过菜单中的选项运行该任务。&lt;/p&gt;
&lt;h3 id=&#34;运行编译程序&#34;&gt;运行编译程序&lt;/h3&gt;
&lt;p&gt;回到原来的&lt;code&gt;helloworld.cpp&lt;/code&gt;程序，按下&lt;code&gt;Ctrl+Shift+B&lt;/code&gt;运行该任务，请留意编辑器下方的终端的打印，在任务运行结束之后一般会提示成功或者失败，如果运行顺利，你可以看到如下的提示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/cpp/wsl/wsl-task-in-terminal.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果留意可以看到当前的文件夹中已经生成了可执行程序&lt;code&gt;helloworld&lt;/code&gt;文件，打开新的终端，即可运行该程序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./helloworld &lt;span class=&#34;c1&#34;&gt;# 运行可执行程序&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/cpp/wsl/wsl-bash-terminal.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改tasksjson&#34;&gt;修改tasks.json&lt;/h3&gt;
&lt;p&gt;你可以修改这个文件中的参数，比如将&lt;code&gt;${workspaceFolder}/*.cpp&lt;/code&gt;替换&lt;code&gt;${file}&lt;/code&gt;，或者也可以将&lt;code&gt;${fileDirname}/${fileBasenameNoExtension}&lt;/code&gt;替换成一个硬编码的程序名称&lt;code&gt;helloworld.out&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;调试源程序&#34;&gt;调试源程序&lt;/h3&gt;
&lt;p&gt;接下来你将创建&lt;code&gt;launch.json&lt;/code&gt;文件，当按下&lt;code&gt;F5&lt;/code&gt;的时候VS Code调用GDB的调试器用于调试程序。找到菜单中的&lt;strong&gt;运行 &amp;gt; 添加配置&lt;/strong&gt;，然后选择&lt;strong&gt;C++ (GDB/LLDB)&lt;/strong&gt;，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/cpp/wsl/build-and-debug-active-file.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们选择&lt;strong&gt;g++ build and debug active file&lt;/strong&gt;，你可以看到此处VS Code自动创建了文件&lt;code&gt;launch.json&lt;/code&gt;文件，文件的内容如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 使用 IntelliSense 了解相关属性。 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 悬停以查看现有属性的描述。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;configurations&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;g++ - 生成和调试活动文件&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cppdbg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;request&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;launch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;program&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;stopAtEntry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;${workspaceFolder}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;environment&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;externalConsole&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;MIMode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gdb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;setupCommands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;为 gdb 启用整齐打印&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-enable-pretty-printing&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;ignoreFailures&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;preLaunchTask&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;C/C++: g++ build active file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;miDebuggerPath&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/bin/gdb&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;很明显在这个文件中&lt;code&gt;program&lt;/code&gt;指定了需要debug的程序，和之前的文件一样，此处就是没有后缀名的与源文件一样的程序，这个例子中就是&lt;code&gt;helloworld&lt;/code&gt;。默认情况下，C++插件不会在代码中插入任何断点，所以&lt;code&gt;stopAtEntry&lt;/code&gt;是&lt;code&gt;false&lt;/code&gt;。如果将该项改为&lt;code&gt;true&lt;/code&gt;，那么就可以让调试器停在主函数的断点处。&lt;/p&gt;
&lt;h3 id=&#34;开始调试&#34;&gt;开始调试&lt;/h3&gt;
&lt;p&gt;回到源文件，按下&lt;code&gt;F5&lt;/code&gt;就可以开始调试了，在代码编辑器的上访可以看到调试的控制条，包括了单步调试，跳过调试，重启调试和停止调试的功能。稍微探索一下就可以发现，&lt;code&gt;F9&lt;/code&gt;是添加断点，其他的调试方法鼠标悬停在上面都会显示快捷键，你看到的编辑器应该是这样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/cpp/wsl/debug-view-variables.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;调试中可以看到每个变量的值，以及监视窗口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是，当前的版本（2019年3月份之后）不会在单步调试模式下将cout的结果打印出来，只有程序运行完成之后才会统一打印出来。&lt;/p&gt;
&lt;/blockquote&gt;</description>
        </item>
        <item>
        <title>[转载]用于深入思考的小工具</title>
        <link>https://blog.bugxch.top/p/%E8%BD%AC%E8%BD%BD%E7%94%A8%E4%BA%8E%E6%B7%B1%E5%85%A5%E6%80%9D%E8%80%83%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Sun, 19 Jul 2020 21:18:11 +0800</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E8%BD%AC%E8%BD%BD%E7%94%A8%E4%BA%8E%E6%B7%B1%E5%85%A5%E6%80%9D%E8%80%83%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;p&gt;为了能够进一步探讨创造力，深度思考，学习，以及AI当中的一些话题，我发现我不得不先写一篇post来引入关于思考的一些工具和运作方式，作为后续posts探讨的基石。这篇文章会基于我在medium上的post进行展开。&lt;/p&gt;
&lt;p&gt;为了掌握一项技能，或者深入一个领域，我们首先要从它们的定义开始入手，即知道，它们是什么，意味着什么。同样的，为了具备创造力，我们首先得弄清楚它最基本的含义是什么。&lt;/p&gt;
&lt;p&gt;所谓创造，其最基本的一个含义就是能够做出、发展出一些之前没有的东西，重点在于“之前没有”。这里很tricky的一个地方在于，只要是世人看不到的、接触不到的，即可认为是“没有”，而不必是哲学意义上的本来所固有之类的抽象属性。而为了创造出“世人看不到”的东西，你仅仅需要去看到那些其他人看不到的东西就可以了。&lt;/p&gt;
&lt;p&gt;这种“看到他人看不到的东西”的技能，叫做“深入思考”。你的思想越有穿透性，你的洞察力越深入，你就越能看到表象之下他人注意不到的事情。并且，这是一个细密并且会随着你认知能力的成长而成长的动态过程：&lt;/p&gt;
&lt;p&gt;为了能够进一步探讨创造力，深度思考，学习，以及AI当中的一些话题，我发现我不得不先写一篇post来引入关于思考的一些工具和运作方式，作为后续posts探讨的基石。这篇文章会基于我在medium上的post进行展开。&lt;/p&gt;
&lt;p&gt;为了掌握一项技能，或者深入一个领域，我们首先要从它们的定义开始入手，即知道，它们是什么，意味着什么。同样的，为了具备创造力，我们首先得弄清楚它最基本的含义是什么。&lt;/p&gt;
&lt;p&gt;所谓创造，其最基本的一个含义就是能够做出、发展出一些之前没有的东西，重点在于“之前没有”。这里很tricky的一个地方在于，只要是世人看不到的、接触不到的，即可认为是“没有”，而不必是哲学意义上的本来所固有之类的抽象属性。而为了创造出“世人看不到”的东西，你仅仅需要去看到那些其他人看不到的东西就可以了。&lt;/p&gt;
&lt;p&gt;这种“看到他人看不到的东西”的技能，叫做“深入思考”。你的思想越有穿透性，你的洞察力越深入，你就越能看到表象之下他人注意不到的事情。并且，这是一个细密并且会随着你认知能力的成长而成长的动态过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你的穿透性越强，你深入的层次就会越深入；&lt;/li&gt;
&lt;li&gt;你的视野越开阔，你所深入的方向就会越丰富；&lt;/li&gt;
&lt;li&gt;你对你要解决的问题理解得越透彻，你就越能把握深入的程度，知道深入到哪个层次就必须停止，否则就是偏离你的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个人生而具备的能力是不同的，但我们不应该仅仅满足于继承于“天赋”的技能恒定值。正如人类区别于动物的地方在于，我们不会去接受大自然给我们的固有设定选项。我们会通过思考去发明工具，通过工具去开创出我们想要的世界。同样地，我们绝不应该也满足于自然给我们的“天赋”这一默认选项，我们会有意识地，通过练习、通过一些工具去塑造和提高我们想要的技能。&lt;/p&gt;
&lt;p&gt;掌握一项技能从来都不是件容易的事情。其第一步，必须要能够排除一些心理成见，让自己能够专注于训练本身。关于“深入思考”，很多人会拒绝去寻找、去接受提高他们思考能力的工具。他们会把这件事看得非常情绪化，非常personal。他们给出的反应是：提高思考的能力？我难道不会思考？你是说我无法掌握我自己的大脑？你是在侮辱我吗？(One direct ruthless answer from psychology to all these questions is yes, except the last one.)我对这些反应的一个看法是，人们非常容易在那些half-mature的技能或事情上得出偏见性的矛盾结论。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你想去一个很远的地方，比如某个跨过太平洋的国家，你会很容易地接受这样一个事实：你不能够仅仅通过步行去完成这趟旅行。你会很乐意地运用一些工具，比如汽车或飞机去帮助你到达你的目的地。&lt;/li&gt;
&lt;li&gt;如果你想去搜索一些信息，你会很容易地接受你不能够仅仅通过自己的双手和眼睛去到处寻找材料。你会很乐意地运用一些工具，比如Google去帮助你寻找你想要的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那你为什么不能接受你需要运用工具才能好地提高你的思考技能的事实呢？人们通常会对那些他们穷尽所有能力都毫无办法的事情表现得客观一些，而对那些他们可以但却不够成熟的事情表现得很情绪化。（这也是为什么你比他人强一点点会引来嫉妒，强大很多会引来羡慕和祝福。）&lt;/p&gt;
&lt;p&gt;请抛掉这些无畏的偏见和情绪，让我们集中于提高思考深度的问题上。&lt;/p&gt;
&lt;p&gt;在我看来，问题列表(question list)，实践和写作是用于提高思考深度的最小巧并且最有效的工具组合。它们足够轻便，任何人都可以轻而易举地得到它们。但这样的易得性，丝毫没有降低它们在帮助你进入一个新的领域，解决一些复杂性难题时的有效性。恰恰相反，它们的小巧易得性，能够像Unix工具或者瑞士军刀一样，不仅能够为你提供各种行之有效的组合方案，而且还能将其复杂度和可操作性控制在你能接受的范围之内。&lt;/p&gt;
&lt;h2 id=&#34;问题列表&#34;&gt;问题列表&lt;/h2&gt;
&lt;p&gt;每一个领域都有独特的思维方式、思考角度和核心思想。在一个领域里的摸爬滚打，能让你学到的最有价值的东西不是这个领域的知识，而是这个领域独有的思维方式和它背后所展现的核心思想。另一方面，所谓进入一个领域，或者说在一个领域里开始入门，指的是你能够真正以这个领域所独有的角度去思考问题，能够用它背后所蕴含的思想去指导你的行事方式，进而让你具备这个领域所特有的做事风格。&lt;/p&gt;
&lt;p&gt;然而，要开始这样一段入门进而不断精深的旅程，你不能够像跑步一样，仅仅对自己说一声“往前”，然后就可以不断前进。大脑不会那样乖乖听话，因为那不是大脑的运作方式。如同钓鱼需要鱼饵，为了能够让大脑开启它的引擎，你也必须提供它的诱饵：“问题”。&lt;/p&gt;
&lt;p&gt;人的思维不会自动地往下深入，它只会根据你能提供给它的问题进行运转。你向什么方向抛出问题，它就向什么地方思考；你的问题越精细，它的思考就会越缜密；你抛给大脑的问题越频繁，它所训练的时间就会越长久。大师和新手之间的差距，在于处理一个问题时，他们头脑中的问题列表不同。大师头脑中的问题列表，不仅详实丰富，并且主次分明。他知道首先应该问出什么样的问题，去把握一件事的主题框架；然后，应该在哪些地方问出一些基本的构架性问题，以掌控住局势；最后，应该在哪些地方抛出更为细致的问题，以便能够进一步精细、优化自己所最关心的核心主题。你必须不断地扩充和删减你的问题列表，让它足够充分而又没有冗余，集中在“关节”性的部分，而不会被表象稀释它们的有效性。&lt;/p&gt;
&lt;p&gt;如何开始你的成长之旅，让你可以不断扩充你的问题列表？特别是开始阶段，如何从0变为1？我想，一份能够跨越领域的通识性的“元问题”列表或许能够给予你帮助。&lt;/p&gt;
&lt;p&gt;进入一个新的领域，你所需要开始的第一个问题系列便是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这个领域为什么会存在？它的意义是什么，能够为世界提供什么价值？&lt;/li&gt;
&lt;li&gt;这个领域关心哪些问题？为什么这些问题值得这个领域关心？&lt;/li&gt;
&lt;li&gt;你对上述问题的解答全面吗？如果是，你如何能够证明你的解答是完整的？如果不是，你怎样才能搜集到这个领域更多的信息？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这些问题所展现的不仅是你如何进入新领域的途径，更是在向你说明，你的大脑如何在阅读上述材料时逐步落地，真正开始深入肤浅的表象，去进一步探索深刻的主题。很多人会嘲笑一些领域的“简单”和“枯燥”，对其从业者所表现出来的对该领域的“诗意”一般的向往表示费解和轻蔑，比如设计、电影、写作、数学和编程。&lt;/p&gt;
&lt;p&gt;面对设计作品，我们往往很难体会到设计者背后的良苦用心。为什么我们会不懂设计？因为我们缺乏最起码的入门。但只要我们通过上面的元问题列表检测一下自己，立刻就会推演出自己应该努力的方向，进入深度的沉思状态。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么设计会存在？它真的仅仅是简单的装饰的堆砌吗？如果是，那为什么有些人会把奢侈品穿成淘宝货，而另外一些人能够把淘宝货穿出奢侈品的格调？如果不是，到底是什么能够让它能够直指你的内心，让你的所有行事方式都跟随设计者的意图移动？（嗯？感觉惊讶吗？嗯，你开始深入思考了）&lt;/li&gt;
&lt;li&gt;这个领域关心哪些问题？关心各种细小元素：长、短、明、暗？为什么这些问题值得这个领域关心？仅仅是因为它能影响你的审美吗？它会不会影响你的其它部分呢？你的情绪？判断力？甚至是你的价值取向？&lt;/li&gt;
&lt;li&gt;你对上述问题的解答全面吗？所谓设计，仅仅考虑的是它的“美”吗？是否有可能我们完全弄错了它所关心的主题呢？会不会有可能它对“美”的理解完全不同于对装饰的关注呢？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;没有问题的引导，你甚至不会知道自己的“不知”，轻易地陷入习焉不察、不以为意的恶习。要知道其中的精髓和内在含义，就不得不细加推敲和反复琢磨。这些“推敲”与“琢磨”都是建立在你的“问题列表”之上的。很多新人面对师傅的指导，常常容易听到一句这样的话，“你得多看看，你再多想想”。在我看来，这是非常粗糙的指导。我应该看什么呢？想什么呢？对于稍有经验的人，没有进行深思熟虑是态度问题。可是，对于初学者来说，他还没有构建出相应的问题列表，还不知道应该问什么问题，应该反复推敲一些什么问题。这也就是俗称的没入门。此时给出一份该领域的问题列表，对于新手的成长将会是极其有帮助的。但即便是无人指导（每一个新领域的开拓者都会遇到这样的情况），跨界的元问题列表，也能为你提供一个很好的探索的起点。&lt;/p&gt;
&lt;p&gt;所谓问之弥深，钻之弥坚，你思维的引擎会随着所问的问题而不断地提升其转速，而的你思考也会随着问题的引领而不断地加深。没有问题做诱饵，你的思考将无法深入，你的思维也无法缜密。“反复推敲”“心思缜密”“行事谨慎”，没有一份问题列表作依托，就会成为你的一厢情愿。&lt;/p&gt;
&lt;p&gt;另一方面，问题列表本身即会构成一个领域的框架。所谓框架，即是一个领域所依托的骨架。如若能够将其骨架上的问题和所思所问一一解决和考量，这个领域的其它部分，便能够得以健康成长。而这些思维的框架无一不是由问题列表所构成，比如波特五力模型，CFA的企业财务健康分析，又或者是创业人士对自己将要构建的世界的分析。在如今创业大潮的时代背景下，列举一份我搜集整理的Google的问题列表，为大家作为参考，翻译如下：&lt;/p&gt;
&lt;h2 id=&#34;google问题列表&#34;&gt;Google问题列表&lt;/h2&gt;
&lt;p&gt;思考一下你理想中的工作是什么样的，不是你当前的设想，而是你五年后的图景你想到什么地方去？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你想做什么事？&lt;/li&gt;
&lt;li&gt;你想赚取多少薪水？&lt;/li&gt;
&lt;li&gt;写下你理想中的工作的介绍 (job description)：想想如果你在网上看到它，它应该是什么样的？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在，再想象你穿越到5年后并且你已经得到了这份工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这时，你的简历上五年前到现在的履历应该是什么样的？&lt;/li&gt;
&lt;li&gt;从五年前到你现在得到这个职位，你应该会经历怎样的历程？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;请继续保持思考你理想中的工作，根据它去评估一下你自己的优势和劣势：你还需要提高哪些方面才能到达哪里？&lt;/p&gt;
&lt;p&gt;顺便提一句，如果你的结论是你现在已经得到了你理想中的工作，那么，这说明你的思考还不够大胆。重新做一遍上述的步骤，并且要保证你理想中的工作是基于你当前实力的延展，而不是毫无根据的幻想。&lt;/p&gt;
&lt;p&gt;如果你按照以上步骤行事，它应该会有效果。如果你不遵循它们，那么你很可能会为YogiBerra的一段话提供一段新的实例证明：“你要小心了，如果你都不知道你的理想乡在哪里，那么你很可能不会到达那里。”&lt;/p&gt;
&lt;p&gt;提出问题和解释问题的技能同给出问题答案的技能同样重要。&lt;/p&gt;
&lt;p&gt;现在，如果你对未来有你自己的一些看法，并且有了一些主意，那么你可以问问自己一些更加残酷的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一家非常小巧并且资本充裕的竞争公司，会如何去撼动你公司的核心业务？&lt;/li&gt;
&lt;li&gt;它会怎样利用数字平台的优势去挖掘你的弱点，或者撬走为你公司带来盈利最多的客户呢？&lt;/li&gt;
&lt;li&gt;你公司当前所做的哪些事情正在摧毁自己的业务呢？&lt;/li&gt;
&lt;li&gt;同质竞争和收益受损是你公司扼杀潜在创新所经常给出的理由吗？&lt;/li&gt;
&lt;li&gt;公司的领导层经常使用自己的产品吗？他们热爱它吗？&lt;/li&gt;
&lt;li&gt;他们愿意把自己的产品作为礼物送给自己的另一半吗？（显然这在很多情况下会有点不切实际，但它依旧是一个很好的思想实验。）&lt;/li&gt;
&lt;li&gt;你的客户热爱你的产品吗？&lt;/li&gt;
&lt;li&gt;还是说，你的客户是被一些其它因素绑定在了你的产品上，但这些因素在未来很可能会消失？&lt;/li&gt;
&lt;li&gt;想象一下如果你的客户完全不会被这些因素所绑定，那会发生什么？&lt;/li&gt;
&lt;li&gt;上一问题的一个有趣的推论是，如果你强迫你的产品团队将产品做得来让客户可以轻易抛弃你的产品而转向你的竞争者，你的产品团队会有什么样的反应？他们依然能够将产品做得来非常出色，以至于客户想要继续使用你的产品，即便是他们不必如此？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;关于产品的问题列表：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;它们有多少部分是建立在独特的技术洞见之上？&lt;/li&gt;
&lt;li&gt;有多少产品人是在高管阵营里面？&lt;/li&gt;
&lt;li&gt;公司是否狠狠地奖励和提拔了那些在创造出色产品中做出最大贡献的人？&lt;/li&gt;
&lt;li&gt;你的决策过程是导向最好的决策？还是导向最容易接受的决策？&lt;/li&gt;
&lt;li&gt;你的员工有多大的自由度？&lt;/li&gt;
&lt;li&gt;如果你的公司里有一名非常有创造力的员工，这名员工能够有足够的自由度去施展和实现他的想法而不用担心他自己的职位高低吗？&lt;/li&gt;
&lt;li&gt;你在新想法的决策是依据产品的优良程度，还是盈利程度？&lt;/li&gt;
&lt;li&gt;在你的公司里，谁的表现会更好呢？是那些掌握了大量信息的人，还是传播了大量信息的人？&lt;/li&gt;
&lt;li&gt;那些掌握大量信息的人会阻止信息在人们之间互相传播吗？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面都是一些非常残酷的问题，并且他们都没有显而易见的答案。但可以肯定的是，如果这些问题不被提出，那么肯定不会有相应的解决方案。&lt;/p&gt;
&lt;p&gt;另外，鉴于我自己的技术背景，这里再提供一份我整理的技术人员的问题列表供大家参考，它们来自于《技术人创业攻略》这本书。&lt;/p&gt;
&lt;h3 id=&#34;许世伟&#34;&gt;许世伟&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;先了解整个背景，看别人一般怎么做&lt;/li&gt;
&lt;li&gt;有哪些新兴的idea，这些idea是不是靠谱，如果我来做，会倾向于哪个方向&lt;/li&gt;
&lt;li&gt;新技术的思考方式是什么&lt;/li&gt;
&lt;li&gt;它要解决的问题是什么&lt;/li&gt;
&lt;li&gt;它和自己要解决的问题有多大的相关性&lt;/li&gt;
&lt;li&gt;你对这个技术的“了解”，是只限于多了解了一个名词？&lt;/li&gt;
&lt;li&gt;你清楚了这个技术背后的具体原理吗？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;产品的思考&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你了解这个产品的业务吗&lt;/li&gt;
&lt;li&gt;了解它的运作方式吗&lt;/li&gt;
&lt;li&gt;这个产品和商业的关系是什么呢&lt;/li&gt;
&lt;li&gt;用户为什么需要我们&lt;/li&gt;
&lt;li&gt;我们到底在颠覆什么&lt;/li&gt;
&lt;li&gt;到底要做什么，应该如何做&lt;/li&gt;
&lt;li&gt;工种认知和服务认知&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为什么要做这个服务
把服务做好，要做哪些功能
某个功能为什么会受到用户群的欢迎&lt;/p&gt;
&lt;h3 id=&#34;刘睿敏&#34;&gt;刘睿敏&lt;/h3&gt;
&lt;p&gt;你想用钱去换技术：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;技术是别人吃饭的东西，为什么会给你？你如果不自己造一个饭碗，别人为什么会把他的给你呢？&lt;/li&gt;
&lt;li&gt;什么叫自主可控？自己做的，从无到有的东西叫自主可控。不是自己做的，就不可控&lt;/li&gt;
&lt;li&gt;产业链上最核心的技术有哪些？你是否掌握了这些核心技术？&lt;/li&gt;
&lt;li&gt;你是否在持续跟踪这些核心技术？在应用真正开始盛行之前，你做好了理论上的准备吗？&lt;/li&gt;
&lt;li&gt;你是否只能谈一些如何应用、基于实践和操作层面的东西？&lt;/li&gt;
&lt;li&gt;你能深入细谈核心的技术要点和设计思路吗？&lt;/li&gt;
&lt;li&gt;你是否理解你修改的开源产品背后的设计思路？&lt;/li&gt;
&lt;li&gt;你是否有循序渐进地、逐层深入地了技术的核心？&lt;/li&gt;
&lt;li&gt;上层的工具开发，你是否有做相应的工作？中层的解析执行，你是否知道它们遵循的路径是什么？底层的优化，你是否知道该如何设计，你的优化又如何与其它模块配合？&lt;/li&gt;
&lt;li&gt;你的角色是否仅仅是一个使用者？&lt;/li&gt;
&lt;li&gt;你是否甚至连这个领域的理论都不清楚，还混淆了其中的各种概念&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;这篇文章转载自下面的公众号，大家可以关注公众号GeekArtT&lt;/p&gt;</description>
        </item>
        <item>
        <title>01背包问题详解</title>
        <link>https://blog.bugxch.top/p/01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;p&gt;背包问题是非常经典的动态规划问题，但是中文书籍和资料很少有把这个问题说得清晰明了的，问题表述不清，递推公式错误，不一而足，我在彻底想清楚这个问题后，觉得很有必要记录下整个思考过程。&lt;/p&gt;
&lt;h2 id=&#34;原始问题&#34;&gt;原始问题&lt;/h2&gt;
&lt;p&gt;当前有$n$件物品，第$i$件物品的重量为$w_i$，价值为$p_i$，当前有一个容量为$C$的背包。此处物品的重量，价值以及背包的容量都是非负整数。从这些物品中精心挑选若干件装入包中，这若干件被挑选的物品&lt;strong&gt;总重量不超过背包容量$C$，总价值尽量大&lt;/strong&gt;，那么所有可能的挑选方法得到的&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最大值为多少？&lt;/li&gt;
&lt;li&gt;放进去哪些物件得到这个最大值？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;问题的表述比较抽象，如果上面的问题有统一的算法，那么即便问题的规模缩小，问题解决的逻辑也不会有变化，所以从规模比较小的情形入手，更容易分析出来。假设背包容量是4kg，我们有3件物品，每件物品的价格以及重量见下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;物品&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;重量/kg&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;价格/$&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我相信大多数人看到这个问题，会使用如下的&lt;strong&gt;贪婪算法&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;贪婪算法&#34;&gt;贪婪算法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第1个想法是将物品按照价格从高到低进行排序，如果背包的空余容量可以容纳该物品，则将它放入背包。按照这个方法处理对于上面的例子，结果应该是仅仅放入第3件物品，价值是10，但是明显是错的，因为放入物品1和2的价值更大（17），所以&lt;strong&gt;这个方法行不通&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与上面的方法类似，可以按照重量从轻到重装入背包，但是对于下面的情形一样行不通&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;重量/kg&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;价格/$&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;放入背包的重量是物品1和2，总重是3，价值是17，正确答案是放入1和3，总价值是26，所以这种方法&lt;strong&gt;明显是错误的&lt;/strong&gt;。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;另一种改进的方法，定义物品的价值密度为&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$$
\rho_i = p_i/w_i
$$
按照价值密度由高到低排序，依次核验后放入背包，但是按照该算法处理下面的情形依然是失败的&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;重量/kg&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;价格/$&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$\rho_i$&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;该方法的结果是放入1和3，但是明显2和3号的价值更大。&lt;/p&gt;
&lt;p&gt;所以，无论是按照重量，大小，还是密度排序，这样的方法都是错误的。其实考虑最周全的方法，求$n$件物品的是否放入背包的全部组合，记录所有总重量可以放入背包的组合的价值，然后选一个最大值即可，但是对于$n$件物品，需要考虑的组合有$2^n$组，算法的复杂度很高，当$n$比较大的时候就很不实际。&lt;/p&gt;
&lt;p&gt;上面的三种方法使用贪婪算法，下面是《算法的乐趣》中对贪婪算法的描述，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;贪婪算法是寻找最优解的常用方法，该方法将求解的过程分成若干步骤，在每个步骤都应用贪心原则，选取当前状态下最好的或者最优的选择（局部最有利的选择），并以此希望最后堆叠出的结果是最好的或者最优的解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;之前的算法将物品的选择分解为依次挑选物品，这里的次序可以是价值从高到低，重量从低到高或者密度从大到小，并且希冀于每一步结束之后，整体上的价值是最高的，重量是最轻的或者密度是最大的。这个就是明显的贪婪算法思想，但是&lt;strong&gt;局部最优不等于全部最优&lt;/strong&gt;，因此这样的算法是失败的。&lt;/p&gt;
&lt;h2 id=&#34;动态规划&#34;&gt;动态规划&lt;/h2&gt;
&lt;h3 id=&#34;重新定义问题&#34;&gt;重新定义问题&lt;/h3&gt;
&lt;p&gt;重新思考这个问题，换一个角度将其理解为&lt;strong&gt;有限空间利用价值最大化&lt;/strong&gt;的问题，我们更清晰的描述一下这个问题，有助于我们进一步思考。&lt;strong&gt;从$n$个物品中挑选出其中的$m(m \le n)$个，用于填充大小为$C$的空间，&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;使得$m$个物件的的总重量不超过$C$，即$ \sum_{k=1}^{m}{w_k} \le C$&lt;/li&gt;
&lt;li&gt;在满足条件1的情况下，$m$个物件的总价值在所有可能的挑选组合中&lt;strong&gt;最大&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们用$V[i, C]$表示这$m$个物件的总价值，即
$$
V[i,C] = \max_{s.t.}{\sum_{k=1}^{m}{p_k}}，m \le n
$$
重申一下$V[i,C]$的含义，它表示**使用$i$个物件充分填充空间$C$得到的最大价值，**所以，这个问题就需要找到两样答案，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$V[i,C]$的值；&lt;/li&gt;
&lt;li&gt;得到$V[i,C]$的值对应的$m$个物件的集合$M_i$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;很多文章根本就没有把$V[i,C]$的含义说清楚！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;很多文章根本就没有把$V[i,C]$的含义说清楚！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;很多文章根本就没有把$V[i,C]$的含义说清楚！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请注意，这个含义非常重要，在后面的推导和计算过程中会反复使用，请务必深刻理解！&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;递推思路&#34;&gt;递推思路&lt;/h3&gt;
&lt;p&gt;注意前方高能，&lt;strong&gt;下面是这个算法的关键&lt;/strong&gt;, 假定我们已经得到上面两个问题的答案，**如果此时再有第$i + 1$个物品加进来，该怎么处理？**此时，问题转换为求&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;使用$i + 1$个物件充分填充空间C得到的最大价值$V[i + 1,C]$&lt;/li&gt;
&lt;li&gt;以及$V[i + 1,C]$对应的物件的组合$M_{i+1}$&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;当你手里拿着这个重量为$w_{i+1}$的物品，准备填充容量为$C$的&lt;strong&gt;空包&lt;/strong&gt;时候（&lt;strong&gt;注意此处的空包，不要想当然得以为包里面已经有前面的$i - 1$中挑选的物件&lt;/strong&gt;了），有下面两种情形，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;该物件的重量大于背包的容量，即$w_{i+1} \gt C$，那么这个物品无论如何也放不进背包，因此这个物品不会被选中，所以只能&lt;strong&gt;使用前面$i$个物件填充$C$&lt;/strong&gt;，得出$V[i + 1,C] = V[i, C]，M_{i + 1} = M_{i}$。&lt;/li&gt;
&lt;li&gt;该物件的重量小于等于背包容量，即$w_{i+1} \le C$，这个时候你有两种选择，&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;先将这个物件放入背包，此处背包的可用空间还有$C-w_{i+1}$，那么可以使用之前的$i$件物品去充分填充这个剩余空间。注意，此时背包空间由两部分的物件充分填充，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/_u80CC_u53051582427182205.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;背包&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;物件$i+1$充分填充空间$w_{i+1}$，该空间的最大价值为$p_{i+1}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;之前的$i$个物件充分填充剩余的空间$C - w_{i+1}$，该空间的最大价值为$V[i-1, C-w_{i+1}]$
所以，当前的情形下**使用$i+1$个物件填充空间$C$**的最大价值是上述二者的和，即$V[i+1, C] = V[i, C-w_{i+1}] + p_{i+1}，M_{i+1} = M_i\bigcup  i+1$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不放入背包，那结果和之前的第一种情形一样，空间$C$由前面的$i$件物品充分填充，那么$V[i + 1,C] = V[i, C]，M_{i + 1} = M_{i}$。
因此，结合上面的分析，对于这种可以放入背包的情形，取二者的最大值，有$V[i+1, C]=\max {V[i, C-w_{i+1}] + p_{i+1}，V[i, C]}$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综合以上分析，我们得到了一个递推关系式，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/202002/image-20200223120801234.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200223120801234&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;**终于水落石出！**将递推关系式中的$i$换成$i-1$，于是得到如下的结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/202002/image-20200223120832675.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200223120832675&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;初始条件及推导方法&#34;&gt;初始条件及推导方法&lt;/h3&gt;
&lt;p&gt;根据上面的推导式，就可以求出最后的结果，最后还有两点需要明确：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;$V[i, C]$的最初的值是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;回想一下这个值表示的含义，&lt;strong&gt;使用$i$个物件充分填充空间$C$得到的最大价值&lt;/strong&gt;，仔细考虑这个含义可以得到&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$V[0,0] = 0$，使用0个物件填充大小为0的空间的最大价值肯定是0&lt;/li&gt;
&lt;li&gt;$V[0,C] = 0$，使用0个物件填充大小为C的空间的最大价值肯定是0，背包空空如也，价值为0&lt;/li&gt;
&lt;li&gt;$V[i,0] = 0$，使用$i$个物件填充大小为0的空间的最大价值肯定是0，背包空空如也，价值为0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;如何根据最初的值，一步步推导出最终的结果$V[i, C]$？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;再观察上面的递推公式，$i$个物件总的最大价值依赖于前$i-1$个物件总的最大价值以及当前第$i$个物件本身的重量以及价值，换句话说，如果&lt;strong&gt;我知道了前$i-1$个物件总的最大价值以及当前第$i$个物件本身的重量以及价值，那么我也能推导出$i$个物件总的最大价值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;更仔细的观察公式里面的max的公式，我们不仅需要知道$V[i-1, C]$，还需要知道$V[i-1, C-w_i]$，特别地，这里的$w_i$表示第$i$个物件的重量，它可以是任意的非负整数，因此我们需要知道$V[i-1,0]$到$V[i-1,C]$的所有值，于是下面的&lt;strong&gt;二维数组&lt;/strong&gt;填充就呼之欲出。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二维数组&#34;&gt;二维数组&lt;/h3&gt;
&lt;p&gt;我们使用二维数组记录$V[i,C]$，二维数组的行数为物件的总数$i$，二维数组的列数是背包的容量$C+1$（&lt;strong&gt;注意此处多加了一列，因为从上面的推导看出我们需要知道$V[i-1,0]$的值，所以多加一列作为第0列&lt;/strong&gt;），我们使用之前的问题，使用4Kg容量的背包挑选下面的物件&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;物品&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;重量/kg&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;价格/$&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我们一步步看看这个表格怎么填充，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;建立空的二维数组，行数是3，列数是5，表格中的所有值都是未知数（&lt;strong&gt;注意此表从第0列开始，我们数第0列，第1列直到第4列&lt;/strong&gt;），&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223091313487.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据之前的推论$V[i,0] = 0,i = 1,2,3$，所有行的&lt;strong&gt;第0列都是0&lt;/strong&gt;，得到如下的表格&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223091338864.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算&lt;strong&gt;第1行&lt;/strong&gt;的值$V[1,k],k=1,2,3,4$，再回想一下这个含义的意思，&lt;strong&gt;使用1个物件填充空间为$k$的最大价值&lt;/strong&gt;，第一个物件的重量是1，价值为8，那么&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以填充大小为1的空间，填充后的剩余空间为0，总价值为8，即$V[1,1]= 8$；&lt;/li&gt;
&lt;li&gt;可以填充大小为2的空间，填充后的剩余空间为1，&lt;strong&gt;但是此时你手上没有别的物件了，所以填充到此为止&lt;/strong&gt;，总价值为8，即$V[1,2]= 8$；&lt;/li&gt;
&lt;li&gt;可以填充大小为3的空间，填充后的剩余空间为2，但是此时你手上没有别的物件了，所以填充到此为止，总价值为8，即$V[1,3]= 8$；&lt;/li&gt;
&lt;li&gt;可以填充大小为4的空间，填充后的剩余空间为3，但是此时你手上没有别的物件了，所以填充到此为止，总价值为8，即$V[1,4]= 8$；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是，我们得到第一行的值如下表所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223093129212.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有了&lt;strong&gt;第2行&lt;/strong&gt;的值，就可以根据之前的递推公式机械式得计算，第2件物品的重量为$w_2=3$，价值为$p_2=9$，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第2件物品的$w_2&amp;gt;1$，所以&lt;strong&gt;根据递推公式&lt;/strong&gt;计算$V[2,1]=V[1,1]=8$，这件物品不放入包中；&lt;/li&gt;
&lt;li&gt;第2件物品的$w_2&amp;gt;2$，所以&lt;strong&gt;根据递推公式&lt;/strong&gt;计算$V[2,2]=V[1,2]=8$，这件物品不放入包中；&lt;/li&gt;
&lt;li&gt;第2件物品的$w_2=3$，所以&lt;strong&gt;根据递推公式&lt;/strong&gt;计算$V[2,3]=\max {V[1, 3-w_2] + p_{2}，V[1, 3]}=\max {V[1,0] + 9，V[1, 3]}=9$，这件物品放入包中；&lt;/li&gt;
&lt;li&gt;第2件物品的$w_2&amp;lt;4$，所以&lt;strong&gt;根据递推公式&lt;/strong&gt;计算$V[2,4]=\max{V[1, 4-w_2] + p_{2}，V[1, 4]}=\max{V[1, 1] + 9，V[1, 4]}=17$，这件物品放入包中；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是得到第二行的结果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223094741518.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照计算第2行值的方法，计算第3行的值，结果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223095049499.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;所以最终的结果是用3个物件填充空间为4的背包，得到的最大价值为$V[3,4] = 17$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;放入哪些物件&#34;&gt;放入哪些物件&lt;/h3&gt;
&lt;p&gt;但是且慢，文章的开头还有一个问题，我们放进去哪些物件，得到这个最大值的呢？请注意之前的递推思路那一小节中的物件集合$M_i$的变化，&lt;strong&gt;当且仅当$V[i, C] = V[i-1, C-w{i}] + p_{i}$时，第$i$件物品才会被放进来&lt;/strong&gt;。再仔细观察一下递推公式，我们可以看到$V[i,C]$的值要么等于$V[i-1, C-w{i}] + p_{i}$，要么等于$V[i-1,C]$，所以可以确认&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果$V[i, C] = V[i-1, C]$，那么第$i$件物品没有被放入背包中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是仅仅有这个条件判断是不是已经足够了，如果第$i$个物品是被放入背包中的，下一步回溯还是考察$V[i-1,C]$是否与$V[i-2,C]$的值相等吗？回到之前的那幅图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/_u80CC_u53051582427182205.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;总的问题与子问题有相同的结构，如果第$i+1$个物品已经验证放入背包中了，更小的问题是&lt;strong&gt;使用$i$个物件填充大小为$C-w_{i+1}$空间&lt;/strong&gt;，那么我们应该考察$V[i,C-w_{i}]$是否与$V[i-1,C-w_{i}]$的值相等。所以回溯的算法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从二维数组的$V[i, C]$开始，检查$V[i, C]$的值是否与$V[i-1, C]$相同；&lt;/li&gt;
&lt;li&gt;考察第1步的结果&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果相同，那么第$i$件物品没有被放入背包，令$i-1\rightarrow i$，即继续检查$V[i-1, C]$的值是否与$V[i-2, C]$相同；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果不同，那么第$i$件物品被放入背包，令$i-1\rightarrow i, C-w_i\rightarrow C$，即继续检查$V[i-1, C-w_i]$的值是否与$V[i-2, C-w_i]$相同；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;不停使用步骤2的逻辑，直到考察到$i=0$为止。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么，就可以逐行倒着回溯二维数组，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;我们先看第3行，$V[3,4]=V[2,4]$，所以第3件物品没有放入背包；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223105102842.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第2行，$V[2,4]\ne V[1,4]$，所以&lt;strong&gt;第2件&lt;/strong&gt;物品放入背包，接下来需要检查$V[1,4-w_2]$是否与$V[0,4-w_2]$相同；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223105256019.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第1行，$V[1,1]\ne V[0,1]$，所以&lt;strong&gt;第1件&lt;/strong&gt;物品放入背包（注意此处$V[0,4] = 0$，二维表格没有第0行，但是我们初始条件中推导过这个值），检查结束。
&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223105624569.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;编程代码&#34;&gt;编程代码&lt;/h3&gt;
&lt;p&gt;下面是C++的程序代码，&lt;/p&gt;
&lt;p&gt;定义一个背包的类，默认有10物件，每个物件大重量为6，最高价格为35。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// knapsack.h
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;ctime&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;tagObj&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Knapsack&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Knapsack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxWeight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxPrice&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SolvePro&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;friend&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Knapsack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalPrice_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;方法如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// knapsack.cpp
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;knapsack.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;ctime&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Knapsack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Knapsack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxWeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;minPrice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;srand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Obj&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;c1&#34;&gt;// 随机生成价值和重量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxWeight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;minPrice&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;totalPrice_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ostream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Knapsack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Dispaly knapsack list&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; object as below&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;: weight &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s&#34;&gt;&amp;#34;, price &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Knapsack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SolvePro&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;totalPrice_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;startRow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;startCol&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startRow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startRow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startCol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startRow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startCol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;startRow&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;index_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startRow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;startCol&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;knapsack_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startRow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;startRow&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Weight capacity is &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalW&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;, and totalPrice is &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;, selected obj index is: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用main函数，调用如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;knapsack.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Knapsack&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nap1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 我们有10个物品，最大重量为6，最大价值为10，价值和重量都是随机生成的
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nap1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;nap1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SolvePro&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 背包容量30
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;结果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202002/image-20200223110538410.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/a66d5ce49df5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;0-1背包问题 - 简书&lt;/a&gt;，描述《算法图解》中对该问题的解法，比较有趣&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/Christal-R/p/Dynamic_programming.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;动态规划解决01背包问题 - Christal_R - 博客园&lt;/a&gt;，中文博客写得不错的文章&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://oi-wiki.org/dp/knapsack/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;背包 DP - OI Wiki&lt;/a&gt;，在没有Google下搜索出来的总结比较全面的文章&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.kancloud.cn/kancloud/pack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;背包问题九讲 · 看云&lt;/a&gt;，非常系统的背包问题的解释&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>《CPlusPlus Primer Plus》第九章习题及答案</title>
        <link>https://blog.bugxch.top/p/cplusplus-primer-plus%E7%AC%AC%E4%B9%9D%E7%AB%A0%E4%B9%A0%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88/</link>
        <pubDate>Mon, 27 Jan 2020 12:49:07 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/cplusplus-primer-plus%E7%AC%AC%E4%B9%9D%E7%AB%A0%E4%B9%A0%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88/</guid>
        <description>&lt;img src="https://raw.githubusercontent.com/bugxch/blogpics/master/202001/c%2B%2B.jpg" alt="Featured image of post 《CPlusPlus Primer Plus》第九章习题及答案" /&gt;&lt;p&gt;假期做题，记录下。&lt;/p&gt;
&lt;p&gt;此处是复习题的答案，编程练习题的答案见&lt;a class=&#34;link&#34; href=&#34;https://github.com/bugxch/Solutions_C-PrimerPlus&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;bugxch/Solutions_C-PrimerPlus&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;answer-1&#34;&gt;Answer #1&lt;/h3&gt;
&lt;p&gt;a) 形参在函数调用时候创建，在函数返回时销毁，自动存储变量，无链接性，所以是自动变量；&lt;/p&gt;
&lt;p&gt;b) 文件共享的变量具有外部链接性，所以使用静态存储外部链接性的变量，比如在A文件中定义，在B中使用extern关键字引用；&lt;/p&gt;
&lt;p&gt;c) 内部链接性，静态存储变量，可以使用static修饰符，或者使用未命名的命名空间；&lt;/p&gt;
&lt;p&gt;d) 无链接性，但是是静态存储变量，在函数内部使用static修饰符定义&lt;/p&gt;
&lt;h3 id=&#34;answer-2&#34;&gt;Answer #2&lt;/h3&gt;
&lt;p&gt;有一下几点区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;using声明仅仅导入特定的名称，但是using编译命令将导入一个名称空间的所有名称；&lt;/li&gt;
&lt;li&gt;假如名称空间和声明区域定义了相同的名称。using声明中如果该名称与局部名称发生冲突，编译器会发出警告，但是using编译指令导入的而名称会被局部版本隐藏。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;answer-3&#34;&gt;Answer #3&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#inlcude &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Enter valud: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Bad input! Please enter a number: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Value = &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;answer-4&#34;&gt;Answer #4&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#inlcude &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Enter valud: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Bad input! Please enter a number: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Value = &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;answer-5&#34;&gt;Answer #5&lt;/h3&gt;
&lt;p&gt;因为两个函数的形参和顺序一样，仅仅是返回值不同，因此无法使用函数重载。如果在不同的文件中使用，这两个函数的作用域不同，有两种方式实现，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以使用static关键字，&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;average&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将函数的声明和定义放在未命名的名称空间中&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;answer-6&#34;&gt;Answer #6&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Other: 10, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;another&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;: 10, -4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;answer-7&#34;&gt;Answer #7&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4, 1, &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4, 1, &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>[转载]双线性插值简介</title>
        <link>https://blog.bugxch.top/p/%E8%BD%AC%E8%BD%BD%E5%8F%8C%E7%BA%BF%E6%80%A7%E6%8F%92%E5%80%BC%E7%AE%80%E4%BB%8B/</link>
        <pubDate>Sun, 26 Jan 2020 22:24:10 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E8%BD%AC%E8%BD%BD%E5%8F%8C%E7%BA%BF%E6%80%A7%E6%8F%92%E5%80%BC%E7%AE%80%E4%BB%8B/</guid>
        <description>&lt;p&gt;该文档转载自&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/xiaqunfeng123/article/details/17362881&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;图像缩放——双线性插值算法&lt;/a&gt;，我搜罗一堆中文文章里面讲得比较清楚的一篇了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gisgeography.com/wp-content/uploads/2016/10/Bilinear-Interpolation-Feature-678x322.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;resize&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在数学上，双线性插值是有两个变量的插值函数的线性插值扩展，其核心思想是在两个方向分别进行一次线性插值。如果选择一个坐标系统使得 f 的四个已知点坐标分别为 (0, 0),(0, 1),(1, 0) 和 (1, 1)，那么插值公式就可以化简为
$$
f(x, y) \approx f(0,0)(1-x)(1-y)+f(1,0) x(1-y)+f(0,1)(1-x) y+f(1,1) x y
$$
用矩阵运算来表示的话就是
&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202001/image-20200127100154664.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;图像的空间变换，也称几何变换或几何运算，包括图像的平移、旋转、镜像变换、转置、缩放等。空间变换可如下表示：设(u,v)为源图像上的点，(x,y)为目标图像上的点，则空间变换就是将源图像上(u,v)处的颜色值与目标图像上(x,y)处的颜色对应起来。
计算机所处理的图像都是指点阵图，也就是用一个像素矩阵来描述一副图像。举个简单的图像：3×3的256级灰度图，也就是高为3个象素，宽也是3个象素的图像，每个象素的取值可以是 0－255，代表该像素的亮度，255代表最亮，也就是白色，0代表最暗，即黑色 。&lt;/p&gt;
&lt;p&gt;假如图像的象素矩阵如下所示：(这个矩阵中，图象处理中最常用的坐标系是：x从左到右，从0开始，y从上到下，也是从0开始)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202001/image-20200127100233659.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果想把这副图放大为 4X4大小的图像，那么第一步肯定想到的是先把4X4的矩阵先画出来再说，好了矩阵画出来了，如下所示，当然，矩阵的每个像素都是未知数，等待着我们去填充&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202001/image-20200127100334197.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
然后要往这个空的矩阵里面填值了，要填的值从哪里来来呢？是从源图中来，好，先填写目标图最左上角的象素，坐标为(0,0)，那么该坐标对应源图中的坐标可以由如下公式得出：
$$
srcX = dstX * (srcWidth / dstWidth) , \
srcY = dstY * (srcHeight / dstHeight)
$$
套用公式，就可以找到对应的原图的坐标了$(0*(3/4),0*(3/4))=&amp;gt;(0&lt;em&gt;0.75,0&lt;/em&gt;0.75)=&amp;gt;(0,0)$，找到了源图的对应坐标,就可以把源图中坐标为(0,0)处的234象素值填进去目标图的(0,0)这个位置了。所有的数值填充之后的结果如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bugxch/blogpics/master/202001/image-20200127100359412.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
这种放大图像的方法叫做&lt;strong&gt;最临近插值算法&lt;/strong&gt;，这是一种最基本、最简单的图像缩放算法，效果也是最不好的，放大后的图像有很严重的马赛克，缩小后的图像有很严重的失真；效果不好的根源就是其简单的最临近插值方法引入了严重的图像失真。比如，当由目标图的坐标反推得到的源图的的坐标是一个浮点数的时候，采用了四舍五入的方法，直接采用了和这个浮点数最接近的象素的值，这种方法是很不科学的，当推得坐标值为 0.75的时候，不应该就简单的取为1，既然是0.75，比1要小0.25 ，比0要大0.75 ,那么目标象素值其实应该根据这个源图中虚拟的点四周的四个真实的点来按照一定的规律计算出来的，这样才能达到更好的缩放效果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;双线型内插值算法就是一种比较好的图像缩放算法，它充分的利用了源图中虚拟点四周的四个真实存在的像素值来共同决定目标图中的一个像素值，因此缩放效果比简单的最邻近插值要好很多，计算量比零阶插值大，但缩放后图像质量高，不会出现像素值不连续的情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;双线性内插值算法描述如下:
　　对于一个目的像素，设置坐标通过反向变换得到的浮点坐标为(i+u,j+v) (其中i、j均为浮点坐标的整数部分，u、v为浮点坐标的小数部分，是取值[0,1)区间的浮点数)，则这个像素得值 f(i+u,j+v) 可由原图像中坐标为 (i,j),(i+1,j),(i,j+1),(i+1,j+1)所对应的周围四个像素的值决定，即：　　
$$
f(i+u, j+v)=(1-u)(1-v) f(i, j)+(1-u) v f(i, j+1)+u(1-v) f(i+1, j)+u v f(i+1, j+1)
$$&lt;/p&gt;
&lt;p&gt;其中f(i,j)表示源图像(i,j)处的的像素值，以此类推。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-blog.csdn.net/20131216232218953?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhcXVuZmVuZzEyMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;假如目标图的象素坐标为(1,1)，那么反推得到的对应于源图的坐标是(0.75,0.75), 这其实只是一个概念上的虚拟象素,实际在源图中并不存在这样一个象素,那么目标图的象素(1,1)的取值不能够由这个虚拟象素来决定，而只能由源图的这四个象素共同决定：(0，0)(0，1)(1，0)(1，1)，而由于(0.75,0.75)离(1,1)要更近一些，那么(1,1)所起的决定作用更大一些，这从公式1中的系数uv=0.75×0.75就可以体现出来，而(0.75,0.75)离(0,0)最远，所以(0，0)所起的决定作用就要小一些，公式中系数为(1-u)(1-v)=0.25×0.25也体现出了这一特点。算法步骤详述：&lt;/p&gt;
&lt;p&gt;假设原始图像大小为size=m×n，其中m与n分别是原始图像的行数与列数。若图像的缩放因子是t(t&amp;gt;0)，则目标图像的大小size=t×m×t×n。对于目标图像的某个像素点P(x，y)通过P*1/t可得到对应的原始图像坐标P’( x1，y1),其中x1=x/t，y1=y/t，由于x1，y1都不是整数所以并不存在这样的点，这样可以找出与它相邻的四个点的灰度f1、f2、f3、f4，使用双线性插值算法就可以得到这个像素点P’(x1，y1)的灰度，也就是像素点P(x，y)的灰度。&lt;/p&gt;
&lt;p&gt;一个完整的双线性插值算法可描述如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过原始图像和比例因子得到新图像的大小，并创建新图像。&lt;/li&gt;
&lt;li&gt;由新图像的某个像素(x，y)映射到原始图像(x’,y’)处。&lt;/li&gt;
&lt;li&gt;对x’,y’取整得到(xx，yy)并得到(xx，yy)、(xx+1，yy)、(xx，yy+1)和(xx+1，yy+1)的值。&lt;/li&gt;
&lt;li&gt;利用双线性插值得到像素点(x,y)的值并写回新图像。&lt;/li&gt;
&lt;li&gt;重复步骤2直到新图像的所有像素写完。&lt;/li&gt;
&lt;/ol&gt;</description>
        </item>
        <item>
        <title>Tensorboad查看pytorch模型</title>
        <link>https://blog.bugxch.top/p/tensorboad%E6%9F%A5%E7%9C%8Bpytorch%E6%A8%A1%E5%9E%8B/</link>
        <pubDate>Fri, 06 Dec 2019 21:53:20 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/tensorboad%E6%9F%A5%E7%9C%8Bpytorch%E6%A8%A1%E5%9E%8B/</guid>
        <description>&lt;p&gt;与tensorflow模型与caffe模型不同，当前的pytorch没有官方的直观查看网络结构的工具，google了下pytorch的网络解析的方法，发现可以将pytorch的model转换成为events文件使用tensorboard查看，记录之。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic1.zhimg.com/v2-f5424ffa46911a547362912542c23dd2_1200x500.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装插件&#34;&gt;安装插件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TensorboardX，TensorboardX支持scalar, image, figure, histogram, audio, text, graph, onnx_graph, embedding, pr_curve and videosummaries等不同的可视化展示方式，具体介绍移步至项目Github 观看详情。使用下面的命令安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tensorboardX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装tensorboard，参考命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tensorboard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;具体过程&#34;&gt;具体过程&lt;/h2&gt;
&lt;p&gt;参考代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#-*-coding:utf-8-*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;torch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;torchvision&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;torch.autograd&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Variable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;tensorboardX&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SummaryWriter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 模拟输入数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;input_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Variable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 从torchvision中导入已有模型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;net&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torchvision&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resnet18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 声明writer对象，保存的文件夹&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SummaryWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log_dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;./log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;comment&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;resnet18&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;net&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该代码中14行声明一个writer对象，分别表示events存放的目录，comment表示事件的title，然后使用如下的方式打开tensorboard&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tensorboard --logpath&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;D:&lt;span class=&#34;se&#34;&gt;\l&lt;/span&gt;og --port&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6006&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后按照命令行提示打开即可。&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.pytorchtutorial.com/pytorch-tensorboardx/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyTorch 使用 TensorboardX 进行网络可视化-PyTorch 中文网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/46eb3004beca&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pytorch使用tensorboardX可视化。超详细！！！ - 简书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pytorch.org/docs/stable/tensorboard.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;torch.utils.tensorboard — PyTorch master documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://blog.bugxch.top/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Kindle最佳排版记录</title>
        <link>https://blog.bugxch.top/p/kindle%E6%9C%80%E4%BD%B3%E6%8E%92%E7%89%88%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Sat, 04 May 2019 08:31:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/kindle%E6%9C%80%E4%BD%B3%E6%8E%92%E7%89%88%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;p&gt;探索了很多遍，下面是我使用calibre的转换书籍功能重新排版书籍的最佳参数，特此记录，这个适用于kindle oasis 2，仅供参考。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置输出格式（此处选择AZW3），基础文字大小，以及行高&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201905/kindle.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;总设置&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;设置段落的缩进与之间的空行间距&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201905/kindle2.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;选择适配的设备型号&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201905/kindle3.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;最终使用kindle的最小行距显示，排版效果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201905/%E6%8E%92%E7%89%88.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>关于</title>
        <link>https://blog.bugxch.top/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6280a60a0947543129e96531.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;关于网站&#34;&gt;关于网站&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;互联网上的自留地，致力于用中文将关心的技术问题讲清楚。写作就是思考的过程，参考&lt;a class=&#34;link&#34; href=&#34;https://baike.baidu.com/item/%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95/50895393&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;费曼学习法&lt;/a&gt;，利用写作完成知识输出，可以加深对知识的理解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;2024年1月1日，网站主题切换成 &lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/themes/hugo-theme-stack/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Stack | Hugo Themes&lt;/a&gt;，并使用github actions 自动编译和部署&lt;/li&gt;
&lt;li&gt;2021年10月，网站主题更换成hexo的&lt;a class=&#34;link&#34; href=&#34;https://github.com/HEIGE-PCloud/DoIt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DoIt主题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2020年12月27日， 将网站的主题从hexo的even切换到LoveIt&lt;/li&gt;
&lt;li&gt;2016年开始写博客，中间在hexo/hugo/csdn/cnblog之间折腾许久，点击&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/bugxch&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;镜像博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;关于我&#34;&gt;关于我&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;欢迎发送邮件到&lt;a class=&#34;link&#34; href=&#34;mailto:bugxch@gmail.com&#34; &gt;bugxch@gmail.com&lt;/a&gt;联系我&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;程序员@魔都，现任职华为海思，从事AI方面的软件开发工作&lt;/li&gt;
&lt;li&gt;初级奶爸，摄影爱好者，数学爱好者，工具控，收音机爱好者，长期主义者&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Manjaro添加开机启动脚本</title>
        <link>https://blog.bugxch.top/p/manjaro%E6%B7%BB%E5%8A%A0%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</link>
        <pubDate>Sun, 24 Feb 2019 20:48:23 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/manjaro%E6%B7%BB%E5%8A%A0%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</guid>
        <description>&lt;p&gt;如何给manjaro添加开机启动脚本。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wiki.manjaro.org/images/thumb/e/ea/New_logo_tex.png/800px-New_logo_tex.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;前段时间折腾小黑T450安装了Manjaro系统，又安装了sublime text 3，顺便参考&lt;a class=&#34;link&#34; href=&#34;https://packagecontrol.io/installation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Installation Package Control指导&lt;/a&gt;安装了package control插件，但是很不幸国内的package control页面已经被屏蔽了。因此，需要给package control设置代理，根据&lt;a class=&#34;link&#34; href=&#34;https://segmentfault.com/a/1190000007621085&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《SublimeText 安装 PackageControl 及 HTTP 代理配置 - Tony的技术笔记 - SegmentFault 思否》&lt;/a&gt;我看到一个方法是配置完设置之后，在shell中运行的命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;polipo &lt;span class=&#34;nv&#34;&gt;socksParentProxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;localhost:1080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;设置一下sublime text 3中的package control的代理就可以使用它安装插件了。但是每次开机之后都要敲入上面的命令，非常麻烦。&lt;/p&gt;
&lt;h2 id=&#34;安装过程&#34;&gt;安装过程&lt;/h2&gt;
&lt;p&gt;参考官方资料，按照如下的步骤设置了自动启动脚本&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新增一个autostart的桌面启动项，这一项开机后会随桌面启动&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/.config/autostart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch AutoExec.desktop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在创建的&lt;code&gt;AutoExec.desktop&lt;/code&gt;中写入如下的内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Desktop Entry&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Application
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;Exec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/AutoExec.sh&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;Terminal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AutoExec
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;X-GNOME-Autostart-enabled&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建开机自启动脚本&lt;code&gt;/etc/AutoExec.sh&lt;/code&gt;，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo touch /etc/AutoExec.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod +x /etc/AutoExec.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;写入如下的内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;polipo &lt;span class=&#34;nv&#34;&gt;socksParentProxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;localhost:1080 &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;即在开机之后的后台自动启动。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/index.php/Systemd&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;systemd - ArchWiki&lt;/a&gt;，官方资料&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bbs.archlinux.org/viewtopic.php?id=86815&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[Solved] Execute script on startup / Newbie Corner / Arch Linux Forums&lt;/a&gt;，论坛资料&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://segmentfault.com/a/1190000007621085&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SublimeText 安装 PackageControl 及 HTTP 代理配置 - Tony的技术笔记 - SegmentFault 思否&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Manjaro安装CUDA教程</title>
        <link>https://blog.bugxch.top/p/manjaro%E5%AE%89%E8%A3%85cuda%E6%95%99%E7%A8%8B/</link>
        <pubDate>Sat, 09 Feb 2019 19:02:24 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/manjaro%E5%AE%89%E8%A3%85cuda%E6%95%99%E7%A8%8B/</guid>
        <description>&lt;p&gt;去年年底安装将我的Thinkpad T450的双系统中的opensuse换成了&lt;a class=&#34;link&#34; href=&#34;https://manjaro.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Manjaro&lt;/a&gt;，折腾安装了下CUDA，是为记录。&lt;/p&gt;
&lt;h2 id=&#34;基本安装&#34;&gt;基本安装&lt;/h2&gt;
&lt;h3 id=&#34;nvidia显卡安装&#34;&gt;NVIDIA显卡安装&lt;/h3&gt;
&lt;p&gt;Manjaro系统安装显卡比较简单，它有一个命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mhwd -a &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;pci or usb connection&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;free or nonfree drivers&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0300&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-a&lt;/strong&gt;: 自动检测和安装合适的显卡驱动&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[pci or usb]&lt;/strong&gt;: 为通过PCI或者USB连接的设置安装驱动&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[free or nonfree]&lt;/strong&gt;: 安装免费或者非免费的驱动&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;0300&lt;/strong&gt;: 确认即将安装的显卡的驱动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们要安装英伟达的驱动，只要使用下面的一行命令即可搞定&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mhwd -a pci nonfree &lt;span class=&#34;m&#34;&gt;0300&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;等待安装结束，使用如下命令查看是否已经安装完成&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nvidia-smi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我的显示结果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201902/smi.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从上图可知，我的显卡型号是GeForce 940M，显卡的驱动版本是415.27。&lt;/p&gt;
&lt;h3 id=&#34;cuda安装&#34;&gt;CUDA安装&lt;/h3&gt;
&lt;h4 id=&#34;安装命令&#34;&gt;安装命令&lt;/h4&gt;
&lt;p&gt;Manjaro的CUDA安装也是异常简单，一行命令搞定&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pacman -S cuda cudnn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这行命令可能需要花费一些时间，请耐心等待。&lt;/p&gt;
&lt;h4 id=&#34;验证安装&#34;&gt;验证安装&lt;/h4&gt;
&lt;p&gt;完成之后，我们进入cuda的安装路径，我的路径是&lt;code&gt;/opt/cuda&lt;/code&gt;，你可以使用下面的命令将CUDA的示例程序拷贝到你的用户主目录下，之后编译程序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp -r /opt/cuda/samples ~
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd ~/samples
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此时就使用nvcc编译器开始编译CUDA的sample程序，这个花费时间更长，应该在半小时左右，等待编译结束，使用下面的命令验证是否成功&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/samples/bin/x86_64/linux/release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./deviceQuery
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在窗口中查看最后一行的结果是否为pass，如果是则表示CUDA安装成功。&lt;/p&gt;
&lt;h2 id=&#34;双显卡配置&#34;&gt;双显卡配置&lt;/h2&gt;
&lt;p&gt;我的电脑有两个显卡，一个是intel的集成显卡，一个是NVIDIA的独显。&lt;/p&gt;
&lt;h3 id=&#34;安装显卡切换程序&#34;&gt;安装显卡切换程序&lt;/h3&gt;
&lt;p&gt;Manjaro的双显卡配置有点问题，Bumblebee还是有点问题，使用下面的命令重新安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pacman -S virtualgl lib32-virtualgl lib32-primus primus
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装双显卡切换程序bumblebee&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mhwd -f -i pci video-hybrid-intel-nvidia-bumblebee
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 允许服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; bumblebeed
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 添加用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo gpasswd -a &lt;span class=&#34;nv&#34;&gt;$USER&lt;/span&gt; bumblebee
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;为了防止重启之后不能进入登录界面，需要做如下的配置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 /etc/default/grub&lt;/li&gt;
&lt;li&gt;找到并且改为：GRUB_CMLINE_LINUX_DEFAULT=&amp;ldquo;quiet &lt;strong&gt;acpi_osi=! acpi_osi=Linux acpi_osi=’Windows 2015’ pcie_port_pm=off&lt;/strong&gt; resume=&amp;hellip;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;运行sudo update-grub，重启&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;测试显卡性能&#34;&gt;测试显卡性能&lt;/h3&gt;
&lt;p&gt;使用下面的shell命令安装显卡测试程序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装测试软件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pacman -S mesa-demos
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 集成显卡性能&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;glxgears -info
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 独显性能&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;optirun glxgears -info
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 或者&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;primusrun glxgears -info
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要注意的是，之后运行的所有程序，如果需要使用独立显卡，需要在命令的前面加上&lt;code&gt;optirun&lt;/code&gt;或者&lt;code&gt;primusrun&lt;/code&gt;的前缀。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 打开nvida面板&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;optirun -b none nvidia-settings -c :8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 不依赖Bumblebee来使用CUDA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo tee /proc/acpi/bbswitch &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ON&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 使用完CUDA 停止NVIDIA显卡&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo rmmod nvidia_uvm nvidia &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo tee /proc/acpi/bbswitch &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; OFF
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;inxi -G &lt;span class=&#34;c1&#34;&gt;# 查看显卡情况&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;optirun nvidia-smi &lt;span class=&#34;c1&#34;&gt;# 查看CPU情况&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://medium.com/@joelognn/installing-tensorflow-1-6-0-gpu-on-manjaro-linux-9657fa63478&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Installing Tensorflow 1.6.0 + GPU on Manjaro Linux – Dr. Joe Logan – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/yangruiGB2312/p/9004335.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Manjaro折腾笔记：我的数据科学环境搭建之路 - 杨睿 - 博客园&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://leblancfg.com/installing-cuda-cudnn-tensorflow-nvidia-gtx960.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;leblancfg.com – Notes on installing CUDA, CuDNN and Tensorflow on Manjaro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.manjaro.org/index.php/Configure_Graphics_Cards&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Configure Graphics Cards - Manjaro Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>tf中的padding方式SAME和VALID有什么区别?</title>
        <link>https://blog.bugxch.top/p/tf%E4%B8%AD%E7%9A%84padding%E6%96%B9%E5%BC%8Fsame%E5%92%8Cvalid%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</link>
        <pubDate>Wed, 14 Nov 2018 07:09:58 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/tf%E4%B8%AD%E7%9A%84padding%E6%96%B9%E5%BC%8Fsame%E5%92%8Cvalid%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</guid>
        <description>&lt;p&gt;Tensorflow中的padding有两种方式，其中的SAME方式比较特殊，可能产生非对称pad的情况，之前在验证一个tensorflow的网络时踩到这个坑。&lt;/p&gt;
&lt;h2 id=&#34;tensorflow的计算公式&#34;&gt;Tensorflow的计算公式&lt;/h2&gt;
&lt;h3 id=&#34;二维卷积接口&#34;&gt;二维卷积接口&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;conv2d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strides&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data_format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;NHWC&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dilations&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;padding计算公式&#34;&gt;padding计算公式&lt;/h3&gt;
&lt;p&gt;需要注意padding的配置，如果是字符串就有&lt;code&gt;SAME&lt;/code&gt;和&lt;code&gt;VALID&lt;/code&gt;两种配置，如果是数字list就明确表明padding在各个维度的数量。&lt;/p&gt;
&lt;p&gt;首先，&lt;code&gt;padding&lt;/code&gt;如果表示确切的数字，其维度是input维度的2倍，因为每个维度两个边需要补pad，比如宽度的左边和右边，高度的上边和下边，但是tensorflow中不会给N维度以及C维度补pad，仅仅在W和H维度补pad，因此对于&lt;code&gt;NHWC&lt;/code&gt;，&lt;code&gt;padding =[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]] &lt;/code&gt;，对于&lt;code&gt;NCHW&lt;/code&gt;的pad的顺序换过来。&lt;/p&gt;
&lt;p&gt;然后，如果输入的是字符串选项，补的pad都可以映射到padding这个参数上，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;VALID&lt;/code&gt;模式表示不在任何维度补pad，等价于&lt;code&gt;padding =[[0, 0], [0, 0], [0, 0], [0, 0]]&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SAME&lt;/code&gt;模式表示在&lt;code&gt;stride&lt;/code&gt;的尺度下，&lt;code&gt;Wo&lt;/code&gt;与&lt;code&gt;Wi&lt;/code&gt;保持在stride$S$下保持一致（以宽度维度为例），需要满足如下关系
$$
W_{o}=\left\lceil\frac{W_{i}}{S}\right\rceil
$$
我们知道如果&lt;code&gt;dilation = 1&lt;/code&gt;，那么在某个维度上，卷积的输出宽度$W_i$、输出宽度$W_o$和步长$S$，在没有pad的情况下，满足如下的关系式
$$
W o=\left\lfloor\frac{W i-W_{k}}{S}\right\rfloor+1
$$
我们以补最小程度的$P_a$为基准，于是有关系式
$$
W o=\frac{W i+P_{a}-W_{k}}{S}+1
$$
反推过来得到
$$
P_{a}=\left(W_{o}-1\right) S+W_{k}-W_{i}
$$
这是需要补的总的pad，tensorflow的补充pad是尽量两边对称的，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果$P_a$是偶数，那么两边都补$P_l = P_a/2$；&lt;/li&gt;
&lt;li&gt;如果$P_a$是奇数，那么左边补$P_l = \lfloor{P_a/2}\rfloor$，右边是$P_r = P_a-P_l$。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考如下的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inputH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inputW&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;strideH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strideW&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;filterH&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;filterW&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inputC&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;outputC&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inputData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# format [N, H, W, C]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;filterData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filterH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filterW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inputC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;outputC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;strides&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strideH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strideW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;convOutputSame&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;conv2d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filterData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strides&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SAME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;convOutput&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;conv2d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filterData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strides&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# padded input data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;output1, &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;convOutputSame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;output2, &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;convOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Sum of a - b is &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;square&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;convOutputSame&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;convOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;计算结果是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;output1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[[[[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;171.5&lt;/span&gt;     &lt;span class=&#34;mf&#34;&gt;171.5&lt;/span&gt;     &lt;span class=&#34;mf&#34;&gt;171.5&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;85.75&lt;/span&gt;     &lt;span class=&#34;mf&#34;&gt;85.75&lt;/span&gt;     &lt;span class=&#34;mf&#34;&gt;85.75&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;￼&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]]]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;output2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;tf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[[[[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;96.46875&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;171.5&lt;/span&gt;     &lt;span class=&#34;mf&#34;&gt;171.5&lt;/span&gt;     &lt;span class=&#34;mf&#34;&gt;171.5&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;128.625&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;85.75&lt;/span&gt;     &lt;span class=&#34;mf&#34;&gt;85.75&lt;/span&gt;     &lt;span class=&#34;mf&#34;&gt;85.75&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt;   &lt;span class=&#34;mf&#34;&gt;64.3125&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]]]],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Sum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;onnx计算公式&#34;&gt;ONNX计算公式&lt;/h2&gt;
&lt;p&gt;onnx的接口，参考IR定义如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;91
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OpSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ConvOpSchemaGenerator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter_desc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OpSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;DOC(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;convolution&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;operator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;consumes&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter_desc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;computes&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DOC&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ReplaceAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;{filter_desc}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter_desc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetDoc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Input data tensor from previous layer; &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;has size (N x C x H x W), where N is the batch size, &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;C is the number of channels, and H and W are the &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;height and width. Note that this is for the 2D image. &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Otherwise the size is (N x C x D1 x D2 ... x Dn). &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Optionally, if dimension denotation is &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;in effect, the operation expects input data tensor &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;to arrive with the dimension denotation of [DATA_BATCH, &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;DATA_CHANNEL, DATA_FEATURE, DATA_FEATURE ...].&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;T&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;W&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;The weight tensor that will be used in the &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;convolutions; has size (M x C/group x kH x kW), where C &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;is the number of channels, and kH and kW are the &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;height and width of the kernel, and M is the number &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;of feature maps. For more than 2 dimensions, the &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;kernel shape will be (M x C/group x k1 x k2 x ... x kn), &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;where (k1 x k2 x ... kn) is the dimension of the kernel. &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Optionally, if dimension denotation is in effect, &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;the operation expects the weight tensor to arrive &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;with the dimension denotation of [FILTER_OUT_CHANNEL, &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;FILTER_IN_CHANNEL, FILTER_SPATIAL, FILTER_SPATIAL ...]. &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;X.shape[1] == (W.shape[1] * group) == C &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;(assuming zero based indices for the shape array). &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Or in other words FILTER_IN_CHANNEL should be equal to DATA_CHANNEL. &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;T&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Optional 1D bias to be added to the convolution, has size of M.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;T&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;OpSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Y&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Output data tensor that contains the result of the &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;convolution. The output dimensions are functions &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;of the kernel size, stride size, and pad lengths.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;T&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TypeConstraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;T&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;tensor(float16)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;tensor(float)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;tensor(double)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Constrain input and output types to float tensors.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;kernel_shape&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;The shape of the convolution kernel. If not present, should be inferred from input W.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;AttributeProto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;OPTIONAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;dilations&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;dilation value along each spatial axis of the filter. If not present, the dilation defaults is 1 along each spatial axis.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;AttributeProto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;OPTIONAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;strides&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Stride along each spatial axis. If not present, the stride defaults is 1 along each spatial axis.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;AttributeProto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;OPTIONAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;auto_pad&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;auto_pad_doc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;AttributeProto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STRING&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;NOTSET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;pads&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;pads_doc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;AttributeProto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;OPTIONAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;number of groups input channels and output channels are divided into.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;AttributeProto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int64_t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TypeAndShapeInferenceFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([](&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InferenceContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;propagateElemTypeFromInputToOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;convPoolShapeInference&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要注意上面的&lt;code&gt;auto_pad&lt;/code&gt;选项，与tensorflow类似有3个选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NOTSET&lt;/code&gt;，同tensorflow的&lt;code&gt;VALID&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SAME_UPPER &lt;/code&gt;或者&lt;code&gt;SAME_LOWER&lt;/code&gt;，这里的内容可以参考onnx文件&lt;code&gt;defs.cc&lt;/code&gt;中的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int64_t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getRepeatedAttribute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;pads&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_input_dims&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;fail_shape_inference&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Attribute pads has incorrect size&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assign&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_input_dims&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// pads的size是输入维度的2倍
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;auto_pad_attr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getAttribute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;auto_pad&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;nullptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;auto_pad_attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;auto_pad_attr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;VALID&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 如果pad mode是SAME_UPPER或者SAME_LOWER则进入该分支
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_dims_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_input_dims&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_dims_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 计算每个axis的pads
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;kt&#34;&gt;int64_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;residual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int64_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strides&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 如果stride == 1，那么total_pad就是Wk - Stride = Wk - 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;has_dim_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;n&#34;&gt;residual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dim_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;residual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;residual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stride&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int64_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;total_pad&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;residual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effective_kernel_shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;stride&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effective_kernel_shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;residual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// effective_kernel_shape = Wk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_pad&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;n&#34;&gt;total_pad&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int64_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;half_pad_small&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;total_pad&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int64_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;half_pad_big&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;total_pad&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;half_pad_small&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;auto_pad_attr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;SAME_UPPER&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// pad mode is here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;pads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;half_pad_small&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;n&#34;&gt;pads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_dims_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;half_pad_big&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;auto_pad_attr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;SAME_LOWER&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;n&#34;&gt;pads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;half_pad_big&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;n&#34;&gt;pads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_dims_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;half_pad_small&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的代码里面最难理解14~23行，其实这里计算total_pad就是tensorflow中的$P_a$，以上面的公式，做更进一步的推导，
$$
\begin{equation}
\begin{aligned}
P_{a}&amp;amp;=\left(W_{o}-1\right) S+W_{k}-W_{i}\
&amp;amp;=(\left\lceil\frac{W_{i}}{S}\right\rceil - 1)S+W_{k}-W_{i}\
\end{aligned}
\end{equation}
$$&lt;/p&gt;
&lt;p&gt;下面的分析有两种情况，对应代码第23行，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果$W_i$是$S$的整数倍，那么$W_i = nS$，带入上面的公式有$P_a = W_k - S$；&lt;/li&gt;
&lt;li&gt;如果$W_i$不是$S$的整数倍，那么$W_i = nS+m, m \gt 0$，带入上面的公式有$P_a = W_k - m$，这个$m$就是$W_i$被Stride相除之后的余数，即代码中的&lt;code&gt;residual&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SAME_UPPER&lt;/code&gt;和&lt;code&gt;SAME_LOWER&lt;/code&gt;对应$P_a$是奇数的情况，如果是偶数，结果一样，如果是奇数，那么&lt;code&gt;SAME_UPPER&lt;/code&gt;放小半部分$\lfloor{P_a/2}\rfloor$，&lt;code&gt;SAME_LOWER&lt;/code&gt;放大半部分$P_a - \lfloor{P_a/2}\rfloor$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;举例&#34;&gt;举例&lt;/h2&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/37674306/what-is-the-difference-between-same-and-valid-padding-in-tf-nn-max-pool-of-t&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;python - What is the difference between &amp;lsquo;SAME&amp;rsquo; and &amp;lsquo;VALID&amp;rsquo; padding in tf.nn.max_pool of tensorflow? - Stack Overflow&lt;/a&gt;上有一个比较具体的例子，可以看到，使用&lt;code&gt;SAME&lt;/code&gt;模式可以使得stride刚好完整取完所有的input而不会有剩余或者短缺。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;VALID&lt;/code&gt; 模式&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;inputs:         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt; 13&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;________________&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;                dropped
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                               &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_________________&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SAME&lt;/code&gt;模式&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               pad&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;                                      &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;pad
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   inputs:      &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;12&lt;/span&gt; 13&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;________________&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                              &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_________________&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                             &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;________________&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在这个例子中$W_i = 13, W_k = 6, S = 5$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/wuzqChom/article/details/74785643&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TensorFlow中CNN的两种padding方式“SAME”和“VALID” - wuzqChom的博客 - CSDN博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/37674306/what-is-the-difference-between-same-and-valid-padding-in-tf-nn-max-pool-of-t&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;python - What is the difference between &amp;lsquo;SAME&amp;rsquo; and &amp;lsquo;VALID&amp;rsquo; padding in tf.nn.max_pool of tensorflow? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.quora.com/What-does-the-same-padding-parameter-in-convolution-mean-in-TensorFlow&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What does the &amp;lsquo;same&amp;rsquo; padding parameter in convolution mean in TensorFlow? - Quora&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>python文件操作</title>
        <link>https://blog.bugxch.top/p/python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
        <pubDate>Thu, 08 Nov 2018 07:33:12 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
        <description>&lt;p&gt;在日常工作中，需要非常频繁地与数据打交道，将数据保存下来做数据比对，因此需要总结下python下的文本和数据的读写操作。&lt;/p&gt;
&lt;h1 id=&#34;python文件读写&#34;&gt;python文件读写&lt;/h1&gt;
&lt;h2 id=&#34;基础知识&#34;&gt;基础知识&lt;/h2&gt;
&lt;p&gt;在python中使用下面的语句打开一个文本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;workfile&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;创建了一个文件对象&lt;code&gt;f&lt;/code&gt;。其中的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;读写方式&lt;/strong&gt;。&lt;code&gt;w&lt;/code&gt;表示文本&lt;code&gt;workfile&lt;/code&gt;的创建方式为写入，当然还有其他的读写方式，可以参考如下的表格&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;ldquo;r&amp;rdquo;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;read:&lt;/strong&gt; Open file for input operations. The file must exist.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ldquo;w&amp;rdquo;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;write:&lt;/strong&gt; Create an empty file for output operations. If a file with the same name already exists, its contents are discarded and the file is treated as a new empty file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ldquo;a&amp;rdquo;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;append:&lt;/strong&gt; Open file for output at the end of a file. Output operations always write data at the end of the file, expanding it. Repositioning operations (&lt;a class=&#34;link&#34; href=&#34;http://www.cplusplus.com/fseek&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;fseek&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;http://www.cplusplus.com/fsetpos&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;fsetpos&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;http://www.cplusplus.com/rewind&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;rewind&lt;/a&gt;) are ignored. The file is created if it does not exist.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ldquo;r+&amp;rdquo;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;read/update:&lt;/strong&gt; Open a file for update (both for input and output). The file must exist.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ldquo;w+&amp;rdquo;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;write/update:&lt;/strong&gt; Create an empty file and open it for update (both for input and output). If a file with the same name already exists its contents are discarded and the file is treated as a new empty file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ldquo;a+&amp;rdquo;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;append/update:&lt;/strong&gt; Open a file for update (both for input and output) with all output operations writing data at the end of the file. Repositioning operations (&lt;a class=&#34;link&#34; href=&#34;http://www.cplusplus.com/fseek&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;fseek&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;http://www.cplusplus.com/fsetpos&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;fsetpos&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;http://www.cplusplus.com/rewind&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;rewind&lt;/a&gt;) affects the next input operations, but output operations move the position back to the end of file. The file is created if it does not exist.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;编码方式&lt;/strong&gt;。一般而言，默认读写文件使用的是字符串，字符串的编码方式视平台而定，也可以通过参数&lt;code&gt;b&lt;/code&gt;来指定读写的数据为二进制文件，该模式仅仅用于没有字符的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的基本语句有一个更优雅的语句方式&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;workfile&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;read_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这样写的好处是文件可以自动关闭，即便有异常抛出也可以。&lt;/p&gt;
&lt;h2 id=&#34;python文件读写-1&#34;&gt;python文件读写&lt;/h2&gt;
&lt;p&gt;这一段介绍python本身的文件读写功能。&lt;/p&gt;
&lt;h3 id=&#34;文本文件&#34;&gt;文本文件&lt;/h3&gt;
&lt;p&gt;以之前的基础知识为例，读取文本文件很简单，使用文件对象的方法有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read&lt;/code&gt;，直接读取文本的所有内容，也可以使用&lt;code&gt;f.read(size)&lt;/code&gt;读取size字节的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;workfile&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;read_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;readline&lt;/code&gt;，逐行读取文件中每一行&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;workfile&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;first_line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sec_line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的语句依次读取文件的每一行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遍历文本的每一行&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;files\stringdata.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个会依次读取文件的每一行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将文本中的每一行读入一个列表中，列表的每个元素是文本的一行&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;files\stringdata.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;写入字符文本，仅仅需要一个函数&lt;code&gt;write&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;files\stringdata.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hello world&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10.255616&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;文本内容是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hello world
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;10.255616
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;二进制文件&#34;&gt;二进制文件&lt;/h3&gt;
&lt;p&gt;二进制文件的读写和文本文件读写的方法类似，最大的区别是打开的选项必须要加一个&lt;code&gt;b&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;写入二进制文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个脚本将output的数字保存到filepath对应的文件里面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取二进制文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;下面是读写二进制文件的一个例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;save_bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;frombuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;save_bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./datawrite.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data_in&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;./datawrite.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中使用numpy模块生成正态分布的10个数字，并且以float32的格式保存在文件里面，之后再读取出来。需要注意的是，&lt;strong&gt;读取和写入文件的数据格式必须保持一致&lt;/strong&gt;，比如float16写入就float16数据格式读出，否则读出来的数据是错误的。我在ipython环境下随机运行的结果如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;In &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;44&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: runfile&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C:/Users/h00437182/Desktop/python/readfile.py&amp;#39;&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;wdir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C:/Users/h00437182/Desktop/python&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; 0.5902766   0.19589928  0.12194731 -0.17657255 -0.4276924  -0.3527161
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -1.3733053  -0.7128385  -1.1449672   1.4563532 &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; 0.5902766   0.19589928  0.12194731 -0.17657255 -0.4276924  -0.3527161
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; -1.3733053  -0.7128385  -1.1449672   1.4563532 &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;numpy文件读写&#34;&gt;numpy文件读写&lt;/h2&gt;
&lt;p&gt;numpy是python的一个数据处理的模块，它的文件读写功能使用起来更加强大和便捷。在日常工作中，常常需要比对数据，因此有必要将数据保存成txt文档进行比对，此处的文件读写都是围绕数据展开。将数据保存在文本文件中是日常工作的一个大痛点和需求，下面的命令就可以实现这样的目标。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;numpy的数据读写是成对使用的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;savetxt&lt;/code&gt;和&lt;code&gt;loadtxt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这两个命令只适用于一维或者二维数组，常见的使用格式如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loadtxt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;delimiter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;savetxt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;delimiter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;比如，下面的脚本，我们复用之前的脚本生成10个随机数，之后以小数点后4位的精度保留，之后再读出来&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;savetxt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;data.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%.4f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;delimiter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dataout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loadtxt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;data.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;delimiter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;文件&lt;code&gt;data.txt&lt;/code&gt;中的数据是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1.9229 -1.0319 0.0624 0.6372 -0.4520 0.7549 -1.6933 -0.2295 1.4575 -0.7399
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tofile&lt;/code&gt;和&lt;code&gt;fromfile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这两个命令的说明如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ndarray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tofile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sep&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;numpy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sep&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要注意的是，使用fromfile读出的文件的数据是一维的，需要知道数据的维度才能恢复数据本来的样子，参考如下的用例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tofile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;data.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dataout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;data.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;save&lt;/code&gt;和&lt;code&gt;load&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这一对命令可以保存原始的数据，就是原封不动保存之前的narray的信息，使用load之后得到的数据就是原来的数据，参考如下的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;data.npy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dataout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;data.npy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个脚本的结果如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runfile&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C:/Users/h00437182/Desktop/python/readfile.py&amp;#39;&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;wdir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C:/Users/h00437182/Desktop/python&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; 0.768138    1.09159732  1.45133552 -1.796178    1.19846175 -0.40864606
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   0.73694781 -0.87850709 -2.29957767 -1.2550539 &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-0.38308247  0.08059661 -1.84944623 -0.43883914  1.88381452  1.0455034
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -0.01678215  0.95006648  0.06723308 -0.6050553 &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; 0.768138    1.09159732  1.45133552 -1.796178    1.19846175 -0.40864606
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   0.73694781 -0.87850709 -2.29957767 -1.2550539 &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-0.38308247  0.08059661 -1.84944623 -0.43883914  1.88381452  1.0455034
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -0.01678215  0.95006648  0.06723308 -0.6050553 &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;完美保存数据的精度和维度信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/tutorial/inputoutput.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;7. Input and Output — Python 3.7.1 documentation&lt;/a&gt;，python官方介绍输入输出的文档&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.datacamp.com/community/tutorials/reading-writing-files-python&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Reading and Writing Files in Python (article) - DataCamp&lt;/a&gt;，datamap的二进制文本读取&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/28439701/how-to-save-and-load-numpy-array-data-properly&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;python - How to save and load numpy.array() data properly? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>\$(cd \$(dirname $0);pwd)的解释</title>
        <link>https://blog.bugxch.top/p/%5Ccd-%5Cdirname-0pwd%E7%9A%84%E8%A7%A3%E9%87%8A/</link>
        <pubDate>Sat, 03 Nov 2018 20:47:24 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%5Ccd-%5Cdirname-0pwd%E7%9A%84%E8%A7%A3%E9%87%8A/</guid>
        <description>&lt;p&gt;I love shell.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/i_love_bash.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在很多shell脚本中，经常可以看到下面的语句&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;rootDir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;dirname &lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个语句的作用是获取shell脚本所在目录的绝对路径，这个语句怎么理解？为什么不直接用&lt;code&gt;pwd&lt;/code&gt;来获取当前路径呢？&lt;/p&gt;
&lt;h3 id=&#34;语句解释&#34;&gt;语句解释&lt;/h3&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=cd&amp;#43;%24%28dirname&amp;#43;%240%29%3B&amp;#43;pwd&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;explainshell.com - cd $(dirname $0); pwd&lt;/a&gt;的解释，拆解如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dirname&lt;/code&gt;的功能是去掉文件路径名中的从右往左数的第一个&lt;code&gt;/&lt;/code&gt;及其之后的所有文字，查看&lt;code&gt;dirname&lt;/code&gt;的help信息可以看到如下的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dirname /usr/bin/          -&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dirname dir1/str dir2/str  -&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;dir1&amp;#34;&lt;/span&gt; followed by &lt;span class=&#34;s2&#34;&gt;&amp;#34;dir2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dirname stdio.h            -&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$0&lt;/code&gt;，这是bash shell脚本中的位置参数，用来表明输入到命令行中的命令本身。其余的还有&lt;code&gt;$1，$2&lt;/code&gt;等等，分别表示输入到命令行中的命令后面带有的第一个参数和第二个参数，依次类推。比如下面的命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash test9.sh &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中的&lt;code&gt;$0&lt;/code&gt;就是&lt;code&gt;test9.sh&lt;/code&gt;，10和9分别是&lt;code&gt;$1&lt;/code&gt;和&lt;code&gt;$2&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt;，这个命令已经很熟悉了，就是打印当前的绝对路径。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;有了上面的分析，那&lt;strong&gt;整个命令怎么理解呢&lt;/strong&gt;？举例说明，假如我们有如下的脚本&lt;code&gt;test.sh&lt;/code&gt;在目录&lt;code&gt;~/DTS/code&lt;/code&gt;下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;rootDir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;dirname &lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rootDir &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$rootDir&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该脚本的功能就是寻找脚本所在目录下的所有的&lt;code&gt;.cc&lt;/code&gt;文件。我们在命令行中运行该命令&lt;code&gt;./test.sh&lt;/code&gt;，输出的结果是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bugxch@opensuse:~/DTS/code$ ./test.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rootDir /home/bugxch/DTS/code
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;请留意运行该脚本的时候的几个关键要素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;调用脚本的路径。我们在目录&lt;code&gt;~/DTS/code/&lt;/code&gt;下调用该脚本，也就是&lt;strong&gt;当前目录&lt;/strong&gt;了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用脚本的命令。我们的命令是&lt;code&gt;./test.sh&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合上面的两条，此时&lt;code&gt;$(dirname $0)&lt;/code&gt;的结果就是&lt;code&gt;.&lt;/code&gt;，那么&lt;code&gt;cd $(dirname $0)&lt;/code&gt;就是&lt;code&gt;cd .&lt;/code&gt;，也就是切换命令到&lt;code&gt;~/DTS/code&lt;/code&gt;，之后运行&lt;code&gt;pwd&lt;/code&gt;，此时获得的就是脚本所在的绝对路径了。&lt;/p&gt;
&lt;h3 id=&#34;为什么不用pwd&#34;&gt;为什么不用pwd？&lt;/h3&gt;
&lt;p&gt;请注意以下的基本事实&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;调用shell脚本，就是在调用脚本的&lt;strong&gt;当前目录&lt;/strong&gt;下，&lt;strong&gt;逐行执行&lt;/strong&gt;脚本中的&lt;strong&gt;每一个命令&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果我们修改上面的脚本如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;rootDir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;dirname &lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rootDir &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$rootDir&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;pwd &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$pwd&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;并且在&lt;code&gt;~/DTS&lt;/code&gt;下输入命令&lt;code&gt;code/test.sh&lt;/code&gt;来运行这个脚本，输出结果如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bugxch@opensuse:~/DTS$ code/test.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rootDir /home/bugxch/DTS/code
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt; /home/bugxch/DTS
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第2个pwd不是脚本所在的目录，而是&lt;strong&gt;我们输入命令的目录&lt;/strong&gt;。正如那个基本事实所示，在该目录下运行该脚本相当于逐行敲入脚本中每一句之后执行，所以在&lt;code&gt;~/DTS&lt;/code&gt;调用脚本中的&lt;code&gt;pwd&lt;/code&gt;，就相当于在该目录下敲入&lt;code&gt;pwd&lt;/code&gt;，因此结果就是当前路径。&lt;/p&gt;
&lt;p&gt;之所以不能直接使用&lt;code&gt;pwd&lt;/code&gt;获取脚本所在目录，是因为如果在脚本目录之外调用该脚本，返回的是调用命令所在的目录而不是脚本所在目录。&lt;/p&gt;</description>
        </item>
        <item>
        <title>牛顿迭代法</title>
        <link>https://blog.bugxch.top/p/%E7%89%9B%E9%A1%BF%E8%BF%AD%E4%BB%A3%E6%B3%95/</link>
        <pubDate>Sun, 05 Aug 2018 08:15:17 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E7%89%9B%E9%A1%BF%E8%BF%AD%E4%BB%A3%E6%B3%95/</guid>
        <description>&lt;p&gt;最近的工作中，在求算子softamx时需要使用牛顿迭代法，记录下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/%E7%89%9B%E9%A1%BF%E8%BF%AD%E4%BB%A3%E6%B3%95.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;基本思想&#34;&gt;基本思想&lt;/h2&gt;
&lt;p&gt;牛顿迭代法的具体内容可以参考 &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E7%89%9B%E9%A1%BF%E6%B3%95&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;牛顿迭代法&lt;/a&gt;的维基百科页面。&lt;/p&gt;
&lt;h3 id=&#34;几何直觉&#34;&gt;几何直觉&lt;/h3&gt;
&lt;p&gt;观察本文上面的图片，凭借我们的直觉可以发现，&lt;strong&gt;如果在函数$f(x)$的根附近的点$x_n$上画一条切线，这条切线与$x$轴的交点$x_{n+1}$比$x_n$更加接近方程的根&lt;/strong&gt;。如果在$x_{n+1}$这个点继续使用上一次的方法，再画一条切线，可以想见新的切线与$x$轴的交点肯定比$x_{n+1}$更接近根，如此迭代就会越来越逼近方程的根。下面这幅图表示的更清晰&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/NewtonIteration_Ani.gif/600px-NewtonIteration_Ani.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;所以，据此可以推导出如下的方程，
$$
\frac{0 - f(x_n)}{x_{n+1} - x_n} = f&amp;rsquo;(x_n)
$$
进一步化简可以得到，
$$
x_{n+1}=x_{n}-{\frac {f(x_{n})}{f&amp;rsquo;(x_{n})}}
$$
这就是牛顿迭代法的基本公式。&lt;/p&gt;
&lt;p&gt;但是牛顿迭代法不一定总是有效，已有证明牛顿迭代法的二次收敛必须满足以下条件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;$f&amp;rsquo;(x)\neq 0$;&lt;/li&gt;
&lt;li&gt;对于所有$x\in I$，其中$I$为区间$[α − r, α + r]$，且$x_{0}$在区间其中$I$内，即$ r\geqslant \left|a-x_{0}\right|$的，对于所有$x\in I$，$f&amp;rsquo;&amp;rsquo;(x)$是连续的;&lt;/li&gt;
&lt;li&gt;$x_{0}$足够接近根 α。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以使用牛顿迭代法，首先需要选择离方程的根足够近的起点，而且这个起点的切线斜率不能为0。&lt;/p&gt;
&lt;h3 id=&#34;公式推导&#34;&gt;公式推导&lt;/h3&gt;
&lt;p&gt;牛顿迭代法的另一种推导方式是使用泰勒展开式
$$
f(x)=f(x_0)+f^\prime(x_0)(x-x_0)+\frac{1}{2}f^{\prime\prime}(x_0)(x-x_0)^2+\dots + \frac{1}{n!}f^{(n)}(x_0)(x-x_0)^n + o(x-x_0)^n
$$
使用一阶展开近似可以得到
$$
f(x)=f(x_0)+f^\prime(x_0)(x-x_0)
$$
化简就可以得到之前的方程(2)。&lt;/p&gt;
&lt;h3 id=&#34;牛顿迭代法求极值&#34;&gt;牛顿迭代法求极值&lt;/h3&gt;
&lt;p&gt;使用牛顿迭代法可以求函数的极值，通过迭代的方法求方程$f(x)$的极值。根据微积分原理，令$f&amp;rsquo;(x) = 0$的$x$就是函数的极值所在，同样利用泰勒公式展开到二阶，有
$$
f(x)=f(x_0)+f^\prime(x_0)(x-x_0)+\frac{1}{2}f^{\prime\prime}(x_0)(x-x_0)^2
$$
两边同时对$x$求导数，并令其为0，我们就能得到
$$
f^\prime(x_0)+f^{\prime\prime}(x_0)(x-x_0) = 0
$$
同样可以得到
$$
x=x_0-{\frac {f&amp;rsquo;&amp;rsquo;(x_{0})}{f&amp;rsquo;(x_{0})}}
$$
这就是牛顿迭代法求极值的理论依据。&lt;/p&gt;
&lt;h3 id=&#34;指令迭代&#34;&gt;指令迭代&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;假设计算机中有求倒数的指令$y = rec(x) = 1/x$，但是精度不高，如何通过牛顿迭代法提高精度？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以这么想，假设我们的输入是$a$，那么我们对输入求倒数就等价于求方程$a = 1/x$的根，也就是求方程$f(x) = 1/x -a$的根，那么根据牛顿迭代法，如果我们找到一个初值$x_0$，就可以按照如下的方程来迭代
$$
x_{n+1} = x_n - \frac{f(x_n)}{f&amp;rsquo;(x_n)}=2x_n - ax_{n}^2
$$
而刚好这个初值就是指令使用一次之后的结果（相比随意找一个数字，这个值离根更近），即$x_0 = 1/a = rec(a)$。&lt;/p&gt;
&lt;p&gt;更一般的，假如&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们利用指令$f$需要对数$a$做指令计算$f(a)$，但是该指令的精度不高，可以转化成求$f^{-1}(x) = a$得根，也就是求$g(x) = f^{-1}(x) - a$的根&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如，假如有求一个数的自然对数的指令vln，那么可以通过计算$f(x) = e^x -a$的根计算$vln(a)$的值。&lt;/p&gt;
&lt;h2 id=&#34;方程举例&#34;&gt;方程举例&lt;/h2&gt;
&lt;p&gt;下面我们使用牛顿迭代法用C++的代码求解一个数的立方根，假定这个数是$a$，该问题等价于求方程$x^3 = a$的根，也就是求方程$f(x) = x^3 - a$的根。根据牛顿迭代法，可以按照如下的步骤求根&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;确定迭代的终止条件，我们假设假定$|x_n^3 - a |&amp;lt; 0.00001$即停止该迭代；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定初始点，即选择合适的$x_0$。很明显如果$a = 0$，方程的根就是0，我们选取1作为初始点；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确认迭代方程，根据方程(2)，我们的迭代方程是&lt;/p&gt;
&lt;p&gt;$$
x_{n+1} = \frac{2x_n}{3}+\frac{a}{3x_n^2}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;于是，我们的程序如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rsl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;times&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//输入需要求解的数字
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;rsl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fabs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rsl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.00001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;rsl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fabs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;times&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;times&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; : &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;actual data -- &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;, result -- &amp;#34;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rsl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Final x is &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; and result is &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用这个程序求解-34.5的立方根结果如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; : actual data -- -1271.41, result -- 1236.91
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; : actual data -- -392.257, result -- 357.757
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; : actual data -- -132.242, result -- 97.7418
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; : actual data -- -56.6032, result -- 22.1032
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; : actual data -- -37.2522, result -- 2.75222
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; : actual data -- -34.5672, result -- 0.0672223
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; : actual data -- -34.5, result -- 4.35659e-05
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt; : actual data -- -34.5, result -- 1.83391e-11
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Final x is -3.25542 and result is -34.5
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看出通过8轮迭代就找到了-34.5的近似根-3.25542。&lt;/p&gt;</description>
        </item>
        <item>
        <title>2018阅读书单</title>
        <link>https://blog.bugxch.top/p/2018%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/</link>
        <pubDate>Thu, 26 Jul 2018 06:38:02 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/2018%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;烂熟于心，两三本书。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/booklist.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;操作系统&#34;&gt;操作系统&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/25813550/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;《计算机组成与设计：硬件/软件接口》&lt;/strong&gt;&lt;/a&gt;，从硬件和软件接口的角度讲述计算机运行的基本原理，结合矩阵运算的例子，从编译器，代码，芯片内部并行处理等角度大大提高了程序运行的效率。书籍侧重从软硬件的角度如何提高程序运行的效率，降低功耗，和当前的AI core中的加速算子的工作联系紧密，值得细读。&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/20152598/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;操作系统 (豆瓣)&lt;/a&gt;，掌握计算机操作系统的好书&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/av6538245/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;操作系统&lt;/a&gt;，bilibili上的一个非常不错的清华操作系统公开课&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://akaedu.github.io/book/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Linux C编程一站式学习&lt;/strong&gt;&lt;/a&gt;，结合C语言学习&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;深度学习&#34;&gt;深度学习&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://zh.gluon.ai/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;动手学深度学习&lt;/a&gt;，新的深度学习框架&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;http://neuralnetworksanddeeplearning.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;《神经网络与深度学习》&lt;/strong&gt;&lt;/a&gt;，结合实际的代码简明扼要的&lt;a class=&#34;link&#34; href=&#34;https://github.com/mnielsen/neural-networks-and-deep-learning&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;代码&lt;/a&gt;介绍了&lt;strong&gt;深度学习以及卷积神经网络&lt;/strong&gt;的核心概念，需要仔细研读，结合代码理解其中的所有关键概念。&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://developers.google.cn/machine-learning/crash-course/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;机器学习速成课程&lt;/a&gt;，谷歌与2018年3月1日推出的在线机器学习速成教程。&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;http://lamda.nju.edu.cn/weixs/book/CNN_book.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;《解析卷积神经网络—深度学习实践手册》&lt;/strong&gt;&lt;/a&gt;，学习卷积神经网络的必读书目&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编程基础&#34;&gt;编程基础&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/1319751/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;《C++Primer Plus》&lt;/strong&gt;&lt;/a&gt;，C++学习经典书籍，我在github上建立了个仓库，专门上传本书中的各章的答案，精读&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://www.git-tower.com/learn/git/ebook/cn/command-line&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git教程&lt;/a&gt;，网上找的git教程，读起来还不错&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/19930393/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;老码识途&lt;/a&gt;，结合C语言以及VS软件的汇编显示功能，自底层往上逐层剖析程序的运行之道，建立“猜测——实证——构建”的系统观，深入读读&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://seisman.github.io/how-to-write-makefile/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;跟我一起写Makefile&lt;/a&gt;，编写大型C/C++工程的必备技能&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/25779298/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;《利用Python进行数据分析》&lt;/strong&gt;&lt;/a&gt;，掌握python中编程的基础课程，其中包括numpy/pandas等非常重要的python数据分析库&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;http://zh-google-styleguide.readthedocs.io/en/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google 开源项目风格指南&lt;/a&gt;，google发布的C++/python/json编程风格指南&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;http://translations.readthedocs.io/en/latest/hacker_howto.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何成为一名黑客&lt;/a&gt;，学习计算机的奇技淫巧&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://github.com/NapleC/Coding-Developer-Book/blob/master/C%E8%AF%AD%E8%A8%80/%E6%9E%97%E9%94%90%C2%B7%E9%AB%98%E8%B4%A8%E9%87%8FC%20%20%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;林锐·高质量C 编程指南&lt;/a&gt;，不错的编程指导&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://www.oreilly.com/openbook/make3/book/index.csp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《make projects with GNU》&lt;/a&gt;，系统学习makefile工程的好书&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;社科&#34;&gt;社科&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26824237/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《大国大城》&lt;/a&gt;，2017年初在上海书城看到的描述城市化发展的好书&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/1115353/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;奇特的一生 &lt;/a&gt;，博物学家的传记&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/27608239/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;原则&lt;/a&gt;，桥水基金老大的生活工作之道&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/30246792/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;认识身体 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>极简版《计算机原理》</title>
        <link>https://blog.bugxch.top/p/%E6%9E%81%E7%AE%80%E7%89%88%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/</link>
        <pubDate>Sat, 21 Jul 2018 21:59:51 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%9E%81%E7%AE%80%E7%89%88%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/</guid>
        <description>&lt;p&gt;读书笔记。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/cover.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这两周读了日本作者矢泽久雄写的&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26365491/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《程序是怎么跑起来的》&lt;/a&gt;，解开了我这个作为通信专业的软件从业者的很多困惑，为了避免日后遗忘，将一些看了这本书之后的问题的解答记录下来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：电脑的 CPU 中包含哪些部分？各自的作用有哪些？&lt;/strong&gt;
&lt;strong&gt;A&lt;/strong&gt;：CPU 包含寄存器，控制器，时钟和运算器四种主要的结构。如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/computer1.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制器负责将内存上的指令、数据等读入到寄存器，并根据运算的结果控制整个计算机；&lt;/li&gt;
&lt;li&gt;寄存器用来暂存数据、指令等处理对象，一般 CPU 包含 20～100 个不同的寄存器；&lt;/li&gt;
&lt;li&gt;时钟负责 CPU 开始计时的时钟信号；&lt;/li&gt;
&lt;li&gt;运算器负责运算从内存读入寄存器的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从程序员的角度来说，CPU 可以看作寄存器的集合。CPU 中包含不同种类的寄存器，各自有不同的功能，如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;种类&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;数目&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;累加寄存器&lt;/td&gt;
&lt;td&gt;存储运算中和运算后的数据&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标志寄存器&lt;/td&gt;
&lt;td&gt;存储运算后的 CPU 状态&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;程序计数器&lt;/td&gt;
&lt;td&gt;存取下一条指令的内存地址&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;基址寄存器&lt;/td&gt;
&lt;td&gt;存储数据内存的起始地址&lt;/td&gt;
&lt;td&gt;多个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;变址寄存器&lt;/td&gt;
&lt;td&gt;存储基址寄存器的相对地址&lt;/td&gt;
&lt;td&gt;多个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;通用寄存器&lt;/td&gt;
&lt;td&gt;存储任意数据&lt;/td&gt;
&lt;td&gt;多个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;指令寄存器&lt;/td&gt;
&lt;td&gt;存储指令。CPU 内部使用，程序员无法通过程序对寄存器进行读写操作&lt;/td&gt;
&lt;td&gt;多个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;栈寄存器&lt;/td&gt;
&lt;td&gt;存储栈区域的起始地址&lt;/td&gt;
&lt;td&gt;多个&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Q：一个典型的 C 语言源代码在电脑中运行的基本流程是怎样的？&lt;/strong&gt;
&lt;strong&gt;A&lt;/strong&gt;：C 语言写成的源代码是高级语言程序，但是 CPU 运行的代码是本地机器语言，因此 C 的源代码并不能立即运行。实际上，一个 C 的源代码需要经过编译、和链接生成. exe 的可执行文件之后，电脑会将. exe 文件的副本复制到内存中再运行，基本的流程如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/computer2.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：内存内部结构如何？内存的数据存取都有哪些数据结构？&lt;/strong&gt;
&lt;strong&gt;A&lt;/strong&gt;：内存是计算机的主存储器，通过芯片与计算机相连，主要负责存储指令和数据，CPU 通过基址寄存器和变址寄存器读取和写入内存中的数据。内存由连续的长度为 8bit（1 个字节）的基本元素构成，程序启动之后 CPU 的控制寄存器根据时钟信号从内存中读取指令和数据。&lt;/p&gt;
&lt;p&gt;存取内存的数据结构包括&lt;strong&gt;数组、栈、堆、队列、链表和二叉树&lt;/strong&gt;。我们可以通过指针直接访问和改变对应内存地址中的变量的数值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组是多个同样类型的数据在内存中连续的排列的形式，可以通过数组的索引访问数组元素；&lt;/li&gt;
&lt;li&gt;栈可以不通过指定地址和索引对数组元素进行读写。栈由栈底、栈顶描述，一般用来临时保存运算过程中的数据、连接在计算机设备上或者输入输出的数据；&lt;/li&gt;
&lt;li&gt;队列与栈相似，栈的元素是 FILO，但是队列是 FIFO，队列一般用环形缓冲区实现；&lt;/li&gt;
&lt;li&gt;链表与数组不同，它在内存中不是连续存储的，每个元素都有一个直接后继，像串珠一样将每个元素串联起来，最大优势是增减元素方便快捷；&lt;/li&gt;
&lt;li&gt;二叉树中除了最终的子节点之外，每个元素都有两个后继结点，有序二叉树使得搜索变得更有效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Q：数据和程序是如何保存在计算机中的？&lt;/strong&gt;
A：程序和数据是保存在计算机的硬盘中的，但是程序运行需要将机器语言的程序加载到内存，因为 CPU 的程序计数器指定内存地址才能读出程序内容。内存和磁盘因为自身特点的差异，它们之间具有紧密的联系。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;磁盘缓存。由于磁盘的读取速度较慢，为了加快程序的运行，将磁盘中的部分数据加载到内存中缓存起来，之后在访问同一个数据的时候就直接从内存中读取数据，这样的机制叫&lt;strong&gt;磁盘缓存&lt;/strong&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;虚拟内存。&lt;strong&gt;虚拟内存&lt;/strong&gt;刚好与之相反，在运行比较大的程序或者内存资源比较紧张可以将部分磁盘当作&lt;strong&gt;假想的内存&lt;/strong&gt;来用。实现虚拟内存机制需要在磁盘为内存预留空间，并在程序运行时与内存中的内容进行置换（swap），window 中提过&lt;strong&gt;分页式虚拟内存机制&lt;/strong&gt;，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/vitualmem.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般虚拟内存的大小与内存相当或者是内存的两倍。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：什么是动态链接和静态链接？二者有何不同？&lt;/strong&gt;
&lt;strong&gt;A&lt;/strong&gt;：DLL（Dynamic link libary）是在程序运行时候动态加载的文件，&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;维基百科&lt;/a&gt;中的解释是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;動態連結函式庫&lt;/strong&gt;（英语：&lt;strong&gt;Dynamic-link library&lt;/strong&gt;，缩写为 &lt;strong&gt;DLL&lt;/strong&gt;）是&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E5%BE%AE%E8%BD%AF%E5%85%AC%E5%8F%B8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;微软公司&lt;/a&gt;在&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E5%BE%AE%E8%BD%AF%E8%A7%86%E7%AA%97&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;微软视窗&lt;/a&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;操作系统&lt;/a&gt;中实现共享&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E5%87%BD%E6%95%B0%E5%BA%93&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;函数库&lt;/a&gt;概念的一种实作方式。这些函式庫函数的&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E6%89%A9%E5%B1%95%E5%90%8D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;扩展名&lt;/a&gt;是&lt;code&gt;.DLL&lt;/code&gt;、&lt;code&gt;.OCX&lt;/code&gt;（包含 &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/ActiveX&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ActiveX&lt;/a&gt; 控制的函式庫）或者&lt;code&gt;.DRV&lt;/code&gt;（舊式的系统&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;驱动程序&lt;/a&gt;)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;所謂動態链接，就是把一些經常會共用的程式碼（靜態链接的 OBJ 程式庫）製作成 DLL 檔，當執行檔呼叫到 DLL 檔內的函數時，Windows 作業系統才會把 DLL 檔載入記憶體內，DLL 檔本身的結構就是可執行檔，當程式需求函數才進行链接。透過動態链接方式，記憶體浪費的情形將可大幅降低。&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E9%9D%9C%E6%85%8B%E9%80%A3%E7%B5%90%E5%87%BD%E5%BC%8F%E5%BA%AB&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;靜態連結函式庫&lt;/a&gt;則是直接&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E9%93%BE%E6%8E%A5%E5%99%A8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;連結&lt;/a&gt;到執行檔。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;DLL 的文件格式与视窗 &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/EXE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;EXE&lt;/a&gt; 文件一样——也就是说，等同于 &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/32%E4%BD%8D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;32 位&lt;/a&gt;视窗的&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/Portable_Executable&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;可移植执行文件&lt;/a&gt;（PE）和 &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/16%E4%BD%8D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;16 位&lt;/a&gt;视窗的 New Executable（NE）。作为 EXE 格式，DLL 可以包括&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh/%E5%8E%9F%E5%A7%8B%E7%A2%BC&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;原始碼&lt;/a&gt;、数据和资源的多种组合。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单来说，已经编译成汇编语言的程序文件，在进一步链接时如果直接将库文件链接进 exe 可执行文件，则该链接文件就是静态库，如果仅仅在程序运行时才进行链接称为动态链接，链接的目标文件就是动态链接库（windows 中为 dll 文件）。需要说明的是，在链接之后，exe 文件中包含了静态链接库的所有内容，所以会比较大，而动态链接库相对轻巧，并且&lt;strong&gt;动态链接库可以在被多个同时运行的程序所共有，并且保证内存中只有一个 dll 文件中调用函数的副本&lt;/strong&gt;，这样就节省了程序运行的空间。实际上 window 操作系统的大部分 API 目标文件是动态链接库，动态链接库一般由导入库导入，导入库中并不存在目标函数的实体，仅仅保存目标函数所在的动态链接库的名称及路径。下面的表格是对两者的总结。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;链接类型&lt;/th&gt;
&lt;th&gt;何时链接&lt;/th&gt;
&lt;th&gt;是否可共享&lt;/th&gt;
&lt;th&gt;文件类型&lt;/th&gt;
&lt;th&gt;资源占用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;静态&lt;/td&gt;
&lt;td&gt;编译后链接时&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;.a/.lib&lt;/td&gt;
&lt;td&gt;多&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;动态&lt;/td&gt;
&lt;td&gt;程序运行时&lt;/td&gt;
&lt;td&gt;可被多个程序共享&lt;/td&gt;
&lt;td&gt;.dll/.so&lt;/td&gt;
&lt;td&gt;少&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;关于动态链接和静态链接的详细介绍请参考博文 &lt;a class=&#34;link&#34; href=&#34;http://www.cnblogs.com/skynet/p/3372855.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C++ 静态库与动态库&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：一个 C 语言源程序是如何变成可执行文件（exe）的？又是如何在操作系统中运行的？&lt;/strong&gt; &lt;strong&gt;A&lt;/strong&gt;：这是个比较大的问题，作者在书中举了个 C 语言的例子。大体来说，C 的源程序需要通过编译器编译成汇编语言（asm 文件），进一步链接需要的库文件（dll 文件）生成可执行文件（exe 文件），最后点击 exe 将可执行文件导入内存运行程序。以&lt;code&gt;Sample.c&lt;/code&gt;文件为例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;messgae box&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;average&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WINAPI&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;WinMain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HINSTANCE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HINSTANCE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LPSTR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ave&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ave&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;average&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;average value is %f&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ave&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;MessageBox&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MB_OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;编译&lt;/strong&gt;该文件，在源文件目录上运行命令&lt;code&gt;bcc32 -W -c Sample.c&lt;/code&gt;，生成 sample.obj 目标文件；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;链接&lt;/strong&gt;需要的库文件，运行命令&lt;code&gt;ilink32 -Tpe -c -x -aa c0w32.obj Sample.obj, Sample.exe,, import32.lib cw32.lib&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要说明的是，c0w32.obj 文件是与所有程序起始位置相结合的处理内容，称为程序的&lt;strong&gt;启动&lt;/strong&gt;。在源程序中，我们&lt;strong&gt;调用&lt;/strong&gt;了系统函数 sprintf 和 messagebox，因此，需要将这两个函数对应的库函数（其中的内容与 exe 文件相同，都是本地代码）&lt;strong&gt;链接&lt;/strong&gt;进来，告诉链接器去哪里找这两个函数对应的本地代码。&lt;/p&gt;
&lt;p&gt;sprintf 的本地代码在 cwlib32.lib 中，编译之后会将它的目标函数合成到 exe 文件中，称为&lt;strong&gt;静态链接&lt;/strong&gt;；而 messagebox 的本地代码在库文件 user32.dll 里，使用 import32.dll 是为了告诉连接器 “messagebox 在库文件 user32.dll 中，以及 user32.dll 在哪里”，所以 import32.dll 称为导入库。程序运行时，执行从 DLL 文件调出的 MessageBox() 函数这一信息就会和 exe 文件结合，称为&lt;strong&gt;动态链接&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;源程序到可执行文件的流程如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/run.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：可执行文件包含哪些内容？它加载到内存中是什么样子？&lt;/strong&gt;
&lt;strong&gt;A&lt;/strong&gt;：可执行文件中包含了源程序的变量和函数的虚拟地址，在加载到内存之后需要必要的信息将虚拟地址转换成实际地址，转换需要的信息就在 exe 文件开始的部分，称为再配置信息。exe 文件被加载到内存之后，就将这些虚拟内存转换成实际内存，程序运行中会生成栈和堆，因此在内存中的样子如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/memab.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q：c，o，a，lib，obj，dll 这些文件分别是什么？他们之间是什么关系？&lt;/strong&gt;
&lt;strong&gt;A&lt;/strong&gt;：c 是 C 语言的源文件，如博文 &lt;a class=&#34;link&#34; href=&#34;http://blog.csdn.net/chlele0105/article/details/23691147&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux 的. a、.so 和. o 文件&lt;/a&gt; 中所述&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;lib,dll,exe 都算是最终的目标文件，是最终产物。而 c/c++ 属于源代码。源代码和最终目标文件中过渡的就是中间代码 obj，实际上之所以需要中间代码，是你不可能一次得到目标文件。比如说一个 exe 需要很多的 cpp 文件生成。而编译器一次只能编译一个 cpp 文件。这样编译器编译好一个 cpp 以后会将其编译成 obj，当所有必须要的 cpp 都编译成 obj 以后，再统一 link 成所需要的 exe，应该说缺少任意一个 obj 都会导致 exe 的链接失败。而 .o, 是 Linux 目标文件, 相当于 windows 中的. obj 文件，.so 文件为共享库, 是 shared object, 用于动态连接的, 相当于 windows 下的 dll,.a 为静态库, 是好多个. o 合在一起, 用于静态链接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Q：什么是_BSS 段和_DATA 段？全局变量和局部变量在程序运行时有何不同？&lt;/strong&gt;
&lt;strong&gt;A&lt;/strong&gt;：这是汇编语言的概念，编译器将高级语言源程序转换成汇编文件 (.asm 文件)，有如下的源文件&lt;code&gt;sample2.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;AddNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;MyFun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;AddNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;经过编译之后的汇编文件（软件环境 win10，gcc 编译器）内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;sample.c&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;globl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_AddNum&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;def&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_AddNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scl&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endef&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;_AddNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pushl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;addl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;popl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;globl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_MyFun&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;def&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_MyFun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scl&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endef&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;_MyFun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pushl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;subl&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_AddNum&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;leave&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ident&lt;/span&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;GCC: (tdm-1) 4.9.2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;汇编程序最接近机器语言，而且其与 C 语言一一对应，所以通过汇编文件就可以了解程序运行的大体情况。从上面的汇编文件，可以看到如下的结果&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;寄存器 esp 指向栈顶元素地址，每个元素占据 4 个字节的数据；&lt;/li&gt;
&lt;li&gt;在每个函数开始的时候，都要将寄存器 ebp 的数据压入栈中进行保护；&lt;/li&gt;
&lt;li&gt;上述程序中隐藏的一个关键步骤是在第 21 行，call AddNum 时，计算机已经将 MyFun 函数的下一个指令的地址压入栈中，在调用完 AddNum 时（第 12 行），返回函数 Myfun 时候会自动将栈中的返回指令的地址出栈交给 CPU 的程序计数器，这样就可以实现在调用函数之后仍然返回原来的调用的地方；&lt;/li&gt;
&lt;li&gt;函数的入参被保存在栈中，返回值被保存在寄存器里。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;MyFun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fl1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;b1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;fl1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;99.34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;b1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;fl1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以上的 C 源代码转换成汇编语言是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;sample2.c&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;comm&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;comm&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;comm&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_fl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;globl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;align&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;_c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;globl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;align&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;_d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;globl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;align&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;_e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;globl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_f&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;align&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;_f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;globl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_MyFun&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;def&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_MyFun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scl&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endef&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;_MyFun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pushl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;subl&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;LC0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_fl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;_c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;movl&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ebp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;leave&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;dr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;align&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;LC0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1027166700&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ident&lt;/span&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;GCC: (tdm-1) 4.9.2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;从中可以看出全局变量保存在. comm 和. globl 段，局部变量保存在寄存器中，因此在程序运行的整个过程中，全局变量可以随时访问，但是局部变量却会在用过之后消失。&lt;/p&gt;
&lt;p&gt;关于 windows 的汇编的内容可进一步参考文章&lt;a class=&#34;link&#34; href=&#34;http://www.mouseos.com/assembly/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;汇编与逆向分析&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;以上是此书最干货的部分，书中该介绍了计算机二进制数，和计算机硬件的部分内容，在此略过不提。&lt;/p&gt;</description>
        </item>
        <item>
        <title>方法论</title>
        <link>https://blog.bugxch.top/p/%E6%96%B9%E6%B3%95%E8%AE%BA/</link>
        <pubDate>Sat, 21 Jul 2018 21:59:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%96%B9%E6%B3%95%E8%AE%BA/</guid>
        <description>&lt;p&gt;&lt;strong&gt;学习是个终身课题，偶尔得之，胡言乱语。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/study.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;类比&lt;/strong&gt;是非常好的融汇贯通知识的方法。比如可以将一个人比喻成一棵树，外在的气质，形象和谈吐就是地面上树干树枝和树叶，而真正的思考力，感受力和自省力都是庞大的树根部分。树根扎到泥土的深度越深，树冠就生长得越茂盛，树枝就伸展地越远大，整棵大树也越有生命力&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;提升自己的能力&lt;/strong&gt;, 打破内心的畏惧墙，充分估计难度曲线，耐心磨练意志，快速锻炼能力。自律自省 ，自我更新，不断地以 最高效率最大程度地实现自我突破永远是此生最重要的事情&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在处理具体的事物时，&lt;strong&gt;结构和框架&lt;/strong&gt;比内容和细节更重要&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;做事情效率是第一位的，为了提升效率就要不停地&lt;strong&gt;搭架子&lt;/strong&gt;，做很多&lt;strong&gt;辅助性&lt;/strong&gt;的工作，利用&lt;strong&gt;所有可用的手段&lt;/strong&gt;和各种所有可能的工具来实现自己的目标。&lt;/p&gt;
&lt;p&gt;比如读书，在具体阅读时候 快速抽取 全书的结构，重点关注最有价值的部分，阅读在脑中快速联想建立具象的情景，尽量建立起与自身经验和已有知识体系的 强联系， 加深内容在脑回中的烙印，最大程度理解作者想要传递的信息。此外，还需要瞻前顾后，分章节 回溯 自己看过的东西，总结归纳，咀嚼吸收。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不能舍本逐末，最重要是完成任务， 不要耗费太多时间和精力在工具上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高效处理多任务一个有效方法是&lt;strong&gt;交织&lt;/strong&gt;，采用适当的方法将不同的多个任务糅合到同一个任务中去。比如，既要进行英语学习又要学习专业知识，可以阅读英文教材或者用英语做读书笔记都是好方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生活的很大一部分困惑和烦恼来自于对&lt;strong&gt;目标的失焦&lt;/strong&gt;，时间的失控，以及由此带来的浑浑噩噩和不断的不可抑制的自责。所以无论何时都要给自己确定&lt;strong&gt;清晰的目标&lt;/strong&gt;，充分利用每一个精确到半小时的时间粒度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;先有行动，慢慢有动力，然后再行动&lt;/strong&gt;，越做越好，形成良性循环。于是慢慢有了&lt;strong&gt;清晰的目标&lt;/strong&gt;，为了达到清晰的目标就要利用身边的所有&lt;strong&gt;资源&lt;/strong&gt;（精力，时间和金钱等），利用所有的&lt;strong&gt;工具&lt;/strong&gt;（书本，人脉，网络，软件，社交等），&lt;strong&gt;专注&lt;/strong&gt;精力持续不断调整自身的方法和姿态， 锲而不舍百折不挠， 最终&lt;strong&gt;完满&lt;/strong&gt;达成目标&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;极限思维法&lt;/strong&gt;和&lt;strong&gt;加减思维法&lt;/strong&gt;。衡量是否真的需要一样东西，可以使用加减思维法可以问问自己：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果我拥有这件东西会怎样？&lt;/li&gt;
&lt;li&gt;如果我失去这件东西又会怎样？&lt;/li&gt;
&lt;li&gt;我的收益和我的支出是否平衡？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;确定当前的事情是否是真正值得做，可以想想&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果目前的所有的困难都被克服以最短的时间和效率完成了这个事情我会怎样？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比如资金 / 人力 / 时间全都有了我会继续热爱当前所做的事情吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在生活中引入 &lt;strong&gt;no pain no gain&lt;/strong&gt; 模式，在享受或者购买任何事物之前，想想自己需要克服的困难，根据二者的匹配程度，确认在解决完什么困难以前绝不购买或者享受什么事物。比如，浏览知乎很爽，可以在肆意浏览之前先解答一个专业的问题，等价的快感要等价的付出来换。此条对于健康用品无效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;精读的内容必须以&lt;strong&gt;博客，思维导图和笔记&lt;/strong&gt;等方式整理储存，便于将来随时检索和快速回忆，这是检验知识是否完全消化的标准&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;极小化思想&lt;/strong&gt;。进入一个领域 / 行业，最快的方法是快速学习这个领域最基础的知识，然后在实践中反复不停地磨练自己，补充其他的部分。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完成比完美更重要&lt;/strong&gt;。写博客写文章先把框架搭起来，再慢慢补充内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主题阅读法&lt;/strong&gt;。同一个复杂的主题有很多不同的书，每本书会介绍其中的一部分，而且他们着墨的深浅也不同，没有那本书可以穷尽所有。不同的书就像知识的一条线，&lt;strong&gt;很多书在一起才能织起这张大网&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;图形化思想&lt;/strong&gt;。一图胜千言，尤其是物理和工程的礼知识，翻开书就是一大堆头疼的公式，如果仅仅明白数学原理并不算真正懂得理论。最好在学习的时候，将这些理论和实际联系起来，如果不能映射到现实的事物中，也要将知识图表化形象化，便于记忆和理解&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;纠正偏见，重视数据&lt;/strong&gt;。我的头脑中有很多错误的假设和观念，有必要根据数据纠正这些偏见&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;珍视自身体验，拒绝道德压力&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相信自己，摒息凝神，找准节奏，继续前进&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;类似于 MATLAB/python/sublime text 等工具类软件学习就该&lt;strong&gt;使用原生的帮助功能&lt;/strong&gt;，自行搜索需要的内容，不买相关工具使用指导书籍。要在庞大的帮助功能中找到自己需要的信息，既锻炼自己的英文阅读能力，又考验自己处理复杂事物的能力。&lt;/li&gt;
&lt;li&gt;按照该文的方法，学习应该注意如下几点：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;加速理解，快一点，再快一点。完整的学习过程分为三个阶段：知识面覆盖，练习和自省&lt;/strong&gt;。第一阶段效率最低，需尽快加速完成，不要在书本上做笔记，最多在每一章节最后写一个总结性的笔记或者做稀疏的笔记。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自我调试，及时反馈&lt;/strong&gt;。这一阶段最重要及时反馈，最好答案就在手边，及时纠正错误。&lt;/li&gt;
&lt;li&gt;自省。使用费曼技巧应对比较困难的课题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;费曼技巧很简单：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拿张白纸；&lt;/li&gt;
&lt;li&gt;在白纸顶部写上你想理解的某想法或某过程;&lt;/li&gt;
&lt;li&gt;用你自己的话解释它，就像你在教给别人这个想法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最要紧的是，对一个想法分而化之，虽然可能重复解释某些已经弄懂的知识点。但你最终会到达一个临界点，无法再解释清楚。那里正是你需要填补的知识缺口。为了填补这个缺口，你可以查课本、问老师、或到互联网搜寻答案。通常来说，一旦你精准地定义了你的不解或误解，找到确切的答案则相对而言更轻松。&lt;/p&gt;</description>
        </item>
        <item>
        <title>堆栈出栈序列问题</title>
        <link>https://blog.bugxch.top/p/%E5%A0%86%E6%A0%88%E5%87%BA%E6%A0%88%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98/</link>
        <pubDate>Sat, 21 Jul 2018 21:46:35 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%A0%86%E6%A0%88%E5%87%BA%E6%A0%88%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;p&gt;这是工作中遇到的小问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/stack.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;数据结构中有一种数据类型——&lt;strong&gt;堆栈&lt;/strong&gt;，该结构中的数据项有如下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;除了最前面和最后面的数据，每个数据项都有一个前驱结点和一个后继结点；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;堆栈两端分别称为栈顶和栈底，数据项只能在栈顶加入或者弹出。&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Data_stack.svg/400px-Data_stack.svg.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;很明显，堆栈的数据遵循先入后出原则。假设我们有 3 个不同的数据项，编号 1，2，3，只要保证入栈顺序是大编号在后小编号在前，且每次进栈的数量不限，则所有可能的出栈顺序有：1-&amp;gt;2-&amp;gt;3，1-&amp;gt;3-&amp;gt;2，2-&amp;gt;1-&amp;gt;3，2-&amp;gt;3-&amp;gt;1，3-&amp;gt;2-&amp;gt;1 一共 5 种，注意 3-&amp;gt;1-&amp;gt;2 不是可能的出栈顺序，因为如果 3 最先出栈，那么 1 和 2 必在栈中（如果还未入栈，则说明 3 先入栈，与假设矛盾），只能 2 在上 1 在下，所以出栈顺序必然是 2-&amp;gt;1。那么，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;问题一&lt;/strong&gt;：编号$1\sim n$的连续数据项以编号的先后顺序入栈然后出栈，所有可能的出栈顺序有多少种？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的问题比较难于回答，引申之后得到另一个比较弱的问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;问题二&lt;/strong&gt;：给定一个长度为$n$ 的整数序列，且各个元素均不相同，它是否是一个出栈序列？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了回答以上的两个问题，我们首先来看下一个正常的出栈序列有什么特点。假设长度为 $n$的出栈序列是$a_1,a_2,…,a_n$，取其中第$k$ 个数 $a_k$，则有如下结论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$a_k$之前的所有数据项都已经出栈，即$a_1,a_2,…,a_{k-1}$都已经出栈；&lt;/li&gt;
&lt;li&gt;$a_k$ 之后的所有数据项中，小于 $a_k$的都在栈内，大于$a_k$的尚未入栈；&lt;/li&gt;
&lt;li&gt;$a_k$之后紧跟的出栈数据项 $a_{k+1}$ 要么大于$a_k$，要么是所有未出栈的比$a_k$小的数据项中最大的一个&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结论 1 很明显，因为本身就是出栈序列，因此之前的数据肯定已经出栈；结论 2 中，之后的数据只有两种存在的可能：在栈内，或者未进栈。比$a_k$小的如果未进栈，那么 akak 根本不可能出栈（因为就没进栈），比$a_k$大的如果在栈内，那$a_k$也无法出栈，因为$a_k$在它的下面，因此得证；结论 3，$a_{k+1}$就是$a_k$ 出栈后栈顶的数据，因此必然是在栈内的数据的最上面的一个，或者是栈外的某一个数据（进栈再出栈）。&lt;/p&gt;
&lt;p&gt;于是由结论 3 找到判断序列的方法：&lt;strong&gt;逐个检查序列的每一项$a_k$，将该项之后的数据分为大于该数据的大数集合$S_g$和小于该数的小数集合$S_l$，查看是否后续的数据项是小数集合的最大值或者是大数集合的任意值，如果不是则不是出栈序列，即若 $a_{k+1}\in S_g$ 或 $a_{k+1}=max_l{S_l}$，即是出栈序列。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;问题一的解答，就是穷举长度为 nn 的序列，逐个进行判断，得到最后的结果，附上 python 程序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;math&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;itertools&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;输入序列的长度&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;raw_input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Input n: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;判断是否是出栈序列&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;IsNotStackSeq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_ls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;逐个检查序列中的每一个元素&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;ak&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_ls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;set_in&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_ls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;a_max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ak&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;将ak之后的元素分为大于和小于两组集合&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;min_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;set_in&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;max_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;set_in&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;a_max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;后续的元素是否是小于集合的最大值或者属于大于集合&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_ls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a_max&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_ls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;StackSeqList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;n_permation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;itertools&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;permutations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;n_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_permation&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IsNotStackSeq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        </item>
        <item>
        <title>正则表达式详解（上）</title>
        <link>https://blog.bugxch.top/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%A6%E8%A7%A3%E4%B8%8A/</link>
        <pubDate>Sat, 21 Jul 2018 21:12:46 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%A6%E8%A7%A3%E4%B8%8A/</guid>
        <description>&lt;p&gt;简单来说，正则表达式是根据一定的语法规则组合而成的用来匹配具有某种模式的文本的字符串。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-hans/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;维基百科&lt;/a&gt;定义如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;正则表达式&lt;/strong&gt;，又称&lt;strong&gt;正规表示式&lt;/strong&gt;、&lt;strong&gt;正规表示法、正规运算式、规则运算式、常规表示法&lt;/strong&gt;（英语：Regular Expression，在代码中常简写为 regex、regexp 或 RE），&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-hans/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;计算机科学&lt;/a&gt;的一个概念。正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则的&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-hans/%E5%AD%97%E7%AC%A6%E4%B8%B2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;字符串&lt;/a&gt;。在很多&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-hans/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;文本编辑器&lt;/a&gt;里，正则表达式通常被用来&lt;strong&gt;检索、替换&lt;/strong&gt;那些符合某个模式的文本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正则表达式在台湾又译作正规表达式，英文名称表示 “某种规则的表达式” 的意思，目前&lt;strong&gt;主流的文本编辑器&lt;/strong&gt;(source insight/sublimtext/ultra edit/emacs/notepad++/vim) 和&lt;strong&gt;主流计算机语言&lt;/strong&gt;（perl/python/PHP/java/.NET/tcl/c/c++）都支持正则表达式。它**简单，优美，功能强大，妙用无穷。**大数据时代的到来，因其快捷强大的文本处理能力必然在数据挖掘处理中发挥越来越重要的作用。&lt;/p&gt;
&lt;p&gt;正则表达式由一般字符和特殊字符组成，一般字符指常见的字符本身，比如&lt;code&gt;123Aaf0=;~#@%&lt;/code&gt;这些简单字符。通过简单地排列组合这些字符可以实现对复杂字符串的精确匹配。先放一张 python 的正则字符列表，下面逐一介绍。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://images.cnblogs.com/cnblogs_com/huxi/Windows-Live-Writer/Python_10A67/pyre_ebb9ce1c-e5e8-4219-a8ae-7ee620d5f9f1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;元字符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;除了一般字符之外，python 规定了&lt;code&gt;.^$*+?{}[]()\|&lt;/code&gt;这 14 个元字符，它们分别具有特殊的含义，有的代表量词，有的代表分组，有的代表逻辑等等（具体可参见上表）。正则表达式使用&lt;code&gt;\&lt;/code&gt;作为转义字符，例如 \ s 代表空格，使用 \ t 代表 tab 等，我们将&lt;strong&gt;转义字符与其组合归类到一般字符&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;注意字符集&lt;code&gt;[]&lt;/code&gt;，它匹配&lt;strong&gt;内容&lt;/strong&gt;是括号中的任何一个字符，比如&lt;code&gt;[a0d]&lt;/code&gt;表示匹配 a 或者 0 或者 d，而不是匹配&lt;code&gt;a0&lt;/code&gt;，&lt;code&gt;0d&lt;/code&gt;或者&lt;code&gt;a0d&lt;/code&gt;。关于字符集需要注意如下两点：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;字符集中的特殊字符都失去了它们本身代表的涵义，而成为符号自身&lt;/strong&gt;，比如&lt;code&gt;[a\.0]&lt;/code&gt;匹配&lt;code&gt;dlkll\fd&lt;/code&gt;，因为其中有&lt;code&gt;\&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;字符集前面最前面为&lt;code&gt;^&lt;/code&gt;表示&lt;strong&gt;不匹配字符集中的任意字符&lt;/strong&gt;，比如&lt;code&gt;[^\da-f]&lt;/code&gt;表示不匹配数字及字母 a~f 中的任意字符。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;与 python 原生的字符串方法不同的是，正则表达式可以使用&lt;strong&gt;量词，位置匹配，字符组合，分组捕获&lt;/strong&gt;等更强大的功能实现更复杂的字符处理功能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;量词
特殊字符中的&lt;code&gt;+*?&lt;/code&gt;三个字符是量词字符，描述&lt;strong&gt;在它们之前紧挨着它们&lt;/strong&gt;的字符&lt;strong&gt;连续重复的数量&lt;/strong&gt;。比如量词&lt;code&gt;a{100}&lt;/code&gt;就代表 a 连续重复 100 次，而&lt;code&gt;a+&lt;/code&gt;表示 a 出现至少一次，其他的具体的内容可参见表格。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;位置字符
正则表达式不仅可以匹配字符也可以匹配位置，这些字符包括&lt;code&gt;^$\b\A\Z\B&lt;/code&gt;，比如匹配以 Atom 开头的行，就是&lt;code&gt;^Atom&lt;/code&gt;，其他字符的具体含义可以参见表格。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逻辑
&lt;code&gt;|&lt;/code&gt;表示或，所有的字符中&lt;strong&gt;优先级最低&lt;/strong&gt;，比如&lt;code&gt;girl|boy&lt;/code&gt;表示匹配 girl 或者 boy，而不是&lt;code&gt;girloy&lt;/code&gt;或者&lt;code&gt;girboy&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;初识正则表达式&#34;&gt;初识正则表达式&lt;/h5&gt;
&lt;p&gt;有了以上的基础知识，就可以完成大部分简单的正则表达式了，比如&lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/howto/regex.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;中的例子，尝试用正则表达式&lt;code&gt;a[bcd]*b&lt;/code&gt;去匹配&lt;code&gt;abcbd&lt;/code&gt;。具体的匹配步骤如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Matched&lt;/th&gt;
&lt;th&gt;Explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正则表达式中的 &lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;code&gt;abcbd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;引擎匹配 &lt;code&gt;[bcd]*&lt;/code&gt;，匹配尽可能多的字符直到目标字符串结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;失败&lt;/td&gt;
&lt;td&gt;引擎尝试匹配 &lt;code&gt;b&lt;/code&gt;，但是目前已经到了字符串结尾，所以无字符匹配，失败 /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;code&gt;abcb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;回溯一个字符（即&lt;code&gt;d&lt;/code&gt;），因此 &lt;code&gt;[bcd]*&lt;/code&gt; 少匹配一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;失败&lt;/td&gt;
&lt;td&gt;再次尝试匹配 &lt;code&gt;b&lt;/code&gt; ，但是当前未匹配字符只有 &lt;code&gt;&#39;d&#39;&lt;/code&gt;，再次失败&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;code&gt;abc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;再次回溯一个字符（即&lt;code&gt;b&lt;/code&gt;）， 因而 &lt;code&gt;[bcd]*&lt;/code&gt;仅仅匹配&lt;code&gt;bc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;code&gt;abcb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;再次尝试匹配 &lt;code&gt;b&lt;/code&gt; 。 这次未匹配字符当前位置就是 &lt;code&gt;&#39;b&#39;&lt;/code&gt;，因此成功&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;从以上的匹配过程可以看到，正则表达式匹配过程就是引擎从左到右逐个搜索目标字符串，&lt;strong&gt;匹配正则表达式中所有字符代表的模式&lt;/strong&gt;，如果搜索完整个字符串仍然没有找到就失败。推荐使用网站 &lt;a class=&#34;link&#34; href=&#34;https://regex101.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;regex101.com&lt;/a&gt; 选择 python 语言，练习正则表达式。网站截图如下所示，它用蓝色底块标识了表达式匹配的内容，直观好用。&lt;/p&gt;
&lt;h5 id=&#34;贪婪模式&#34;&gt;贪婪模式&lt;/h5&gt;
&lt;p&gt;上面的例子里的第二步，&lt;code&gt;*&lt;/code&gt;会&lt;strong&gt;尽可能地匹配符合表达式的所有字符&lt;/strong&gt;，引擎就像一个&lt;strong&gt;贪婪&lt;/strong&gt;的胖子，&lt;strong&gt;一口气吞下所有可以吞下去的东西&lt;/strong&gt;，这就是正则表达式的&lt;strong&gt;贪婪模式&lt;/strong&gt;。构造正则表达式时需要特别小心地处理具有相同属性的量词字符&lt;code&gt;?{m,n}+&lt;/code&gt;，不然往往会产生意想不到的结果。&lt;/p&gt;
&lt;p&gt;比如使用正则表达式&lt;code&gt;&amp;lt;.*&amp;gt;&lt;/code&gt;尝试匹配&lt;code&gt;&amp;lt;a&amp;gt;b&amp;lt;c&amp;gt;&lt;/code&gt;的中的&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;，却匹配了整个表达式。为了仅仅匹配&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;，需要在&lt;code&gt;*&lt;/code&gt;后加上&lt;code&gt;?&lt;/code&gt;，即使用&lt;code&gt;&amp;lt;.*?&amp;gt;&lt;/code&gt;就能成功。二者的具体的区别如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;步骤&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;.*&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先匹配&lt;code&gt;&amp;lt;&lt;/code&gt;，再匹配&lt;code&gt;.*&lt;/code&gt;，此时吞下所有的符号，最后从最后一个字符开始，吐一个字符匹配一次&lt;code&gt;&amp;gt;&lt;/code&gt;，直到成功为止&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;.*?&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先匹配&lt;code&gt;&amp;lt;&lt;/code&gt;，再匹配&lt;code&gt;.*?&lt;/code&gt;，此时一个字符一个字符吞，每吞一个字符就立马匹配&lt;code&gt;&amp;gt;&lt;/code&gt;，直到成功为止&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在量词之后加上&lt;code&gt;?&lt;/code&gt;表示&lt;strong&gt;非贪婪模式&lt;/strong&gt;或者&lt;strong&gt;最小模式&lt;/strong&gt;，吐到第三个字符为止，因此它找到了最小的&lt;code&gt;&amp;lt;.*&amp;gt;&lt;/code&gt;的模式。&lt;/p&gt;
&lt;h5 id=&#34;零宽字符&#34;&gt;零宽字符&lt;/h5&gt;
&lt;p&gt;正则表达式中字符&lt;code&gt;\b^$\A\Z\B|&lt;/code&gt;不占有任何字符，但是定义字符的边界，它们都是&lt;strong&gt;零宽 (zero-width)&lt;/strong&gt; 字符。比如&lt;code&gt;\b\w+\b&lt;/code&gt;表示匹配一个单词，而其中的&lt;code&gt;\b&lt;/code&gt;表示单词的边界。&lt;/p&gt;
&lt;h5 id=&#34;分组捕获&#34;&gt;分组捕获&lt;/h5&gt;
&lt;p&gt;字符处理不仅仅需要判断是否匹配，我们常常希望提取相关模式的字符串，获得对应的信息，比如从网页源代码中提取邮件地址。此时就可以利用正则表达式的分组功能捕获字符，上面表中的的 group 就可以抓取不同的分组字符。比如，需要从下面字符中提取邮件的发件人信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;From: author@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Thunderbird 1.5.0.9 (X11/20061227)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MIME-Version: 1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;To: editor@example.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;^From:\s*([\w@.]+)&lt;/code&gt;抓取信息，其中有 2 个括号，就是分别&lt;strong&gt;分组捕获&lt;/strong&gt;发件人和日期。从左到右以&lt;code&gt;(&lt;/code&gt;的出现顺序为序，分别是第 1 个分组第 2 个分组依次类推，使用编号就可以重复对应括号分组的模式。&lt;/p&gt;
&lt;p&gt;举个例子，匹配类似&lt;code&gt;abba&lt;/code&gt;的单词，使用正则表达式&lt;code&gt;\b([a-zA-Z])([a-zA-Z])\2\1\b&lt;/code&gt;，其中的 \ 1 和 \ 2 就分别表示与第 1 个和第 2 个分组相同的内容，依次类推。&lt;/p&gt;
&lt;p&gt;如果分组很多，数字编号数数会很累，也可以使用&lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt;命名，之后再使用&lt;code&gt;(?P=name)&lt;/code&gt;引用，比如下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p = re.compile(r&amp;#39;(?P&amp;lt;word&amp;gt;\b\w+\b)&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; m = p.search( &amp;#39;(((( Lots of punctuation )))&amp;#39; )
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; m.group(&amp;#39;word&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#39;Lots&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; m.group(1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#39;Lots&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中的&lt;code&gt;&amp;lt;word&amp;gt;&lt;/code&gt;表示匹配的分组名字是&lt;code&gt;word&lt;/code&gt;，使用 group() 方法使用名字即可调用这个分组内容。&lt;/p&gt;
&lt;h5 id=&#34;零宽断言&#34;&gt;零宽断言&lt;/h5&gt;
&lt;p&gt;除此之外，还有如下 5 个特殊的分组匹配符号和正常的匹配符号相似，但是它们匹配&lt;code&gt;...&lt;/code&gt;的表达式，却不&lt;strong&gt;捕获内容&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(?:...)&lt;/code&gt;。非捕获分组，表示匹配… 表示的表达式，但是它不捕获内容，因此不能以&lt;code&gt;\1&lt;/code&gt;和&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;的方式被引用。比如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;([abc])+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(?:[abc])+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二个表达式什么都没有匹配。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(?=...)&lt;/code&gt;。肯定正序环视 (&lt;em&gt;Positive lookahead&lt;/em&gt;)，跟在匹配字符之后，表示接下来匹配… 的字符，比如&lt;code&gt;Isaac (?=Asimov)&lt;/code&gt;匹配后面跟着 Asimov 的 Isaac。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(?!...)&lt;/code&gt;。否定正序环视 (&lt;em&gt;Negative lookahead&lt;/em&gt;) 与上面的意思刚好相反，表示不匹配…。&lt;/p&gt;
&lt;p&gt;举个例子匹配形如&lt;code&gt;foo.txt&lt;/code&gt;的文件名，但是要求文件的扩展名不是&lt;code&gt;bar&lt;/code&gt;，就可以使用&lt;code&gt;.*[.](?!bar).*$&lt;/code&gt;匹配。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(?&amp;lt;=...)&lt;/code&gt;。肯定逆序环视 (&lt;em&gt;Positive lookbehind&lt;/em&gt;) 跟在匹配字符之后，表示之前匹配… 的字符，比如&lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt;匹配&lt;code&gt;abcdef&lt;/code&gt;，表示之前为&lt;code&gt;abc&lt;/code&gt;的&lt;code&gt;def&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(?&amp;lt;!...)&lt;/code&gt;。否定逆序环视 (&lt;em&gt;Negative lookbehind&lt;/em&gt;) 表示之前不匹配…，与上一条意思刚好相反。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;符号优先级&#34;&gt;符号优先级&lt;/h5&gt;
&lt;p&gt;另一个需要留心的问题是正则表达式的优先级，它表示解读正则表达式时对一般字符及字符组（用&lt;code&gt;()&lt;/code&gt;括起来的一般字符的组合）的&lt;strong&gt;粘度&lt;/strong&gt;，最低的是&lt;code&gt;|&lt;/code&gt;（表中未列出），具体可参考如下的优先级列表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;转义符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(), (?:), (?=), []&lt;/td&gt;
&lt;td&gt;圆括号和方括号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*, +, ?, {n}, {n,}, {n,m}&lt;/td&gt;
&lt;td&gt;限定符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^, $, \ 任何元字符、任何字符&lt;/td&gt;
&lt;td&gt;定位点和序列（即：位置和顺序）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;正则表达式举例&#34;&gt;正则表达式举例&lt;/h5&gt;
&lt;p&gt;结合以上的例子，解读如下正则表达式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;[-+]?(\d*\.\d+|\d+)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;拿到一个正则表达式，&lt;strong&gt;首先看它有哪些运算符&lt;/strong&gt;，然后依照&lt;strong&gt;从最高到最低优先级&lt;/strong&gt;每个运算符去粘挨着它的字符，按照&lt;strong&gt;尽量多地将相同优先级的字符粘在在一起形成更大的字符&lt;/strong&gt;，比如&lt;code&gt;d*\.\d+&lt;/code&gt;就是一个大字符，最后就将所有的运算符和字符遍历完为止。&lt;/p&gt;
&lt;p&gt;这个正则表达式匹配&lt;code&gt;+.989&lt;/code&gt;，&lt;code&gt;-9.989&lt;/code&gt;，&lt;code&gt;+989&lt;/code&gt;，&lt;code&gt;-989&lt;/code&gt;，&lt;code&gt;.989&lt;/code&gt;这些小数或者整数。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;[1-9]\d{4,}&lt;/code&gt;
匹配 1 个数字和至少 4 个数字，实际上是 QQ 号码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Windows(?=95|98|NT)&lt;/code&gt;
匹配后面跟着 95，98 或者 NT 的 Windows&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[1-9]\d{5}&lt;/code&gt;
匹配中国邮政编码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;附表&lt;/p&gt;
&lt;p&gt;此外附上网站 &lt;a class=&#34;link&#34; href=&#34;http://deerchao.net/tutorials/regex/common.htm%E3%80%81&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;deerchao&lt;/a&gt; 总结的常见正则表达式列表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;正则表达式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;网址（URL）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[a-zA-z]+://[^\s]*&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP 地址 (IP Address)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电子邮件 (Email)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;QQ 号码&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1-9]\d{4,}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HTML 标记 (包含内容或自闭合)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;(.*)(.*)&amp;gt;.*&amp;lt;\/\1&amp;gt;|&amp;lt;(.*) \/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;密码 (由数字 / 大写字母 / 小写字母 / 标点符号组成，四种都必有，8 位以上)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(?=^.{8,}\$)(?=.*\d)(?=.*\W+)(?=.*[A-Z])(?=.*[a-z])(?!.*\n).*$&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;日期 (年 - 月 - 日)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(\d{4}\d{2})-((1[0-2])(0?[1-9]))-(([12][0-9])(3[01])(0?[1-9]))&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;日期 (月 / 日 / 年)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;((1[0-2])(0?[1-9]))/(([12][0-9])(3[01])(0?[1-9]))/(\d{4}\d{2})&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;时间 (小时: 分钟, 24 小时制)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;((10?)[0-9]2[0-3]):([0-5][0-9])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;汉字 (字符)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[\u4e00-\u9fa5]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中文及全角标点符号 (字符)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[\u3000-\u301e\ufe10-\ufe19\ufe30-\ufe44\ufe50-\ufe6b\uff01-\uffee]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中国大陆固定电话号码&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(\d{4}-\d{3}-)?(\d{8}\d{7})&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中国大陆手机号码&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1\d{10}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中国大陆邮政编码&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[1-9]\d{5}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中国大陆身份证号 (15 位或 18 位)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\d{15}(\d\d[0-9xX])?&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;非负整数 (正整数或零)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\d+&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;正整数&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[0-9]*[1-9][0-9]*&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;负整数&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-[0-9]*[1-9][0-9]*&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;整数&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-?\d+&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小数&lt;/td&gt;
&lt;td&gt;&lt;code&gt;(-?\d+)(\.\d+)?&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;不包含 abc 的单词&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\b((?!abc)\w)+\b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
        </item>
        <item>
        <title>正则表达式详解（下）</title>
        <link>https://blog.bugxch.top/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%A6%E8%A7%A3%E4%B8%8B/</link>
        <pubDate>Sat, 21 Jul 2018 21:10:56 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%A6%E8%A7%A3%E4%B8%8B/</guid>
        <description>&lt;p&gt;书接上文，在下篇中主要介绍如何在 python 中使用正则表达式实现文本的匹配和替换工作。&lt;/p&gt;
&lt;h2 id=&#34;匹配字符串&#34;&gt;匹配字符串&lt;/h2&gt;
&lt;p&gt;python 的 re 模块支持正则表达式，基本步骤是使用 compile 编译正则表达式为 pattern 实例，之后使用实例匹配目标文本（一般使用方法 match 和 search）。先来看一个简单的例子，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# encoding: UTF-8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Tutorial.  0123456789 _ + -., !@  # $%^&amp;amp;*();\/|&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;12345 - 98.7 3.141 .6180 9,000 + 42 55.123.4567 + 1 - (800) - 555 - 2468 foo@demo.net ar.ba@test.co.uk www.demo.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\d+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sear&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sear&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mat&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;代码第 4 行，使用正则表达式&lt;code&gt;r&amp;quot;\d+&amp;quot;&lt;/code&gt;compile 编译一个 pattern 的实例。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么要在正则表达式之前加个&lt;code&gt;r&lt;/code&gt;呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此处的&lt;code&gt;r&lt;/code&gt;表示 raw，即原始输入。因为&lt;code&gt;\&lt;/code&gt;在 python 的字符串中也是转义字符，此处的功能与正则表达式中的功能有冲突。&lt;code&gt;compile&lt;/code&gt;中的表达式从输入到真正的表达式的意思执行需要经过两次解读，&lt;strong&gt;python 本身解读之后将字符串表达的意思传递给正则表达式，正则引擎再解读之后执行&lt;/strong&gt;，问题就出在两次解读上。&lt;/p&gt;
&lt;p&gt;以最终匹配&lt;code&gt;\section&lt;/code&gt;为例，如果不加&lt;code&gt;r&lt;/code&gt;使用 python 第 5 行的参数就该是&lt;code&gt;\\\\section&lt;/code&gt;，即&lt;code&gt;pattern = re.compile(&amp;quot;\\\\section&amp;quot;, re.M)&lt;/code&gt;。第一次解读，python 将其理解为&lt;code&gt;\\section&lt;/code&gt;传递给正则引擎，正则理解为要匹配&lt;code&gt;\section&lt;/code&gt;，如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Characters&lt;/th&gt;
&lt;th&gt;Stage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\section&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;希望匹配的字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\\section&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正则引擎添加反斜线 &lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/library/re.html#re.compile&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;re.compile()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;\\\\section&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;python 字符串为表示&lt;code&gt;\&lt;/code&gt;字符再添加反斜线&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;所以为了匹配 1 个&lt;code&gt;\&lt;/code&gt;最后需要写 4 个&lt;code&gt;\&lt;/code&gt;，实在麻烦，**为了便利，因此使用r在字符串之前，表示去掉 Python 的解读，仅保留正则引擎的解读。**比如下表中的参数写法就能省掉很多不必要的&lt;code&gt;\&lt;/code&gt;，十分方便。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Regular String&lt;/th&gt;
&lt;th&gt;Raw string&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;ab*&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;r&amp;quot;ab*&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;\\section&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;r&amp;quot;\section&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;\\w+\\s+\\1&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;r&amp;quot;\w+\s+\1&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;re.M&lt;/code&gt;是个什么东东？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的代码中，compile 还包含了&lt;code&gt;re.M&lt;/code&gt;作为一个 flag，它是&lt;code&gt;MULTILINE&lt;/code&gt;的缩写，表示匹配多行模式，除了多行模式之外（具体含义见下表），python 还有其他的 flag 影响表达式匹配的规则。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ASCII&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使得 &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt; 和 &lt;code&gt;\d&lt;/code&gt; 仅仅匹配 ASCII 文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DOTALL&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使得 &lt;code&gt;.&lt;/code&gt; 匹配换行符在内的所有字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IGNORECASE&lt;/code&gt;, &lt;code&gt;I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;忽略大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LOCALE&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使用 locale 匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MULTILINE&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多行匹配，影响 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;VERBOSE&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt; (for ‘extended’)&lt;/td&gt;
&lt;td&gt;忽略表达式中的空格，允许插入注释&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;需要说明的是&lt;code&gt;X&lt;/code&gt;模式，使用方法如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;charref&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt; &amp;amp;[#]                # Start of a numeric entity reference
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;     0[0-7]+         # Octal form
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;   | [0-9]+          # Decimal form
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;   | x[0-9a-fA-F]+   # Hexadecimal form
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt; ;                   # Trailing semicolon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VERBOSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;表达式内部加入了注释，而且可以多行显示，可以使用它表示复杂的表达式，非常方便。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;匹配正则表达式的方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;pattern 的对象建立之后，就是可以使用 re 的方法匹配字符串了。最重要的方法有下表中的四个。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法或者属性&lt;/th&gt;
&lt;th&gt;目的&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表达式是否匹配字符串的开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;浏览整个字符串，匹配其中任意位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配所有的字符子串，返回列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;finditer()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配所有的字符子串，返回 &lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/glossary.html#term-iterator&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;iterator&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;运行上面的代码如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sear&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_sre&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SRE_Match&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;0123456789&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mat&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;0123456789&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;12345&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;98&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;7&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;141&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;6180&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;000&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;42&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;55&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;4567&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;800&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;555&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;2468&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;sear 匹配成功，返回匹配的对象。mat 匹配失败，fin 匹配成功并且返回了字符列表。&lt;/p&gt;
&lt;p&gt;匹配成功之后对象有如下方法&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;目的&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;group()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回匹配的字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回匹配字符串的开始位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回匹配字符串的结束位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;span()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回匹配字符串开始位置和结束位置的元组 (start, end)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;group()&lt;/code&gt;在上篇中讲过，它在字符捕获时候非常有用，字符的分组从 0 开始，其中第 0 个代表所有匹配的内容，1 代表匹配的第一组，以此类推。比如下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; p = re.compile(&amp;#39;(a(b)c)d&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; m = p.match(&amp;#39;abcd&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; m.group(0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#39;abcd&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; m.group(1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#39;abc&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;&amp;gt;&amp;gt; m.group(2)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#39;b&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以将&lt;code&gt;group(0)&lt;/code&gt;理解成没有分组符号匹配的所有字符，而之后的编号代表分组依次匹配的子串。&lt;/p&gt;
&lt;h2 id=&#34;修改字符串&#34;&gt;修改字符串&lt;/h2&gt;
&lt;p&gt;模块级别的字符串修改方法如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法和属性&lt;/th&gt;
&lt;th&gt;目的&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使用 pattern 将目标字符串分割，并返回列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找所有匹配的子串，并替换之，返回替换之后的字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;subn()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找所有匹配的子串，并替换之，返回替换之后的字符串和次数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.split&lt;/code&gt;(&lt;em&gt;string&lt;/em&gt;[, &lt;em&gt;maxsplit=0&lt;/em&gt;]) 将字符串分割，其中有参数最大分块，默认将分割成最多的块。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\W+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;This is a test, short and sweet, of split().&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;This&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;is&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;short&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;and&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sweet&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;of&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;split&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;This is a test, short and sweet, of split().&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;This&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;is&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;test, short and sweet, of split().&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;替换字符串&#34;&gt;替换字符串&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.sub&lt;/code&gt;(&lt;em&gt;replacement&lt;/em&gt;, &lt;em&gt;string&lt;/em&gt;[, &lt;em&gt;count=0&lt;/em&gt;]) 将 string 中所有符合 pattern 模式替换成 replacement，count 表示替换的次数。看如下的例子&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;(blue|white|red)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;colour&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;blue socks and red shoes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;colour socks and colour shoes&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;colour&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;blue socks and red shoes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;colour socks and red shoes&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;方法&lt;code&gt;subn()&lt;/code&gt;与&lt;code&gt;sub()&lt;/code&gt;类似，但是它返回一个元组，其中包含替换之后的字符串，以及替换的次数，下面是另一个例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;(blue|white|red)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;colour&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;blue socks and red shoes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;colour socks and colour shoes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;colour&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no colours at all&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;no colours at all&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;特别地，替换可以使用分组，这在交换字符串的位置时非常有用。举例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;This is part1 and part2&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;(.*)(part1)(.*)(part2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\1\4\3\2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;This is part2 and part1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们还可以使用之前的名字分组，除了使用&lt;code&gt;\number&lt;/code&gt;指代第几个分组之外，还可以使用&lt;code&gt;\g&amp;lt;number&amp;gt;&lt;/code&gt;指代已经命名的分组。一个典型的例子如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;section{ (?P&amp;lt;name&amp;gt; [^}]* ) }&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VERBOSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;subsection{\1}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;section&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{First}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;subsection&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{First}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;subsection{\g&amp;lt;1&amp;gt;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;section&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{First}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;subsection&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{First}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;subsection{\g&amp;lt;name&amp;gt;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;section&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{First}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;subsection&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{First}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;使用正则表达式&#34;&gt;使用正则表达式&lt;/h2&gt;
&lt;p&gt;考虑使用正则表达式之前，先想想是否可以使用字符串方法就能解决问题。如果仅仅匹配和替换固定字符串，python 自带的字符串方法速度更快，效率更高，不是每个字符串的替换都需要使用正则表达式。&lt;/p&gt;
&lt;h2 id=&#34;未尽事宜&#34;&gt;未尽事宜&lt;/h2&gt;
&lt;p&gt;相信以上介绍的内容能够解决大部分的字符处理问题，但是对于专业大数据处理可能还需要了解正则表达式更多的内容，比如不同语言的正则表达式语法，以及复杂正则表达式的匹配效率。这些比较深入的知识可以参考 Jeffrey E.F. Friedl 的&lt;a class=&#34;link&#34; href=&#34;http://datamining.xmu.edu.cn/documentation/books/mastering_regular_expressions.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《精通正则表达式》&lt;/a&gt;，里面有非常专业的解释，相信它可以帮你解决正则表达式的绝大部分疑问。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image-7.verycd.com/ff45820ed025353061ccb475dc49c57d109161/%E7%B2%BE%E9%80%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;封面&#34;
	
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>伯恩斯新情绪疗法</title>
        <link>https://blog.bugxch.top/p/%E4%BC%AF%E6%81%A9%E6%96%AF%E6%96%B0%E6%83%85%E7%BB%AA%E7%96%97%E6%B3%95/</link>
        <pubDate>Sat, 21 Jul 2018 21:09:13 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%BC%AF%E6%81%A9%E6%96%AF%E6%96%B0%E6%83%85%E7%BB%AA%E7%96%97%E6%B3%95/</guid>
        <description>&lt;p&gt;推荐给轻度抑郁者的好书。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/fake-smile-resize.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;有段时间心情抑郁，严重怀疑自己，偶尔看到&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/2216703/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《伯恩斯新情绪疗法》&lt;/a&gt;这本书，对照认知扭曲的十大罪状，发现自己招招中到膝盖上，列出来警醒自己。真是&lt;strong&gt;错误的心理源于错误的思维&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/notes.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;非此即彼思维：你用非黑即白的思维模式看待世界，只要你的表现有一点不完美，你就宣告彻底失败。&lt;/li&gt;
&lt;li&gt;以偏概全：在你看来，只要发生一件负面事件，就表示失败会接踵而至。&lt;/li&gt;
&lt;li&gt;心理过滤：你单单挑出一些负面细节反复回味，最后你眼中的整个现实世界都变得黑暗无光。&lt;/li&gt;
&lt;li&gt;否定正面思考：你拒绝正面的体验，坚持以这样或那样的暗示自己 “它们不算”。虽然这种消极信念有悖于现实体验，但你却以这种方式固执地坚持。&lt;/li&gt;
&lt;li&gt;妄下结论（包括读心术、先知错误）：你喜欢用消极的理解方式下结论，即使没有确切的事实有力地证明也如此。
&lt;ul&gt;
&lt;li&gt;读心术。如果发现他人的行为不尽如人意，你就认为是针对你的，对此你也懒得去查证；&lt;/li&gt;
&lt;li&gt;先知错误。你觉得事情只会越来越糟，对这一预言深信不疑。在你看来，它就是铁板钉钉的事实。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;放大和缩小（或称 “双目镜把戏”）：对于你的错误或他人的成就等方面，你往往会夸大它们的重要性。但对于你的优点或他人的缺点等方面，你又会不理智地将它们缩小，把它们看得微不足道。&lt;/li&gt;
&lt;li&gt;情绪化推理：你认为，只要有负面情绪，就足以证明事实确实非常糟糕，因为你这样想：“我感觉得出来，所以肯定就是真的。”&lt;/li&gt;
&lt;li&gt;“应该”句式：你习惯于用 “我应该做这个” 和“我不应该做那个”来鞭策自己，好像你需要被皮鞭抽一顿之后才能好好干活一样。“必须”和 “应当” 这类句式也会让他人产生同样的抵触效果。这种句式带来的情绪就是内疚。当你把 “应该” 句式强加于他人时，你会产生愤怒、沮丧甚至仇恨的情绪。&lt;/li&gt;
&lt;li&gt;乱贴标签：这是一种极端的以偏概全的形式。此时，你不再描述自己的错误，而是给自己贴上消极的标签：“我是个废物。” 如果有人惹恼了你，你又会给他贴上消极的标签：“他真是个讨厌鬼。” 乱贴标签指的是用高度情绪化、充满感情色彩的语言来描述事物。&lt;/li&gt;
&lt;li&gt;罪责归己：即使某些外界消极事件你根本不需要负责，但你却认为自己是罪魁祸首。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;大家可以对照看看自己，是否有以上列出的消极思维呢？&lt;/p&gt;</description>
        </item>
        <item>
        <title>2016，我的改变</title>
        <link>https://blog.bugxch.top/p/2016%E6%88%91%E7%9A%84%E6%94%B9%E5%8F%98/</link>
        <pubDate>Sat, 21 Jul 2018 21:01:51 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/2016%E6%88%91%E7%9A%84%E6%94%B9%E5%8F%98/</guid>
        <description>&lt;p&gt;新年来到，2017 年我就三十岁了，盘点下过去一年我的变化。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s-media-cache-ak0.pinimg.com/564x/e2/2d/2c/e22d2c529a7b86f3d59bab59004c2299.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;goodbye&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;种一棵树最好的时间是十年前，其次是现在。 ——互联网&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;世界观&#34;&gt;世界观&lt;/h2&gt;
&lt;h3 id=&#34;变化越来越快波及越来越广&#34;&gt;&lt;strong&gt;变化越来越快，波及越来越广&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;http://cdnph.upi.com/ph/st/th/3161481114819/2016/i/14811176572474/v1.5/Donald-Trump-is-Time-magazines-2016-Person-of-the-Year.jpg?lg=5&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;trump&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;世界不是线性时不变系统，它充满未知与突兀。英国脱欧，特朗普当选总统，表姐在老家读高中时从没想到会在武汉定居，丫丫在成都啃馒头时从没想过工资能超过四千。2016 年初房价上涨从上海一直波及到武汉和郑州，即便生活在二线城市躲清静，也躲不开汹涌的潮水。科技进步促使消费品成本快速降低，两三年时间老家几乎一半的家庭装了宽带，现在有人开始买小汽车和空调，基础设施急速向城镇靠拢，这样的节奏让我始料未及。
上海的房价一个月就可能翻番，明天可能就有猎头打电话帮你跳槽到心仪的公司，可能变好也可能变坏。**明白世界多变这个道理，遇到坏事就不会焦虑，遇到好事就抓住机会。**今天的行业可能两三年就被淘汰，&lt;strong&gt;保持学习，持续更新&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;接受现实但是寻求改变&#34;&gt;&lt;strong&gt;接受现实，但是寻求改变&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;我接受自己的家庭。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多同学比我家境优渥，从小不会为钱财发愁，所以可以腾出更多时间专注在喜欢的时间上，父母有远见上学时候就买房，现在毕业没有房贷压力，做事顾忌很少。**我的父母就是农民，经济收入有限，没有多少余钱供我买房，我接受这事实。**父母在自己的能力范围之内已经做到最好，我心怀感激。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我接受自己的现状。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;阴差阳错做着自己不喜欢的工作，部门边缘化，重复劳动，加薪有限，升职遥遥无期。坚持计划没多久就会懈怠，做事不专心，没勇气去改变，找工作怕被拒绝，避开包括人际关系在内的所有复杂的事物，持续半年时间的浑浑噩噩，一想到买房就焦虑到不行。听起来狼狈不堪，不过这就是 2016 年的我啊，忽然豪情万丈，之后又跌落谷底，一度怀疑自己患上了轻度抑郁症。我是一个完美主义者，但是我不是个完美的人：&lt;strong&gt;我有缺点，而且有些还很严重，不过我接受这样的自己。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接受一件事，就不会再为了这个既定的事实消耗无谓的能量。&lt;strong&gt;之前我一直为自己的白发担忧，偶尔会拔白头发，现在已经不去理会了，老了鹤发童颜也不是很漂亮？我不会埋怨父亲为什么不是富商，我不会嫉妒生活比我好的同学，我不会怨恨自己计划怎么没有严格执行完，我不会抱怨老板抠门工作没意思，我也不会苛求自己一定要成功。埋怨，嫉妒，苛求，自毁，这些&lt;/strong&gt;坏情绪不仅消耗能量，而且对改变这些事实没有任何帮助。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**接受一件事，就会在既有的基础上寻求改变。**家境不富裕？那就一鼓作气，凭一己之力努力想办法赚钱；工作不满意？想办法部门内部调换或者跳槽；计划没法坚持？心理暗示，奖赏自己，寻找合适的工具，总是想办法让自己坚持；害怕处理人际关系？搞砸一次看看能坏到什么程度，看书看课程，与朋友交流，看看有什么变化。&lt;strong&gt;停止抱怨，只要愿意并付诸行动，凡事总会改观&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;奖赏自己&#34;&gt;&lt;strong&gt;奖赏自己&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;可能是受父亲的影响，从小抠着花钱，上学花着父母的钱，能省就省。开始赚钱之后，慢慢学会钱该怎么花。上学时候因为省钱没有考驾照，现在比原来的价格高了两三倍，而且现在也时间成本更高；因为省钱不太出去交际，也失去了很多朋友；因为省钱不出去旅行，就会错过年轻时壮游的极致体验。**盲目地省钱与盲目地花钱一样愚蠢，**比钱财更重要的是体验，健康，友情和成长。&lt;strong&gt;生产力工具，健康，学习，交友和旅行&lt;/strong&gt;的钱不能省，因为钱和这些东西不能等价交换：即便从经济学的角度来看，拥有它们带来的正向的增益远远大于为此付出的金钱。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;丫丫买到心仪的羽绒服，心满意足地说，“原来购物可以让人快乐啊”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以前纠结到底要不要花的钱，现在不多想也就花了，今年购置了新的笔记本电脑，添了一台显示器，年末又买了 ipad，还添了些件好衣服，买书付费网络课程也花了不少。&lt;strong&gt;以前买东西看是不是便宜，现在买东西看值不值，即便是高价值这个价，确实需要也会果断买。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;做事&#34;&gt;做事&lt;/h2&gt;
&lt;h3 id=&#34;大事提前规划&#34;&gt;&lt;strong&gt;大事提前规划&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://shopify-ecommerce-university.s3.amazonaws.com/production/legacy/guides/business-plan/banner-chapter-1.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;plan&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;此条尤其适用于跳槽、买房、结婚、生子和退休储蓄。我 2013 年刚来上海，到手月薪 5500，没太想过买房。2015 年自己积蓄 20W，师傅友善地提醒我去看房，我还是没想好买房，结果 2016 年初房价大涨，现在望楼兴叹。如果我早两年提前规划提前看房呢？肯定会比现在好。&lt;strong&gt;对于买房、生育和退休这样长期规划的理财计划需要提早准备，不止理财需要耗费大量精力的事情都需要提前规划和行动，真到眼前再做很有可能就错过窗口期了。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;框架比细节优先完成比完美优先&#34;&gt;&lt;strong&gt;框架比细节优先，完成比完美优先&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;我是个完美主义者，特别容易花费大量精力和时间打磨细节，而影响整体工程的进度，在工作中如是，生活中亦如是。现在则先把代码接口定义好，整体框架完成，再一个个填充，文章也是一条条内容列清楚，再细致去完成。这个可能和围棋的道理比较相同，布局比较好后面就轻松很多，刚开始就纠结于一池一地的得失必然会失掉大局。&lt;/p&gt;
&lt;h3 id=&#34;行动先于兴趣&#34;&gt;&lt;strong&gt;行动先于兴趣&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;这一点来自&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/2216703/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《伯恩斯新情绪疗法》&lt;/a&gt;，这点意识的转变尤其重要，很多人包括我都觉得做一件事必须有十足的兴趣，之后才付诸行动。&lt;strong&gt;事实上，更多时候是是先尝试做了，之后想一直把它做好，最后兴趣越来越浓。&lt;strong&gt;写文章就是典型的例子，中学时候每周都要上交一次作文，每次题目布置下来都特别发愁，但是一旦开始坐下来写，耐着性子写十分钟以上，好像上天眷顾一样越写越顺，越写越刹不住，感觉特别好。此条尤其适用于&lt;/strong&gt;创造性更高的活动&lt;/strong&gt;，比如绘画，剧本和书法等等。&lt;/p&gt;
&lt;h3 id=&#34;充分利用可控时间&#34;&gt;&lt;strong&gt;充分利用可控时间&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;有段时间我安装过类似于 24PI 的时间统计软件，自己每天花费在手机上的时间平均有 3.5 小时，几乎每天所有的闲暇时间大部分浪费在手机上了，更何况我还会在工作时候看手机。很有必要重新规划闲暇时间，多用于学习，**晚上关闭手机电脑看纸质书就是不错的保持专注力的主意，**不过没坚持多久，今年需要保持。&lt;/p&gt;
&lt;h2 id=&#34;健身&#34;&gt;健身&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://getfitgetactive.files.wordpress.com/2016/02/wellness-banner-2.jpg?w=700&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;keep fit&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;身体最诚实&lt;/strong&gt;，在健身上投入一分就回报一分，懈怠太久就出问题，尤其在压力和节奏特别大的时候。我从儿童节开始使用 “凌健身” 健身，每次 25min 左右的巨量无氧运动，累计健身时长 1360 分钟，消耗 18853 大卡，身体状态和精神状态大为改观。&lt;strong&gt;身体刚健，精神也不会脆弱。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;知识管理&#34;&gt;知识管理&lt;/h2&gt;
&lt;h3 id=&#34;书读不尽&#34;&gt;书读不尽&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;吾生也有涯，而知也无涯。以有涯随无涯，殆已！ ——庄子《养生主第三》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是我年末的顿悟，**知识是无尽的，我只取对我有用的，与学生时代享受性读书不同，现在读书更强调目的性。**豆瓣有个&lt;a class=&#34;link&#34; href=&#34;https://www.douban.com/group/buybook/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;买书如山倒，读书如抽丝&lt;/a&gt;小组，大家都习惯买书，但是看书却很慢，我也有这问题。看到好书就想买回来放在书架上，但是面对这么多的 “知识诱惑” 却无处下爪，要么就是猴子摘包谷，这个没读完又翻另一本（丫丫就因此说过我）。应对这个问题的最佳办法，就是读自己非常想了解的书，一直念念不忘的书，&lt;strong&gt;唯有饥渴，才能执着&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;信息爆炸但是知识依旧没太大增长&#34;&gt;信息爆炸，但是知识依旧没太大增长&lt;/h3&gt;
&lt;p&gt;这是李笑来老师的观点，互联网时代我们通过微信，微博，twitter 或者网站获取信息越来越便捷，新鲜事每天都有，过段时间就爆出来一个大新闻，我们的眼球耳朵和大脑被铺天盖地的&lt;strong&gt;新闻&lt;/strong&gt;占据得满满当当。但是新闻背后的&lt;strong&gt;知识逻辑却很少变化&lt;/strong&gt;，与其盲目跟风讨论时事，不如退而结网理顺背后的思想脉络。&lt;/p&gt;
&lt;p&gt;对我而言，虽然通信行业飞速发展，但背后的基础知识仍然是通信原理、数字信号处理、射频电路这些专业课程，再变化再丰富，万变不离其宗。&lt;/p&gt;
&lt;h3 id=&#34;建立完整知识链路&#34;&gt;建立完整知识链路&lt;/h3&gt;
&lt;p&gt;2016 年我建立了完整的从输入到输出的知识链路。输入端我更专注于&lt;strong&gt;主题阅读，交织读书&lt;/strong&gt;，同一个专题多个书交叉看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学会双拼，打字速度更快&lt;/li&gt;
&lt;li&gt;学会 markdown 写作，专注写作，自动排版，美观大方&lt;/li&gt;
&lt;li&gt;付费为知笔记会员，重新利用 evernote 笔记。每天收藏微信文章，定期写日志，定期输出多看读书笔记&lt;/li&gt;
&lt;li&gt;申请了微信公众号，随便记记生活的感触&lt;/li&gt;
&lt;li&gt;搭建这个 &lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 博客&lt;/a&gt;，专门撰写技术文章&lt;/li&gt;
&lt;li&gt;开始在 &lt;a class=&#34;link&#34; href=&#34;https://github.com/bugxch&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt; 上做项目，虽然目前仅仅是仿照和修改别人的代码，不过至少是个好头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;凡事皆可记录，给知识以通路。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;获得对知识的直观理解&#34;&gt;获得对知识的直观理解&lt;/h3&gt;
&lt;p&gt;在理解知识逻辑的基础上，更进一步简化逻辑链，更自然地理解知识概念，获得知识的深层次的直观的理解。比如之前学习的&lt;a class=&#34;link&#34; href=&#34;http://www.bilibili.com/video/av5977466/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《线性代数及其应用》&lt;/a&gt;，向量、矩阵、特征值分别对应三维空间的点、变换和变换的方向不变形，对线性代数的知识理解就更深刻和直观。&lt;/p&gt;
&lt;h3 id=&#34;重视-术-层面的知识&#34;&gt;重视 “术” 层面的知识&lt;/h3&gt;
&lt;p&gt;知识分为 “道” 与“术”两部分，分别对应理论与实践，我一直花费比较大的精力在道上。**理论知识有个问题，大脑吸收很慢，只有和具象的事物结合，你才能更快地理解新知识，结合具体事例能更高效地吸收知识。**新年需要重新分配时间，更多地学习术，在实践中遇到问题反过来倒逼理论知识的学习，或许更高效更有效。比如 OFDM 的知识我都清楚，花费大量时间打磨理论细节，但是实际 matlab 仿真都很少，现在在 github 上建立项目，一点点熟悉，每一部分会更直观更清晰。&lt;/p&gt;
&lt;h2 id=&#34;2017-keep-moving&#34;&gt;2017, KEEP MOVING&lt;/h2&gt;
&lt;p&gt;2017 年，三十而立。我会更沉着地磨炼技能，更耐心地守望机会，更坚定地执行计划，更果断地一击即毙。&lt;strong&gt;KEEP SHARP, KEEP MOVING!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/keepmovindg.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>《专注力》读书笔记</title>
        <link>https://blog.bugxch.top/p/%E4%B8%93%E6%B3%A8%E5%8A%9B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Sat, 21 Jul 2018 20:58:38 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%B8%93%E6%B3%A8%E5%8A%9B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;img src="https://img3.doubanio.com/lpic/s28133355.jpg" alt="Featured image of post 《专注力》读书笔记" /&gt;&lt;p&gt;要记住，你的目标是尽可能多地把时间利用在能给你带来&lt;strong&gt;最大价值&lt;/strong&gt;的事情上。&lt;/p&gt;
&lt;p&gt;去年夏天我忽然对工作失去兴趣，我每天重复同样的事情：打卡，收发邮件，查看 bug 列表，处理相同的问题，答复客户的问话，或者按照模板写写无聊的技术报告。墙上的日历一页页撕掉，今天和昨天没什么不同，一眼望到头的时间空洞让我对未来没了期待，我就像困在四面密不透风的围墙里，焦虑惶惑，我总得做点什么让一部分的自己发生改变，&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/24298931/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《专注力》&lt;/a&gt;这本书给出了一部分的答案：**砍掉、忽略或者委派 80% 低附加值的事情，聚焦最重要具有高附加值的那 20% 的事情上, 并尽量使之有趣和简单。**书中的一部分内容启发我去作出适当的改变，所以我想连同自己的一些小心得分享在这篇书评里。&lt;/p&gt;
&lt;h2 id=&#34;二八法则&#34;&gt;二八法则&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;确认你最重要的 20% 工作事项，更多地重复这 20% 的工作，这当然就意味着，少做那些不太有利的 80%。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个法则给我最大的启发，不是调整工作内容，而是&lt;strong&gt;完全重新规划我的全部生活&lt;/strong&gt;。我做的第一件事就是列出每天做过的所有的事件，包括但不限于刷手机，处理邮件，解决客户 bug，写新代码，看电视剧，练习听力，读书并写笔记，健身，写博客，打羽毛球等等。接下来重新评估每个事件的价值，砍掉或者压缩低价值的事情，将省出来的时间和精力更多地分配到高价值的事情上。比如我开始限制每天使用手机的时间，果断卸载掉不必要的 APP，腾出大块的固定的时间学习和实践新技能（我自称 “静音时间”），制订读书计划并尝试写读书笔记等等。工作中也一样，每天尽量快速完成所有维护性工作，把更高效的大段时间用在 coding 上。我还开始学习双拼输入法，大概过了一个月的时间，现在输入全程无阻碍。&lt;/p&gt;
&lt;p&gt;精力的重新分配也许会打乱之前的节奏，但是也冲刷了日复一日笼罩在头顶的的烦闷与枯燥，如果觉得生活无趣，为什么不自己找乐子呢？&lt;/p&gt;
&lt;h2 id=&#34;任务分解&#34;&gt;任务分解&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;一项过于庞大的任务会让人望而却步、心生不悦。要完成这种任务，秘诀是把任务分解成易于完成的子任务。要持续不断地对任务进行分解，直到这些子任务都很容易完成，直到你不再惧怕面对这些任务。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果说上一个法则教我跟不好的过去 say goodbye，那这个法则教我怎么完成复杂枯燥的新任务。&lt;strong&gt;大脑讨厌所有庞大虚无空洞的事物，它喜欢简单明确形象的事物，比起研究数学定理，我想大多数人更喜欢听故事&lt;/strong&gt;。聊起英语学习这样的大题目我就头大，既不知道该怎么入手，也不知道有什么有效的方法可循，更不知道什么时候能达到怎样的水平，英语包括听说读写四个方面，每一个方面都涉及太多的内容，每个人又都有自己的一套说法。如何结合自己的英语水平，参考别人的意见，形成一套适合自身学习的有效的方法论，稍微想想这工程就挺让人崩溃的。&lt;/p&gt;
&lt;p&gt;这时候就需要分解任务，或许可以从时间上先将其分为一个月，一个季度，半年和一年四个时间尺度，再预估到了某个时间节点自己能够达到的英语水平，按照这个目标开展学习计划。需要注意的是，我要&lt;strong&gt;合理预估学习曲线，达到一定的练习密度，专注于首先能够奏效的事情上&lt;/strong&gt;，比如对我而言，听力一直不好，我是个上班族每天可以投入的英语听力的的时间不超过一个小时，以这样的&lt;strong&gt;练习密度&lt;/strong&gt;很可能我需要花费半年才能有比较显著的提升，心里有这样的合理预期，就不会因为一个月没有起色而懊恼甚至放弃继续学习。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;失败的唯一途径就是你的自我放弃。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;新计划的执行从来不是一帆风顺的，其中肯定会有拖延症的身影，作者在书里提到一些有趣的小 tips：练习不完美地做一些小事，然后观察会发生些什么（或者不会发生些什么），让自己严格而挑剔的内心缓和下来，完成永远比完美更重要。对于大的项目，你可以画一个类似温度计的进度表，将需要完成的任务以间隔形式在表中进行标注，并且标出目标日期。在完成每项任务后用彩笔涂出已完成的部分。把这个 “温度计” 放在你（最好也包括其他人）每天能看到的地方。&lt;/p&gt;
&lt;h2 id=&#34;保持专注&#34;&gt;保持专注&lt;/h2&gt;
&lt;p&gt;这是一个被说烂的话题，专注的重要性不言而喻，最好的方法莫过于更快地进入心流模式，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://upload-images.jianshu.io/upload_images/49434-132d60bc6f8ff553.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;心流&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;心流模式下当事人完全聚焦并沉浸到自己正在从事的活动中，长时间投入其中而不感到疲惫和厌倦，甚至感知不到时间的流逝。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我觉得这简直就是上天对当事人的最大奖赏:)。如上图所示，心流模式下不仅能够磨砺更高的技巧，而且还能在乐趣中完成更具挑战性的任务，是不是非常美妙？所以问题就是，我们怎么才能快速进入心流模式并长时间保持这种神搓搓的状态？作者在书里提到，可以尝试想象任务完成之后的美好体验，想象越具体越形象越好，还可以学习 “巴普洛夫的狗”，在专注某件事的时候给自己奖励性的刺激，比如在学习编程的时候手边放一厅可口的啤酒，以后我想起编程嘴里就有了啤酒的好滋味，怎么会讨厌它呢？其实，我们这么做都是利用心理学和生物学的知识&lt;strong&gt;引诱我们的大脑，从事它潜意识里抗拒的工作&lt;/strong&gt;。还有&lt;strong&gt;再坚持一会儿的耐心&lt;/strong&gt;，简单的东西自然得来不费力，那些复杂的困难的部分肯定需要投入比简单任务更多甚至数倍的精力，古语云，如切如磋，如琢如磨，即是此意。&lt;/p&gt;
&lt;p&gt;就我个人的体验而言，连接 wifi 的手机和电脑是进入心流模式的最大的拦路虎，信息获取速度快，新鲜的资讯或者段子很容易获得小快感（想象烟花在脑子里绽放的样子），大脑适应了&lt;strong&gt;高密度强刺激快反馈&lt;/strong&gt;信号输入，在需要&lt;strong&gt;低密度弱刺激慢反馈&lt;/strong&gt;新技能的学习中就很难维持良好的运行状态。（当我每次浸淫在网络世界不能自已时，我就觉得大脑就像泡在碱水中的棉球，苍白而酸腐，不知道有没有学者比较过毒瘾发作的大脑内部的构造和化学成分是不是也是一样的呢？）&lt;/p&gt;
&lt;p&gt;怎么办？方法有二，断网关机扔手机重新将大脑改造成适应原来刺激的状态；或者可以将新技能的学习转化成高密度强刺激的模式，实际上现在很多的网站和手机 APP 已经在做这件事了，比如 &lt;a class=&#34;link&#34; href=&#34;https//www.codecademy.com/learn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;codecademy&lt;/a&gt;，拓词，有道口语大师等。我大部分时间使用了第一种方法，我收起了自己的笔记本，手机调成静音放一边，每天晚上一个小时学习纸质书，并且写笔记，省心省事高效。第二种方法用的更多的是英语学习，借助优秀的 APP 进阶学习。我个人认为，处理艰深的复杂的需要更多脑力的任务，第一种方法不可避免，虽然会经历痛苦的戒断过程，但是任务达成之后的缓慢积累起来的快感一时无两（法国数学家 Cédric Villani 就说过，一个伟大数学定理的完美证明 “主宰的高潮大不同于性高潮，它足足维持了好几天。”）。&lt;/p&gt;
&lt;h2 id=&#34;信息焦虑&#34;&gt;信息焦虑&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;困扰那些天生好奇的、乐于寻求并接纳新观点的创造性思维人士的最大问题之一，是信息过量问题。我们很容易淹没在来自电视、收音机、杂志、报纸特别是网络灌输的信息中。如果你想要把精力集中在最有价值的事情上，学会如何处理不断增多的信息这一点至关重要。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;信息焦虑的最大原因就是网络时代巨量信息的大爆炸引发的&lt;strong&gt;信息成瘾&lt;/strong&gt;。我手机里曾经装了很多的资讯类 APP，网易新闻，澎湃新闻，豌豆荚一览，华尔街见闻，每天上班间隙看看微博上有什么消息，刷刷这些 APP 有啥劲爆的新闻，晚上回家更是肆无忌惮，钻在被窝里把微信，微博，豆瓣，知乎，新闻通通刷一遍才肯放开手机悻悻然睡去。高密度强刺激快反馈的信息刺激改变了大脑的结构和化学成分，它处理这样的信息越来越顺手越来越停不下来，或者网上有一张非常有趣的图片，如果有 wifi 和充电器，我可以坐在厕所一直不起来；-)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://upload-images.jianshu.io/upload_images/49434-74dbded62f474ec2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;厕所与wifi&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;作者在书里建议消除信息焦虑，可以包括在机场或者其他人群嘈杂的地方使用使用消音耳机，试着有目的地吸收信息，当你对于信息的使用缺乏目的性时，你便无法掌控信息。如果一开始便带有目的性，你会自动对信息进行筛选过滤，这能帮助你分辨有关及无关的信息。总而言之，除了断舍离，还可以减少信息的摄入数量，提高信息的质量。其实在收起电脑之后，我的信息焦虑缓解不少，另外，我卸载掉全部的资讯类 APP，使用 RSS 阅读器 &lt;a class=&#34;link&#34; href=&#34;https://feedly.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;feedly&lt;/a&gt;（Google Reader 的绝佳替代品），每天午饭结束我在办公室刷刷当天的文章，这样重要的信息不会遗漏，也保证了我的静音时间。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;注：本文转自我的读书笔记&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/review/8062395/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;进展不顺利？或许这样做更有效（专注力）书评&lt;/a&gt;，欢迎关注，欢迎点赞~&lt;/p&gt;</description>
        </item>
        <item>
        <title>谨慎求证，小心思考</title>
        <link>https://blog.bugxch.top/p/%E8%B0%A8%E6%85%8E%E6%B1%82%E8%AF%81%E5%B0%8F%E5%BF%83%E6%80%9D%E8%80%83/</link>
        <pubDate>Sat, 21 Jul 2018 20:57:20 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E8%B0%A8%E6%85%8E%E6%B1%82%E8%AF%81%E5%B0%8F%E5%BF%83%E6%80%9D%E8%80%83/</guid>
        <description>&lt;p&gt;不懂得逻辑学，小心被诈捐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img3.doubanio.com/lpic/s26806086.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;简单的逻辑学&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://v.youku.com/v_show/id_XMTg0NzA4NTA4NA==.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;罗尔求助事件&lt;/a&gt;刚刚过去不久，如果懂点逻辑学，那些掏了大钱的微信用户们可能就不会被诈捐了。&lt;/p&gt;
&lt;p&gt;连岳推荐，这本小书&lt;strong&gt;期待造就实践者，而不是理论家&lt;/strong&gt;。整本书读完，论证缜密，但是实例不足，特别简朴的思想在结合现实问题时才能显示其真正的威力。我对其中的一些内容心有戚戚焉，另外想结合实际写写刷新我认知的新内容。&lt;/p&gt;
&lt;h2 id=&#34;心有戚戚焉&#34;&gt;心有戚戚焉&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;所有的逻辑推理，所有的论证，目的只有一个：找出某个事物的真相。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;开篇点题，&lt;strong&gt;逻辑本身就是发现真相并将其从谬误中分离出来的学问&lt;/strong&gt;，方法就是全神贯注得确认事实的&lt;strong&gt;真实性&lt;/strong&gt;，使用&lt;strong&gt;逻辑学的基本原理&lt;/strong&gt;对这些事实进行推理，得出可靠的结论，并使用&lt;strong&gt;清晰有效的语言&lt;/strong&gt;将其表达出来。需要特别留意黑体部分的字眼，因为&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;事实可能是假的；&lt;/li&gt;
&lt;li&gt;推理可能是错误的；&lt;/li&gt;
&lt;li&gt;即便发现了真相，使用模糊的字眼也可能表达不清楚。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里的问题展开说就比较杂乱了，大体分开说。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般情况下，我们总是想当然地认为相似的情景只不过是对曾经经历过的事物的简单重复。但从严格意义上来说，世界上没有两片绝对相同的叶子。每个情景都有它的特殊性，而我们必须对此特殊性保持敏感。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样的谬误不胜枚举：一线城市的房价涨价十年，是不是下一个十年也会持续涨价？你看谁谁谁和你一样的学历，现在做什么过得多好多好。具体会怎样，因素太多不好判断，但是&lt;strong&gt;仅仅通过表象的彼时判断此时，此物判断彼物，大谬矣。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.discoverhongkong.com/tc/images/beyond-hk/large/6.5-Shanghai_03.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;一线涨&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主观事实是指，由个人亲身经历的或间接通过别人的经历确认的事实。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;特别确认事实的真实性和可靠性，尤其是我父母那辈人，经常听谁谁谁说某某某咋咋咋，听起来有鼻子有眼，真要问起细节来语焉不详。我的同事说，中国股市就是投机市场，赚不了钱的，但是他自己从来没有炒股的经验。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现实生活中，我们能亲身经历的重要公共事件非常有限。这就意味着，在大多数情况下，我们必须依靠间接证据。同间接求证一个事物真实性的方法一样，在利用间接证据求证一个事件的真实与否时，我们必须投入足够的注意力，因为认真审查证据来源的真实性及可靠性是最重要的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我的父母关于某个传闻，我的同事关于股市的认知来自媒体来自他人，他们没有亲身经历，事实可能未必如此。&lt;strong&gt;我们尤其要警惕媒体和他人消息来源的真实性，多考察几个信息源，多学学英文，多用用 Google。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;了解自己要表达什么。所以，回头重新审视观念的外在来源，理清思路，合适的表达将随之而来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;说不清楚，思路混乱，很可能是根本没认识清楚考察的事物&lt;/strong&gt;。比如最近我在写的关于奇异值分解的博客，数学的形式推理已经搞清楚了，但是背后的直观理解还是很模糊。想要写一篇高质量的博客文章，我还是要搜集很多资料，反过来做深入的数学推理之后的直观的理解。&lt;/p&gt;
&lt;p&gt;作者专门提到 “有效沟通”，分别强调四点**：说完整的句子，不要将主观看法当做客观事实，避免使用双重否定，根据对象选择合适的语言**。这都能成为写作和演讲的基本标准了好么！！！小时候我爸爸叫我拿东西，“你把那个柜子上的那个东西拿过来”，我的心里就凌乱了，我他妈知道是哪个柜子？神马东西？大学傻傻地翻图书馆《&lt;strong&gt;理论》，看得头都大了，云山雾罩不知道说了个啥，后来找一本老外写的书，真他妈利索，一看就懂。&lt;strong&gt;我国大部分专业学者的写作水平不敢恭维啊&lt;/strong&gt;。补充一条&lt;/strong&gt;，一图胜千言，能用图表，就少用文字。**&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://img.jituwang.com/uploads/allimg/160108/258004-16010P63037100.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;凌乱&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不要将你主观上的某个灰色观念无限放大到包括整个世界，并且认为这就是世界的本来面貌。真相情况不明时往往会让人心情烦躁，避之唯恐不及，我们要设法尽力避免陷入这种困境。但是，当你陷入了不确定的泥潭时，也不能丧失信心。要明白：或许现在你不能弄明白事物的真相，但是，不确定的情况之所以可能出现，正是因为我们曾经有过确定性的经验。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所谓的 “灰色地带”，就是有点线索真相还不明晰的时候，这就像一个人在山里迷路，四野无人，苦清孤寂，路途漫漫，&lt;strong&gt;这个时候一定不能丧失信心，KEEP MOVING！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.runningjunkies.com/wp-content/uploads/2014/05/early-morning-run.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;坚持&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;仅仅因为某些特征适合于整体的某个部分，就声称这些特征也必然适合于整体，这是明显的谬误。但是这种谬误人们常常避免不了，所以在面临类似的情况时应加倍小心。以偏概全是人类的某种天性，尽管这并不是什么好事。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;**以偏概全，在我看来，这是典型的缺乏概率思维的表现，它是两个最严重的思维错误之一。**言必称 “中国都…… 美国都……”；因为自己工作职位不好，就认为全公司都很烂；因为一两个人不好，就否定他们家乡的所有人（地域歧视）；因为读了两本烂书，就否定一门学科；因为一个人的部分缺点，而否定一个人的全部。这些是消极的方面，反过来也可能因为局部的特征而过高地估计整体的特征。只有采样足够多，才能保证整体的估计没有太大的偏差。&lt;strong&gt;我们所能做的就是多观察多接触，迟些下结论，或者根据目前观察所得，小心地将结论限定在合适的范围之内。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;论证是理性的探讨，不要将它和争吵混为一谈。论证的目的是发现真相，争吵的目的是击败你的对手。有许多人，虽然他们愿意和你争吵，但却不愿意或者没能力和你进行论证。不要浪费时间、精力和这种人进行争论。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这句话是说，&lt;strong&gt;珍爱生命，远离傻逼。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;正如我们要检验自己的主张是否与事实相符一样，在论证中所用的专家意见同样要经过检验。这个世界上有太多自以为是的专家。检验的标准不是他们在说什么，而是他们是如何通过论证来得到它的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很多所谓的专家都是虚的，title 不重要，&lt;strong&gt;看他论证有没有道理最重要&lt;/strong&gt;， 经济学著作写得好的，我首推茅于轼老先生。推荐他的两本书和一段访谈，看看他说的好不好？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/2222030/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;生活中的经济学 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/20563189/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;中国人的焦虑从哪里来 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://v.youku.com/v_show/id_XNjY4MTg0NTI0.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;茅于轼：给你爱的人以自由 心意服饰商学院—在线播放—优酷网，视频高清在线观看&lt;/a&gt;，这段视频中由夫妻关系类比经济概念，给你爱的人以自由，哈哈哈~&lt;/p&gt;
&lt;h2 id=&#34;小心思考&#34;&gt;小心思考&lt;/h2&gt;
&lt;p&gt;小书里特别强调了&lt;strong&gt;情感与逻辑&lt;/strong&gt;的关系，他的论述比较分散，但是很精彩。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;思想，即便是最纯净的思想，也不可能完全脱离情感的浸染。因为每个思想都是人这种天生的情感动物构思出来的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;永远不要直接调动人们的情感，要努力使人们自己发现真相。&lt;strong&gt;这一条或许可以写进&lt;/strong&gt;新闻记者的职业操守&lt;/strong&gt;里去了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;正如我们在对人不对事谬误中所看到的，通过提供与论证毫无关系的爆炸性情感信息来攻击对手。混淆视听提供了这种策略的另一种样本。它是故意提出一些无关的情感信息来分散对方的注意力。这种谬误有两个特点：（1）它直接诉诸情感，而不是推理；（2）它所提供的信息与所要进行的论证毫不相关。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;辱母刺死案中的相关细节报道是否真实存在？某某股权纠纷中的太太是否花钱买车和公司违背承诺有毛关系？&lt;strong&gt;娱乐圈媒体圈的从业人员，最善于搞臭对方的手段就是混淆视听。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;强烈的情感和清晰的思维是成反比的，一旦情感超过一定界限，引导论证正确进行的机会就随之归零。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;人类天生是情感动物&lt;/strong&gt;，每个人对任何事情的第一反应就是情感，其后才有思想的跟进。去年的罗尔诈捐事件刚刚过去，&lt;strong&gt;现在的媒体运作太懂得如何挑动大众的情感为自己谋利了&lt;/strong&gt;，普通大众也要在情感色彩浓厚的报道前，需要克制自己的情感反应，仔细考察事实的真实性，再做判断不迟。&lt;/p&gt;
&lt;p&gt;文末再推荐一本比这个更全面深刻但是也更枯燥的好书，&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/1823970/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;思考的力量 (豆瓣)&lt;/a&gt;，大四买的，我带在身边已经有七年了，推荐看看~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img3.doubanio.com/lpic/s2180582.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;思考的力量&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;注：本文源自我的豆瓣读书笔记&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/review/8456583/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;谨慎求证，小心思考（简单的逻辑学）书评&lt;/a&gt;，欢迎关注，欢迎点赞~&lt;/p&gt;</description>
        </item>
        <item>
        <title>[转] 什么才是富人思维？</title>
        <link>https://blog.bugxch.top/p/%E8%BD%AC-%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4/</link>
        <pubDate>Sat, 21 Jul 2018 20:56:11 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E8%BD%AC-%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4/</guid>
        <description>&lt;p&gt;他活了四十多年，观察人间就两种人。一种人的世界是：立场、感受、意见；另一种人的世界是：目标、方法、行动。他说四十岁开始创业就为把自己的思维方式从第一种切换到第二种。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://boldanddetermined.com/wp-content/uploads/2016/06/think-like-a-billionaire-twitter.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;百万富翁&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;该文章转自微信公众号 &lt;a class=&#34;link&#34; href=&#34;http://mp.weixin.qq.com/s/LO4S4ZuDS5r0V0H1vpTIyA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;三公子的人生记录仪&lt;/a&gt;（文末有该公众号二维码），原始问答来自知乎用户&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/people/yuzhouedison/answers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;风尘棋客 &lt;/a&gt;，点击链接即可关注。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写在前面：这篇文章是我小长假在网上乱逛的时候看到了，非常了不起，我觉得有必要让大家都读一读，说实话，依照目前我的能力，真的写不出如此精彩且深刻的文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文章最初发表在知乎，作者是风尘棋客，发表时间为 2015 年 9 月 19 日，原文地址我也放在公众号文末的阅读原文中。在知乎的帖子中，作者说明文章可以转载，故我选择将此文在公众号分享。&lt;/p&gt;
&lt;p&gt;此外，内容很多，阅读时间在 25 分钟左右，如果赶时间的朋友可以选择收藏，也可以选择直接打印后阅读。但无论怎样，都请大家抽一点时间读完，错过了也只能是你的损失。反正我仔细读完了。&lt;/p&gt;
&lt;h2 id=&#34;原文&#34;&gt;原文&lt;/h2&gt;
&lt;p&gt;今天让我们先把 “金钱真的有那么重要吗”，“为了赚钱牺牲生活品质是否值得”，“那个男生对我很好但就是买不起房我应该和他分手吗” 这些问题先放到一边，单纯而虔诚地跪倒在鲜红的毛爷爷脚下来探讨：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何才能有钱，那些有钱人身上是否真的具备一些独特的思维和品质，最终取得了令普通人望尘莫及的财富积累，我们和他们的差距究竟在哪里&lt;/strong&gt;？&lt;/p&gt;
&lt;p&gt;如果你期待的答案是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;专注勤奋毅力积累一万个小时，出门左转俞敏洪老师演讲录。&lt;/li&gt;
&lt;li&gt;马化腾其实是富二代，巴菲特的父亲是国会议员，出门右转朋友圈 “揭秘白手起家的富豪神秘背景”。&lt;/li&gt;
&lt;li&gt;商业上的成功很大程度上是随机性造就的，查看 “我们这一代人的困惑”，你可能之前没看懂。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果上面这些答案都不能让你满意，我们继续。&lt;/p&gt;
&lt;p&gt;02&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你的高中老师不会告诉你，即使你再努力学习也照样买不起房&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我现在身边过的最不开心的朋友，是上学的时候成绩最优秀的，现在又生活在国内的那一批。他们在学校的时候大多成绩优异，考试名列前茅，是老师眼中的骄子，同学们心中的偶像。虽然今天他们依然领着高于同龄人的薪水，却发现工作三年攒下来的钱依然不够在北京买一个厕所。所以觉得世界对他们很不公平。&lt;/p&gt;
&lt;p&gt;在漫长的求学经历和成长过程中，我们这一代人对于事业成功（其实就是赚很多钱）的认识高度的统一：努力学习，先考上一个好高中，再考上一个好大学，选择一个好专业，找到一份高工资的工作，拼命工作成为高级管理人员，从此衣食无忧生活幸福。可直到毕业了进入社会才发现，自己被灌输了近 20 年的美好人生蓝图，和现实相距甚远。为什么会这样呢？&lt;/p&gt;
&lt;p&gt;严肃的说，这是因为以中国目前畸形的经济结构和大多企业的利润构成，资产的泡沫程度要远远高于企业能为高素质技术人才支付的报酬。粗暴的讲，传统教育传递给学生的赚钱思路只是一场骗局，即把那几张卷子上的题做对越多的将来就越有钱，可是，这和现实世界中财富的分配方式几乎毫无关系啊，至少，和中国目前的国情完全不符。&lt;/p&gt;
&lt;p&gt;举一个简单的例子来阐述什么叫做企业的利润构成决定员工的收入，就比如说经营一家蛋糕店吧，美国公司的经营思路是找到最优秀的蛋糕师，提供味道最好的蛋糕，向全世界销售，凭借优秀的产品获得高溢价和高市场份额，来获取毛利进而付给优秀的蛋糕师高额的薪水；&lt;/p&gt;
&lt;p&gt;而中国的蛋糕店的老板们发现，自己的蛋糕怎么做也不可能比美国的蛋糕好吃，何况中国大众消费者对于蛋糕的消费能力也不强，真正赚钱的方式是提供品质一般但勉强合格的产品，通过一些独占的销售渠道，把蛋糕以大订单的形式卖给这些对蛋糕品质要求没有那么高的大客户，所以蛋糕师的水平并不太重要，能给公司签下订单的员工才是公司最有价值的人才。可与此同时，中国传统教育给我们灌输的思路是蛋糕做得越好的人，将来也就越有钱。&lt;/p&gt;
&lt;p&gt;这里的美国和中国不是绝对的，可以换成北上广和二三线城市，也可以换成互联网企业和炼钢厂，但你的工资是由你所在的企业的利润丰厚程度和你对利润的贡献程度所决定的道理，放之四海皆准。难以想象的是，如此天经地义的常识，我却发现身边有无数人完全不能理解，尤其是很多名校的毕业生，恨不能拿着一纸文凭向政府要钱，逢人便说假如生活欺骗了你。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人生的痛苦主要源自错误的期待，认清事物的运转规律不会让你立即获得财富，但至少可以让你迅速放弃愚蠢的幻想。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;03&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你渴望成为的那种有钱人不是靠技能获取一份高工资的人。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;严格来说，即使在中国，凭借高超的技术领取高薪，最终取得财务自由也不是不可能的，只是难度极大，而且异常辛苦。没有过人的先天的条件和顶级的后天培养，大多数人所能习得的技能，都不是不可替代到让老板心甘情愿为你付一份远远超过市场平均水平的薪水的。只要你对中国绝大多数企业的收入获得方式稍加理解，就能明白技术骨干的收入是很难超过掌握客户的销售总监和组建团队和客户对接的项目主管的。&lt;/p&gt;
&lt;p&gt;美国的一个著名的喜剧明星 Chris Rock 在一场脱口秀中讲过一个段子：黑人在美国最多也就 rich，但不可能 wealthy。奥尼尔年薪两千万美金，那只能叫 rich；在奥尼尔工资支票上签字的那些白人老头们，才能算 wealthy。&lt;/p&gt;
&lt;p&gt;事实上，我们身边最常见的有钱人都是后者，他们不是技能过人的人，而是整合资源的人，简称老板，也是这篇文章想探讨的重点。&lt;/p&gt;
&lt;p&gt;值得一提的是，在现代的商业环境下，并非传统企业那种 100% 的公司拥有者才叫老板。项目投资人，企业的合伙人，装修队的工头，夜总会的妈咪，安排一队小弟在三里屯收二手 iPhone 自己坐在旁边抽烟的人… 但凡直接发起并促成商业活动的人，在我看来都是老板。&lt;/p&gt;
&lt;p&gt;你真正渴望成为的那种有钱人，不是超凡技能的人，而是寻找资源并整合资源的人。这就是学校和父母从来不曾告诉你的秘密，当然了他们之所以不告诉你，很可能是因为自己也没这么想过。&lt;/p&gt;
&lt;p&gt;04&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自我保护心理注定了穷人的宿命。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;人类天生习惯的自我合理化心态决定了大多数人注定是穷人。&lt;/p&gt;
&lt;p&gt;不信，可以看看你身边多少人热衷于分享 “盖茨的的书不会告诉你他母亲是 IBM 董事，是她给儿子促成了第一单大生意，巴菲特的书只会告诉你他 8 岁就知道去参观纽交所，但不会告诉你他国会议员的父亲带他去的，是高盛的董事接待的”，“还原聚美优品陈欧履历造假真相”，百度知道甚至有好几个问题都在研究 “马化腾究竟是是不是富二代”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们的内心深处有一种与生俱来的强烈的自我保护机制，它会不停地暗示你，只有自己的想法和选择才是最好的最合理的。但凡当大脑扫描到有什么人和事会令自己的显得是如此的无知而无能的信息，这种保护机制就会迅速启动，收集一切线索去证明他们都是因为一些客观因素而侥幸成功，自己要是有同样的客观条件，只会比他们更好&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;而且，万一这些成功人士是自己身边非常熟悉的人，内心的保护机制会更加强大（君不见今年没炒股的人，看到身边炒股的人赔了，比自己发财了还高兴）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;就像上学的时候，我们热衷于讨论学习好的人都是书呆子没出息，漂亮姑娘只喜欢开跑车的渣男一样；长大之后则变成了，同事升职了是因为会拍领导马屁，同学创业成功了因为家里给了巨额的启动资金。穷人的头脑是如此的敏捷，如果上述原因都找不到，还有最后一招杀手锏。&lt;/p&gt;
&lt;p&gt;他们就是运气好。&lt;/p&gt;
&lt;p&gt;是的，正是这种与生俱来的自我保护心理，维护了社会稳定，减少了自杀率，也让极少的一部分克服了这种心里的人，成为了有钱人。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结下来就是，穷人相信人和人之间的差距是客观条件所决定的，而富人相信这种差距的决定性因素是主观能动性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;穷人的思维习惯是：&lt;strong&gt;他们做到了，是因为他们富二代 / 有关系 / 运气好，我没有这些，所以我做不到。如果我有这些条件，我也可以做到&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;富人的思维习惯是：&lt;strong&gt;他们做到了，我为什么没做到，我怎么才能做到&lt;/strong&gt;？&lt;/p&gt;
&lt;p&gt;可怜的穷人们，不打破这种自我保护的心里，是很难摆脱一事无成的宿命的。可惜，他们中的大多数一生都沉浸在自我安慰中，从怀才不遇到壮志未酬，最终感慨平平淡淡才是真。&lt;/p&gt;
&lt;p&gt;05&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有钱人的思维是整合资源而不是拥有现成的资源&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果这篇文章你只能看一段，那就是这一段，没准它就能改变个别人的人生轨迹。&lt;/p&gt;
&lt;p&gt;其实很多穷人也不是甘心于一辈子领薪水的啊，他们只是在等机会，他们永远在等机会。&lt;/p&gt;
&lt;p&gt;我在美国留学的时候，惊人地发现原来每个留学生和他们的父母心里其实也都有一条走上人生巅峰的道路嘛。本科认真学习，积极参加课外活动，拓展社交网络，最终成绩优异简历丰富，找到一个大公司工作几年积累工作经验，继续名校 MBA 深造，出任跨国公司高级管理人员，最终调回国内担任中国区经理，甚至时机成熟了，凭借多年工作积累的经验和人脉，跳出来单飞最终创业成功。&lt;/p&gt;
&lt;p&gt;听起来如此酣畅淋漓的人生攻略，其实是最经典的穷人思维，穷人总以为有钱人的每一步都是按部就班顺水推舟得来的，所以要等着一切时机都成熟了，一切资源都获取了，才能开始行动。&lt;/p&gt;
&lt;p&gt;不出意外的话，这一天永远都不会到来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;他们无法理解的是，世界上还有另外一小撮人，和他们拥有类似的客观条件，但却把他们觉得遥不可及的事情做起来了。这一小撮人，没有本金，找朋友借钱找投资人投资甚至找银行贷款；没有技术，自己去现学或者找到懂技术的人帮自己来做；没有关系，找人介绍请人吃饭送礼屡败屡战；没有客户，一个一个冷拨电话登门拜访甚至办公室门口堵着&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;上面这种人，就是传说中的老板。&lt;/p&gt;
&lt;p&gt;当你真正开始做一个整合资源的老板的时候就会发现，你之前自以为拥有的资源和人脉远没有你想的那么好用，任何一个商业活动从无到有，都必然要经历那些团队不整没有客户的阶段，滴滴打车两年前还在在北京机场 T3 一个一个拽着出租车司机下载 App；以雷军在互联网圈二十多年的人脉，创立小米的时候光一个个登门挖人就挖了近一年，相比之下，你觉得自己能有的那些资源又能有多管用呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;切记，老板的实质是寻找资源然后整合资源的人，并不是拥有现成资源的人&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;更进一步说，一切商业机会都包含了大量的未知因素，而鉴于人类对于一个未知事物的群体接受度的判断力是极其有限的，一个优秀的老板擅长的是边做根据形势快速调整自己的商业活动，而不是事先把一切事情都预料好了。你能想象亚马逊的创始人当年在网上卖书的时候，已经计划好了公司的业务要包括电子阅读器，电商，流媒体，云计算，无人机吗？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么穷人等待的机会永远不会到来？等你把一切都看的清清楚楚的时候，市场早已经被那些趁着一切并不明朗就冲进去的人瓜分干净了。真正的好机会，永远都存在与未知中&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;同样的道理并非只存在于商业世界，每个人生活中最好的机会，几乎都出现在那些你没有完全准备好的时候。&lt;/p&gt;
&lt;p&gt;还记得刚去美国的时候，我听说高中的数学课代表去新东方做了托福老师，班里的同学谈起这件事，语气中大多充满了怀疑和嘲讽，因为大家都清楚他高中的时候学习好是因为数理化成绩优异，英语水平根本不行。他们想的一点没错，后来我才得知，这哥们当时连托福都没考过，但就是一咬牙硬着头皮上去应聘还成功了，结果最初过得心惊胆战，做梦都怕被学生从讲台上赶下来，于是每天疯狂的做题备课恶补英语，好不容易坚持了下来。&lt;/p&gt;
&lt;p&gt;而两年之后，嘲讽他的人还是当年的样子，他已经成了新东方的托福名师，公开课出现在新东方官网上，学生遍布北美。后来我默默地在家里看了他的讲课视频，比起我当年崇拜的那些新东方名师毫不逊色。&lt;/p&gt;
&lt;p&gt;我忽然想起了罗永浩当年写给俞敏洪的求职信，试想如果罗老师当年认为要把英语练到王强老师一样才能敢去新东方应聘，现在可能也只是一个吉林延边的文艺老愤青罢。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你看，真正把事情做起来的人，考虑的问题的过程其实是这样，这件事我一定要做，缺什么东西我去想办法去争取。而什么做不起来的人，永远在等待时机成熟&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;无论是工作还是生活，成功的人必然是有勇有谋，但勇又大于谋。相比之下，勤奋专注聪明简直只能算雕虫小技，唯有勇气才是一个人出类拔萃的核心竞争力。&lt;/p&gt;
&lt;p&gt;最后，如果你的抽象思维能力实在有限，必须得看十分具体的例子去理解究竟什么才是寻找资源并整合资源，强烈推荐你上网看两个故事，一个是星巴克老板舒尔茨当年在西雅图开第一家咖啡店的始末，另一个是杨洁导演拍摄 86 版西游记的过程。&lt;/p&gt;
&lt;p&gt;以上，就是我在读了这么多年书，看了那么多案例，和自己在残酷的实践中，能给出的关于 “不是富二代，不是官二代，很想成功，是不是就会成功了” 的最好答案。至于你觉得它是醍醐灌顶还是勾兑鸡汤，看你的了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（三公子注：正文到此结束，知乎文章发出来后，作者被一堆人围攻，为此他又写了一个后续，大家接着看）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;06&lt;/p&gt;
&lt;p&gt;没有回复留言的习惯，但是鉴于逻辑有明显硬伤的小朋友开始成批量涌现，在这里简单更新一下：&lt;/p&gt;
&lt;p&gt;其实在上一次回答 “商业分析能力是怎样炼成的” 的问题时，我就惊奇的发现，近 700 条评论中，反对意见极少是关于我提出的那个 TTPPRC 商业模型的具体内容，而全集中在 “好像看明白了这个就能赚钱了” 和“你知道这么多也没见你多成功”。
说心里话，我之前实在缺乏拯救这些愚蠢的小朋友的兴趣，因为我觉得作为一个智力及格的成年人或者未成年人，最起码明白什么叫做 “充分条件，必要条件，既不充分也不必要但是会极大地增加实现该结果概率的条件”。
直到刚才我仔细思考了一下，也许这也是一种经典的穷人思维方式，就是对于他人提出的一切解决一个问题的方案，都把它们默认为必须是 “充分条件”，只要发现实现同样的结果的人采取了其他方案或者采取了该方案的人没有实现相应的结果（比如：有钱人也有没什么商业分析能力的，有很强商业分析能力的人却没有很有钱），穷人们就洋洋得意地以为自己才是更理智更清醒的。
天啦撸，怎么会有精神正常的成年人会相信：理解一个商业模型，就必然能导出赚钱的结果呢，这不是弱智么。TTPPRC 商业模型对于商业上的成功而言，很明显是一 “既不充分也不必要但是会极大地增加实现该结果概率的条件”。&lt;/p&gt;
&lt;p&gt;现在看看这个答案下面的一些留言：
—————————————————
1、批评了其他鸡汤，自己又做了一碗鸡汤 勇气么 你睁开眼看看多少人在折腾，他们缺乏勇气么。
感觉翻译过来其实就一句话：真的想做就去做且肯定会成功，否则就是你其实并没有那么想。
2、“然而其实又是另一碗鸡汤。说得好像你像富人一样去拼，去整合资源，去开拓市场然后就会成功一样。要真是那样，这世界不知道多少富人了。”&lt;/p&gt;
&lt;p&gt;3、” 你这种思维放在十五年前还可以说的过去，但是现在有思想，有行动的人多如牛毛，可是成功的还是极少的那几个人，个中因素其实就是你文章开头说的谁谁谁其实是富二代云云……”
4、“现在许多事情，绝不是会整合一下资源，有一颗勇敢的心就可以成功的 做到这些，充其量也就是个小老板罢了”
—————————————————
亲爱的朋友，你仔细看看，我在全文中可没有半句话提到，有魄力去整合资源”就一定”能成为富人，也没有提到 “有钱人 100% 就得是有魄力” 啊，王思聪就不用啊。
我给出的答案中的思路很清楚，清楚到完全没想到这么多逻辑混乱的小朋友原来需要单独这么一段：
绝大多数富人都是整合资源的人，而一个人没有背景，没有资源，白手起家，想实现财务自由这种包含高度不确定性的结果，拥有超出常人的勇气和强大内心驱动力是一个既不充分也不必要但是会极大地增加实现该结果的条件，而且在一个普通人在成为整合资源的富人这个结果的诸多条件中，可以算是最重要的（在做到了这一点之后，你还得需要勤奋专注坚持，锻炼商业技能，阅读 TTPPRC 等等一系列非充分条件，才可能大大提高成功的概率），重要到可以算是一个成为富人必要条件。
从这个答案中读出来 “有勇气就会成功” 的小朋友，你欠缺的确实不是勇气，是智力。
有勇有谋不一定能财务自由，但是朝九晚五确实可以避免饿死。上进体贴不一定能找到聪明漂亮的女朋友，只有嫖娼才能保证你睡到美女。&lt;/p&gt;
&lt;p&gt;这个世界上越是有价值的结果，越没有充分条件。（这句话的逻辑是：“没有充分条件”这件事，可以算是，“有价值的结果”的必要条件。也就是说，”没有充分条件 “的结果就不一定有价值，但是” 有价值的结果“必然没有充分条件）。
我能帮你的就到这了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（三公子注：希望这篇文章能够让大家悟出些什么。我非常认同作者的一个观点，穷人永远都为自己的 “不作为” 找借口，在所有的讨论场合中，都在努力寻找所谓的 “漏洞” 来攻击对方，以此给自己 “不需要努力” 的理由。但富人，或者说有潜在富人思维的人，会寻找一切可以拿来为自己所用的技巧和方式，对一切触发好奇心的事情都愿意投入时间和精力去尝试，并且永远不为失败找借口。）&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;对我的启发&#34;&gt;对我的启发&lt;/h2&gt;
&lt;h3 id=&#34;认清现实&#34;&gt;认清现实&lt;/h3&gt;
&lt;p&gt;就像文中所说，在中国现阶段畸形的经济结构下，不是技艺越高薪资越高，&lt;strong&gt;薪酬与承担责任和风险成正比&lt;/strong&gt;。放弃幻想，认清现实，富贵险中求。&lt;/p&gt;
&lt;h3 id=&#34;打破自我标签&#34;&gt;打破自我标签&lt;/h3&gt;
&lt;p&gt;不要嫉妒，不要仇富，不要过度自我保护，别人比我能赚钱就是比我能赚钱，有差距不能一股脑地归咎于自身以外的条件，条件再困难，还是要想办法努力过得更好。就像罗胖说的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;他活了四十多年，观察人间就两种人。一种人的世界是：立场、感受、意见；另一种人的世界是：目标、方法、行动。他说四十岁开始创业就为把自己的思维方式从第一种切换到第二种。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不要抱怨，嫉妒，酸腐，而要想想为什么？接着就是&lt;strong&gt;计划，执行，追赶。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;必须有勇有谋勇字当先&#34;&gt;必须&lt;strong&gt;有勇有谋，勇字当先&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;开局需要勇气，老板的核心竞争力之一就是勇气。&lt;/p&gt;
&lt;h3 id=&#34;主观能动性很重要&#34;&gt;主观能动性很重要&lt;/h3&gt;
&lt;p&gt;社会在变，一门技艺吃不了一辈子的饭。我是学通信的，但是工作四年之后，我觉得技艺解决温饱问题，社会运行结构之复杂，有必要在温饱之余再了解其他的学问。目前的职位仅仅是初入社会交给我的角色，我不可能干一辈子的，就像刚刚出生的孩子，一旦熟悉了周围环境，我就要试图去做些什么改变自己的境遇，对社会亦如是。&lt;strong&gt;适应角色之后，如果觉得束缚，我就主动寻求改变&lt;/strong&gt;。遵循自己的兴趣，不放过任何一个微改变的机会，玩玩树莓派，学学摄影，研究研究投资，学学 CSS，我的未来可能就在这里~&lt;/p&gt;</description>
        </item>
        <item>
        <title>《软技能》读书笔记</title>
        <link>https://blog.bugxch.top/p/%E8%BD%AF%E6%8A%80%E8%83%BD%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Sat, 21 Jul 2018 20:55:01 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E8%BD%AF%E6%8A%80%E8%83%BD%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;p&gt;现实生活中失败是必要的里程碑，它能带领我们离成功越来越近。学会拥抱失败，期待失败，接受失败，并准备&lt;strong&gt;直面失败。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img3.doubanio.com/lpic/s28889106.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;封面&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;2 月份在上海书城闲逛时候看到&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26835090/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《软技能》&lt;/a&gt;这本书，作者的很多观点让人耳目一新，当时在书城读了一半，回来后果断买了本，受益匪浅。全书最宝贵精神财富有两点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;不怕失败&lt;/strong&gt;。现实生活中失败是必要的里程碑，它能带领我们离成功越来越近。学会拥抱失败，期待失败，接受失败，并准备&lt;strong&gt;直面失败。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;坚持不懈&lt;/strong&gt;。坚定持续地做一件事，才能不断调整目标和方法，一步步接近最终目标。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/readingnotes.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;书里的内容非常庞杂，作者分了职业、自我营销、学习、生产力、理财、健身、精神七大篇，我将其中的对我影响比较大的观点记录如下。&lt;/p&gt;
&lt;h2 id=&#34;职业&#34;&gt;职业&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;我不是公司的仆人，我是拥有自己产品或者服务的商人。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;职业生涯第一要务：&lt;strong&gt;转变心态&lt;/strong&gt;，从被卖身契束缚的 “仆人” 转变成拥有自己生意的商人，从每个月领着死工资的职场人员变成主动寻求业绩的小型公司。这是会&lt;strong&gt;对职业生涯产生深远影响&lt;/strong&gt;的观念改变。接下来就要想&lt;strong&gt;作为一个企业我能提供什么？&lt;strong&gt;于是需要&lt;/strong&gt;专注于某个细分领域中打磨技能，推销自己&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人际交往远比你想象的重要。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即便是安安静静写代码，也是要写出来给人看的，发邮件，开会，制定计划，检查执行，总结报告…… 所有的这些都需要和人打交道。作者推荐了卡耐基的《人性的弱点》。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;专业化很重要，一定要在某个专业方向上有自己的专长。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不做面面俱到的 “通才”，而要做深耕细作的专才。&lt;strong&gt;不能简单地说 “我是 java 开发人员”，而要明确告诉别人，你是 Web 开发栈 / 嵌入式系统 / 特定操作系统 / 移动开发 / 软件系统的开发人员。任何技能都必须&lt;/strong&gt;附着在某个细分领域&lt;/strong&gt;才能发挥它的威力，&lt;strong&gt;专业化程度越深，潜在机会越少，但是获得这些机会的可能性更大&lt;/strong&gt;。公司不需要通才，它们更需要在某个领域精深的专业人才，每个人的精力有限，不可能面面俱到，要想精通专业即周边领域已是难事。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;承担责任，引人注目，自学技能，成为 &lt;strong&gt;problem solver&lt;/strong&gt;，才能继续攀登职业阶梯&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多金钱还是更多责任？选后者，金钱总是追随责任。显而易见，职位越高不仅仅意味着薪酬更高，还有与之而来的责任，但是很多人常常搞不清楚二者因果关系，&lt;strong&gt;先是主动承担责任而后才有升职加薪&lt;/strong&gt;，而不是反过来。作者给出的建议有：去没人愿意涉足的领域，在新的领域深耕细作，建立自己未来帝国的根基，帮助团队的其他成员成长，培育自己在团队的影响力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;及时反馈很重要啊！主动&lt;/strong&gt;向老板交代任务的进度，即便项目进展很糟糕，也要即时&lt;strong&gt;给他一个进度条&lt;/strong&gt;，让他知晓项目遇到的困难，取得的进展。日报，周报，这些东西还是有用处的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在任何公司里，最有用的就是那种看似没有克服不了的障碍的人，成为这种人是获得晋升的可靠方法&lt;/strong&gt;，俗称 “救火队长”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://uncomonresilience.com/wp-content/uploads/2015/10/are-you-a-problem-solver1.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;problem&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应对职业倦怠的唯一方法，就是硬着头皮穿过那堵墙。制定计划，坚决执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;自我营销&#34;&gt;自我营销&lt;/h2&gt;
&lt;p&gt;这是转换心态之后自然而然要做的事情，如何将自己的产品和服务推销出去？&lt;strong&gt;通过各种方式建立自己的专业品牌&lt;/strong&gt;，就像图像处理就用 photoshop，工程建模使用 MATLAB，软件推荐就能想到&lt;a class=&#34;link&#34; href=&#34;http://www.iplaysoft.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;异次元软件世界 - 软件改变生活！&lt;/a&gt;一样，一想到 java 程序员就能想到你。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;个人博客。建立自己的&lt;strong&gt;专业博客&lt;/strong&gt;，使自己的技能和服务&lt;strong&gt;输出可见化&lt;/strong&gt;，高质量输出，乐于分享，&lt;a class=&#34;link&#34; href=&#34;http://www.ruanyifeng.com/blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阮一峰的网络日志&lt;/a&gt;也是非常好的案例。如果你比较懒，不想自己搭博客，简书和知乎专栏也不错哦；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.it131.org/wp-content/uploads/2017/05/it.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;月光&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;社交媒体。Twitter/Facebook/Weibo/Linkedin，甚至包括别人的博客，多与大牛互动，多分享自己的文章（当然前提是有用有料高质量）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;播客频道。youtube/youku，所有可以想得到的能够分享视频教程的地方，制作有趣的视频分享之；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写书。难度系数相对较大，有人在 CSDN 上写博客最后出书成功的，先一篇篇高质量地写吧。另一个途径是翻译，比如阮一峰的&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/6021440/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;黑客与画家 (豆瓣)&lt;/a&gt;，在程序员之外的圈子赢得不少知名度；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;培训 / 演讲 / 报告。当然最好是在有影响力的技术大会上作报告，但是如果水平不够，也可以在你们同事之间小范围写个 PPT 交流交流~&lt;img src=&#34;https://www.ethos3.com/wp-content/uploads/2014/07/presentation.remote.review.tech_.ethos3_..jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;报告&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技艺&#34;&gt;技艺&lt;/h2&gt;
&lt;p&gt;这是一个大课题，&lt;strong&gt;方法比努力更重要。&lt;strong&gt;作者说了 “十步学习法”，宗旨是 &lt;strong&gt;“聚焦学习范围，关注重点内容”&lt;/strong&gt;，我最容易犯的错误是，不知道学习的边界，容易从主干知识溜到旁枝末节上去，一次想把所有的东西都搞定不可能，所以对于旁枝末节的知识学会&lt;/strong&gt;使用接口&lt;/strong&gt;就可以了，没必要从上层到底层每个原理都搞清楚，太累了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;确定范围，筛选资料，边学边做，乐为人师&lt;/strong&gt;。这四点 hin 重要，&lt;strong&gt;聚焦学习目标，做持续有效的练习，付诸实践，并将心得分享给他人&lt;/strong&gt;，具体可以参考&lt;a class=&#34;link&#34; href=&#34;http://ed998bd4.wiz03.com/share/s/3JCoLk2U7k8l2kGhj_2dyznK2gKdrs1tbk_92y27dn2JEEaK&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《十步学习法》学习笔记&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://upload-images.jianshu.io/upload_images/717603-6b1252537dcf2cd8.png?imageMogr2/auto-orient/strip%7CimageView2/2&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;十步学习法&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;生产力&#34;&gt;生产力&lt;/h2&gt;
&lt;p&gt;提升生产力的秘诀：设定大目标，然后&lt;strong&gt;分解&lt;/strong&gt;成小目标，制定年度 / 季度 / 月 / 周计划，&lt;strong&gt;将所有的目标分解并落实到细小的时间点上，坚定执行&lt;/strong&gt;，专注于当前的任务。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://blacktipit.com/wp-content/uploads/2016/05/productivity-secrets.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;生产力&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;缓慢稳定的节奏工作&lt;/strong&gt;，要优于快速但缺乏持久和坚持的工作方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;戒掉电视 / 新闻媒体 / 社交网站&lt;/strong&gt;，将时间用在最好的地方。&lt;/li&gt;
&lt;li&gt;创建惯例，让惯例常态化，&lt;strong&gt;避免还没干正事就耗尽意志力。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;生产力的秘诀在于：&lt;strong&gt;长期坚持做一些小事。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任何行动都比不行动要好&lt;/strong&gt;。不要掉入恐惧陷阱，优柔寡断会丧失机会。&lt;strong&gt;有时候，当完全不知道要做什么的时候，最好的行动就是做一些事情，然后在前进途中再调整方向。小步快跑，路上调整。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;理财和健身&lt;/strong&gt;一代而过，我昨天开了股票账户，开始学习金融知识，健身我现在在坚持跑步，每周 40 公里左右，这几天要加入无氧运动，锻炼出腹肌~~&lt;/p&gt;
&lt;h2 id=&#34;精神&#34;&gt;精神&lt;/h2&gt;
&lt;p&gt;这一章很重要，精神是笃志前行的动力源泉。打破别人和自己的贴在身上的标签，即时从小时候就这样，养成积极的思维习惯，构建积极的自我形象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个持有积极心态的人看到好的一面往往比坏的一面多，并不是因为这些状况客观上是好的，而是因为他们认识到他们有选择的权利；&lt;/li&gt;
&lt;li&gt;积极心态者不会认为自己是环境的受害者，相信无论身处何种环境，都有能力改变自己的境遇；&lt;/li&gt;
&lt;li&gt;将挑战看成需要克服的困难，生活就是一关一关地打怪升级，而不认为自己被逼到绝境。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保持持积极心态的方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保证充足的睡眠，让大脑得到充分的休息；&lt;/li&gt;
&lt;li&gt;相信自己能做到，不然肯定做不到。&lt;/li&gt;
&lt;li&gt;劳逸结合，健身锻炼，不要小看这一点哦，&lt;strong&gt;身体和心灵是互相影响的&lt;/strong&gt;，身体健朗，心理也会更健康；&lt;/li&gt;
&lt;li&gt;坚定地、持续不断地、有意识地重复做一件事，将思想转向积极的方向，知道潜意识掌握大局；&lt;/li&gt;
&lt;li&gt;在脑中构建清晰积极的自我形象，想象自己成功，找到清晰的成功路径，切实模仿，坚持不懈&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;我写完了，不过我发现有个人比我写的好的多，大家可以参考下简书笔记&lt;a class=&#34;link&#34; href=&#34;http://www.jianshu.com/p/5cbe9b23cd43&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《软技能——代码之外的生存指南》 - 简书&lt;/a&gt;。&lt;/p&gt;</description>
        </item>
        <item>
        <title>建立阅读体系</title>
        <link>https://blog.bugxch.top/p/%E5%BB%BA%E7%AB%8B%E9%98%85%E8%AF%BB%E4%BD%93%E7%B3%BB/</link>
        <pubDate>Sat, 21 Jul 2018 20:53:18 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%BB%BA%E7%AB%8B%E9%98%85%E8%AF%BB%E4%BD%93%E7%B3%BB/</guid>
        <description>&lt;p&gt;为了更高效地吸收知识，需要对书籍的难易程度进行分类，不同类别的书籍阅读方法不同，投入精力不同，输出形式不同，阅读强度不同。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.readitforward.com/wp-content/uploads/2015/06/bookshelf-organization.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;阅读体系&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;阅读体系&#34;&gt;阅读体系&lt;/h2&gt;
&lt;p&gt;阅读体系的核心思想是&lt;strong&gt;数字量化书籍的 “软硬程度”，根据不同硬度给予不同的学习强度，分层吸收，保证精力的科学分配&lt;/strong&gt;。我自己设定阅读共有 4 个档次，其中 1 最 “硬”，信息密度最高，需要投入最多的精力，4 最 “软”，类似于随手翻到的传单或者在路上捡到的画册，信息密度很低，快速翻过即可。针对不同的硬度书籍，使用不同的阅读策略，可以在减少不必要的精力投入，充分利用学习时间，高效学习相关知识体系。阅读策略包括如下一些指标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;系统性&lt;/strong&gt;。这是衡量书籍的指标，书籍的知识体系是否完备，各个部分之间是否紧密联系，数学类书籍系统性最强，散文类书籍系统性就很弱。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完成度&lt;/strong&gt;。这是个人精力投入完整性指标，是否有必要读完所有的内容？还是仅仅读取其中的部分信息即可？亦或是仅仅蜻蜓点水即可？该指标与阅读目的书籍信息密度相关，也与自己的知识储备相关。比如，已经读过相关的书籍就没必要面面俱到都看完了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出形式&lt;/strong&gt;。学以致用，&lt;strong&gt;知识越硬，越需要高强度清晰的输出&lt;/strong&gt;。一来整理知识，日后便于提纲挈领，将短时记忆转为长时记忆，固化于心；二来倒逼输入，逼迫自己将学习的东西讲清楚。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;练习强度&lt;/strong&gt;。学习最怕一曝十寒，所以保证单位时间内的足够的学习强度，持续不间断的输入才能将知识一步步踏踏实实地印到脑子里，不然很容易遗忘，重新进入这种状态又要花很多时间和精力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;累计时长&lt;/strong&gt;。在阅读少许书籍内容之后，结合自己的需要，就可以将其分类，提前划拨阅读时长，不能超过这个界限，以免浪费时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面从这几个维度对这 5 种书籍总结归纳。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;硬度&lt;/th&gt;
&lt;th&gt;系统性&lt;/th&gt;
&lt;th&gt;输出形式&lt;/th&gt;
&lt;th&gt;练习强度 (次 / 周)&lt;/th&gt;
&lt;th&gt;完成度（%）&lt;/th&gt;
&lt;th&gt;阅读累计时长（小时）&lt;/th&gt;
&lt;th&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;非常系统&lt;/td&gt;
&lt;td&gt;博客系列文章 / github 代码 / 阅读笔记&lt;/td&gt;
&lt;td&gt;5+&lt;/td&gt;
&lt;td&gt;95+&lt;/td&gt;
&lt;td&gt;30+&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/1240002/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《C Primer Plus》&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;比较系统&lt;/td&gt;
&lt;td&gt;博客文章 / 阅读笔记&lt;/td&gt;
&lt;td&gt;[3,5]&lt;/td&gt;
&lt;td&gt;80~90&lt;/td&gt;
&lt;td&gt;20-&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26895993/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《刻意练习》&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;系统性不强&lt;/td&gt;
&lt;td&gt;阅读短评&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;50~60&lt;/td&gt;
&lt;td&gt;5-&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26677905/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《打破自我的标签》&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;零碎片段&lt;/td&gt;
&lt;td&gt;豆瓣标记&lt;/td&gt;
&lt;td&gt;1-&lt;/td&gt;
&lt;td&gt;10-&lt;/td&gt;
&lt;td&gt;1-&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/11614293/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《人生需要揭穿》&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上面的表格只是初步的判断，之后会根据实际经验对参数进行修改。需要补充一点，5 级我没有写，因为影响不大，5 级的阅读类似于机场或者火车上翻阅杂志的强度，随便看看即可，不需要耗费什么精力和脑力，因此写不写无所谓。&lt;/p&gt;
&lt;h2 id=&#34;意义&#34;&gt;意义&lt;/h2&gt;
&lt;p&gt;标准只是参照，实际阅读可以遵循如下的步骤展开：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;提高硬书的比例&lt;/strong&gt;。硬技能（通信 / 计算机 / 数学 / 工程能力 / 产品能力）是立身之本，目前还处在职业生涯初期，提高工作技能，就能快速提高收入，至少目前的两年之内需要急速提升自己的硬技能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;带着问题读书&lt;/strong&gt;。这样效果最佳，首先明确自己阅读的目的何在，学习一门技术？还是改进自己的方法？了解一段历史？还是提升对不知道事物的认知？不能漫无目的瞎逛，浪费时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预估时间&lt;/strong&gt;。拿到书本，大体浏览目录，作者，豆瓣评论，自己翻阅感兴趣的部分，迅速对书籍分档，之后预估阅读时长。结合番茄工作法，严苛按照时长推进阅读进度，&lt;strong&gt;不能超时&lt;/strong&gt;。这就是阅读的 time schedule，初期可能会有差距，但是之后的预估时间需要越来越精确。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单刀直入&lt;/strong&gt;。根据阅读的目的，&lt;strong&gt;直接、简单、粗暴&lt;/strong&gt;地阅读强相关部分，如果强相关读不懂再回过头补充需要的知识，边补充边试验，带着问题尽快拿下这个知识点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保持强度&lt;/strong&gt;。依照强度持续学习，保证学习密度才能将其刻印在脑海中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定期输出&lt;/strong&gt;。保证输出质量，阅读后提炼总结，尤其需要明示自己的收获，以及需要改变的行动。&lt;/li&gt;
&lt;/ol&gt;</description>
        </item>
        <item>
        <title>刻意练习行动手册</title>
        <link>https://blog.bugxch.top/p/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E8%A1%8C%E5%8A%A8%E6%89%8B%E5%86%8C/</link>
        <pubDate>Sat, 21 Jul 2018 20:52:03 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E8%A1%8C%E5%8A%A8%E6%89%8B%E5%86%8C/</guid>
        <description>&lt;p&gt;当我们在提高自己时，我们才最像是人类。和其他任何动物不同，我们可以有意识地改造自己，以我们选择的方式来提高自己。这使得我们和当今世界以及有史以来的其他物种区别开来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://jamesclear.com/wp-content/uploads/2017/01/Basketball-Players-700x435.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26895993/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这是&lt;/a&gt;第一本在&lt;a class=&#34;link&#34; href=&#34;https://du.163.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;网易蜗牛读书&lt;/a&gt;上看完的书，看这本书使我**相信使用合适的方法，通过长时间专注的有效努力，任何成年人都可以完成体力尤其是智力强相关的技能上的长足进步甚至重大突破。**怎么能将此书中的知识吸收利用呢？&lt;/p&gt;
&lt;p&gt;首先，行动的前提是破除错误的旧观念。&lt;/p&gt;
&lt;h2 id=&#34;破除旧观念&#34;&gt;破除旧观念&lt;/h2&gt;
&lt;h3 id=&#34;一万小时定律&#34;&gt;一万小时定律&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://baike.baidu.com/item/%E4%B8%80%E4%B8%87%E5%B0%8F%E6%97%B6%E5%AE%9A%E5%BE%8B&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;一万小时定律&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;是错的，要想成为顶尖高手仅仅靠单纯的努力是不行滴&lt;/strong&gt;。简单重复的累计一万小时的练习并不能帮助你成为该领域的顶尖高手。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一万块砖头简单堆砌在一块还是一万块砖头，只有工程师设计施工，经过精心布排之后才能成为雄伟的建筑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;成功并不与练习时间完全成正比，天赋虽然不起决定性作用，也会是一大影响因子。&lt;/li&gt;
&lt;li&gt;练习的效果并不与时间成正相关，与练习方法也很有关系。&lt;/li&gt;
&lt;li&gt;任何行业都不存在一万小时的练习最低阈值。
以我的切身经历为例，我做 GSM 协议栈开发，目前以及累计快四年时间，但是很明显我的水平比起 2 年前并没有太大差别。还可以想想，如果一个傻子让他学习 coding 连续一万小时，会有效果吗？肯定不行啊。&lt;strong&gt;这个法则对的地方在于任何一个有着悠久历史的行业或领域，要想成就一番事业，致力于变成业内的杰出人物，需要付出许多年艰苦卓绝的努力。&lt;/strong&gt;。关于一万小时的讨论也可以参见万维钢老师的这篇博文&lt;a class=&#34;link&#34; href=&#34;http://www.geekonomics10000.com/519&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;怎样练习一万小时&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;你的大脑依然强大&#34;&gt;你的大脑依然强大&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;身体和大脑适应力极强，个人的潜能可以通过训练重新构筑&lt;/strong&gt;。这句话是说给成年人听的，虽然大多数情况下小孩子的学习能力比成年人强，但是&lt;strong&gt;成年人却也常常低估大脑的学习适应能力&lt;/strong&gt;。哎呀，年纪大了学不动了，我父母第一次接触智能手机就觉得学习来很费劲，要弃掉，但是也有 &lt;a class=&#34;link&#34; href=&#34;http://www.xwtoutiao.cn/p/2sjcb16o/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;80 岁高龄老太太，退休后自学编程半年，开发新款游戏成码农&lt;/a&gt;呢。大多数人又会说，人家有天赋啊，人家有基础啊，真正电脑普惠也就是上世纪 90 年代，最多 30 年前那会儿老奶奶也 50 多岁了，有毛基础有毛天赋？
之所以大多数成年人无法做到老奶奶这么厉害，有如下几大原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;根植在大脑深处的自我设限&lt;/strong&gt;。最典型的思维错误就是&lt;strong&gt;出了学校我的这辈子的学习过程就结束了，而且随着年龄的增长我的学习能力也越来越不如年轻人，即便我努力去学也不可能达到年轻人的水平了，我可以放弃继续学习了&lt;/strong&gt;。在现代的高速发展的社会里，&lt;strong&gt;放弃学习就是放弃自己，放弃掌控自我命运的机会&lt;/strong&gt;。我个人觉得随着人均寿命越来越长，我们这一代人**学校学习时间的占比会越来越低，也就是说即便毕业之后，还要不停学习大量的新技能，才能在这个社会里获得满意的生活状态。**成年人的身体和大脑的适应能力远超一般人的想象，虽然成年之后的身体能力下降很快，但是心理学习能力依然强大，&lt;strong&gt;你的大脑没有变得静止，通过适当的刺激与训练，大脑自己可以使用新方法达到你想要的学习效果。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;练习过程中过早的自我放弃&lt;/strong&gt;。很多技能的习得需要长时间的有效练习，练习一首小提琴可能就需要半年时间，学会操作手机可能只要一周，如果期望在一周之内学会小提琴就明显不现实，成年人&lt;strong&gt;对学习曲线估计不足&lt;/strong&gt;，就很容易过早放弃。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;身体和大脑很少受到挑战&lt;/strong&gt;。俗语就叫&lt;strong&gt;待在舒适区太久&lt;/strong&gt;，白领几乎不用做什么重体力活，所以如果不锻炼身体机能就会缓慢退化，很多人一辈子只干一份工作，而且是花费很多时间练习很有局限性的一小部分，所以怎么可能发展出新技能？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;懒&lt;/strong&gt;。看书一小时就困，即便躺在床上睡懒觉也不愿意去游泳，每天就是肥皂剧，睡觉，吃饭，发呆，聊天，无聊，即便天才人物也要经过大量的有效训练才能达到高水准，更不要说普通的成年人了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结下就是，如果想在变化越来越迅速的现代社会立足，即便在离开学校之后仍然必须坚持学习，不断拓展新技能。虽然不及 20 多岁的能力，我的大脑依然具有强大的学习能力，足够发展出新的技能并达到可观的水准。学习新技能，使之达到一定的水准，仅仅依靠长时间高强度的刻苦练习还不够，还需要讲究合适的方法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;任何人都可以进步，但需要正确的方法。如果你没有进步，并不是因为你缺少天赋，而是因为你没有用正确的方法练习。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了上面的意识，就自然引出下面的问题，那怎么才是正确的方法？我该如何有效学习新技能呢？&lt;/p&gt;
&lt;h2 id=&#34;刻意练习&#34;&gt;刻意练习&lt;/h2&gt;
&lt;p&gt;下面以打篮球为例讲解刻意练习。&lt;/p&gt;
&lt;h3 id=&#34;初级篇有目的的练习&#34;&gt;初级篇：有目的的练习&lt;/h3&gt;
&lt;p&gt;刻意练习的初级阶段是有目的的练习，与一般的散漫的练习相比，有目的的练习有如下几个不同点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;目标具体明确&lt;/strong&gt;。这个月篮球罚球训练的目标是 50 次出手，罚中 30 次。为了达到这个目标，你会将&lt;strong&gt;目标分解&lt;/strong&gt;成第一周投中 20 次，第二周投中 25 次，直到最终达成目标。定义明确的具体目标，可以有效运用于引导你的练习。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高专注度&lt;/strong&gt;。要想取得进步，必须完全把注意力集中到你的任务上。如果投一会儿篮球，看一会风景，然后再歇一歇再停一停，训练效果可想而知。专业水准的篮球运动员必然专注于自己的训练目标，并且在训练过程中保持高度专注。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;及时准确的反馈&lt;/strong&gt;。幸运的是，投篮是一个反馈非常直观的运动，有没有投中一目了然。如果投不中，你就会自己思考，为什么总是失败？动作不标准？角度不准确？还是力量不够？或者还有其他什么问题？**不论你在努力做什么事情，都需要反馈来准确辨别你在哪些方面还有不足，以及怎么会存在这些不足。**如果没有反馈，你不可能搞清楚你在哪些方面还需要提高，或者你现在离实现你的目标有多远。他会迫使更加系统更加全面地磨砺技能，精进技艺。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;走出舒适区&lt;/strong&gt;。对于任何类型的练习 ，这是一条基本真理：&lt;strong&gt;如果你从来不迫使自己走出舒适区，便永远无法进步&lt;/strong&gt;。我的关于协议栈的知识在两年前已经基本停滞，很大的原因就是那时的技能已经足以应付工作中 95% 以上的内容，没有被动或者主动地去学习别的知识的压力和动力，我一直舒服地呆在舒适区，就像呆在温水里的青蛙。要想取得进步，每次都精心挑选下训练的目标，挑战下处在自己能力边界的事情，让自己有那么点不舒服不顺手，但是又不至于远超过认知负担而心生畏惧，操作熟练之后你的技能也就获得提升。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上是这本书里的观点，我还要补充一条，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;足够的训练强度&lt;/strong&gt;。一个月读一本书和一年读一本书的效果是不同的，一天读 10 页和 10 天读 1 页的效果肯定也不同。训练强度需要适度，过于密集超出大脑的认知负担不仅容易产生疲劳感，而且吸收理解的内容并不会增多，过于稀疏则不足以在大脑内形成相关记忆，训练效果近乎于无。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;进阶篇刻意练习&#34;&gt;进阶篇：刻意练习&lt;/h3&gt;
&lt;p&gt;其实如果能够做到有目的的练习中提到的几点，假以时日几乎可以肯定，每个人的技艺都能达到比较高的水平，但是如果要成为领域中的&lt;strong&gt;顶尖高手&lt;/strong&gt;，仅仅做到上面的几点还不够。那还需要做些什么呢？刻意练习。刻意练习是有目的的练习的进阶版，它包含了之前的所有特点，除此之外，它还包含了其他两个重要的不同的地方：大量复杂丰富的心理表征和刻意模仿。&lt;/p&gt;
&lt;h4 id=&#34;心理表征&#34;&gt;心理表征&lt;/h4&gt;
&lt;p&gt;顶尖高手和优秀选手之间的重大差别在于，杰出人物经过年复一年的练习，已经改变了大脑中的神经回路，以创建高度专业化的心理表征。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://venkatra.files.wordpress.com/2012/08/brain.gif&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://venkatra.files.wordpress.com/2012/08/brain.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;心理表征&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;心理表征是一种与我们大脑正在思考的某个物体、某个观点、某些信息或者其他任何事物相对应的心理结构，或具体或抽象。维基百科上的&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Mental_representation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;解释&lt;/a&gt;是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;strong&gt;mental representation&lt;/strong&gt; (or &lt;strong&gt;cognitive representation&lt;/strong&gt;), in &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Philosophy_of_mind&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;philosophy of mind&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Cognitive_psychology&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cognitive psychology&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Neuroscience&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;neuroscience&lt;/a&gt;, and &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Cognitive_science&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cognitive science&lt;/a&gt;, is a hypothetical internal cognitive &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Symbol&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;symbol&lt;/a&gt; that represents external reality,[&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Mental_representation#citenote01&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;1]&lt;/a&gt; or else a &lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/Mental_process&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mental process&lt;/a&gt; that makes use of such a symbol: “a formal system for making explicit certain entities or types of information, together with a specification of how the system does this.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;翻译过来的大意就是，心理表征是外部现实在内心世界的符号映射。书中举例盲棋大师记忆，同时可以和十几个人下棋，而且不看棋盘可以迅速判断局势的优劣，很短时间就能明确对弈的策略，而普通人即便睁眼看棋看到的也只是分崩离析的棋子。大师与普通人的区别，不仅在于对棋子位置的编码记忆，而且在于棋子之间的联系和全局宏观形式的把握上。&lt;strong&gt;一方面，心理表征使大师着眼于全局来观察，看到 “一片森林”，这是新手无法做到的；另一方面，心理表征还使大师可以在必要时把注意力集中在具体的招法上，观察 “一棵树”。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;象棋大师看一眼棋局就能知道双方力量的悬殊差距，以及目前可行的致胜策略；优秀的球员具有超强的球场解读能力，可以感知各个球员的移动方向，与那些球员的互动最为重要，什么时候传球什么时候奔跑能做出更好的决策。书中举例数字记忆的实验者，每次将自己听到的数字分为若干组，每个组包含 3 个或 4 个数字，然后将这些组编码到长时记忆中，变成有意义的记忆，再将这些记忆与检索结构关联起来，这样一来，他能记住接下来的数字组是哪些。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;心理表征将复杂抽象的事物进行重组、抽象、转化和编码，使其具象化符号化存储在我们的大脑中，将短时记忆转化成长时记忆，这样利用之前具有的记忆优势就可以在短时间内迅速处理大量的信息，很快做出最优决策。杰出人物的心理表征包含从宏观到微观的各个层面，巨细无遗，层次丰富，架构完整，因而处理专业问题得心应手。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;刻意练习-1&#34;&gt;刻意练习&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.yaseendadabhay.com/wp-content/uploads/2016/11/PTB-e1454051323254.jpg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;http://www.yaseendadabhay.com/wp-content/uploads/2016/11/PTB-e1454051323254.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;practice&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实施步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;刻意练习的基础是有目的的练习，除了之前提到的几点之外，还需要做到如下几点（需要说明的是，虽然这些目标之间有一些先后顺序，但是在实际操作过程中并没有明显的界限，互相之间可以互相促进，而且每一条都可以根据训练情况更改）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;**模仿导师。**追随行业的杰出人物，得到他们的指点是提高自身技能最有效的方法，如果不能得到指点，针对性地思考他们都做了什么，使自己从同一个行业或者领域中那些成绩不太卓著的人之中脱颖而出，同时还要思考哪些训练方法帮助他们实现了卓越。&lt;strong&gt;我们只有努力去复制杰出人物的成就，失败了就停下来思考为什么会失败，然后再去复制，一旦失败了，再次停下来思考原因，如此一而再再而三地尝试，才能创建有效的心理表征&lt;/strong&gt;。
&lt;a class=&#34;link&#34; href=&#34;https://assets.entrepreneur.com/content/16x9/822/how-to-find-right-mentor.jpg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://assets.entrepreneur.com/content/16x9/822/how-to-find-right-mentor.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;mentor&#34;
	
	
&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精心设置目标&lt;/strong&gt;。将漫长的旅程分解成一系列可控的目标，并且每次只关注它们中的一个，甚至可以在每次达到一个目标时，给自己小小的奖励。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;专注和努力至关重要&lt;/strong&gt;。要记住：如果你在走神，或者你很放松，并且只为了好玩，你可能不会进步。
&lt;a class=&#34;link&#34; href=&#34;https://assets.entrepreneur.com/content/16x9/822/20150408183930-focus-distance-view-startup-marketing.jpeg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://assets.entrepreneur.com/content/16x9/822/20150408183930-focus-distance-view-startup-marketing.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;focus&#34;
	
	
&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大量重复的有针对性的练习&lt;/strong&gt;。 有目的的练习，或者说刻意练习，其标志是你努力去做一些你无法做到的事情，去完成一些处在你的舒适区以外的任务，而且，你一而再再而三地练习，着重关注到底可以怎么做好它，在哪方面还有缺陷，以及你可以怎样进步。&lt;strong&gt;反复做一件事情，目的是找出你在哪些方面存在不足，并且聚焦于在那些方面取得进步，试着采用不同的方法来提高，直到你最终找到适合自己的方法。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨越停滞阶段&lt;/strong&gt;。跨越停滞阶段的一个有效方法，是以新的方式挑战自己的大脑或者身体。比如，变换日程，减少或者增加重复的次数，增加训练的花样，反复练习专攻弱点。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;保持动机&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;保持动机也许是每个投入到有目的训练或者刻意练习中的人最终要面对的最大问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;长期保持有目的训练的人们通常培养了各种习惯，帮助自己继续前行。我觉得，所有希望提高在某一行业或领域中的技能水平的人，应当每天花 1 个小时或更多的时间，专心练习那些需要全神贯注投入才能做好的事情。这是一条经验法则。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;弱化停止脚步的理由。找出那些可能干扰你练习的事情，并想办法将其影响控制在最小。除此之外，还需要做两件有益的事情：**保持充足的睡眠并保持健康，将练习课时间限制在 1 小时之内。**在较短的时间内投入百分之百的努力来练习，&lt;strong&gt;比起在更长时间内只投入 70% 的努力来练习，效果更好&lt;/strong&gt;。一旦你发现自己再也无法有效地专注于练习了，那便停下来。&lt;/li&gt;
&lt;li&gt;强化坚持下去的理由。培养良好的习惯，并坚持相当长的一段时间；经过一段时间之后，如果技艺上有所进步，反过来这种技能本身就可以成为你动机的一部分；相信自己可以成功；将对同一件事情感兴趣的所有人狙击起来，或者吸引他们加入一个现有团体，大家制定相似的目标。
&lt;a class=&#34;link&#34; href=&#34;http://blog.getfitso.com/wp-content/uploads/2015/12/1.jpg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;http://blog.getfitso.com/wp-content/uploads/2015/12/1.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;partner&#34;
	
	
&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.360doc.com/content/16/0819/02/33042428_584230805.shtml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;（英文翻译）刻意练习：成就专家级水平&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://jamesclear.com/deliberate-practice-theory&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Deliberate Practice: What It Is, What It’s Not, and How to Use It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://expertenough.com/1423/deliberate-practice&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Deliberate Practice: What It Is and Why You Need It – Expert Enough&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://jamesclear.com/beginners-guide-deliberate-practice&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The Beginner’s Guide to Deliberate Practice | James Clear&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>梯度下降算法之方程求解</title>
        <link>https://blog.bugxch.top/p/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E7%AE%97%E6%B3%95%E4%B9%8B%E6%96%B9%E7%A8%8B%E6%B1%82%E8%A7%A3/</link>
        <pubDate>Sat, 21 Jul 2018 20:41:31 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E7%AE%97%E6%B3%95%E4%B9%8B%E6%96%B9%E7%A8%8B%E6%B1%82%E8%A7%A3/</guid>
        <description>&lt;p&gt;从上个月专攻机器学习，从本篇开始，我会陆续写机器学习的内容，都是我的学习笔记。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://bigsnarf.files.wordpress.com/2016/07/fff.png?w=630&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gradienet&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;p&gt;梯度下降算法用于求数学方程的极大值极小值问题，这篇文章讲解如何利用梯度下降算法求解方程 $x^5+e^x+3x−3=0$ 的根；&lt;/p&gt;
&lt;h2 id=&#34;方法&#34;&gt;方法&lt;/h2&gt;
&lt;p&gt;首先来解决第一个问题，从方程的形式我们就能初步判断，它很可能没有闭式解。我能想到的最直观的解决方法就是画出函数图，函数图与 x 轴的交点就是方程的解，那先画个图看看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/figure1.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从函数图像大体可以判断，方程的根在 0 附近，但是很明显 0 不是方程的根，看图只能猜出个大概，那怎么做才能得到更精确的解呢？&lt;/p&gt;
&lt;p&gt;有一个可行的方法在 x = 0 附近找一堆很接近的数字，比如 [−0.5:0.05:1][−0.5:0.05:1]，一个个代入方程的左边，看看&lt;strong&gt;它的值离 0 有多近&lt;/strong&gt;：距离 0 越近，说明我们选取的值离方程的根也越近。数学上定义两个数距离就是绝对值，但是因为绝对值不便于计算，所以将其替换成等价的差的平方，即 F(x)=(f(x)−0)2F(x)=(f(x)−0)2，以此度量结果距离 0 的程度，称之为&lt;strong&gt;损失函数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们代入计算得到如下的结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.500, f(x): -3.9247, F(x): 15.4034
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.450, f(x): -3.7308, F(x): 13.9191
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.400, f(x): -3.5399, F(x): 12.5310
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.350, f(x): -3.3506, F(x): 11.2263
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.300, f(x): -3.1616, F(x): 9.9958
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.250, f(x): -2.9722, F(x): 8.8338
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.200, f(x): -2.7816, F(x): 7.7372
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.150, f(x): -2.5894, F(x): 6.7048
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.100, f(x): -2.3952, F(x): 5.7369
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.050, f(x): -2.1988, F(x): 4.8346
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: -0.000, f(x): -2.0000, F(x): 4.0000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.050, f(x): -1.7987, F(x): 3.2354
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.100, f(x): -1.5948, F(x): 2.5434
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.150, f(x): -1.3881, F(x): 1.9268
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.200, f(x): -1.1783, F(x): 1.3883
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.250, f(x): -0.9650, F(x): 0.9312
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.300, f(x): -0.7477, F(x): 0.5591
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.350, f(x): -0.5257, F(x): 0.2763
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.400, f(x): -0.2979, F(x): 0.0888
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.450, f(x): -0.0632, F(x): 0.0040
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.500, f(x): 0.1800, F(x): 0.0324
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.550, f(x): 0.4336, F(x): 0.1880
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.600, f(x): 0.6999, F(x): 0.4898
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.650, f(x): 0.9816, F(x): 0.9635
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.700, f(x): 1.2818, F(x): 1.6431
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.750, f(x): 1.6043, F(x): 2.5738
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.800, f(x): 1.9532, F(x): 3.8151
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.850, f(x): 2.3334, F(x): 5.4445
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.900, f(x): 2.7501, F(x): 7.5630
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x: 0.950, f(x): 3.2095, F(x): 10.3008
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看出，x = 0.5，结果已经很接近 0 了，方程的根应该在 0.45~0.50 之间，而且 0.45 时，F(x) 的值更小，说明离 0.45 距离更近。接下来，一个可行的方法是将这段再细分成更小的区间，再如上面这样尝试，直到结果满意为止。但是这样做太过机械，每次需要手动调整区间和步长，有没有一种方法可以自动调整呢？&lt;/p&gt;
&lt;p&gt;再回到我们的问题，求解方程的根，就是找到一个点使得损失函数最小，我们画出来这个函数的曲线看看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/f2.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们假定方程的根是 x0x0，**除了 x0x0，其他点的函数值都比该点处的高，而且从两边向内，越是靠近 x0x0，函数的值越接近 0。**而且可以发现，从两边向 x0x0 移动，方向刚好就是该点处切线的斜率 F′(x)F′(x) 的相反数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.big-data.tips/wp-content/uploads/2016/06/gradient-types.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;斜率&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;于是得到启发，挑选一个初始点，沿着该点的斜率相反的方向迭代，必然越来越靠近方程的根，所以有下面的算法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;对于方程 f(x)=0f(x)=0，舍设定损失函数 F(x)=(f(x)−0)2F(x)=(f(x)−0)2；&lt;/li&gt;
&lt;li&gt;设定一个初值 x0x0，代入损失函数求得结果，如果大于 0，那么找到一个新的值 x1=x0−αF′(x0)x1=x0−αF′(x0)，考察损失函数是否为 0；&lt;/li&gt;
&lt;li&gt;反复迭代第 2 步，直到达到满意的精度为止。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的算法中，有三个参数需要注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;αα，称为学习率，代表了曲线逼近的速度，这个参数可以自己设定；&lt;/li&gt;
&lt;li&gt;迭代次数，第 2 步运行的次数，迭代次数越多，我们离理想的结果越接近；&lt;/li&gt;
&lt;li&gt;精度，定义为 |F(x)||F(x)|，表示迭代的效果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三个参数中，迭代次数和精度可以作为迭代的终止条件，比如迭代次数达到 10000 次或者精度达到某个很小的数值 σσ 就终止运行。&lt;/p&gt;
&lt;p&gt;下面我们使用 python 程序来演示该算法的效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# _*_ coding: utf-8 _*_
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import numpy as np
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 定义函数f(x)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    e = 2.71828182845904590
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    return x**5 + e**x + 3*x - 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#定义损失函数
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def loss_fun(x):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    return (problem(x) - 0)**2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#计算损失函数的斜率
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def slope_fx(x):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    delta  = 0.0000001;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    return (loss_fun(x+delta) - loss_fun(x-delta))/(2.0*delta)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#代入f(x)，计算数值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def calcu_loss_fun(x,maxTimes,alpha):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        for i in range(maxTimes):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            x = x - slope_fx(x)*alpha;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            print &amp;#39;times %d, x: %.13f, f(x): %.13f&amp;#39; % (i, x, problem(x))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alpha = 0.01
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;maxTimes = 100
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x = 0.0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;calcu_loss_fun(x,maxTimes,alpha)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中的&lt;code&gt;slope_fx&lt;/code&gt;计算方程的斜率，利用导数定义 f′(x)=f(x+Δx)−f(x)Δxf′(x)=f(x+Δx)−f(x)Δx。程序计算结果如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 1, x: 0.2724712244717, f(x): -0.8678788871194
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 2, x: 0.3478163723702, f(x): -0.5354882897920
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 3, x: 0.3958941025006, f(x): -0.3168805921512
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 4, x: 0.4251012218626, f(x): -0.1810687680246
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 5, x: 0.4420964369242, f(x): -0.1008566369730
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 6, x: 0.4516717013511, f(x): -0.0552506486831
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 7, x: 0.4569525930429, f(x): -0.0299651603458
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 8, x: 0.4598276021739, f(x): -0.0161585445219
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 9, x: 0.4613811940466, f(x): -0.0086856358075
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 10, x: 0.4622172450759, f(x): -0.0046606160693
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 11, x: 0.4626661379649, f(x): -0.0024984737671
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 12, x: 0.4629068614830, f(x): -0.0013387061269
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 13, x: 0.4630358664583, f(x): -0.0007170954782
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 14, x: 0.4631049762781, f(x): -0.0003840652503
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 15, x: 0.4631419923255, f(x): -0.0002056832476
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 16, x: 0.4631618165349, f(x): -0.0001101474736
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 17, x: 0.4631724329502, f(x): -0.0000589848326
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 18, x: 0.4631781181683, f(x): -0.0000315864570
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 19, x: 0.4631811626230, f(x): -0.0000169144811
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 20, x: 0.4631827929259, f(x): -0.0000090576372
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 21, x: 0.4631836659475, f(x): -0.0000048503201
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 22, x: 0.4631841334466, f(x): -0.0000025973198
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 23, x: 0.4631843837899, f(x): -0.0000013908497
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 24, x: 0.4631845178473, f(x): -0.0000007447918
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 25, x: 0.4631845896343, f(x): -0.0000003988315
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 26, x: 0.4631846280757, f(x): -0.0000002135719
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 27, x: 0.4631846486609, f(x): -0.0000001143664
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 28, x: 0.4631846596842, f(x): -0.0000000612425
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 29, x: 0.4631846655870, f(x): -0.0000000327950
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 30, x: 0.4631846687480, f(x): -0.0000000175615
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 31, x: 0.4631846704407, f(x): -0.0000000094041
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 32, x: 0.4631846713471, f(x): -0.0000000050358
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 33, x: 0.4631846718325, f(x): -0.0000000026967
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 34, x: 0.4631846720924, f(x): -0.0000000014440
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 35, x: 0.4631846722316, f(x): -0.0000000007733
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 36, x: 0.4631846723061, f(x): -0.0000000004141
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 37, x: 0.4631846723460, f(x): -0.0000000002217
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 38, x: 0.4631846723674, f(x): -0.0000000001187
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 39, x: 0.4631846723788, f(x): -0.0000000000636
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 40, x: 0.4631846723850, f(x): -0.0000000000340
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 41, x: 0.4631846723882, f(x): -0.0000000000182
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 42, x: 0.4631846723900, f(x): -0.0000000000098
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 43, x: 0.4631846723909, f(x): -0.0000000000052
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 44, x: 0.4631846723914, f(x): -0.0000000000028
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 45, x: 0.4631846723917, f(x): -0.0000000000015
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 46, x: 0.4631846723919, f(x): -0.0000000000008
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 47, x: 0.4631846723919, f(x): -0.0000000000004
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 48, x: 0.4631846723920, f(x): -0.0000000000002
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 49, x: 0.4631846723920, f(x): -0.0000000000001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 50, x: 0.4631846723920, f(x): -0.0000000000001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 51, x: 0.4631846723920, f(x): -0.0000000000000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 52, x: 0.4631846723920, f(x): -0.0000000000000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 53, x: 0.4631846723920, f(x): -0.0000000000000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;times 54, x: 0.4631846723920, f(x): -0.0000000000000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;迭代 52 次，就已经达到了理想的效果。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ctmakro.github.io/site/on_learning/gd.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gradient Descent 梯度下降法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.big-data.tips/gradient-descent&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gradient Descent | Big Data Mining &amp;amp; Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>matplot 之 3D 绘图指南</title>
        <link>https://blog.bugxch.top/p/matplot-%E4%B9%8B-3d-%E7%BB%98%E5%9B%BE%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 21 Jul 2018 20:39:09 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/matplot-%E4%B9%8B-3d-%E7%BB%98%E5%9B%BE%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;p&gt;因为梯度下降算法需要绘制 3 维图像，故学习之，日后借鉴。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/3d_demo.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;本文稿翻译自 &lt;a class=&#34;link&#34; href=&#34;https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mplot3d tutorial — Matplotlib 2.0.2 documentation&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;使用 matplotlib 绘制 3D 图像，一般要加入一个新的 axes 类型 Axes3D:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pyplot&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mpl_toolkits&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mplot3d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Axes3D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_subplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;111&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;projection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中的&lt;code&gt;ax&lt;/code&gt;，就是添加一个三维坐标系&lt;code&gt;Axes3D&lt;/code&gt;的对象，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/3dax.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
3D 图形分为如下几类：&lt;/p&gt;
&lt;h2 id=&#34;线形图&#34;&gt;线形图&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Axes3D.plot(xs,ys,**args,**kwargs)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;绘制 2D 或者 3D 的数据。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;xs&lt;/em&gt;, &lt;em&gt;ys&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;x, y coordinates of vertices&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;zs&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;z value(s), either one for all points or one for each point.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;zdir&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Which direction to use as z (‘x’, ‘y’ or ‘z’) when plotting a 2D set.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;关键参数传给了&lt;code&gt;plot()&lt;/code&gt;函数，例如下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mpl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Axes3D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rcParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;legend.fontsize&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gca&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;projection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;theta&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;linspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;linspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;theta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;theta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;parametric curve&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;绘制的图形如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matplotlib.org/mpl_examples/mplot3d/lines3d_demo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;line3d&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从这个例子可以看出，matplot 画图的基本步骤包括：导入必要的模块，创建 figure 对象，设置 3D 的 ax，创建自变量，写出函数关系式，绘制图形。&lt;/p&gt;
&lt;h2 id=&#34;散点图&#34;&gt;散点图&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Axes3D.scatter(*xs*, *ys*, *zs=0*, *zdir=&#39;z&#39;*, *s=20*, *c=None*, *depthshade=True*, **args*, **\*kwargs*)&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;xs&lt;/em&gt;, &lt;em&gt;ys&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Positions of data points.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;zs&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Either an array of the same length as &lt;em&gt;xs&lt;/em&gt; and &lt;em&gt;ys&lt;/em&gt; or a single value to place all points in the same plane. Default is 0.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;zdir&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Which direction to use as z (‘x’, ‘y’ or ‘z’) when plotting a 2D set.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;s&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Size in points^2. It is a scalar or an array of the same length as &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;c&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;A color. &lt;em&gt;c&lt;/em&gt; can be a single color format string, or a sequence of color specifications of length &lt;em&gt;N&lt;/em&gt;, or a sequence of &lt;em&gt;N&lt;/em&gt;numbers to be mapped to colors using the &lt;em&gt;cmap&lt;/em&gt; and &lt;em&gt;norm&lt;/em&gt; specified via kwargs (see below). Note that &lt;em&gt;c&lt;/em&gt; should not be a single numeric RGB or RGBA sequence because that is indistinguishable from an array of values to be colormapped. &lt;em&gt;c&lt;/em&gt; can be a 2-D array in which the rows are RGB or RGBA, however, including the case of a single row to specify the same color for all points.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;depthshade&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Whether or not to shade the scatter markers to give the appearance of depth. Default is &lt;em&gt;True&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;关键参数传给了&lt;code&gt;scatter()&lt;/code&gt;函数，如下面的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;==============
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;3D scatterplot
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;==============
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Demonstration of a basic scatterplot in 3D.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Axes3D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;randrange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vmin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vmax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    Helper function to make an array of random numbers having shape (n, )
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    with each number distributed Uniform(vmin, vmax).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vmax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vmin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vmin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_subplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;111&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;projection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# For each set of style and range settings, plot n random points in the box&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# defined by x in [23, 32], y in [0, 100], z in [zlow, zhigh].&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zlow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zhigh&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;^&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;randrange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;randrange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;zs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;randrange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zlow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zhigh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;marker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;X Label&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Y Label&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_zlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Z Label&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个函数里画了 2 组散点图，分别用其中的小三角和红色的圆点表示。函数&lt;code&gt;randrange&lt;/code&gt;产生&lt;code&gt;[vmin,vmax]&lt;/code&gt;上的均匀分布的一列数。如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matplotlib.org/mpl_examples/mplot3d/scatter3d_demo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;scatter&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;线框图&#34;&gt;线框图&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Axes3D.plot_wireframe(X, Y, Z, args, kwargs)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;绘制 3D 的线框图，其中的参数&lt;code&gt;rstride&lt;/code&gt;和&lt;code&gt;cstride&lt;/code&gt;表示对输入数据的采样，它们不能和&lt;code&gt;rcount&lt;/code&gt;以及&lt;code&gt;ccount&lt;/code&gt;同时使用，不然会产生错误，后者表示从输入数据中采样多少以生成线框图。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;X&lt;/em&gt;, &lt;em&gt;Y&lt;/em&gt;,&lt;/td&gt;
&lt;td&gt;Data values as 2D arrays&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Z&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;rstride&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Array row stride (step size), defaults to 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;cstride&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Array column stride (step size), defaults to 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;rcount&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Use at most this many rows, defaults to 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;ccount&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Use at most this many columns, defaults to 50&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;关键参数传给了&lt;code&gt;Linecollection&lt;/code&gt;，返回一个&lt;code&gt;Line3DCollection&lt;/code&gt;的类。举例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;=================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;3D wireframe plot
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;=================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;A very basic demonstration of a wireframe plot.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;axes3d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_subplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;111&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;projection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Grab some test data.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;axes3d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_test_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Plot a basic wireframe.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot_wireframe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rstride&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cstride&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;绘制图形如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matplotlib.org/mpl_examples/mplot3d/wire3d_demo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;frame&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;rstride&lt;/code&gt;和&lt;code&gt;cstride&lt;/code&gt;分别代表采样的密度，这里是每隔 10 个点计算一个 Z 值，如果设置成 1，绘制的图形会更密集，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/framce.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;表面图&#34;&gt;表面图&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Axes3D.plot_surface(X, Y, Z, *args, **kwargs)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认使用纯色为阴影着色，不过它也可以通过 &lt;em&gt;cmap&lt;/em&gt; 支持颜色映射。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;X&lt;/em&gt;, &lt;em&gt;Y&lt;/em&gt;, &lt;em&gt;Z&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Data values as 2D arrays&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;rstride&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Array row stride (step size)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;cstride&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Array column stride (step size)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;rcount&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Use at most this many rows, defaults to 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;ccount&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Use at most this many columns, defaults to 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;color&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Color of the surface patches&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;cmap&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;A colormap for the surface patches.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;facecolors&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Face colors for the individual patches&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;norm&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;An instance of Normalize to map values to colors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;vmin&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Minimum value to map&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;vmax&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Maximum value to map&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;shade&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Whether to shade the facecolors&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其他的参数传给&lt;code&gt;Ploy3DCollection&lt;/code&gt;，举例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;======================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;3D surface (color map)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;======================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Demonstrates plotting a 3D surface colored with the coolwarm color map.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;The surface is made opaque by using antialiased=False.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Also demonstrates using the LinearLocator and custom formatting for the
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;z axis tick labels.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Axes3D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.ticker&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LinearLocator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FormatStrFormatter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gca&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;projection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Make data.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;meshgrid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Plot the surface.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;surf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot_surface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coolwarm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;n&#34;&gt;linewidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;antialiased&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Customize the z axis.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_zlim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zaxis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_major_locator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinearLocator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zaxis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_major_formatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FormatStrFormatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%.02f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Add a color bar which maps values to colors.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colorbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;surf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shrink&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aspect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;绘制图形如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matplotlib.org/mpl_examples/mplot3d/surface3d_demo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;plot3d&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;参考图形知道&lt;code&gt;cm&lt;/code&gt;用来做 color mapping，重新设置&lt;code&gt;arange&lt;/code&gt;的步长为 0.01，可以得到如下的图形&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/cr.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;表面光滑细致多了。&lt;/p&gt;
&lt;h2 id=&#34;2d3d-图形共存&#34;&gt;2D/3D 图形共存&lt;/h2&gt;
&lt;p&gt;这篇文章主要是用来画 3 维图形的，以上的几个图形已经够用，下面介绍一些其他的技能。现在的是在 2D 中画 3D 图形。直接上代码和图像&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;=======================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;Plot 2D data on 3D plot
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;=======================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;Demonstrates using ax.plot&amp;#39;s zdir keyword to plot 2D data on
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;selective axes of a 3D plot.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Axes3D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gca&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;projection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Plot a sin curve using the x and y axes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;linspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zdir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;curve in (x,y)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Plot scatterplot data (20 2D points per colour) on the x and z axes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;colors&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;colors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;c_list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# By using zdir=&amp;#39;y&amp;#39;, the y value of these points is fixed to the zs value 0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# and the (x,y) points are plotted on the x and z axes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zdir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;points in (x,z)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Make legend, set axes limits and labels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_xlim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_ylim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_zlim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_zlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Customize the view angle so it&amp;#39;s easier to see that the scatter points lie&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# on the plane y=0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;20.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;azim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matplotlib.org/_images/2dcollections3d_demo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;2d/3d&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;从上面的代码，可以看出如何设置坐标轴的取值范围，设置 label 的方法。&lt;/p&gt;
&lt;h2 id=&#34;加入文字&#34;&gt;加入文字&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Axes3D.text(x, y, z, s, zdir=None, **kwargs)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在画图中我们可能需要在特定位置加入文字说明，下面就是一个例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;======================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Text annotations in 3D
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;======================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Demonstrates the placement of text annotations on a 3D plot.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Functionality shown:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;- Using the text function with three types of &amp;#39;zdir&amp;#39; values: None,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  an axis name (ex. &amp;#39;x&amp;#39;), or a direction tuple (ex. (1, 1, 0)).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;- Using the text function with the color keyword.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;- Using the text2D function to place text on a fixed position on the ax object.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Axes3D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gca&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;projection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Demo 1: zdir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;zdirs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;zs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zdirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;label&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;(&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;), dir=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Demo 2: color&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Demo 3: text2D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Placement 0, 0 would be the bottom left, 1, 1 would be the top right.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text2D&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.95&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2D Text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transAxes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Tweaking display region and labels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_xlim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;W&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_ylim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_zlim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;X axis&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Y axis&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_zlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Z axis&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matplotlib.org/_images/text3d_demo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;text&#34;
	
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>C语言中的宏</title>
        <link>https://blog.bugxch.top/p/c%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%8F/</link>
        <pubDate>Sat, 21 Jul 2018 20:33:48 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/c%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%8F/</guid>
        <description>&lt;p&gt;C/C++中有些特殊的宏定义，面试时候被问到，写个短文总结下。&lt;/p&gt;
&lt;h2 id=&#34;宏定义中的和连字符&#34;&gt;宏定义中的#和##连字符&lt;/h2&gt;
&lt;p&gt;这两个字符在宏定义中代表连接和替换，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;紧跟字母表示对应字符的字符串化，将对应的字符转换成对应的字符串，比如&lt;code&gt;#hello&lt;/code&gt;就是&lt;code&gt;&amp;quot;hello&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;##&lt;/code&gt;表示将宏定义中的两个标识符连接在一起，组成一个新的标识符，类似胶水。它首先查看&lt;code&gt;##&lt;/code&gt;两边的字符，是否有宏定义可以替换的字符串，替换之，之后将两个连接在一起。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面举例说明。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define trace(x, format) printf(#x &amp;#34; = %&amp;#34; #format &amp;#34;\n&amp;#34;, x)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define trace2(i) trace(x##i, d)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_TCHAR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;three&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;trace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// 相当于 printf(&amp;#34;x = %d\n&amp;#34;, x)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nf&#34;&gt;trace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// 相当于 printf(&amp;#34;x = %f\n&amp;#34;, x)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nf&#34;&gt;trace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// 相当于 printf(&amp;#34;x = %s\n&amp;#34;, x)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;trace2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                  &lt;span class=&#34;c1&#34;&gt;// 相当于 trace(x1, d)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nf&#34;&gt;trace2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                  &lt;span class=&#34;c1&#34;&gt;// 相当于 trace(x2, d)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nf&#34;&gt;trace2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                  &lt;span class=&#34;c1&#34;&gt;// 相当于 trace(x3, d)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;又比如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define STACK_ADD_TASK_IRAM_POOL1(TASK_NAME, task_name, task_type){\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;task_info_g[INDEX_##TASK_NAME].task_entry_func = \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    (osa_task_func_ptr) stack_##task_type##_task;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的语句中，我们会将其中的&lt;code&gt;TASK_NAME&lt;/code&gt;和&lt;code&gt;task_type&lt;/code&gt;替换掉，并与前后的标识符相连接生成新的标识符。&lt;/p&gt;
&lt;h2 id=&#34;宏定义中的-do-while0&#34;&gt;宏定义中的 do{} while(0)&lt;/h2&gt;
&lt;p&gt;经常在宏定义中会看到如下的语句&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define STACK_ADD_MULTI_TASK(multi_sys_max, TASK_NAME, task_name, task_type)  \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    do{                                                                       \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;       if(multi_sys_max &amp;gt;= 1)                                                 \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;       {                                                                      \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;           STACK_ADD_TASK_1_CARD(TASK_NAME, task_name, task_type);            \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;       }                                                                      \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    }while(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个语句的特点是宏定义之后紧跟一个&lt;code&gt;do{...}while(0)&lt;/code&gt;的结构，看起来颇为繁琐，&lt;strong&gt;那这样的定义有什么好处呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，C 中的宏定义，在预编译阶段就会将宏定义的结构替换掉，使用宏定义定义函数。在代码替换中肯定希望像使用定义的函数使用宏定义，比如上面的语句在代码中肯定是下面这样的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;STACK_ADD_MULTI_TASK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;multi_sys_max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TASK_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;task_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;task_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;所以注意到&lt;strong&gt;宏定义的while(0)后面没有分号&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然后，这个结构和&lt;code&gt;if..else...&lt;/code&gt;的控制结构可以完美结合，对照上面的宏定义，一般能想到的宏定义的结果修改如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define STACK_ADD_MULTI_TASK(multi_sys_max, TASK_NAME, task_name, task_type)  \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    {                                                                         \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;       if(multi_sys_max &amp;gt;= 1)                                                 \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;       {                                                                      \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;           STACK_ADD_TASK_1_CARD(TASK_NAME, task_name, task_type);            \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;       }                                                                      \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果正常替换之前的语句，替换之后的结果就是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;                                                                         \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;multi_sys_max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                                                 \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;                                                                      \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;nf&#34;&gt;STACK_ADD_TASK_1_CARD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TASK_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;task_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;task_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;            \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;                                                                      \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意最后的分号，&lt;strong&gt;这一行编译不通过&lt;/strong&gt;，但是很明显如果换成&lt;code&gt;do{}while(0)&lt;/code&gt;结构就不存在这个问题。&lt;/p&gt;
&lt;p&gt;其次，如果使用宏定义多行语句，那么使用大括号的宏定义嵌套在&lt;code&gt;if...else...&lt;/code&gt;的结构中会遇到问题，比如定义&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define BAR(X) f(x); g(x)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果用在下面的程序中就会出现语法错误&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;BAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;c1&#34;&gt;//do nothing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但是使用&lt;code&gt;do{...}while(0)&lt;/code&gt;结构就不会有这样的问题。&lt;/p&gt;
&lt;h2 id=&#34;__date____time____file____line__特殊宏定义&#34;&gt;&lt;code&gt;__DATE__,__TIME__,__FILE__,__LINE__&lt;/code&gt;特殊宏定义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;_&lt;em&gt;LINE&lt;/em&gt;_：在源代码中插入当前源代码行号；&lt;/li&gt;
&lt;li&gt;_&lt;em&gt;FILE&lt;/em&gt;_：在源文件中插入当前源文件名；&lt;/li&gt;
&lt;li&gt;_&lt;em&gt;DATE&lt;/em&gt;_：在源文件中插入当前的编译日期&lt;/li&gt;
&lt;li&gt;_&lt;em&gt;TIME&lt;/em&gt;_：在源文件中插入当前编译时间；&lt;/li&gt;
&lt;li&gt;_&lt;em&gt;STDC&lt;/em&gt;_：当要求程序严格遵循ANSI C标准时该标识被赋值为1；&lt;/li&gt;
&lt;li&gt;__cplusplus：当编写C++程序时该标识符被定义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体的使用方式参考如下的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;short&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;u&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;4.4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;5.54&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// __DATE__, __TIME__, __FILE__, __LINE__ 为预定义宏
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Date : %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__DATE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Time : %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__TIME__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;File : %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Line : %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__LINE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Enter 1 or 0 : &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 这是一个条件表达式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;You sayd YES&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;You said NO&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 各种数据类型的长度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The size of int %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The size of short %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The size of long %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The size of float %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The size of double %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The size of long double %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The size of char %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;__va_args__宏定义&#34;&gt;&lt;code&gt;__VA_ARGS__&lt;/code&gt;宏定义&lt;/h2&gt;
&lt;p&gt;当前主干代码的一个典型的用法如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define DEFINE_KERNEL(gobalFunc, ...) \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; extern &amp;#34;C&amp;#34; __global__ __aicore__ void gobalFunc(__gm__ half* tableAddr, TABLE_SIZE_INT64 tableSize) \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; { \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; __VA_ARGS__(tableAddr, tableSize); \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; } \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; DLL_PUBLIC void run_##gobalFunc(uint32_t coreDim, void* l2ctrl, void* stream, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; void* tableAddr, uint32_t tableSize) \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; { \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; gobalFunc&amp;lt;&amp;lt;&amp;lt;coreDim, (rtL2Ctrl_t*)l2ctrl, stream&amp;gt;&amp;gt;&amp;gt;( \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; (half*)tableAddr, static_cast&amp;lt;TABLE_SIZE_INT64&amp;gt;(tableSize)); \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面代码中&lt;code&gt;...&lt;/code&gt;对应&lt;code&gt;__VA_ARGS__&lt;/code&gt;，表示在宏展开中将&lt;code&gt;__VA_ARGS__&lt;/code&gt;替换成&lt;code&gt;...&lt;/code&gt;的内容，此处的&lt;code&gt;...&lt;/code&gt;可以表示表示一个或多个参数，但是常见的编译器也允许传递0个参数。再比如如下的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;# define MYLOG(FormatLiteral, ...)  fprintf (stderr, &amp;#34;%s(%d): &amp;#34; FormatLiteral &amp;#34;\n&amp;#34;, __FILE__, __LINE__, __VA_ARGS__)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对于下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;MYLOG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Too many balloons %u&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以扩展为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;%s(%d): Too many balloons %u&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__LINE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://blog.csdn.net/hellokandy/article/details/50592971&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C/C++ 宏定义中 #、##、#@的区别 - hellokandy 的博客 - CSDN 博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/9495962/why-use-do-while-0-in-macro-definition&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;c - Why use do {} while (0) in macro definition? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/243967/do-you-consider-this-technique-bad&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;c++ - Do you consider this technique “BAD”? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/154136/why-use-apparently-meaningless-do-while-and-if-else-statements-in-macros&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;c++ - Why use apparently meaningless do-while and if-else statements in macros? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;-&lt;a class=&#34;link&#34; href=&#34;http://c.biancheng.net/cpp/html/2552.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C/C++中几个预定义的宏：&lt;strong&gt;DATE&lt;/strong&gt;,&lt;strong&gt;TIME&lt;/strong&gt;,&lt;strong&gt;FILE&lt;/strong&gt;,__LINE___C语言中文网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-cn/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E5%AE%8F&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;可变参数宏 - Wikiwand&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>字节序</title>
        <link>https://blog.bugxch.top/p/%E5%AD%97%E8%8A%82%E5%BA%8F/</link>
        <pubDate>Sat, 21 Jul 2018 20:32:35 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%AD%97%E8%8A%82%E5%BA%8F/</guid>
        <description>&lt;p&gt;大端和小端，到底是什么意思？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/zijiexu.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;字节序是数据在内存中存放顺序。字节分高有效位和低有效位，最左边是高位最右边是低位。我们按照地址生长的方向依次往内存写入数据，如果高有效位的数据先写入就是 big endian，如果低有效位先写入就是 little endian。字节序仅仅与数据的存储方式有关，与语言没有关系，没有 java 字节序或者 C 字节序的区分。&lt;/p&gt;
&lt;p&gt;举个例子，存入一个 4 字节的数据 0x0A0B0C0D，最高有效位的字节是 0A，最低有效位的字节是 0D，如果在内存存储中，0A 位于连续内存最小的那个就是 big endian，反之如果最小地址存储 0D 就是 little endian。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/5/54/Big-Endian.svg/320px-Big-Endian.svg.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;big endian&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;big endian 存放顺序是最高有效位，次高有效位，一直顺序存储到最低有效位，数据和内存都是按照顺序依次连续存储的。little endian 也是依次存储，但是高低位刚好相反，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/Little-Endian.svg/320px-Little-Endian.svg.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;little endian&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，无论是 4 个字节还是 8 个字节，存储的顺序都是在&lt;strong&gt;连续内存&lt;/strong&gt;上&lt;strong&gt;依照&lt;/strong&gt;高位到低位或者低位到高位的&lt;strong&gt;顺序&lt;/strong&gt;读取和写入，比如我们有 3 个字节 0x123456，如果内存中保存的数据从小内存地址到大内存地址依次位 0x12,0x34, 0x56，那么就是 big endian，反之是 little endian。&lt;/p&gt;
&lt;p&gt;附上 C 语言测试字节序的程序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;judge_endian&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//存储0x00000001到内存
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	    &lt;span class=&#34;c1&#34;&gt;//&amp;amp;a是a的地址，保存了1个字节的数据，如果为1，说明低有效位先保存，则为小端
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Little Endian&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Big Endian&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>操作系统简史</title>
        <link>https://blog.bugxch.top/p/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AE%80%E5%8F%B2/</link>
        <pubDate>Sat, 21 Jul 2018 20:31:23 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AE%80%E5%8F%B2/</guid>
        <description>&lt;p&gt;今后转行机器学习，现在补上操作系统的短板，边学习边总结，我会发布一系列操作系统的博客，此为第一篇。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/os.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;操作系统的发展，需要依赖电脑硬件的功能，按照发展技术的不同，OS 可以分为如下几个阶段：&lt;strong&gt;串行处理，简单批处理，多道批处理，分时系统&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;串行处理&#34;&gt;串行处理&lt;/h3&gt;
&lt;p&gt;20 世纪四五十年代是串行处理阶段，当时没有操作系统，程序员直接和硬件打交道，而且电脑每次只能处理一个任务，每个人预约顺序轮流使用机器半小时或者半小时的整数倍。如果发生故障，机器就亮灯并停止当前的任务。这是需要花费很长时间准备工作，往内存中&lt;strong&gt;加载编译器&lt;/strong&gt;和&lt;strong&gt;源程序&lt;/strong&gt;， 保存&lt;strong&gt;目标程序&lt;/strong&gt;，&lt;strong&gt;链接目标程序和公用函数&lt;/strong&gt;，往往需要准备很长的时间。&lt;strong&gt;为了加快串行处理的效率，发明了公共函数库，编译器，加载器，链接器，I/O 驱动和调试器。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;简单批处理&#34;&gt;简单批处理&lt;/h3&gt;
&lt;p&gt;上世纪 50 年代中期，出现了一个简单的&lt;strong&gt;批处理操作系统&lt;/strong&gt;（也是第一个操作系统）。核心思想是将所有用户的作业交给计算机操作员，他把这些作业按顺序组织成一批，将整个批处理作业放入输入设备。电脑中的&lt;strong&gt;监控程序&lt;/strong&gt;自动加载用户程序，将控制权交给用户，作业完成之后用户程序将控制权返回给操作系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;监控程序&lt;/strong&gt;负责程序的编译，加载和运行，这个系统引入了&lt;strong&gt;内存保护&lt;/strong&gt;和&lt;strong&gt;中断&lt;/strong&gt;机制，用户程序无法在运行时访问和修改监控程序的内存区域，监控程序通过中断完成控制权的交接。此外，有些机器指令设计成只有监控程序才能执行，称为&lt;strong&gt;特权指令&lt;/strong&gt;，比如访问 I/O 设备。由此引申出&lt;strong&gt;用户态 / 内核态&lt;/strong&gt;的概念，用户程序执行用户态有些内存区域不能访问，而且不能执行特权指令，而监控程序执行内核态，可以执行特权指令，而且内存区域可访问。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/memarea.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;多道程序批处理&#34;&gt;多道程序批处理&lt;/h3&gt;
&lt;p&gt;多道批处理系统出现在可以将监控程序和&lt;strong&gt;多个用户程序&lt;/strong&gt;同时载入到内存中，并行运算，这样就可以避免由于外设与 CPU 处理速度上的差异引起的 CPU 大量空闲等待的问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/multipro.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;多道处理程序需要更大的内存以并行载入更多的用户程序，因为内存中不止一个用户程序，操作系统还需要为每个程序分配内存空间，以及决定在什么时刻执行什么程序，引入了&lt;strong&gt;内存管理&lt;/strong&gt;和&lt;strong&gt;调度&lt;/strong&gt;的概念。&lt;/p&gt;
&lt;h3 id=&#34;分时系统&#34;&gt;分时系统&lt;/h3&gt;
&lt;p&gt;分时系统 (time sharing system) 允许多个用户同时访问相同的计算机资源。理论上如果有 n 个用户同时使用一台电脑，那么可以将 CPU 的时间切割成 n 块，每个用户占用其中的一块，由于 CPU 的处理速度很快，不同任务切换快到用户无法察觉以至于他们每个人都认为自己在独占 CPU 资源，这是分时系统的核心思想。&lt;/p&gt;
&lt;p&gt;分时系统比多道程序批处理更复杂，它需要额外保证 CPU 和内存在不同用户间能顺利切换，下表是二者的区别&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作系统&lt;/th&gt;
&lt;th&gt;多道批处理系统&lt;/th&gt;
&lt;th&gt;分时系统&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;主要目标&lt;/td&gt;
&lt;td&gt;充分使用处理器&lt;/td&gt;
&lt;td&gt;减少响应时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;操作系统指令源&lt;/td&gt;
&lt;td&gt;作业提供的控制语言命令&lt;/td&gt;
&lt;td&gt;终端键入的命令&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下图是一个分时系统某一个时刻的截取示意图，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/timesharing.jpg?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中的用户 1～6 分时使用 CPU 资源，1～4 处于空闲态，5 在使用 CPU，6 处于 ready 状态，可以想象在公司中多个同事同事使用同一台服务器的情景。&lt;/p&gt;
&lt;p&gt;下表将以上的所有的操作系统进行了总结&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作系统形态&lt;/th&gt;
&lt;th&gt;年代&lt;/th&gt;
&lt;th&gt;引入概念&lt;/th&gt;
&lt;th&gt;硬件支持&lt;/th&gt;
&lt;th&gt;优点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;串行处理&lt;/td&gt;
&lt;td&gt;20 世纪四五十年代&lt;/td&gt;
&lt;td&gt;编译器，链接器，加载器，调试器&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;简单批处理&lt;/td&gt;
&lt;td&gt;20 世纪 50 年代&lt;/td&gt;
&lt;td&gt;内存保护，中断，用户态 / 内核态&lt;/td&gt;
&lt;td&gt;内存和 CPU 性能提升&lt;/td&gt;
&lt;td&gt;提高自动化，处理器的运行速率提高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;多道处理&lt;/td&gt;
&lt;td&gt;20 世纪 70 年代&lt;/td&gt;
&lt;td&gt;内存管理，调度&lt;/td&gt;
&lt;td&gt;大内存&lt;/td&gt;
&lt;td&gt;并行处理多个程序，提高 CPU 运行效率&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分时系统&lt;/td&gt;
&lt;td&gt;现代&lt;/td&gt;
&lt;td&gt;分时，用户等级，访问权限&lt;/td&gt;
&lt;td&gt;性能进一步提升&lt;/td&gt;
&lt;td&gt;多个用户可以同时使用同一台主机&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://ecomputernotes.com/fundamental/disk-operating-system/time-sharing-operating-system&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Time Sharing Operating System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>为什么会有补码</title>
        <link>https://blog.bugxch.top/p/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89%E8%A1%A5%E7%A0%81/</link>
        <pubDate>Sat, 21 Jul 2018 20:30:02 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89%E8%A1%A5%E7%A0%81/</guid>
        <description>&lt;p&gt;补码是如何产生的？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://codeforwin.org/wp-content/uploads/2015/08/twos-complement-of-binary-value.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;今天读&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/4188358/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《数值分析》&lt;/a&gt;第 0 章的实数的浮点表示，对计算机存储数据的机制产生兴趣，所以自己写了个小程序结合现有资料探索总结下。&lt;/p&gt;
&lt;p&gt;我们现在遇到一个计算机的基本问题，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个数（整数或者实数）$X$，如何以 $w$个比特位的形式$[x_{w-1},x_{w-2},…,x_0]$将它存储在计算机的内存里？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;程序结果&#34;&gt;程序结果&lt;/h2&gt;
&lt;p&gt;我自己写的 C 程序如下，分别打印出整数&lt;code&gt;120055,-411&lt;/code&gt;，浮点数&lt;code&gt;102.3235， -3.256&lt;/code&gt;和双精度浮点数&lt;code&gt;120.254， -56.2441&lt;/code&gt;在计算机内存中的二进制比特，这几个数字是我随手写的，但是均没有超出计算机的表示范围。程序如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&amp;lt;stdlib.h&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//int和float有4个字节
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;FLOAT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;DOUBLE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//double有8个字节
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TYPE_E&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;showBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TYPE_E&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; %.2x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;120055&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;411&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a_f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;102.3235&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b_f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a_d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;120.254&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b_d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;56.2441&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;binary of a %d, 0x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;showBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;binary of b %d, 0x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;showBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;binary of a_f %f, 0x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a_f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;showBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a_f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FLOAT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;binary of b_f %f, 0x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b_f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;showBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b_f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FLOAT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;binary of a_d %f, 0x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a_d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;showBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a_d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DOUBLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;binary of b_d %f, 0x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b_d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;showBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b_d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DOUBLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;getchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;程序运行完成之后的结果如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/result.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;因为是小端存储，因此整理之后的结果如下所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数值&lt;/th&gt;
&lt;th&gt;内存表示（十六进制）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;120055&lt;/td&gt;
&lt;td&gt;0001D4F7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-411&lt;/td&gt;
&lt;td&gt;FFFFFE65&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;102.3235&lt;/td&gt;
&lt;td&gt;42CCA5A2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-3.256&lt;/td&gt;
&lt;td&gt;C050624E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120.254&lt;/td&gt;
&lt;td&gt;405E104189374BC7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-56.2441&lt;/td&gt;
&lt;td&gt;C04C1F3EAB367A10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;从上面的结果可以看出不同数值的长度不同，因为计算机给每个不同的类型分配的内存大小不同，这个可以通过 C 中的&lt;code&gt;sizeof&lt;/code&gt;函数看出来。下面我们需要搞清楚的是，**为什么这些数都是以这样的形式和内容存储在计算机中的？**这一篇文章，我们先谈比较简单的整数的表示，下一篇文章会解释浮点数的表示方法。&lt;/p&gt;
&lt;h2 id=&#34;编码机制&#34;&gt;编码机制&lt;/h2&gt;
&lt;h3 id=&#34;二进制表示&#34;&gt;二进制表示&lt;/h3&gt;
&lt;p&gt;我们知道，计算机中以二进制的形式存储数字，所有的十进制的数字都需要转换成二进制存储起来。至于十进制和二进制如何转换，课本和网上已经有非常详尽的解释（可参考文末的文章），而且有非常完善的&lt;a class=&#34;link&#34; href=&#34;http://tool.oschina.net/hexconvert/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在线进制转换工具&lt;/a&gt;可以轻松实现多个进制之间的相互转换，这里不再赘述。为了便于对比，除非特殊情况，本文的内容均使用十六进制数。&lt;/p&gt;
&lt;h3 id=&#34;整数编码&#34;&gt;整数编码&lt;/h3&gt;
&lt;p&gt;我们先从简单的正整数入手，&lt;code&gt;120055 = 0x1D4F7&lt;/code&gt;，考虑到计算机&lt;code&gt;int&lt;/code&gt;类型使用 4 个字节，补齐前面的&lt;code&gt;0&lt;/code&gt;，于是为&lt;code&gt;0x0001D4F7&lt;/code&gt;，这个与我们程序验证结果一致。因此，可以断定&lt;strong&gt;正整数在计算机中存储的形式就是它转换成二进制的形式&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;引入负数&#34;&gt;引入负数&lt;/h4&gt;
&lt;p&gt;那么负整数是如何保存的呢？来看第二个数字&lt;code&gt;-411&lt;/code&gt;，因为&lt;code&gt;411 = 0x19b&lt;/code&gt;，所以我们直观的表示就是&lt;code&gt;-0x19b&lt;/code&gt;，但是计算机不能表示负号，那么该如何处理这个问题呢？一个直接简单的想法是使用 1 个比特表示符号正负，自然的想法是取最高位，&lt;strong&gt;0 表示正数，1 表示负数&lt;/strong&gt;，所以可以表示成&lt;code&gt;0x8000019b&lt;/code&gt;。这样表示比较直观，但是有一个小问题。为了便于说明，我将问题的规模缩小，比如考虑 3 个比特的二进制和十进制数之间的转换。如果使用我们之前的换算方法，那么二进制编码的情况如下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;二进制&lt;/th&gt;
&lt;th&gt;十进制&lt;/th&gt;
&lt;th&gt;二进制&lt;/th&gt;
&lt;th&gt;十进制&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;000&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;100&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;001&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;010&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;-2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;011&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;-3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;很明显，十进制&lt;code&gt;0&lt;/code&gt;有两种不同的编码方式，3 个比特本来可以表示不同的 8 个数，却只能表示 7 个不同的数，这是对信息比特的浪费。最佳的表示方式应该满足，&lt;strong&gt;在一个一致的运算关系之下，不同的二进制编码表示不同的十进制数&lt;/strong&gt;，于是引入了&lt;strong&gt;补码&lt;/strong&gt;的概念。&lt;/p&gt;
&lt;h4 id=&#34;补码&#34;&gt;补码&lt;/h4&gt;
&lt;p&gt;首先，补码如何计算？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定 $w$ 个比特，如何求一个十进制数 $X$ 的二进制补码 $[x_{w-1},x_{w-2},…,x_0]$？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以 8 比特为例，如果求正整数 8 的相反数，我们用&lt;code&gt;0-8 = -8&lt;/code&gt;，补码的取法类似，使用如下的计算&lt;/p&gt;
&lt;p&gt;００００００００
－００００１０００
－－－－－－－－－
　１１１１１０００&lt;/p&gt;
&lt;p&gt;但是不够减，小学算术告诉我们可以向前借位，于是有&lt;/p&gt;
&lt;p&gt;１００００００００
－００００１０００
－－－－－－－－－
　１１１１１０００&lt;/p&gt;
&lt;p&gt;问题解决，总结下这个变换过程：最高有效位表示正负号，正数 XX 的补码是其自身的二进制表示 XX，负数 XX 的补码是 2w−|X|2w−|X|。&lt;/p&gt;
&lt;p&gt;举个例子，比如使用 4 个 bit 表示 6 和 - 7 的补码，分别是 $(1100)&lt;em&gt;2$和和$(2^4 - |7|)&lt;/em&gt;{10} = (9)_{10} = (1001)_2$。这里需要特别说明下，经常听到求一个负数。这里需要特别说明下，经常听到求一个负数X的二进制补码，就是先求的二进制补码，就是先求$|X|$ 的二进制表示，&lt;strong&gt;除了符号位之外的所有位取反加 1&lt;/strong&gt;，这和上面的方法&lt;strong&gt;等效&lt;/strong&gt;，因为$2^w - |X| = (1000…0)_2 - |X| = (111…1 + 000…1)_2 - |X| = (111…1)_2 - |X| + 1$，一目了然。使用该方法编码 3 个比特的编码，如下所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;二进制&lt;/th&gt;
&lt;th&gt;十进制&lt;/th&gt;
&lt;th&gt;二进制&lt;/th&gt;
&lt;th&gt;十进制&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;000&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;-4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;001&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;-3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;010&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;-2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;011&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;-1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;很明显，&lt;strong&gt;使用补码，所有的十进制数都有与之对应唯一的二进制编码表示&lt;/strong&gt;。使用这个方法可以计算出来 $(-411)&lt;em&gt;{10} = (FFFFE65)&lt;/em&gt;{16}$&lt;strong&gt;，与之前程序的结果完全一致！！&lt;strong&gt;于是猜想&lt;/strong&gt;计算机使用补码存储对应的整数！&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;已知一个 $w$ 比特的二进制补码$[x_{w-1},x_{w-2},…,x_0]$，如何求它对应的十进制数 $X$？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果知道这个数的补码形式，根据&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26912767/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《深入理解计算机系统》&lt;/a&gt;中给出二进制数补码表示$[x_{w-1},x_{w-2},…,x_0]$ 与十进制数之间的转换关系&lt;/p&gt;
&lt;p&gt;$$
X = -x_{w-1}2^{w-1} + \sum_{i = 0}^{w-2}{x_i2_i}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用补码有什么好处？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一，&lt;code&gt;0&lt;/code&gt;的表示唯一。
第二，&lt;strong&gt;所有整数的加法统一在一个法则之下，使用一套逻辑电路&lt;/strong&gt;。现在有一个问题，异号两个数相加怎么计算，比如&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;1 + (-3) = ?&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据数字的表示不同，这个问题有如下几种解法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;十进制解法，也就是我们人类自己的解法，首先我们会判断 3 和 - 2 那个绝对值大，之后符号取绝对值大的那个，最后绝对值大的减去绝对值小的作为新的数字的绝对值。听起来比较拗口，这里分了好几个步骤：1) 比较绝对值大小，决定符号；2) 绝对值相减确定结果的绝对值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用之前的编码方案（为了简单，我们仍然使用 3 比特数举例，如果我们使用之前的表示方法），直接二进制相减，即 $(1 + (-3))_{10} = (001 + 111)_2 = (000)&lt;em&gt;2 = (0)&lt;/em&gt;{10}$，这是明显错误的结果。如果想要正确，我们需要借鉴十进制的解法，先判断绝对值，再确定符号，两个数字相加需要将符号单独拎出来处理，加法是计算机的最基础的运算操作，这样的处理逻辑&lt;strong&gt;增加了电路的设计复杂度&lt;/strong&gt;，极大地影响计算机的性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用补码。$(1 + (-3))_{10} = (001 + 101)_2 = (110)&lt;em&gt;2 = (-2)&lt;/em&gt;{10}$，可以自行验证其他的所有的异号的和，都能得到正确的答案。可以看出，符号位直接当作数据的一部分参与运算，计算机并没有单独对其做处理，从计算机的角度来看&lt;strong&gt;简单粗暴有效&lt;/strong&gt;，之所以会有这么神奇的结果，是因为
$$
[X]_补 + [Y]_补 = [X+Y]_补
$$
这个定理可以按照两数同号，两数异号两种情况进行证明。正因为有这样的数学关系，所以&lt;strong&gt;计算机将补码作为整数存储的形式&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/4188358/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《数值分析》&lt;/a&gt;，0.2 和 0.3 节&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/26912767/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《深入理解计算机系统》&lt;/a&gt;，第二章&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.cnblogs.com/gaizai/p/4233780.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;二、八、十、十六进制转换（图解篇） - 听风吹雨 - 博客园&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.ruanyifeng.com/blog/2009/08/twos_complement.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于 2 的补码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cs.cornell.edu/~tomf/notes/cps104/twoscomp.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Two’s Complement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>python排序</title>
        <link>https://blog.bugxch.top/p/python%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Sat, 21 Jul 2018 20:28:44 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/python%E6%8E%92%E5%BA%8F/</guid>
        <description>&lt;p&gt;python基本操作知识积累。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://geekswipe.net/wp-content/uploads/2014/10/Geekswipe-Python-Twitter-bot-Source-Photo-by-Karthikeyan-KC.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;python总结&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;排序是一个基本的数据操作，本文列举下 python 和 numpy 中的基本排序操作，以备后查。&lt;/p&gt;
&lt;h2 id=&#34;列表排序&#34;&gt;列表排序&lt;/h2&gt;
&lt;p&gt;列表排序常用&lt;code&gt;reverse/sort/sorted&lt;/code&gt;这三种方法，举例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ls&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ls&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#并不能生成新列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;sort&lt;/code&gt;是按照递增序列排序，使用参数&lt;code&gt;reverse&lt;/code&gt;是递减序列排序，但是这样的方法改变了列表原来的值。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;sort 与 sorted 区别&lt;/strong&gt;：
sort 是应用在 list 上的方法，sorted 可以对所有可迭代的对象进行排序操作。list 的 sort 方法返回的是对已经存在的列表进行操作，而内建函数 sorted 方法返回的是一个新的 list，而不是在原来的基础上进行的操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果不想改变原来的值，可以使用&lt;code&gt;sorted&lt;/code&gt;方法，举例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#生成新列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;字典排序&#34;&gt;字典排序&lt;/h2&gt;
&lt;p&gt;可以使用 sorted 对字典排序，&lt;code&gt;sorted&lt;/code&gt;的函数原型如下所示&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sorted(iterable, cmp=None, key=None, reverse=False) --&amp;gt; new sorted list&lt;/code&gt;，其中&lt;code&gt;iterable&lt;/code&gt;代指可以迭代的数据类型，&lt;code&gt;key&lt;/code&gt;表示按照什么排序，可以使用&lt;code&gt;lambda&lt;/code&gt;函数，举例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#按照元组的第2个元素排序&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#按照元组的第1个元素排序&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;还有一种更简单的方法，使用 python 的&lt;code&gt;operator&lt;/code&gt;模块，举例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;operator&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemgetter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemgetter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#取元组第一个元素&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemgetter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#取元组第二个元素&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;字典排序的本质就是将字典的 items 对转换成列表，使用列表的排序方式来排序，&lt;code&gt;sorted&lt;/code&gt;还有更复杂的功能，对于复杂的元组列表，可以根据元组中的任意一个元素排序，具体如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;student_tuples&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;john&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;jane&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;dave&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;student_tuples&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# sort by age&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;dave&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;jane&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;john&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;numpy-中的向量和矩阵的排序&#34;&gt;numpy 中的向量和矩阵的排序&lt;/h2&gt;
&lt;p&gt;numpy 中的排序方法与之前的类似，使用&lt;code&gt;sort&lt;/code&gt;即可，不过 numpy 多了一个&lt;code&gt;axis&lt;/code&gt;的选项，表示按行（axis = 1）还是按照列进行排序 (axis = 0)，具体举例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;In [7]: a = np.array([[1,4], [3,1]])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;In [8]: a.sort(axis =1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;In [9]: a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Out[9]: array([[1, 4],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       [1, 3]])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;In [10]: a.sort(axis =0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;In [11]: a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Out[11]: array([[1, 3],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       [1, 4]])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果需要获得排序的 index，可以使用&lt;code&gt;argsort&lt;/code&gt;方法，比如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argsort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://segmentfault.com/a/1190000004959880&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Python dict sort 排序 按照 key，value - All About Python - SegmentFault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/howto/sorting.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Sorting HOW TO — Python 3.6.3 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Git学习笔记（一）</title>
        <link>https://blog.bugxch.top/p/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</link>
        <pubDate>Sat, 21 Jul 2018 20:26:54 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</guid>
        <description>&lt;p&gt;git笔记记录。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.aapnainfotech.com/wp-content/uploads/2016/03/Git-rename-branch-1024x483-965x482.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;git 是目前全世界最流行的分布式版本控制工具，与之前的集中化的版本控制系统相比，它有如下的优势&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;项目管理更安全。集中式版本控制系统，只要服务器崩溃，那所有人的代码都将丢失。git 的每个项目参与者都会在自己的本地保存一份完整的代码备份，即便其中的一个或者多个电脑出现问题，依然可以通过其他人的代码恢复。&lt;/li&gt;
&lt;li&gt;不需要联网也可以管理。git 在本地有一套自己完整的版本管理机制，即便断网程序员也可以在本地进行修改，添加或者删除文件，将自己的代码提交到本地的版本库，所有的操作都被忠实得记录在本地版本库中，到时候只要联网恢复，将本地的所有修改 push 到远端的服务器即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;核心概念&#34;&gt;核心概念&lt;/h2&gt;
&lt;p&gt;git 的版本管理基于如下的概念框架，只有掌握这些概念才能理解它指令之后的真正含义。核心的 git 框架如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sfault-image.b0.upaiyun.com/361/377/3613774353-58c10990ebb18_articlex&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们先不用管其中的横向的命令，仅仅关注其中的 4 个圆柱体，分别代表不同的实体，本地包括 workspace, index 和 local repository 三个部分，在服务器端有 remote repository，下面分别详细介绍它们&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;workspace， 本地的工作目录，它是 Git 用来保存元数据和对象数据库的地方，添加，修改，删除等操作就在这个目录里面进行；&lt;/li&gt;
&lt;li&gt;index， 暂存区域，这是 git 的缓存机制，在 workspace 的修改可以暂存在这个区域；&lt;/li&gt;
&lt;li&gt;local repository，本地仓库，我们将 index 区域的代码提交到本地仓库，就完成一次完整的修改。&lt;/li&gt;
&lt;li&gt;remote repository，远端仓库，这是远端服务器存放代码的地方，比如现在非常流行的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;，可以将本地仓库的代码推送到远端仓库，供其他人浏览和下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件状态&#34;&gt;文件状态&lt;/h3&gt;
&lt;p&gt;workspace 里面的文件无外乎两种状态：已跟踪或者未跟踪。如果文件已经被纳入到版本管理中就为已跟踪，直观的理解就是之前在版本库里添加或者提交过该文件，版本库有该文件的记录，它已经感知到该文件的存在；如果该文件从未提交或者添加到版本库中，那么它就是未被跟踪的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://iissnan.com/progit/book_src/figures/18333fig0201-tn.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如下图所示，比如你在 workspace 里面新建了一个文件，之后没有任何动作，此时该文件是未跟踪状态，但是如果你将它添加到暂存区域，或者之后又提交到本地仓库，那么就变成了已跟踪状态。&lt;/p&gt;
&lt;h2 id=&#34;基本流程&#34;&gt;基本流程&lt;/h2&gt;
&lt;p&gt;下面我们结合具体的实例，介绍下使用 git 在本地进行版本管理的流程，重点是熟悉基本的操作以及其中所用到的指令。我最近在学习 C++，需要根据《C++ primer plus》写一些小程序进行练习，及时记录学习的进度，所以我自己在本地新建一个 git 仓库管理这些文件。&lt;/p&gt;
&lt;h3 id=&#34;创建-git-仓库&#34;&gt;创建 git 仓库&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;init&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;//创建新仓库
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//从url上下载已有的仓库
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这是使用 git 的基础，我们有两种方式创建仓库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;本地新建。我在本地创建文件夹 C++ primer plus，然后在 windows 下切换到该目录下，使用敲入&lt;code&gt;git init&lt;/code&gt;，命令行提示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Initialized empty Git repository in D:/Study/C++ primer plus/.git/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;初始化后，在当前目录下会出现一个名为&lt;code&gt;.git&lt;/code&gt;的目录，所有 Git 需要的数据和资源都存放在这个目录中。，&lt;strong&gt;自己不要去修改它&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;远端下载。我可如果想对某个开源项目出一份力，可以先把该项目的 Git 仓库复制一份出来，这就需要用到 &lt;code&gt;git clone&lt;/code&gt; 命令。比如我想将 ss-qt5 的代码拉下来，可以使用如下的指令&lt;code&gt;git clone git@github.com:shadowsocks/shadowsocks-qt5.git&lt;/code&gt;，拉下来的基本格式是&lt;code&gt;git clone [url]&lt;/code&gt;，之后在我的本地电脑就有一份完整的该项目的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;检查文件状态&#34;&gt;检查文件状态&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在添加文件之前，先介绍一个非常有用的命令&lt;code&gt;git status&lt;/code&gt;，它可以查看当前版本库中的所有文件状态，包括已跟踪或者未跟踪的文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;git status&lt;/code&gt;会将 workspace 和暂存区的文件比对，同时比对本地仓库有暂存区的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在当前的目录下，敲入该命令，输出如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nothing to commit, working directory clean
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个提示说明，现在的工作目录相当干净，所以已经跟踪的文件在上次提交之后没有被修改过。而且，在当前的目录中没有任何还没有被跟踪的新文件，当前工作的分支是&lt;code&gt;master&lt;/code&gt;，凡事本地创建分支默认都是这个名字，后续分支管理可以改变分支，下篇再介绍。&lt;/p&gt;
&lt;h3 id=&#34;添加文件&#34;&gt;添加文件&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add &amp;lt;file&amp;gt; //添加并跟踪文件file（的修改）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .      //将workspace中的所有文件添加到暂存区
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;创建本地仓库之后，就可以在仓库里面添加文件了。我在仓库里面新建&lt;code&gt;readme.txt&lt;/code&gt;文件，并在文件中写入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;This is the 1st line of the file.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;git status&lt;/code&gt;查看当前的窗台状态，显示如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Initial commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Untracked files:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to include in what will be committed&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nothing added to commit but untracked files present &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git add&amp;#34;&lt;/span&gt; to track&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;显示可能会有差异，我将其中的空行去掉了，这段话表明当前文件&lt;code&gt;readme.txt&lt;/code&gt;还没有被跟踪 (untracked)，当前没有文件需要添加，使用&lt;code&gt;git add &amp;lt;file&amp;gt;&lt;/code&gt;将其跟踪。那我们使用&lt;code&gt;git add readme.txt&lt;/code&gt;跟踪该文件，命令行没有任何回应，表明一切正常。之后再次使用&lt;code&gt;git status&lt;/code&gt;查看如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Initial commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changes to be committed:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git rm --cached &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to unstage&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        new file:   readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;显示当前的&lt;code&gt;readme.txt&lt;/code&gt;已经进入暂存区，该文件可以被 committed。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;**git add 的潜台词就是把目标文件快照放入暂存区域，也就是 add file into staged area，同时未曾跟踪过的文件标记为需要跟踪。**如果一次需要添加所有的文件，可以使用&lt;code&gt;git add .&lt;/code&gt;，其中的&lt;code&gt;.&lt;/code&gt;表示当前工作区中的所有文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我继续修改&lt;code&gt;readme.txt&lt;/code&gt;文件，添加一行&lt;code&gt;this is the 2nd line&lt;/code&gt;，之后再添加文件&lt;code&gt;test.cc&lt;/code&gt;，查看文件状态，显示如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Initial commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changes to be committed:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git rm --cached &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to unstage&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        new file:   readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changes not staged &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; commit:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to update what will be committed&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git checkout -- &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to discard changes in working directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        modified:   readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Untracked files:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to include in what will be committed&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        test.cc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里有比较有意思的地方，&lt;code&gt;test.cc&lt;/code&gt;与之前的&lt;code&gt;readme.txt&lt;/code&gt;一样，后来新加的文件，因此它显示该文件未被跟踪。这里需要详细说明一下&lt;code&gt;readme.txt&lt;/code&gt;，现在在 workspace 和 index 的暂存区都有该文件，但是两个文件的内容不同，workspace 中的是最新的修改版本，包含了第 2 行，但是 index 中的仅仅包含第一行（因为第 2 次修改之后还没有&lt;code&gt;git add&lt;/code&gt;），所以才会有两条显示信息。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;暂存区与本地版本库相比，还有些修改 (第 1 行) 没有 commit;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;workspace 与暂存区相比，还有些修改 (第 2 行) 没有被跟踪。&lt;/p&gt;
&lt;p&gt;所以，可以看出 &lt;strong&gt;git 记录的是文件的修改而不是文件本身&lt;/strong&gt;。现在使用&lt;code&gt;git add readme.txt&lt;/code&gt;则将会把 workspace 中的新修改一并跟踪并记录在暂存区中，如下所示&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Initial commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changes to be committed:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git rm --cached &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to unstage&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        new file:   readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Untracked files:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to include in what will be committed&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        test.cc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此时的&lt;code&gt;readme.txt&lt;/code&gt;已经是 to be committed 状态了，之前的 workspace 中的修改已经被跟踪了。&lt;/p&gt;
&lt;h3 id=&#34;提交修改&#34;&gt;提交修改&lt;/h3&gt;
&lt;p&gt;提交修改就是将暂存区的文件以及它们的修改提交到本地仓库，使用&lt;code&gt;git commit -m &amp;quot;balabla&amp;quot;&lt;/code&gt;，该命令将所有的暂存区中的文件提交到本地仓库，双引号中的字符是提交的说明，输入该命令将&lt;code&gt;readme.txt&lt;/code&gt;提交到本地仓库，如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;1st commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;master 7aecba8&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; files changed, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; insertion&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; deletion&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; create mode &lt;span class=&#34;m&#34;&gt;100644&lt;/span&gt; test.cc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;表示暂存区的所有文件已经提交，此时查看状态如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nothing to commit, working directory clean
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;说明工作区很干净，workspace/index/local repository 三个区的所有东西都是一致的没有任何的差异。&lt;/p&gt;
&lt;h3 id=&#34;查看提交历史&#34;&gt;查看提交历史&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git log  //查看提交历史
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitk     //图形化界面查看提交历史
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在下一节之前，先学会查看本地的提交历史，使用&lt;code&gt;git log&lt;/code&gt;可以查看本仓库的从最近到最远的所有提交历史，如下图所示【图片暂缺】&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;commit 1655db95f38ef46cf846e4e8c8abb58866c30433 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;HEAD -&amp;gt; master&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Author: bugxch &amp;lt;bugxch@gmail.com&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Date:   Sun Apr &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; 09:57:25 &lt;span class=&#34;m&#34;&gt;2018&lt;/span&gt; +0800
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    2rd commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;commit 8e740248d2d72e4188468094c7b4c4ccb0b5e050
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Author: bugxch &amp;lt;bugxch@gmail.com&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Date:   Sun Apr &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; 09:57:03 &lt;span class=&#34;m&#34;&gt;2018&lt;/span&gt; +0800
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    2nd commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;commit 2040c1ee8dc7bffd58fe0a206e97aa5a01db0275
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Author: bugxch &amp;lt;bugxch@gmail.com&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Date:   Sun Apr &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; 09:56:14 &lt;span class=&#34;m&#34;&gt;2018&lt;/span&gt; +0800
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    1st commit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看出一共有 3 次提交，每个提交中包含自己的 commit_id，作者以及提交的具体时间。commit 之后的那一长串字母和数字，唯一标记每次 git 的提交，类似于 SVN 中的提交 id，之所以用这么一长串的十六进制的数字表示是为了避免很多人在同一版本库中提交时候发生冲突。如果提交的次数很多，这么看就比较长了，可以使用&lt;code&gt;git log --pretty=oneline&lt;/code&gt;来查看比较简略的版本，如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git log --pretty&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;oneline
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1655db95f38ef46cf846e4e8c8abb58866c30433 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;HEAD -&amp;gt; master&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 2rd commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;8e740248d2d72e4188468094c7b4c4ccb0b5e050 2nd commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2040c1ee8dc7bffd58fe0a206e97aa5a01db0275 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;仅仅包含每次提交的 id 以及说明，看起来一目了然。此外还可以使用&lt;code&gt;gitk&lt;/code&gt;使用图形化界面查看提交历史，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201807/gitlog.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gitlog&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;撤销修改&#34;&gt;撤销修改&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout -- &amp;lt;file&amp;gt; //撤销对workspace中文件file的修改
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git reset HEAD &amp;lt;file&amp;gt;  //撤销对暂存区中文件file的修改
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit --amend     //撤销本地仓库的上一次提交，并编辑新的说明重新提交
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果发现代码修改有问题，就需要撤销修改，这里依照不同的存储位置，分为如下三种情况。&lt;/p&gt;
&lt;h4 id=&#34;撤销-workspace-中的修改&#34;&gt;撤销 workspace 中的修改&lt;/h4&gt;
&lt;p&gt;我在&lt;code&gt;readme.txt&lt;/code&gt;文件中不小心添加了一行字，文件内容如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;This is the 1st line of the file.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;this is the 2nd lines
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;my boss is a idiot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;幸好及时发现，我们现在要做的就是将最后一行去掉，依然使用&lt;code&gt;git status&lt;/code&gt;查看工作区的文件，可以看到如下的结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changes not staged &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; commit:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to update what will be committed&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git checkout -- &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to discard changes in working directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        modified:   readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;no changes added to commit &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git add&amp;#34;&lt;/span&gt; and/or &lt;span class=&#34;s2&#34;&gt;&amp;#34;git commit -a&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;明显可以看出文件的修改还没有被跟踪，而且提示我们使用&lt;code&gt;git checkout -- &amp;lt;file&amp;gt;&lt;/code&gt;来放弃对工作区文件的修改，那我们试试看输入&lt;code&gt;git checkout -- readme.txt&lt;/code&gt;，使用该命令后果然最后一行不见了。&lt;/p&gt;
&lt;h4 id=&#34;撤销暂存区中的修改&#34;&gt;撤销暂存区中的修改&lt;/h4&gt;
&lt;p&gt;依然以上面的文件为例，我在文件末尾添加那一句&lt;code&gt;my boss is an idiot&lt;/code&gt;，之后使用&lt;code&gt;git add readme.txt&lt;/code&gt;添加到暂存库，查看状态&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changes to be committed:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git reset HEAD &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to unstage&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        modified:   readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;提示我可以使用&lt;code&gt;git reset HEAD &amp;lt;file&amp;gt;&lt;/code&gt;放弃修改，使用该命令看看&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git reset HEAD readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Unstaged changes after reset:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;M       readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;On branch master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changes not staged &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; commit:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to update what will be committed&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;s2&#34;&gt;&amp;#34;git checkout -- &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to discard changes in working directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        modified:   readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看出修改又回复到之前在工作区的状态，继续使用&lt;code&gt;git checkout -- readme.txt&lt;/code&gt;彻底撤销之前的修改。&lt;/p&gt;
&lt;h4 id=&#34;撤销本地仓库中的修改&#34;&gt;撤销本地仓库中的修改&lt;/h4&gt;
&lt;p&gt;之前的撤销相对比较容易，如果已经提交到了本地仓库该撤销修改呢？现在我们修改&lt;code&gt;readme.txt&lt;/code&gt;文件为如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;This is the 1st line of the file.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;this is the 2nd lines
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;my boss is a idiot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后&lt;code&gt;git add .&lt;/code&gt;,&lt;code&gt;git commit -m &amp;quot;hahahaha&amp;quot;&lt;/code&gt;，这样就提交到了本地仓库，查看提交历史，如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git log --pretty&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;oneline
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;498ebae5cbbb94a9fc1c549b1bd0cdc2fea5c886 hahahahaha
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;72b68e57aa9b18fcdd031d5901407a83c408580e revert the file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b250f9715a00d5f72caee1b6d0d7ab1d69e9c27b 2nd modification
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;27ed1eb9e7fb8a20176618e54c0464e721537da7 the 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abbd1c9e580a35aefe453615620d27ab464066c7 第一次提交readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;代码已经提交了。可以使用&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;放弃这次修改。这条指令的解析如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git reset&lt;/code&gt;，表示回退，这个指令既可以将暂存区的数据回退到工作区，也可以回退版本。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--hard&lt;/code&gt;，表示回退版本的同时，将工作区和暂存区的文件内容也同步回退，这里还有两个选项，具体见下表&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hard&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;仅仅回退版本，修改工作区和暂存区文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mixed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;回退版本，修改暂存区文件，不修改工作区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;merge&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;回退版本，修改暂存区文件，修改工作区中那些被跟踪的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;soft&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;仅仅回退版本，不修改工作区和暂存区文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HEAD&lt;/code&gt;表示当前版本的指针所在，&lt;code&gt;HAED^&lt;/code&gt;表示前一个版本，&lt;code&gt;HEAD^^&lt;/code&gt;表示之前两个版本，如果是前 100 个版本则可以使用&lt;code&gt;HEAD~100&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用该命令之后的结果如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git log --pretty&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;oneline
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;72b68e57aa9b18fcdd031d5901407a83c408580e revert the file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b250f9715a00d5f72caee1b6d0d7ab1d69e9c27b 2nd modification
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;27ed1eb9e7fb8a20176618e54c0464e721537da7 the 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abbd1c9e580a35aefe453615620d27ab464066c7 第一次提交readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此外，也可以直接指定版本号，回退到特定的版本，比如我想回退到最早的那个版本，可以使用如下的命令&lt;code&gt;git reset --hard abbd1c&lt;/code&gt;，后面的版本号就是第一次提交的 commit_id 的前几位，不必全部都写全，系统可以区分其他版本即可。输出结果如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git reset --hard abbd1c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HEAD is now at abbd1c9 第一次提交readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git log --pretty&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;oneline
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abbd1c9e580a35aefe453615620d27ab464066c7 第一次提交readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现在已经回退到之前最早的版本了。&lt;/p&gt;
&lt;h4 id=&#34;误删怎么办&#34;&gt;误删怎么办&lt;/h4&gt;
&lt;p&gt;如果误删，可以使用&lt;code&gt;git reflog&lt;/code&gt;，它记录了我们所有的操作，可以看到之前的 commit_id 以及对应的说明，如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git reflog
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abbd1c9 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: reset: moving to abbd1c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;72b68e5 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: reset: moving to HEAD^
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;498ebae HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;2&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit: hahahahaha
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;72b68e5 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: reset: moving to HEAD^
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;461cb5a HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;4&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit: hahhaha
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;72b68e5 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;5&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: reset: moving to HEAD^
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;7ea5d40 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;6&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit: my boss hahaha
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;72b68e5 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit: revert the file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b250f97 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;8&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit: 2nd modification
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;27ed1eb HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;9&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;amend&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: the 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;7aecba8 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;10&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit: 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abbd1c9 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;11&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: reset: moving to abbd1c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3325ee6 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;12&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit: 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;52c2155 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;13&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit: 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abbd1c9 HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;14&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;: commit &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;initial&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: 第一次提交readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果要恢复到&lt;code&gt;hahahaha&lt;/code&gt;的版本，可以使用如下的指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git reset --hard 461cb5a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HEAD is now at 461cb5a hahhaha
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git log --pretty&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;oneline
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;461cb5a8f35e5dc2b8dd4917d825b1b2d3c9bce3 hahhaha
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;72b68e57aa9b18fcdd031d5901407a83c408580e revert the file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b250f9715a00d5f72caee1b6d0d7ab1d69e9c27b 2nd modification
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;27ed1eb9e7fb8a20176618e54c0464e721537da7 the 1st commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abbd1c9e580a35aefe453615620d27ab464066c7 第一次提交readme.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改成功~&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;所有上面的操作可以总结在如下的一张图里&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://marklodato.github.io/visual-git-guide/basic-usage.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://try.github.io/levels/1/challenges/19&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git Tutorial - Try Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/06e1f67c8939&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git 与 Repo 简单入门 - 简书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://iissnan.com/progit/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pro Git 简体中文版&lt;/a&gt;，非常全面的 git 小书&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git 教程 - 廖雪峰的官方网站&lt;/a&gt;，有对应的 ios 的 &lt;a class=&#34;link&#34; href=&#34;https://www.liaoxuefeng.com/webpage/gitapp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git App for iOS - 廖雪峰的官方网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://marklodato.github.io/visual-git-guide/index-zh-cn.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;图解 Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>浮点数在计算机中的表示</title>
        <link>https://blog.bugxch.top/p/%E6%B5%AE%E7%82%B9%E6%95%B0%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%A4%BA/</link>
        <pubDate>Sat, 21 Jul 2018 08:19:45 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E6%B5%AE%E7%82%B9%E6%95%B0%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%A4%BA/</guid>
        <description>&lt;p&gt;接上一篇博客&lt;a class=&#34;link&#34; href=&#34;https://bugxch.github.io/2017/12/13/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89%E8%A1%A5%E7%A0%81%EF%BC%9F/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《为什么会有补码？》&lt;/a&gt;，我仅仅分析了整数在计算机中表示方式，但是计算机中的浮点数又是如何表示的呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/bridge-8291058_1920.jpg?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;bridge-8291058_1920.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;首先，使用之前博客的程序，可以看到如下的这些实数在计算机中的计算结果是&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;实际数值&lt;/th&gt;
&lt;th&gt;数值类型&lt;/th&gt;
&lt;th&gt;计算机中的表示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;102.3235&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;42CCA5A2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-3.256&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;C050624E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120.254&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;405E104189374BC7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-56.2441&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;C04C1F3EAB367A10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;右边的计算机中的数值表示是按照&lt;a class=&#34;link&#34; href=&#34;https://ieeexplore.ieee.org/document/4610935/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《IEEE 754-2008》&lt;/a&gt;的标准存储数据的，具体的规定如下所示。&lt;/p&gt;
&lt;h2 id=&#34;ieee-754-标准&#34;&gt;IEEE 754 标准&lt;/h2&gt;
&lt;h3 id=&#34;表示形式&#34;&gt;表示形式&lt;/h3&gt;
&lt;p&gt;IEEE 754规定了二进制浮点数在计算中的存储方式，我们以C语言中的float为例来具体说明。无论是32位系统还是64位系统，计算机中的float占用4个字节，我们就使用这些字节来存储任意的浮点数，可以参考下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/62672c03239250f7c5f6394d.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;转化成对应的数学表示形式，浮点数 V&lt;/p&gt;
&lt;p&gt;$$
V = (-1)^s\times M\times 2^E
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;s 表示符号位，占据1个bit 位，如果是负数则s=1，如果是非负数则s=0；&lt;/li&gt;
&lt;li&gt;M表示尾数，占据23个比特，表示有效数字，表示的数字介于1和2之间；&lt;/li&gt;
&lt;li&gt;E为直属，表示基于2为基数的指数大小，占据8个比特。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，如果确认了上面3个参数，也就唯一确定了浮点数在计算机中的存储形式。我们以 &lt;code&gt;102.3235&lt;/code&gt;为例，来看看上面的这几个数字是如何表示出来的？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;102.3235&lt;/code&gt;的二进制原码形式是 &lt;code&gt;1100110.01010010110100001110 = 1.10011001010010110100001110*2^6&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;确认s。因为是正数，因此 s=0。&lt;/li&gt;
&lt;li&gt;确认M。M表示 &lt;code&gt;1.xxxxxx&lt;/code&gt;之后的 &lt;code&gt;xxxxxx&lt;/code&gt;的部分，即&lt;strong&gt;计算机内部保存M时，默认表示的第一位总是 1，可以舍弃表示 1 的这一位，而仅仅存储小数点之后的部分&lt;/strong&gt;。因此 M=10011001010010110100001110，因为只能存储23个比特，将多余的位数部分截断得到M=10011001010010110100001。&lt;/li&gt;
&lt;li&gt;确认E。它是个非负正数，按照第1步计算出来的结果，我们的指数应该是6。但是，IEEE规定根据二进制计算浮点数时，需要给指数减去一个偏置值，对于float类型这个数为127，对于double类型，这个数是1023。因此反过来，在将数字转换成二进制存储的时候，要加上这个偏置值，因此 E=6+127=133。&lt;/li&gt;
&lt;li&gt;综合以上的所有计算结果，最后在计算机中存储的形式是 &lt;code&gt;01000010110011001010010110100001&lt;/code&gt;，转换成16进制就是 &lt;code&gt;42CCA5A2&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;特别规定&#34;&gt;特别规定&lt;/h3&gt;
&lt;p&gt;依照上面的方法，可以依次确认其他3个浮点数的表示形式。这都是比较常规的&lt;strong&gt;规格化&lt;/strong&gt;数据的处理方法，IEEE针对一些特殊的数字（绝对值特别接近0的数字或者无穷大无穷小），引入了一些特殊的规定，称为&lt;strong&gt;非规格化&lt;/strong&gt;表示方法，总结如下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://image-1258996033.cos.ap-shanghai.myqcloud.com/20240322210012.png?imageSlim&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;上一个章节介绍的是规格化的数据，除此之外，还有非规格化的数据和特殊的数据，总结如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;规格化数据。如果指数部分既不是0也不是255（&lt;strong&gt;指数部分既不全为0或者不全为1&lt;/strong&gt;），就是规格化存储方式，具体的计算方法与之前介绍的相同。此时$E = e - Bias$，这里的$e$是指数位宽$w$二进制比特对应的无符号整数，$Bias = 2^{w-1} - 1$，$M = 1.0 + f$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非规格化数据。&lt;strong&gt;指数全为0&lt;/strong&gt; 就是非规格化的数据。此时$E = 1 - Bias$，$Bias$的值与规格化的相同，$M = f$。很明显，规格化数据不能表示0，非规格化的数据可以，而且0有两种表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特殊数字。&lt;strong&gt;指数全为1&lt;/strong&gt; 表示特殊的数字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果$f$全为0，表示无穷大，正负取决于符号$s$，分别表示$+\infty$和$-\infty$；&lt;/li&gt;
&lt;li&gt;如果$f$不为0，表示这是一个非数NaN(Not a Number)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;float16的浮点表示&#34;&gt;float16的浮点表示&lt;/h2&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/zh-hans/%E5%8D%8A%E7%B2%BE%E5%BA%A6%E6%B5%AE%E7%82%B9%E6%95%B0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;半精度浮点数&lt;/a&gt;，基于上面的理解，我们可以研究下float16的一些特点。float16是用16个bit表示浮点数，不同的bit位的表示如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/6268ee4a239250f7c584e614.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;因为负数和正数的值除了符号之外是对称的，所以我们仅仅研究所有的整数表示即可，将16位比特从0到$2^{16}-1$的比特逐个写出来，可以看到如下的表格&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;二进制比特&lt;/th&gt;
&lt;th&gt;$E$&lt;/th&gt;
&lt;th&gt;$M$&lt;/th&gt;
&lt;th&gt;准确值($M \times 2^E$)&lt;/th&gt;
&lt;th&gt;十进制数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;最小非规格化数&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0000000000000000&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-14&lt;/td&gt;
&lt;td&gt;$0\times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$0.0 \times 2^{-15}$&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0000000000000001&lt;/td&gt;
&lt;td&gt;-14&lt;/td&gt;
&lt;td&gt;$1\times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$1\times 2^{-10}\times 2^{-14}$&lt;/td&gt;
&lt;td&gt;$6\times 10^{-8}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0000000000000010&lt;/td&gt;
&lt;td&gt;-14&lt;/td&gt;
&lt;td&gt;$2\times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$2\times 2^{-10}\times 2^{-14}$&lt;/td&gt;
&lt;td&gt;$1\times 10^{-7}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0000000000000011&lt;/td&gt;
&lt;td&gt;-14&lt;/td&gt;
&lt;td&gt;$3\times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$3\times 2^{-10}\times 2^{-14}$&lt;/td&gt;
&lt;td&gt;$2\times 10^{-7}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;最大非规格化数&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0000001111111111&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-14&lt;/td&gt;
&lt;td&gt;$(2^{10}-1)\times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$(2^{10}-1)\times 2^{-10}\times 2^{-14}= 2^{-14}-2^{-24}$&lt;/td&gt;
&lt;td&gt;$6\times 10^{-5}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;最小规格化数&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0000010000000000&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-14&lt;/td&gt;
&lt;td&gt;$1 + 0 \times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$2^{-14}$&lt;/td&gt;
&lt;td&gt;$6.104\times 10^{-5}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0000010000000001&lt;/td&gt;
&lt;td&gt;-14&lt;/td&gt;
&lt;td&gt;$1 + 1 \times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$2^{-14}+2^{-24}$&lt;/td&gt;
&lt;td&gt;$6.11\times 10^5$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0011110000000000&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;$1+0\times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;最大规格化数&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0111101111111111&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;$1+(2^{10}-1)\times 2^{-10}$&lt;/td&gt;
&lt;td&gt;$(2-2^{-10})\times 2^{15}$&lt;/td&gt;
&lt;td&gt;$65500$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;无穷大&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0111110000000000&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&amp;ndash;&lt;/td&gt;
&lt;td&gt;&amp;ndash;&lt;/td&gt;
&lt;td&gt;&amp;ndash;&lt;/td&gt;
&lt;td&gt;$+\infty$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;观察上面的表格，可以得到如下的一些结论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相对于数学上无穷多的实数，计算机可以精确表示的实数只有有限多个，半精度浮点数可以最多表示$2^{16}$个数，float最多表示$2^{32}$个数等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数字在数轴上的表示，&lt;strong&gt;越靠近0，可以表示浮点数的越稠密&lt;/strong&gt;，相应的精度也越高，最高精度是在靠近0的非规格化数里面。假设指数的位宽是$k$bit，位数的位宽是$n$比特，那么最高精度为$\epsilon = 2^{-n}\times 2^{2-2^{k-1}}= 2^{2-n-2^{k-1}}$，可以看出，k和n越长，精度越高，相对于n，k是精度的关键因素。下图是一个按照IEEE的标准的8bit位宽的浮点数表示图（1个bit符号位，3bit是指数位，4bit尾数位），明显可以看到在0的附近表示的数字越稠密。使用ctrl和鼠标中键放大之后，可以看到在0附近的浮点数是均匀分布的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.volkerschatz.com/science/pics/fltscale.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从数字0开始，有连续$2\times 2^{n} = 2^{n+1}$个数是等差数列，数列的公差是$\epsilon$，这些数就是$e = [0000\dots0]$和$e=[000\dots01]$的那些数，也就是$E = 1-Bias$的这些数。如果将它们标示在数轴上，它们是最靠近0的那部分区域，这些点均匀分布在这一块区域；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;0和1都可以精确表示，而且因为符号有+-两个符号，所以0有两种表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最大非规格化数和最小化规格数相差一个$\epsilon$，这个差值与非规格数的之间的差值相同，二者平滑过渡。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以表示的最大规格化数是$(1-2^{-n-1})\times 2^{2^{k-1}}$;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果将二进制比特看成u16的数，那么这些数本身表示的u16的数据大小与它们表示的float的大小关系相同，都是递增的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面的代码可以将所有的半精度浮点数的所有非负数表示出来（严格得说，不包括-0.0），可以都打印出来体会下上面的结论&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;udata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uint16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# all of non-negative float16 number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;udata&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;udata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;udata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uint16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;udata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.ruanyifeng.com/blog/2010/06/ieee_floating-point_representation.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;浮点数的二进制表示 - 阮一峰的网络日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wikiwand.com/en/IEEE_754&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;IEEE 754 - Wikiwand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.h-schmidt.net/FloatConverter/IEEE754.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;IEEE-754 Floating Point Converter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.cnblogs.com/zuoxiaolong/p/computer11.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深入理解计算机系统（2.7）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://dwayneneed.github.io/.net/2010/05/06/fun-with-floating-point.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Fun with floating point - Presentation Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.volkerschatz.com/science/float.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What you never wanted to know about floating point but will be forced to find out&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>单链表基本操作</title>
        <link>https://blog.bugxch.top/p/%E5%8D%95%E9%93%BE%E8%A1%A8%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
        <pubDate>Fri, 20 Jul 2018 23:18:50 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/%E5%8D%95%E9%93%BE%E8%A1%A8%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
        <description>&lt;p&gt;C语言的链表基本操作。&lt;/p&gt;
&lt;h2 id=&#34;为何需要链表&#34;&gt;为何需要链表？&lt;/h2&gt;
&lt;p&gt;学习 C 语言的开始，我们最早接触的数据类型是数组，它有两个特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顺序存储所有的元素，&lt;strong&gt;连续&lt;/strong&gt;占用内存空间；&lt;/li&gt;
&lt;li&gt;创建数组时需要事先知道存储元素的个数，确定数组的长度；&lt;/li&gt;
&lt;li&gt;查询元素复杂度是 O(1)O(1)，删除和插入的复杂度是 O(n)O(n)。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数组元素非常适合元素个数基本保持不变的场景，特别便于查阅操作，但是如果数据存储的元素个数经常发生变化，操作起来复杂度就很高，因此急需一种数据结构便于插入和删除，链表就很合适。&lt;/p&gt;
&lt;h3 id=&#34;概念&#34;&gt;概念&lt;/h3&gt;
&lt;p&gt;一个链表的示意图如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://c.biancheng.net/cpp/uploads/allimg/120129/fsds34343fgrt.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;链表在内存中不是连续的顺序存储的，链表包括表头，表尾和中间结点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中间结点包括数据域和指针域
&lt;ul&gt;
&lt;li&gt;数据域用于储存当前结点的数据，通常是数据类型&lt;/li&gt;
&lt;li&gt;指针域指示下一个结点在内存中的地址，是一个指针&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;表头是特殊的中间结点，它的数据域可以包括表的长度或者什么都没有，但是指针域必须指向单链表的第一个中间结点的位置&lt;/li&gt;
&lt;li&gt;表尾也是特殊的中间结点，数据域可以存储数据，因为已经没有后继结点，指针域为空&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;优势&#34;&gt;优势&lt;/h3&gt;
&lt;p&gt;单链表和数组相比的优势体现在如下两个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;空间存储更灵活，单链表不需要&lt;strong&gt;连续占用&lt;/strong&gt;内存空间，因为每个结点都知道它的后继结点在内存中的位置，所以不需要连续存储；&lt;/li&gt;
&lt;li&gt;空间申请更灵活，可以使用动态内存分配，在程序运行时候按需申请内存大小，避免数组申请过大造成的浪费。&lt;/li&gt;
&lt;li&gt;空间释放和增加更灵活，删除一个元素仅仅需要将该元素的前置元素指针指向它的后继结点，释放该结点即可，增加元素只需要更改指针指向即可，复杂度是 O(1)O(1)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是，单链表的劣势也很明显，单链表中的元素仅仅知道后继结点的位置，如果需要查询某个元素，只能从头结点开始一个一个地去遍历，而不像数组直接给出下标一步就能定位到，因此单链表的查询复杂度是 O(n)O(n)。&lt;/p&gt;
&lt;h2 id=&#34;代码示例&#34;&gt;代码示例&lt;/h2&gt;
&lt;p&gt;假定单链表的数据元素的数据类型是&lt;code&gt;ElemType&lt;/code&gt;，那单链表可以定义如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ElemType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;特别注意，有个特点，单链表有一个指向自身的指针，表示下一个结点&lt;code&gt;next&lt;/code&gt;的位置。单链表的常用操作包括：创建，查询，插入，删除，清除。&lt;/p&gt;
&lt;h3 id=&#34;创建列表&#34;&gt;创建列表&lt;/h3&gt;
&lt;p&gt;创建有两种方法，头插法和尾插法，第一种是保持新插入的元素始终在表的第一个元素，第二个保持新插入的元素始终在表的最后一个元素。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*头插法创建链表*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;CreateListHead&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;srand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;尾插法代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*尾插法创建链表*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;CreateListTail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;srand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;查询元素&#34;&gt;查询元素&lt;/h3&gt;
&lt;p&gt;工作的基本原理就是&lt;strong&gt;工作指针后移&lt;/strong&gt;，这个技巧也是单链表操作的基础和关键。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 单链表已经存在，用e返回L中的第i个元素的值*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Status&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;GetElem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ElemType&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//p不为空并且j还没有和i相等时，继续往后查找
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//一直指向下一个结点，顺藤摸瓜
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;插入元素&#34;&gt;插入元素&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 单链表已经存在，在第i个元素位置插入新的元素e，L的表长加1*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Status&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ListInsert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ElemType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//p不为空并且j还没有和i相等时，继续往后查找
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//一直指向下一个结点，顺藤摸瓜
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;删除元素&#34;&gt;删除元素&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 单链表已经存在，删除链表L的第i个元素，并用e返回其值，表长减1*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Status&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ListInsert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ElemType&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//p不为空并且j还没有和i相等时，继续往后查找
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//一直指向下一个结点，顺藤摸瓜
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;删除整表&#34;&gt;删除整表&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*顺序链表L已经存在，将L重置为空表*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Status&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ClearList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;LinkList&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://c.biancheng.net/cpp/biancheng/view/57.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;链表的创建和遍历_C 语言中文网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://c.biancheng.net/cpp/html/98.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C 语言链表的概念_C 语言中文网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.cnblogs.com/lifuqing/archive/2011/08/20/List.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C 语言单链表实现 19 个功能完全详解 - Lee.Kevin - 博客园&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Source Insight 基础配置</title>
        <link>https://blog.bugxch.top/p/source-insight-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Fri, 20 Jul 2018 23:08:38 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/source-insight-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;p&gt;我们提交的代码，要求不能有多余的空格与 TAB 键，而且代码是在 linux 环境中编译和运行的，而我们经常使用 source insight 编辑代码，因此有必要针对性地配置以省去反复去掉空格和 TAB 键的麻烦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/bugxch/blogpics/blob/master/201812/sourceinsight.png?raw=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们的配置基本上都在 Preference 的菜单里，下面逐个介绍如何设置。&lt;/p&gt;
&lt;h3 id=&#34;处理-tab-和空格&#34;&gt;处理 TAB 和空格&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;去掉每行末尾的空格和 TAB 键&lt;/strong&gt;：设置&lt;code&gt;Options-&amp;gt;Perferences-&amp;gt;Files-&amp;gt; Remove extra white space when saving&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TAB 键可见&lt;/strong&gt;：设置&lt;code&gt;Options-&amp;gt;Document Options-&amp;gt;Editing Options-&amp;gt;Visible tabs&lt;/code&gt;，就可以在代码里面看到 TAB 键。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;处理换行键&#34;&gt;处理换行键&lt;/h3&gt;
&lt;p&gt;*nix 系统和 Windows 系统文件中的换行符不同。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;*nix 系统中的换行符只有一个字符，&lt;code&gt;\n&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;Windows 系统中的换行由两个字符组成，&lt;code&gt;\r\n&lt;/code&gt;；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种区别的影响包括&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Unix/Mac 系统下的文件在 Windows 里打开的话，所有文字会变成一行；&lt;/li&gt;
&lt;li&gt;Windows 里的文件在 Unix/Mac 下打开的话，在每行的结尾可能会多出一个 ^M 符号。&lt;/li&gt;
&lt;li&gt;Linux 保存的文件在 windows 上用记事本看的话会出现黑点。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 linux 下，可以使用命令&lt;code&gt;unix2dos&lt;/code&gt;把 linux 文件格式转换成 windows 文件格式，命令&lt;code&gt;dos2unix&lt;/code&gt;把 windows 格式转换成 linux 文件格式。&lt;/p&gt;
&lt;p&gt;为了保证在 Windows 环境下打开文件之后仍然保持 linxu 的文件的显示正确，设置&lt;code&gt;Preference-&amp;gt;Other-&amp;gt;Default file format&lt;/code&gt;为 Unix(LF)。&lt;/p&gt;
&lt;h3 id=&#34;标题栏显示文件完整路径&#34;&gt;标题栏显示文件完整路径&lt;/h3&gt;
&lt;p&gt;这个功能在查看文档路径是非常有用，去掉&lt;code&gt;Preference-&amp;gt;Display-&amp;gt;Options-&amp;gt;Trim long path names while elipses&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;文件名首字母不要大写&#34;&gt;文件名首字母不要大写&lt;/h3&gt;
&lt;p&gt;勾选&lt;code&gt;Preference-&amp;gt;Display-&amp;gt;Options-&amp;gt;Show exact case of file names&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;其他设置&#34;&gt;其他设置&lt;/h3&gt;
&lt;p&gt;将 Preference 下面的所有 tab 页都过一遍。&lt;/p&gt;
&lt;h4 id=&#34;general&#34;&gt;General&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Project File Synchronization-&amp;gt;Remove missing file from project&lt;/code&gt;选上可以避免因文件找不到而弹出错误对话框；&lt;/li&gt;
&lt;li&gt;把&lt;code&gt;Misc-&amp;gt;Use stricter confirmation dialog&lt;/code&gt;选项去掉可以使确认时不输入”yes”。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;typing&#34;&gt;Typing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ource Editing-&amp;gt;Indent commands affect #-preprocessor statements&lt;/code&gt;去掉后（默认值），进行多行缩进时不会影响预处理语句（如 #if…#endif）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Auto Completion-&amp;gt;Use detailed completion window&lt;/code&gt;，选上后，联想时可以出现该函数的详细信息 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Auto Completion-&amp;gt;Insert paremeters for functions&lt;/code&gt;，去掉后，自动联想不会把整个参数都输出到当前行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Browsing in Lists-&amp;gt;Match syllables while typing(slower)&lt;/code&gt;在 symbol list 框检索符号时是否采用音节匹配方式，如对于函数 FindNext，输入 find 或者 next 都可以找到该函数。该功能可能导致反应缓慢（视工程和机器配置而定），建议关闭，因为即使在关闭状态下也可以通过先输入空格再输入单词来动态启用该功能。&lt;/p&gt;
&lt;p&gt;注意 Browsing in Lists 里其实有两个功能，但一般我们只能看到 Match syllables while typing 这一条，应该是 si 的菜单设计没有做好，导致在中文 windows 下不能显示全，另一个功能是 Match members while typing，用于打开 / 关闭按成员变量名来检索类 / 结构体的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;files&#34;&gt;Files&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Opening Files-&amp;gt;Sharing: Let other programs modify files&lt;/code&gt;，以共享方式打开文件，这个很重要，保证可以在其它编辑中同时编辑该文件。典型的场景就是用 ide 环境去动态编译调试，而用 si 静态阅读；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Customize &#39;Open&#39; Command...&lt;/code&gt;，用于设置 Ctrl+O 打开的页面，默认选项是 Project File list view in Project Window，建议保持默认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Saving Files-&amp;gt;Preserve Undo data and revision marks after saving&lt;/code&gt;，如果发现保存后就不能 undo 了，请检查该选项是否选中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Remove extra white space when saving&lt;/code&gt;。保存时自动去除每行尾部的空格和 tab。建议选中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;languages&#34;&gt;Languages&lt;/h4&gt;
&lt;p&gt;自定义其它编程语言的语法解析，这个… 还是另写一篇来讲吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Conditional Parsing&lt;/code&gt;不要错过了，这里的 Conditions 功能实在让人喜欢。Conditions 是什么意思呢？我们的代码中一般都会有一些开关宏，通过在 Conditions 中配置这些宏的默认值，可以让 si 把配置为不开启的宏视为无效代码，从而不进行符号检索。&lt;/p&gt;
&lt;p&gt;如果源代码中的开关宏太多，还可以使用 Condition Parsing 中的 Scan Files 来自动找出所有开关宏。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;symbol-lookups&#34;&gt;Symbol Lookups&lt;/h4&gt;
&lt;p&gt;没有特别的。&lt;/p&gt;
&lt;h4 id=&#34;display&#34;&gt;Display&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;显示配置和个人喜好和显示器的状态有关，偶用的 x60 小本，屏幕资源有限，所以在 Display Elements 里把 Project Window, Status Bar, Tool Bar，Clip Window 都关了，基本用快捷键可以代替它们。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Options-&amp;gt;Horizontal scroll bars for each new window&lt;/code&gt;。很多大师都教导我们说一行不要写太多代码。在这个指导思想下，我们不需要这个东东。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Show exact case of file names&lt;/code&gt;。如果看不惯 si 把所有的文件名首字母都大写就勾上这个选项吧。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tile source and destination windows for Source Link commands&lt;/code&gt;。Source Link 很多时候用于外部命令输出结果的解析（如 Make, lint），这个功能会把解析结果与目标窗口自动 tile，很实用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Trim long path names with ellipses&lt;/code&gt;。这个建议不要选中。事实上这个主要影响标题栏，但一般来说标题栏上的空间是充裕的，选上之后往往会令我们不知道所编辑文件的具体位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;color&#34;&gt;Color&lt;/h4&gt;
&lt;p&gt;自己配置。&lt;/p&gt;
&lt;h4 id=&#34;syntax-decorations&#34;&gt;&lt;strong&gt;Syntax Decorations&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;可以把一些符号转换成特殊形式显示，如 -&amp;gt; 转换成→。如果要使用该功能，不能开启&lt;code&gt;Syntax Formatting-&amp;gt;Basics-&amp;gt;Use only color formatting&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Auto annotations&lt;/code&gt;下的三个功能都比较有用;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Show arrows at goto statements&lt;/code&gt;可以在 goto 时显示一个向上或向下的箭头，表示是向上 goto 还是向下 goto，不过我们还是尽量不要用 goto 了。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Annotate closing braces with end-statement&lt;/code&gt;。在”}” 后显示标识，表示该”}” 与哪个 if/switch 配对，而下面的&lt;code&gt;Annotate closing braces only for long blocks&lt;/code&gt;则是一个补充选项，表示只在较长的语句块时才显示标识。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;syntax-formatting&#34;&gt;Syntax Formatting&lt;/h4&gt;
&lt;p&gt;如果让大家说出喜欢 si 的几个理由，我想语法着色一定会是其中之一。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Basics-&amp;gt;Use only color formatting&lt;/code&gt;。只启用 style 中关于颜色的设置。其它如粗体、斜体、阴影等都不启用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Apply Styles for Lanugage Elements&lt;/code&gt;。把分类启用 style，都选上吧。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Symbol Reference Lookups-&amp;gt;Qualify references to members&lt;/code&gt;。检测成员的有效性，如果不是类 / 结构体中的一部分，则不启用 style。虽然可能导致性能降低，但还是建议打开。同样&lt;code&gt;Qualify references to functions&lt;/code&gt;也是。&lt;/li&gt;
&lt;li&gt;这里有个按钮可以进入 Doc Types 页面（Options 菜单也可以进入），里面有很多重要选项：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Editing Options&lt;/code&gt;中， &lt;code&gt;Expand tabs, Visible tabs&lt;/code&gt;可以帮助我们发现并转换 tab。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Show right margint和Margin width&lt;/code&gt;可以提醒我们是否把一行写得太长。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Symbol Window&lt;/code&gt;选项建议关闭（因为有快捷键）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Auto Indent&lt;/code&gt;对话框中， 如果没有特别喜好，建议把&lt;code&gt;Smart Indent Options&lt;/code&gt;的两个勾都去掉，同时&lt;code&gt;Auto Indent Type&lt;/code&gt;选&lt;code&gt;Smart&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他的没有什么特别的了，最后简单说下 si 的配置文件。可以通过&lt;code&gt;Options-&amp;gt;Load Configuration/Save Configuration&lt;/code&gt;来导入 / 导出配置，可以导出全部，也可以导出某几个部分（如 style）。si 的配置有两级，一是全局配置，一是项目配置。出入方便考虑，统一一个配置就好了，在创建项目时选择用全局配置（默认值）。&lt;/p&gt;
&lt;h3 id=&#34;参考文档&#34;&gt;参考文档&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/TskyFree/article/details/8121951&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows、Unix、Mac 不同操作系统的换行问题 - 剖析回车符 \ r 和换行符 \ n - CSDN 博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/lanmanck/article/details/8638391&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;source insight 保存时删除多余空格，去除多余空格 space tab 键 - CSDN 博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>C语言补遗</title>
        <link>https://blog.bugxch.top/p/c%E8%AF%AD%E8%A8%80%E8%A1%A5%E9%81%97/</link>
        <pubDate>Fri, 20 Jul 2018 22:54:24 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/c%E8%AF%AD%E8%A8%80%E8%A1%A5%E9%81%97/</guid>
        <description>&lt;p&gt;前些天公司摸底 C 语言考试，得分比较难看，回来发了考试答案，这篇博客把我做错的题目拿出来理一理，补补课。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;判断对错：在定义数据结构时，没有特殊理由的话，都定义成四字节对齐；这样做可能浪费几个字节，但是不会出问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这道题答案是对的，需要仔细 Google。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以下程序运行 (64 位系统) 后的输出结果是 6 5 8 5&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;H&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d %d %d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;这道题我的答案是 6,5,4,5，原因在于 64 位的指针的长度大小是 8 个字节，而不是一般的 4 个字节。 考点为 字符串数组长度 (+1), 64 位指针长度 (8) 字符串数组 x 包含末尾的’\0’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如下程序, 在 64bit 系统运行输出为 24 4 8 16&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;short&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d %d %d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;offsetof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;offsetof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;offsetof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//注: offsetof 为计算偏移量的宏
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我的答案是 48,8,16,32，错误成了 2 倍。主要为结构体对齐规则, 这部分需要强化 一般考生都可以看到 b 按 4 字节对齐，需要填充 忽视 double 也需要 8 字节对齐 double 在 32 位 linux 平台下可能按照 4 字节对齐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如下指针计算, 结果为 4&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x510&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;“&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我错成了 16，答案应该是 16/4，指针的减法，按照指针类型计算跨越的步长&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如下程序, 请问输出多少？ -128,128&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;127&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我的答案是 128,128，整型加法隐式提升到 int 然后运算，所以 x+1 就是 128 溢出出现在赋值运算，第一个溢出了，第二个没有。没有考虑到第一个溢出之后的数据显示问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如下程序片段, 输出为: 2 7&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我的答案是 4 7 。x[0] 是对二级指针解引用，类型是指向整型的指针，指向 1，+1 后，指向 x[0][1] 没争议&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算如下定义长度 (64 位系统)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;un&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;un&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我的答案是 48，联合体的内存大小不会算，共用体的占用空间的大小，按照其最大成员算 本题中 long 是 8 字节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请问输出多少&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packet_bit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0x%04x&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我的答案是 0xf，这道题完全是蒙出来的，考察的是位域的概念，位域结构体，按地址从低到高依次存储 a、b、c 一个规则大家可能都不熟悉： 一个位域必须存储在同一个字节中，不能跨两个字节 所以 a 和 b 储存在一个字节，c 再进来存不下，所以 c 单独存放在一个字节 再就是注意输出格式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如下程序, 请写出打印结果 A b&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;fun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%c %c&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我的结果是 a b， 函数入参是按值传递的，只有通过传递地址才能改变函数外部的值，这里有一个陷阱，使用的地址，实际是从参数 b 传进来的，所以改变的也是参数 b 指向的值 。这道题不该错，因为在 fun 函数里，a 的值已经是 b 了，所以 a 指向的就是 b 指向的地址，因此改变的就是 c2 指向的字母啊&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下面函数的输出是 token3 = 4&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define paster( n ) printf( &amp;#34;token&amp;#34; #n &amp;#34; = %d&amp;#34;, token##n )
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;token3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tokenn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;paster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我的答案是 token3 = 3，这是个知识盲点，可以参考 &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/dotphoenix/article/details/4345174&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C 语言宏定义 ## 连接符和 #符的使用&lt;/a&gt;，# 将本身的字符替换之后再在两边加上双引号，## 是机械单纯得将两个 token 连接在一起&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如下程序, 输出为 100008 100001 100004&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x100000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%x %x %x&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我的答案是 0x100008,0x100001,0x11。这道题比较有意思，程序第 8 行已经说明了，p 的值就是 0x100000（也就是说 p 指向的地址是 0x100000），后面 (int *)p，说明了它指向的是 int 类型，那么 + 1 就是在原来的地址上一个 int 的字节数，也就是 0x100004。需要总结的是，指针前面的表明的是这个指针指向的数据类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Kindle使用小记</title>
        <link>https://blog.bugxch.top/p/kindle%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/</link>
        <pubDate>Fri, 29 Jun 2018 22:17:59 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/p/kindle%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/</guid>
        <description>&lt;img src="https://pic.downk.cc/item/5feb4e063ffa7d37b31957b7.jpg" alt="Featured image of post Kindle使用小记" /&gt;&lt;p&gt;今天入手了一直心心念念的顶配级kindle oasis 2，非常感谢老婆大人的资金支持，在&lt;a class=&#34;link&#34; href=&#34;https://item.taobao.com/item.htm?spm=a1z09.2.0.0.59972e8dpJGLWd&amp;amp;id=520077012565&amp;amp;_u=t1hu3bqm1146&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;某宝&lt;/a&gt;上买了美版32G的版本，可以说是顶配版了，字迹清晰，屏幕适中，爱不释手。&lt;/p&gt;
&lt;h2 id=&#34;基础设置&#34;&gt;基础设置&lt;/h2&gt;
&lt;h3 id=&#34;更新版本&#34;&gt;更新版本&lt;/h3&gt;
&lt;p&gt;一般而言，kindle并不像手机连接wifi之后可以自动更新，我拿到kindle之后查看我的版本号落后整整半年，而且“更新您的kindle”显示也是灰色的，所以只能自己下载版本手动更新了。至于如何查看版本号以及更新的具体步骤，可以参考文章&lt;a class=&#34;link&#34; href=&#34;https://bookfere.com/post/4.html#kpw_version&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kindle 阅读器固件下载大全及升级方法&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://bookfere.com/post/4.html#update_step&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kindle 阅读器固件下载大全及升级方法&lt;/a&gt;，详实具体，亲测有效。&lt;/p&gt;
&lt;h3 id=&#34;更新字体&#34;&gt;更新字体&lt;/h3&gt;
&lt;p&gt;ko2（kindle oasis 2）设备自固件5.9.6之后就支持第三方字体，所以可以自行安装中英文字体，我推荐字体&lt;a class=&#34;link&#34; href=&#34;https://bookfere.com/post/423.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kindle 中文字体推荐：更换一下字形口味&lt;/a&gt;，添加字体的步骤可以参考&lt;a class=&#34;link&#34; href=&#34;https://bookfere.com/post/655.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kindle 设备已原生支持自定义字体（附操作步骤）&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;图书资源&#34;&gt;图书资源&lt;/h2&gt;
&lt;h3 id=&#34;获取方式&#34;&gt;获取方式&lt;/h3&gt;
&lt;p&gt;kindle获取图书有两个途径：推送和导入。推送就是在将图书文件以附件的形式发送到特定的邮箱，在下次kindle联网的饿时候可以同步将图书推送到你的kindle；导入就是原始方式，通过USB将kindle与电脑相连，之后将下载的图书复制到kindle根目录下的documents文件夹，图书就会自动导入。&lt;/p&gt;
&lt;p&gt;把电子书推送到云端和通过 USB 直接拷贝到 Kindle 中有什么区别呢？相比直接拷贝，你今后只需要使用同一账号，登录任何一部 Kindle 设备（或 Kindle APP）中，都可以很方便的从云端获取你所推送的电子书或文档，不仅可以避免今后重置 Kindle 系统造成电子书丢失的情况，还可以享受亚马逊提供的 Whispersync 同步功能，自动将你的阅读笔记、书签和标注等数据同步到云端，很实用方便。&lt;/p&gt;
&lt;h4 id=&#34;推送图书&#34;&gt;推送图书&lt;/h4&gt;
&lt;p&gt;所谓 Kindle 推送是指亚马逊提供的一个“&lt;a class=&#34;link&#34; href=&#34;http://www.amazon.cn/gp/help/customer/display.html?nodeId=200767340&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kindle 个人文档服务&lt;/a&gt;”，我们只需要一个亚马逊账号，就可以通过以电子邮箱发送附件的方式，免费把 Kindle 所支持的文档或电子书推送到亚马逊提供的个人文档云存储中。当云端接收到了你推送的文档，将会自动转换格式（比如你推送的是 txt 格式会转换成 azw 格式）并同步到与此账号绑定的 Kindle 设备中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://ohgefr15s.bkt.clouddn.com/kindle-push-theory.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;推送的步骤和介绍可以参考文章&lt;a class=&#34;link&#34; href=&#34;https://bookfere.com/post/3.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kindle 推送教程：教你用电子邮箱推送电子书&lt;/a&gt;，需要注意一定要使用邮箱的普通附件，不要使用诸如163 云附件、QQ 中的超大附件、Gmail 中的 Google Drive 附件之类的非普通附件。还需要注意亚马逊云端对文档大小的限制是 50MB，邮箱附件大小不要超过这个数值。不过一般邮箱的附件大小也都有自己的限制，如 Gmail 最大支持 25MB，如果你想要推送超过 20MB 的附件，推荐使用 163 邮箱、QQ邮箱、新浪邮箱等，它们的附件最大限制刚好是 50 MB。&lt;/p&gt;
&lt;h4 id=&#34;删除云端个人文档&#34;&gt;删除云端个人文档&lt;/h4&gt;
&lt;p&gt;如果想要彻底删除推送到云端的个人文档，可以登陆亚马逊账户，进入“管理我的内容和设备”的【&lt;a class=&#34;link&#34; href=&#34;https://www.amazon.cn/mn/dcw/myx.html/ref=kinw_myk_redirect#/home/content/booksAll/dateDsc/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;我的内容&lt;/a&gt;】，把“&lt;strong&gt;显示&lt;/strong&gt;”切换到“&lt;strong&gt;个人文档&lt;/strong&gt;”，即可对个人文档列表进行删除操作。在这里还可以对列表进行多选，批量删除推送到云端的内容。&lt;/p&gt;
&lt;h4 id=&#34;推送资源&#34;&gt;推送资源&lt;/h4&gt;
&lt;p&gt;除了看书，kindle还可以订阅微信公众号，RSS，新闻以及网页上的任意内容，具体的推送内容可以参考&lt;a class=&#34;link&#34; href=&#34;https://push.bookfere.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;书伴推送服务&lt;/a&gt;，我没有订阅，但是应该质量满不错。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;订阅微信公众号，&lt;/li&gt;
&lt;li&gt;RSS&lt;/li&gt;
&lt;li&gt;新闻订阅&lt;/li&gt;
&lt;li&gt;网页推送&lt;/li&gt;
&lt;li&gt;纽约客、经济学人等外文资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;获取图书&#34;&gt;获取图书&lt;/h4&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://bookfere.com/ebook&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kindle 图书资源&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://wangdongyang.github.io/2016/09/11/%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%BA%90%F0%9F%93%9A/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;书籍资源📚 | WDYFancy&lt;/a&gt;两篇博文，写得非常详尽，我个人体验了下，推荐如下几个网站。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mlook.mobi/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mLook 看书&lt;/a&gt;，上面有很多精校的电子书&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.zoudupai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;走读派 - Kindle电子书瀑布流&lt;/a&gt;，很多优质电子书资源&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;优化电子书排版&#34;&gt;优化电子书排版&lt;/h2&gt;
&lt;p&gt;参考&lt;a class=&#34;link&#34; href=&#34;https://bookfere.com/post/260.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Calibre 使用教程之优化电子书的排版 – 书伴&lt;/a&gt;，使用calibre能够将排版比较糟糕的电子书重新排版成美观的格式，非常赞！&lt;/p&gt;
&lt;h2 id=&#34;参考文章&#34;&gt;参考文章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://labrick.cc/2017/08/20/wechat-article-to-kindle/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;kindle订阅整理成册的微信公众号文章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/attention%E4%BC%98%E5%8C%962w%E5%AD%97%E5%8E%9F%E7%90%86%E5%9B%BE%E8%A7%A3--%E4%BB%8Eonline-softmax%E5%88%B0flashattention-v1-v2-v3/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/attention%E4%BC%98%E5%8C%962w%E5%AD%97%E5%8E%9F%E7%90%86%E5%9B%BE%E8%A7%A3--%E4%BB%8Eonline-softmax%E5%88%B0flashattention-v1-v2-v3/</guid>
        <description>&lt;h1 id=&#34;attention优化2w字原理图解-从online-softmax到flashattention-v1v2v3&#34;&gt;[Attention优化][2w字]原理&amp;amp;图解: 从Online-Softmax到FlashAttention V1/V2/V3&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-a-4-mj-y-4-n-tk-0-nq-3-d-3-d-idx-18fd67ffe54&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ%3D%3D&amp;amp;idx=1&amp;amp;mid=2247522690&amp;amp;scene=58&amp;amp;sn=3e62081510c6f30a3f3cff876ac22f25&amp;amp;subscene=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/obsidian-%E5%91%A8%E6%8A%A5-2024-05-26%E6%96%B0%E7%89%88%E6%9C%AC%E5%B0%9D%E9%B2%9C%E5%89%8D%E7%9E%BB%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6-%E4%B8%87%E8%83%BD%E7%BB%88%E7%AB%AF/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/obsidian-%E5%91%A8%E6%8A%A5-2024-05-26%E6%96%B0%E7%89%88%E6%9C%AC%E5%B0%9D%E9%B2%9C%E5%89%8D%E7%9E%BB%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6-%E4%B8%87%E8%83%BD%E7%BB%88%E7%AB%AF/</guid>
        <description>&lt;h1 id=&#34;obsidian-周报-2024-05-26新版本尝鲜前瞻笔记软件万能终端&#34;&gt;Obsidian 周报 2024-05-26：新版本尝鲜前瞻！笔记软件（?）万能终端（√）&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mzkz-nt-uy-m-tgw-ma-3-d-3-d-idx-1-m-18fbc252665&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s?__biz=MzkzNTUyMTgwMA%3D%3D&amp;amp;idx=1&amp;amp;mid=2247486859&amp;amp;scene=58&amp;amp;sn=5f0f3a17b8bafddabf37c20ec4a682af&amp;amp;subscene=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/weixin-official-accounts-platform/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/weixin-official-accounts-platform/</guid>
        <description>&lt;h1 id=&#34;weixin-official-accounts-platform&#34;&gt;Weixin Official Accounts Platform&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-a-4-mj-y-4-n-tk-0-nq-3-d-3-d-idx-18fe06c83e0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/mp/wappoc_appmsgcaptcha?poc_token=HAhRXmajrDpkxOsSsF2td7C0EJoUcNeh-uornsJ5&amp;amp;target_url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA4MjY4NTk0NQ%253D%253D%26idx%3D1%26mid%3D2247522692%26scene%3D58%26sn%3D9e24bbe5d2a949ad5412d49039b3a0d3%26subscene%3D0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/%E4%BB%8E%E5%A4%96%E5%9B%BD%E6%B8%B8%E5%AE%A2%E6%9D%A5%E5%8D%8E%E5%92%8C%E5%AB%A6%E5%A8%A5%E5%85%AD%E5%8F%B7%E4%BA%A7%E7%94%9F%E7%9A%84%E4%B8%80%E7%82%B9%E6%84%9F%E6%83%B3--%E4%B8%AD%E5%9B%BD%E8%B6%8A%E6%88%90%E5%8A%9F%E5%AF%B9%E5%8D%8E%E8%88%86%E8%AE%BA%E6%88%98%E5%B0%B1%E8%B6%8A%E6%9D%A5%E8%B6%8A%E9%9A%BE/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/%E4%BB%8E%E5%A4%96%E5%9B%BD%E6%B8%B8%E5%AE%A2%E6%9D%A5%E5%8D%8E%E5%92%8C%E5%AB%A6%E5%A8%A5%E5%85%AD%E5%8F%B7%E4%BA%A7%E7%94%9F%E7%9A%84%E4%B8%80%E7%82%B9%E6%84%9F%E6%83%B3--%E4%B8%AD%E5%9B%BD%E8%B6%8A%E6%88%90%E5%8A%9F%E5%AF%B9%E5%8D%8E%E8%88%86%E8%AE%BA%E6%88%98%E5%B0%B1%E8%B6%8A%E6%9D%A5%E8%B6%8A%E9%9A%BE/</guid>
        <description>&lt;h1 id=&#34;从外国游客来华和嫦娥六号产生的一点感想--中国越成功对华舆论战就越来越难&#34;&gt;从外国游客来华和嫦娥六号产生的一点感想&amp;ndash;中国越成功，对华舆论战就越来越难&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-i-0-mjc-2-n-dc-2-oq-3-d-3-d-idx--18ff02d8df4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s?__biz=MzI0Mjc2NDc2OQ%3D%3D&amp;amp;idx=1&amp;amp;mid=2247491618&amp;amp;scene=58&amp;amp;sn=929f6c56fac79ee176e83b3fe0be6a87&amp;amp;subscene=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%9A%84obsidian%E6%9C%80%E4%BD%B3%E7%BD%91%E9%A1%B5%E5%89%AA%E8%97%8F%E4%B8%8E%E7%A8%8D%E5%90%8E%E9%98%85%E8%AF%BBomnivore_%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8_%E4%BB%80%E4%B9%88%E5%80%BC%E5%BE%97%E4%B9%B0/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%9A%84obsidian%E6%9C%80%E4%BD%B3%E7%BD%91%E9%A1%B5%E5%89%AA%E8%97%8F%E4%B8%8E%E7%A8%8D%E5%90%8E%E9%98%85%E8%AF%BBomnivore_%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8_%E4%BB%80%E4%B9%88%E5%80%BC%E5%BE%97%E4%B9%B0/</guid>
        <description>&lt;h1 id=&#34;全平台的obsidian最佳网页剪藏与稍后阅读omnivore_软件应用_什么值得买&#34;&gt;全平台的Obsidian最佳网页剪藏与稍后阅读——Omnivore_软件应用_什么值得买&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/obsidian-omnivore-18fb6fecec2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://post.smzdm.com/p/a5x7l947/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;highlights&#34;&gt;Highlights&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;mark class=&#34;hltr-yellow&#34;&gt;Omnivore设计的初衷是稍后阅读，但是目前Omnivore最吸引我的不是它的稍后阅读功能，而是它能便捷剪藏我在iPhone，iPad和网页上看到的内容到Obsidian&lt;/mark&gt; &lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/obsidian-omnivore-18fb6fecec2#fe59f87f-ab23-4548-af2d-04f280fbb683&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;⤴️&lt;/a&gt;  ^fe59f87f&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看起来非常不错&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0/</guid>
        <description>&lt;h1 id=&#34;微信公众平台&#34;&gt;微信公众平台&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-a-4-mj-y-4-n-tk-0-nq-3-d-3-d-idx-18fb72d3d0f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ%3D%3D&amp;amp;idx=1&amp;amp;mid=2247522296&amp;amp;scene=58&amp;amp;sn=f20546da2446ef8db319aacf7e572570&amp;amp;subscene=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;highlights&#34;&gt;Highlights&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;mark class=&#34;hltr-yellow&#34;&gt;尽管已经探索了各种核函数 (Kasai 等, 2021; Peng 等, 2021; Choromanski 等, 2020)，最近的工作发现一个线性核（即，将  设为恒等映射）在实践中无需正则化器也能很好地工作 (Qin 等, 2022)。&lt;/mark&gt; &lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-a-4-mj-y-4-n-tk-0-nq-3-d-3-d-idx-18fb72d3d0f#da432930-3959-4a90-a47a-83a32d61b65a&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;⤴️&lt;/a&gt;  ^da432930&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;测试标注&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;mark class=&#34;hltr-yellow&#34;&gt;要注意的是&lt;/mark&gt; &lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-a-4-mj-y-4-n-tk-0-nq-3-d-3-d-idx-18fb72d3d0f#81cdddf9-27fe-4c8a-9de6-5dd3caac145a&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;⤴️&lt;/a&gt;  ^81cdddf9&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/%E6%80%BB%E6%84%9F%E8%A7%89%E5%8F%B0%E6%B9%BE%E7%BB%9F%E4%B8%80%E7%9A%84%E6%97%B6%E9%97%B4%E5%9C%A8%E8%B6%8A%E6%9D%A5%E8%B6%8A%E8%BF%91%E4%BA%86/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/%E6%80%BB%E6%84%9F%E8%A7%89%E5%8F%B0%E6%B9%BE%E7%BB%9F%E4%B8%80%E7%9A%84%E6%97%B6%E9%97%B4%E5%9C%A8%E8%B6%8A%E6%9D%A5%E8%B6%8A%E8%BF%91%E4%BA%86/</guid>
        <description>&lt;h1 id=&#34;总感觉台湾统一的时间在越来越近了&#34;&gt;总感觉台湾统一的时间在越来越近了&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-i-0-mjc-2-n-dc-2-oq-3-d-3-d-idx--18fb9c1f913&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s?__biz=MzI0Mjc2NDc2OQ%3D%3D&amp;amp;idx=1&amp;amp;mid=2247491561&amp;amp;scene=58&amp;amp;sn=f85e9a743299d9896af82cfdb30db32f&amp;amp;subscene=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;highlights&#34;&gt;Highlights&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;mark class=&#34;hltr-yellow&#34;&gt;意，我军也再次搞了环台军演。&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark class=&#34;hltr-yellow&#34;&gt; 但其实现在在中国大陆，人们已经在逐渐达成共识，台独势力越是猖狂，越是挑衅，反而越有利于我们不断有理由推进反制动作，越有利于我们站在道义的制高点。&lt;/mark&gt; &lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-i-0-mjc-2-n-dc-2-oq-3-d-3-d-idx--18fb9c1f913#157ad0ba-8e8a-4ae1-b843-a53f36e45ae5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;⤴️&lt;/a&gt;  ^157ad0ba&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看起来不错&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/%E7%94%A8%E4%BA%86%E4%B8%80%E5%B9%B4%E5%A4%9A-hhkb-%E9%9D%99%E7%94%B5%E5%AE%B9%E9%94%AE%E7%9B%98%E6%88%91%E4%BB%AC%E6%83%B3%E8%B0%88%E8%B0%88%E8%BF%99%E6%AC%BE%E4%B8%8D%E4%BE%BF%E5%AE%9C%E7%9A%84%E9%94%AE%E7%9B%98%E7%A6%8F%E5%88%A9%E6%B4%BE---%E5%B0%91%E6%95%B0%E6%B4%BE/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/%E7%94%A8%E4%BA%86%E4%B8%80%E5%B9%B4%E5%A4%9A-hhkb-%E9%9D%99%E7%94%B5%E5%AE%B9%E9%94%AE%E7%9B%98%E6%88%91%E4%BB%AC%E6%83%B3%E8%B0%88%E8%B0%88%E8%BF%99%E6%AC%BE%E4%B8%8D%E4%BE%BF%E5%AE%9C%E7%9A%84%E9%94%AE%E7%9B%98%E7%A6%8F%E5%88%A9%E6%B4%BE---%E5%B0%91%E6%95%B0%E6%B4%BE/</guid>
        <description>&lt;h1 id=&#34;用了一年多-hhkb-静电容键盘我们想谈谈这款不便宜的键盘福利派---少数派&#34;&gt;用了一年多 HHKB 静电容键盘，我们想谈谈这款不便宜的键盘｜福利派 - 少数派&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/hhkb-18fb6f503a7&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://sspai.com/post/56994&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;highlights&#34;&gt;Highlights&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;mark class=&#34;hltr-yellow&#34;&gt;HHKB 重新设计的键位布局，UNIX 友好的同时又兼顾 macOS 和 Windows。取消了数字键、功能键和方向键等非必要按键，只有重要的最少按键。每个按键的键帽大小仍为 19.05 毫米的同时，体积大幅减少。&lt;/mark&gt; &lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/hhkb-18fb6f503a7#b5933ddb-e1aa-4a52-977c-55d33ea3dbe3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;⤴️&lt;/a&gt;  ^b5933ddb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;mark class=&#34;hltr-yellow&#34;&gt;偶尔的输入错误倒是不可避免，对于不熟悉键位还使用「无刻印」版本的朋友，我推荐买几个有颜色的键帽来标识一些难以定位的按键，例如数字5，只要能定位这个按键，其它按键就很容易找到了。虽然HHKB的键帽和机械键盘是不通用的，不过选择空间也还挺宽的。&lt;/mark&gt; &lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/hhkb-18fb6f503a7#91fd1ece-3f25-4746-98a1-99c8f88d8c3e&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;⤴️&lt;/a&gt;  ^91fd1ece&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/%E7%9C%8B%E7%90%86%E6%83%B3%E5%8F%88%E5%85%8D%E8%B4%B9%E4%BA%86/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/%E7%9C%8B%E7%90%86%E6%83%B3%E5%8F%88%E5%85%8D%E8%B4%B9%E4%BA%86/</guid>
        <description>&lt;h1 id=&#34;看理想又免费了&#34;&gt;看理想又免费了！&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-a-3-mdm-3-nj-e-5-nq-3-d-3-d-idx--18fc40005c5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s?__biz=MzA3MDM3NjE5NQ%3D%3D&amp;amp;idx=2&amp;amp;mid=2650969040&amp;amp;scene=58&amp;amp;sn=5d75ef73ed7d47b677519968239b3d71&amp;amp;subscene=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/omnivore/%E9%81%93%E9%98%BB%E4%B8%94%E9%95%BF_%E5%86%8D%E6%8E%A2%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95%E4%BC%98%E5%8C%96/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/omnivore/%E9%81%93%E9%98%BB%E4%B8%94%E9%95%BF_%E5%86%8D%E6%8E%A2%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95%E4%BC%98%E5%8C%96/</guid>
        <description>&lt;h1 id=&#34;道阻且长_再探矩阵乘法优化&#34;&gt;道阻且长_再探矩阵乘法优化&lt;/h1&gt;
&lt;p&gt;#Omnivore&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://omnivore.app/me/https-mp-weixin-qq-com-s-biz-mz-a-4-mj-y-4-n-tk-0-nq-3-d-3-d-chk-18fc9be1fc4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read on Omnivore&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ%3D%3D&amp;amp;chksm=9f80a5d6a8f72cc0bdc51ea4632d4215081f74790a2eed47d50aeeec3fe3d3bf6bf1d65e513f&amp;amp;idx=1&amp;amp;mid=2247491392&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;sharer_shareid=bbfc5c3189a7826aeace38184061f4fa&amp;amp;sharer_sharetime=1683795205824&amp;amp;sn=ddb072d2ad5eeaa6c1dba0eb440366bf&amp;amp;srcid=0511RSgVhIs8iuQ4BW9QBlLn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read Original&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/20%E4%B8%96%E7%BA%AA%E7%9A%84%E7%BE%8E%E5%9B%BD/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/20%E4%B8%96%E7%BA%AA%E7%9A%84%E7%BE%8E%E5%9B%BD/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 20世纪的美国&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/714/33209714/t7_33209714.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 20世纪的美国|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 20世纪的美国&lt;/li&gt;
&lt;li&gt;作者： 资中筠&lt;/li&gt;
&lt;li&gt;简介： 美国崛起为超级大国，是20世纪一个重要的全球性事件。它在危机与挑战的应对中蒸蒸日上，在平等与发展的平衡中渐进改良，又在风云变幻的国际舞台上强势扩张。面对自由竞争与政府干预、个人权利与社会责任、对内民主与对外霸权，以及特有的种族与移民问题，美国应如何解决，在数字经济和全球化的时代又将何去何从……&lt;/li&gt;
&lt;li&gt;出版时间 2018-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787100160575&lt;/li&gt;
&lt;li&gt;分类： 历史-世界史&lt;/li&gt;
&lt;li&gt;出版社： 商务印书馆&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/ece32ca071fabd72ecec5fc&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;修订版序&#34;&gt;修订版序&lt;/h2&gt;
&lt;h2 id=&#34;第一章-概论&#34;&gt;第一章 概论&lt;/h2&gt;
&lt;h3 id=&#34;一-19世纪留给美国的问题&#34;&gt;一 19世纪留给美国的问题&lt;/h3&gt;
&lt;h3 id=&#34;二-悠长而丰富的精神遗产&#34;&gt;二 悠长而丰富的精神遗产&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 美国主流思想的基本出发点是：通过个人的才智和力量在创造财富中得到充分发挥以达到全社会的进步，在此基础上形成具有社会共识的价值观和道德标准。这是市场经济的思想基础，也是其结果。由于没有欧洲的封建残余和贵族势力，在美国早期建国过程中，这种自由主义—个人主义发挥得淋漓尽致，释放出了巨大的创造力。
⏱ 2024-05-18 16:22:16 ^33209714-5-2075-2220&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;三-持续渐进的改良&#34;&gt;三 持续渐进的改良&lt;/h3&gt;
&lt;h3 id=&#34;四-中介势力基金会及其他私人公益事业&#34;&gt;四 中介势力——基金会及其他私人公益事业&lt;/h3&gt;
&lt;h3 id=&#34;五-言论自由和批判精神&#34;&gt;五 言论自由和批判精神&lt;/h3&gt;
&lt;h3 id=&#34;六-最大的人才优势和创新机制&#34;&gt;六 最大的人才优势和创新机制&lt;/h3&gt;
&lt;h3 id=&#34;七-美国与世界&#34;&gt;七 美国与世界&lt;/h3&gt;
&lt;h2 id=&#34;第二章-在自由竞争与追求平等的悖论中摆动&#34;&gt;第二章 在自由竞争与追求平等的悖论中摆动&lt;/h2&gt;
&lt;h3 id=&#34;一-简短的历史回顾&#34;&gt;一 简短的历史回顾&lt;/h3&gt;
&lt;h3 id=&#34;二-社会达尔文主义的沃土&#34;&gt;二 社会达尔文主义的沃土&lt;/h3&gt;
&lt;h3 id=&#34;三-改良主义的挑战&#34;&gt;三 改良主义的挑战&lt;/h3&gt;
&lt;h3 id=&#34;四-杜威和实用主义&#34;&gt;四 杜威和实用主义&lt;/h3&gt;
&lt;h2 id=&#34;第三章-进步主义运动&#34;&gt;第三章 进步主义运动&lt;/h2&gt;
&lt;h3 id=&#34;一-改革的推动力&#34;&gt;一 改革的推动力&lt;/h3&gt;
&lt;h3 id=&#34;二-全国性改革&#34;&gt;二 全国性改革&lt;/h3&gt;
&lt;h3 id=&#34;三-州市改革反腐与民主化&#34;&gt;三 州市改革、反腐与民主化&lt;/h3&gt;
&lt;h3 id=&#34;四-进步主义与种族主义帝国主义&#34;&gt;四 进步主义与种族主义、帝国主义&lt;/h3&gt;
&lt;h2 id=&#34;第四章-小罗斯福新政及其后&#34;&gt;第四章 小罗斯福“新政”及其后&lt;/h2&gt;
&lt;h3 id=&#34;二-约翰逊的伟大社会计划&#34;&gt;二 约翰逊的“伟大社会”计划&lt;/h3&gt;
&lt;h3 id=&#34;三-福利制度的困境&#34;&gt;三 福利制度的困境&lt;/h3&gt;
&lt;h2 id=&#34;第五章-60年代的反抗运动及其他&#34;&gt;第五章 60年代的反抗运动及其他&lt;/h2&gt;
&lt;h3 id=&#34;一-60年代新左派和反文化运动&#34;&gt;一 60年代“新左派”和“反文化”运动&lt;/h3&gt;
&lt;h3 id=&#34;二-60年代运动与进步主义的比较&#34;&gt;二 60年代运动与进步主义的比较&lt;/h3&gt;
&lt;h3 id=&#34;三-后60年代&#34;&gt;三 “后60年代”&lt;/h3&gt;
&lt;h3 id=&#34;四-社会主义共产主义与反共主义&#34;&gt;四 社会主义、共产主义与反共主义&lt;/h3&gt;
&lt;h2 id=&#34;第六章-公益基金会与捐赠文化的独特作用&#34;&gt;第六章 公益基金会与捐赠文化的独特作用&lt;/h2&gt;
&lt;h3 id=&#34;一-巨大的财富流向何处&#34;&gt;一 巨大的财富流向何处&lt;/h3&gt;
&lt;h3 id=&#34;二-与传统慈善的区别&#34;&gt;二 与传统慈善的区别&lt;/h3&gt;
&lt;h3 id=&#34;三-对内推动社会改良&#34;&gt;三 对内推动社会改良&lt;/h3&gt;
&lt;h3 id=&#34;四-面向全世界&#34;&gt;四 面向全世界&lt;/h3&gt;
&lt;h3 id=&#34;五-与中国关系&#34;&gt;五 与中国关系&lt;/h3&gt;
&lt;h3 id=&#34;六-基金会的作用和所体现的思想&#34;&gt;六 基金会的作用和所体现的思想&lt;/h3&gt;
&lt;h3 id=&#34;七-基金会与政府的关系&#34;&gt;七 基金会与政府的关系&lt;/h3&gt;
&lt;h2 id=&#34;第七章-美国良心的负担黑人问题&#34;&gt;第七章 美国良心的负担——黑人问题&lt;/h2&gt;
&lt;h3 id=&#34;一-以种族主义起家&#34;&gt;一 以种族主义起家&lt;/h3&gt;
&lt;h3 id=&#34;二-20世纪的民权斗争&#34;&gt;二 20世纪的民权斗争&lt;/h3&gt;
&lt;h3 id=&#34;三-变化与问题&#34;&gt;三 变化与问题&lt;/h3&gt;
&lt;h3 id=&#34;四-几点思考&#34;&gt;四 几点思考&lt;/h3&gt;
&lt;h2 id=&#34;第八章-移民教育与人口素质&#34;&gt;第八章 移民、教育与人口素质&lt;/h2&gt;
&lt;h3 id=&#34;一-移民国家的特殊条件&#34;&gt;一 移民国家的特殊条件&lt;/h3&gt;
&lt;h3 id=&#34;二-高度发达的教育&#34;&gt;二 高度发达的教育&lt;/h3&gt;
&lt;h3 id=&#34;三-人尽其才的环境和机制&#34;&gt;三 人尽其才的环境和机制&lt;/h3&gt;
&lt;h2 id=&#34;第九章-福兮祸兮&#34;&gt;第九章 福兮？祸兮？&lt;/h2&gt;
&lt;h3 id=&#34;一-发展和平等&#34;&gt;一 发展和平等&lt;/h3&gt;
&lt;h3 id=&#34;二-移民的优势与种族难题&#34;&gt;二 移民的优势与种族难题&lt;/h3&gt;
&lt;h3 id=&#34;三-自由主义的极限&#34;&gt;三 自由主义的极限&lt;/h3&gt;
&lt;h3 id=&#34;四-从市场竞争到市场专政&#34;&gt;四 从市场竞争到市场“专政”&lt;/h3&gt;
&lt;h3 id=&#34;五-对内行民主对外行霸道&#34;&gt;五 对内行民主，对外行霸道&lt;/h3&gt;
&lt;h2 id=&#34;第十章-911之后&#34;&gt;第十章 “9·11”之后&lt;/h2&gt;
&lt;h3 id=&#34;一-新保守主义理论及其实施&#34;&gt;一 新保守主义理论及其实施&lt;/h3&gt;
&lt;h3 id=&#34;二-内政进一步右摆&#34;&gt;二 内政进一步右摆&lt;/h3&gt;
&lt;h3 id=&#34;三-制衡的力量&#34;&gt;三 制衡的力量&lt;/h3&gt;
&lt;h3 id=&#34;四-美国何去何从&#34;&gt;四 美国何去何从&lt;/h3&gt;
&lt;h2 id=&#34;后-记&#34;&gt;后 记&lt;/h2&gt;
&lt;h3 id=&#34;一-软实力的来源和缺陷&#34;&gt;一 软实力的来源和缺陷&lt;/h3&gt;
&lt;h3 id=&#34;二-当前面临的问题&#34;&gt;二 当前面临的问题&lt;/h3&gt;
&lt;h3 id=&#34;三-奥巴马壮志未酬&#34;&gt;三 奥巴马壮志未酬&lt;/h3&gt;
&lt;h3 id=&#34;四-民主的危机&#34;&gt;四 民主的危机&lt;/h3&gt;
&lt;h3 id=&#34;五-改革力量在民间&#34;&gt;五 改革力量在民间&lt;/h3&gt;
&lt;h2 id=&#34;参考书目&#34;&gt;参考书目&lt;/h2&gt;
&lt;h2 id=&#34;译名对照表&#34;&gt;译名对照表&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/ai%E8%8A%AF%E7%89%87%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%88%9B%E6%96%B0%E6%9C%AA%E6%9D%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/ai%E8%8A%AF%E7%89%87%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%88%9B%E6%96%B0%E6%9C%AA%E6%9D%A5/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] AI芯片：前沿技术与创新未来&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/175/36985175/t7_36985175.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; AI芯片：前沿技术与创新未来|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： AI芯片：前沿技术与创新未来&lt;/li&gt;
&lt;li&gt;作者： 张臣雄&lt;/li&gt;
&lt;li&gt;简介： 本书从AI的发展历史讲起，介绍了目前最热门的深度学习加速芯片和基于神经形态计算的类脑芯片的相关算法、架构、电路等，并介绍了近年来产业界和学术界一些著名的AI芯片，包括生成对抗网络芯片和深度强化学习芯片等。本书着重介绍了用创新的思维来设计AI芯片的各种计算范式，以及下一代AI芯片的几种范例，包括量子启发的AI芯片、进一步提升智能程度的AI芯片、有机自进化AI芯片、光子AI芯片及自供电AI芯片等。本书也介绍了半导体芯片技术在“后摩尔定律时代”的发展趋势，以及基础理论（如量子场论、信息论等）引领AI芯片创新并将不断发挥巨大作用。最后，本书介绍了AI发展的三个层次、AI芯片与生物大脑的差距以及未来的发展方向。本书可供在AI芯片领域学习和工作的研究生、本科生、工程技术人员，以及所有对AI芯片感兴趣的人员参考。&lt;/li&gt;
&lt;li&gt;出版时间 2021-03-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115553195&lt;/li&gt;
&lt;li&gt;分类： 计算机-人工智能&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/9f132cf0723459579f1dd43&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;扉页&#34;&gt;扉页&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;内-容-提-要&#34;&gt;内 容 提 要&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;第一篇-导论&#34;&gt;第一篇 导论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 随着人工智能（Artificial Intelligence，AI）的热潮席卷各行各业，作为人工智能核心的“AI芯片”变得炙手可热，它是所有智能设备必不可少的核心器件，专门用于处理AI相关的计算任务。AI芯片领域不光是半导体芯片公司竞争的舞台，连互联网公司、云计算公司都纷纷发布推出芯片的计划。而大大小小的AI芯片初创公司更是像雨后春笋般出现，各种AI芯片相关的发布会、研讨会上人头涌动、热闹异常，都说明了人们对于AI芯片的浓厚兴趣。
⏱ 2024-02-26 19:46:10 ^36985175-6-503-720&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第2章-执行训练和推理的ai-芯片&#34;&gt;第2章 执行“训练”和“推理”的AI 芯片&lt;/h3&gt;
&lt;h2 id=&#34;第二篇-最热门的ai芯片&#34;&gt;第二篇 最热门的AI芯片&lt;/h2&gt;
&lt;h3 id=&#34;第4章-近年研发的ai-芯片及其背后的产业和创业特点&#34;&gt;第4章 近年研发的AI 芯片及其背后的产业和创业特点&lt;/h3&gt;
&lt;h3 id=&#34;第5章-神经形态计算和类脑芯片&#34;&gt;第5章 神经形态计算和类脑芯片&lt;/h3&gt;
&lt;h2 id=&#34;第三篇-用于ai芯片的创新计算范式&#34;&gt;第三篇 用于AI芯片的创新计算范式&lt;/h2&gt;
&lt;h3 id=&#34;第7章-存内计算&#34;&gt;第7章 存内计算&lt;/h3&gt;
&lt;h3 id=&#34;第8章-近似计算随机计算和可逆计算&#34;&gt;第8章 近似计算、随机计算和可逆计算&lt;/h3&gt;
&lt;h3 id=&#34;第9章-自然计算和仿生计算&#34;&gt;第9章 自然计算和仿生计算&lt;/h3&gt;
&lt;h2 id=&#34;第四篇-下一代ai芯片&#34;&gt;第四篇 下一代AI芯片&lt;/h2&gt;
&lt;h3 id=&#34;第11章-进一步提高智能程度的ai-算法及芯片&#34;&gt;第11章 进一步提高智能程度的AI 算法及芯片&lt;/h3&gt;
&lt;h3 id=&#34;第12章-有机计算和自进化ai-芯片&#34;&gt;第12章 有机计算和自进化AI 芯片&lt;/h3&gt;
&lt;h3 id=&#34;第13章-光子ai-芯片和储备池计算&#34;&gt;第13章 光子AI 芯片和储备池计算&lt;/h3&gt;
&lt;h2 id=&#34;第五篇-推动ai芯片发展的新技术&#34;&gt;第五篇 推动AI芯片发展的新技术&lt;/h2&gt;
&lt;h3 id=&#34;第15章-后摩尔定律时代的芯片&#34;&gt;第15章 后摩尔定律时代的芯片&lt;/h3&gt;
&lt;h2 id=&#34;第六篇-促进ai芯片发展的基础理论研究应用和创新&#34;&gt;第六篇 促进AI芯片发展的基础理论研究、应用和创新&lt;/h2&gt;
&lt;h3 id=&#34;第17章-ai-芯片的应用和发展前景&#34;&gt;第17章 AI 芯片的应用和发展前景&lt;/h3&gt;
&lt;h2 id=&#34;附录-中英文术语对照表&#34;&gt;附录 中英文术语对照表&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/cmake%E6%9E%84%E5%BB%BA%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%8D%B7/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/cmake%E6%9E%84%E5%BB%BA%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%8D%B7/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] CMake构建实战：项目开发卷&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/21/cpplatform_hgrvh6q168ggeaz5up338a/t7_cpplatform_hgrvh6q168ggeaz5up338a1711450092.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; CMake构建实战：项目开发卷|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： CMake构建实战：项目开发卷&lt;/li&gt;
&lt;li&gt;作者： 许宏旭&lt;/li&gt;
&lt;li&gt;简介： 本书主要介绍C和C++程序构建的相关知识，包括直接调用C和C++编译器完成构建的基础内容，以及使用CMake完成项目构建的相关内容。全书先介绍市面上C和C++的主流编译器及其相关命令行工具、Makefile等的使用，抽象出与项目构建相关的概念模型，再介绍CMake脚本语言的基础语法、常用命令等，最后介绍与CMake项目构建相关的内容。本书含有两个实践章节，借助CMake脚本语言，分别构建了快速排序算法程序、手写数字识别库及配套命令行工具。 本书适合有C和C++编程基础，希望了解或应用CMake工具的人阅读，也适合想要构建跨平台C和C++程序的开发人员阅读。&lt;/li&gt;
&lt;li&gt;出版时间 2024-02-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115616647&lt;/li&gt;
&lt;li&gt;分类： 计算机-计算机综合&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社有限公司&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/3f932c50813ab8a65g0193d0&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;内容提要&#34;&gt;内容提要&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h3 id=&#34;本书读者&#34;&gt;本书读者&lt;/h3&gt;
&lt;h2 id=&#34;第1章-构建之旅&#34;&gt;第1章 构建之旅&lt;/h2&gt;
&lt;h3 id=&#34;11-单源文件程序您好世界&#34;&gt;1.1 单源文件程序：您好，世界&lt;/h3&gt;
&lt;h3 id=&#34;12-构建多源程序&#34;&gt;1.2 构建多源程序&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 C++更是经常因为编译速度慢而被大家诟病
⏱ 2024-05-16 17:24:38 ^3300091899-8-1470-1490&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 链接器的作用，就是把这些目标文件链接在一起，解析其中未定义的符号引用
⏱ 2024-04-16 12:48:45 ^3300091899-8-3395-3429&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 人生中宝贵的十几秒又消逝了，话不多说，同样修改（实例中通过复制并覆盖的方式修改）并重新编译main.cpp
⏱ 2024-04-16 12:50:33 ^3300091899-8-5505-5558&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 make构建工具会根据Makefile规则文件来进行构建
⏱ 2024-05-16 17:32:54 ^3300091899-8-6286-6314&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;13-构建静态库&#34;&gt;1.3 构建静态库&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 另外，因为库总是要被其他开发者使用的，所以提供一个声明了全部功能函数的头文件十分有必要。这样，开发者只需引用提供的头文件，然后链接静态库，就可以使用该库开发好的实用功能了！
⏱ 2024-04-16 12:54:07 ^3300091899-9-1018-1104&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 此处并没有写静态库的完整文件名，因为GCC编译器会自动根据这个基本名称，加上前缀“lib”和扩展名“.a”去搜索
⏱ 2024-04-20 17:12:45 ^3300091899-9-3367-3423&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;14-构建动态库&#34;&gt;1.4 构建动态库&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果某个静态库相当通用而被很多程序静态链接，将是对空间的巨大浪费。这里不仅是指编译后的程序文件的体积，更重要的是指程序运行时占用的内存空间。
⏱ 2024-04-16 12:59:15 ^3300091899-10-620-690&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 同时，多个程序也可以共享一个动态库，换句话说，任何程序都能够在运行时将同一个动态库的目标代码动态链接到自己的程序中执行，而且这份动态库的代码在内存中可以只装载一份。
⏱ 2024-04-16 12:59:52 ^3300091899-10-1052-1134&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 动态链接库被装载时，会根据特定规则随机选取一个虚拟内存地址进行装载
⏱ 2024-05-16 17:44:37 ^3300091899-10-1502-1535&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 它的存在使得动态链接库装载的内存地址是不固定的，这就意味着其编译后的机器代码中，凡是访问内存某一绝对位置的代码，在装载时都需要被改写。这就是重定位(relocation)
⏱ 2024-05-16 17:44:51 ^3300091899-10-1570-1655&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 也就同样需要重定位了。
⏱ 2024-05-16 17:45:09 ^3300091899-10-1869-1880&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一旦确定了某一动态链接库装载的虚拟内存地址，后面任何进程再用到同一个动态链接库时，都会将它装载到同一虚拟内存地址中。
⏱ 2024-05-01 19:08:25 ^3300091899-10-2058-2116&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于ASLR特性的存在，动态链接库会在运行时被装载到随机的内存地址中，则GOT各个表项的值只能在运行时被替换——这就是动态重定位。
⏱ 2024-05-01 19:14:16 ^3300091899-10-7436-7501&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这些信息存储在程序的动态节(dynamic section)中，我们可以通过readelf命令查看
⏱ 2024-05-01 19:29:40 ^3300091899-10-9631-9680&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;15-引用第三方库&#34;&gt;1.5 引用第三方库&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但其缺点也很明显，那就是影响编译时间。因为头文件库本身没有源程序，无法独立编译成目标文件，再被链接到使用它的程序中，这就不可避免地需要反复编译头文件中的程序。另外，分发头文件库也意味着开源是必需的了，毕竟需要用户来编译。这反映了头文件库的封装性相对较差。
⏱ 2024-05-01 19:47:16 ^3300091899-11-1578-1705&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 CXXFLAGS变量用于向编译器传递公共参数。/I用于指定头文件搜索目录，这里直接设置为Boost的根目录即可。/MD参数代表程序将会动态链接C++运行时库，与之相对地
⏱ 2024-05-01 20:53:42 ^3300091899-11-7920-8004&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 CXXFLAGS和LDFLAGS变量分别代表公共的编译和链接参数。编译参数-I指定了头文件库搜索目录，链接参数-L指定了链接库文件搜索目录，链接参数-Wl,-R指定了RUNPATH的值。
⏱ 2024-05-01 20:55:15 ^3300091899-11-10343-10436&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;16-旅行笔记&#34;&gt;1.6 旅行笔记&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 目标文件虽然名叫“目标”，但终究不是我们最终想要的目标。因此有构建目标（target，简称目标）这个概念。构建目标是建立在源程序之上的更高层抽象。当我们将一系列源程序组织成一个构建目标，就相当于为这些源程序指定了一些共同的编译和链接参数。
⏱ 2024-05-01 21:16:52 ^3300091899-12-1369-1488&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一般来说，我们会将一些目标文件打包或链接成库文件或可执行文件，这样这些库文件和可执行文件就可以称作构建目标了
⏱ 2024-05-01 21:17:08 ^3300091899-12-1517-1571&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 可以说，目标文件库并非是一个传统意义上的库，它更像是一个逻辑上的概念。但它毕竟包含一系列源程序，并指导编译器将它们编译为目标文件
⏱ 2024-05-01 21:18:12 ^3300091899-12-2136-2200&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对于GCC来说，提供的链接库的参数-la和-lb的顺序对链接过程存在重要影响。链接器会根据参数指定的链接库顺序依次解析之前遇到过的未定义的符号，不走回头路。也就是说，静态库B中未定义的符号，链接器不会再回到A中去检索了。
⏱ 2024-05-01 22:04:39 ^3300091899-12-11710-11820&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 为了避免这个问题，我们应当根据依赖关系，先链接有依赖的库，再链接被依赖的库。这样，有依赖的库中遇到的未定义的符号，总能被链接器从被依赖的库中找到。因此，对于该例程而言， Makefile的第二行命令应当做一点修改，即调换参数-la和-lb的顺序。
⏱ 2024-05-01 22:05:57 ^3300091899-12-11849-11972&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 笔者通过多个实例展示了二者的表现形式和作用原理，体现了抽象出这几个概念的动机——分离关注点，面向目标解耦构建参数，这样更容易厘清大型复杂工程的各部分关系，轻松搞定构建过程
⏱ 2024-05-01 22:14:56 ^3300091899-12-14081-14166&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这种抽象模型大大降低了构建项目时的心智负担。只有在真正实施构建时，我们才需要将该概念模型的拓扑结构翻译成对应平台的编译链接命令，而这一步骤完全可以由CMake代劳。
⏱ 2024-05-02 05:51:55 ^3300091899-12-15905-15987&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第2章-cmake简介&#34;&gt;第2章 CMake简介&lt;/h2&gt;
&lt;h3 id=&#34;21-为什么使用cmake&#34;&gt;2.1 为什么使用CMake&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 除此之外，CMake还支持交叉编译，可以满足更多样的构建需求。
⏱ 2024-05-02 05:54:31 ^3300091899-14-2384-2415&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 同时，CMake脚本语言是领域特定语言(Domain Specific Language，DSL)，即专注于某个应用程序领域的计算机语言。对于CMake来说，它所专注的便是构建这个领域，自然也提供了很多用于构建过程的命令，如下载并构建外部的项目、生成配置文件等。
⏱ 2024-05-02 05:54:55 ^3300091899-14-3216-3347&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;22-安装cmake&#34;&gt;2.2 安装CMake&lt;/h3&gt;
&lt;h3 id=&#34;23-您好cmake&#34;&gt;2.3 您好，CMake!&lt;/h3&gt;
&lt;h2 id=&#34;第3章-基础语法&#34;&gt;第3章 基础语法&lt;/h2&gt;
&lt;h3 id=&#34;31-cmake程序&#34;&gt;3.1 CMake程序&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 另外，在CMakeLists.txt中，可能还会通过add_subdirectory命令将一些子目录追加到构建目录中。当然，这要求子目录中也有一个CMakeLists.txt。
⏱ 2024-05-02 06:00:05 ^3300091899-18-810-898&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;32-注释&#34;&gt;3.2 注释&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 括号注释依然由#开头，紧接着依次是左方括号[、若干等号=（也可以不加等号）、左方括号[。括号注释的终止标记与起始标记对称，但不含#，即依次由右方括号]、若干等号=、右方括号]构成，其中等号的数量需要与起始标记相同
⏱ 2024-05-02 06:03:03 ^3300091899-19-1067-1173&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;33-命令调用&#34;&gt;3.3 命令调用&lt;/h3&gt;
&lt;h3 id=&#34;34-命令参数&#34;&gt;3.4 命令参数&lt;/h3&gt;
&lt;h3 id=&#34;35-变量&#34;&gt;3.5 变量&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对于CMake的目录程序而言，每一个目录层级，都有它的一个作用域。子目录的程序被执行前，会先将父目录作用域中的所有变量复制一份到子目录的作用域中。因此，子目录的程序可以访问但无法修改父目录作用域中的变量。对于CMake脚本程序而言，目录作用域相当于只有一层。
⏱ 2024-05-02 06:10:03 ^3300091899-22-1223-1352&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;36-列表&#34;&gt;3.6 列表&lt;/h3&gt;
&lt;h3 id=&#34;37-控制结构&#34;&gt;3.7 控制结构&lt;/h3&gt;
&lt;h3 id=&#34;38-条件语法&#34;&gt;3.8 条件语法&lt;/h3&gt;
&lt;h3 id=&#34;39-命令定义&#34;&gt;3.9 命令定义&lt;/h3&gt;
&lt;h3 id=&#34;310-小结&#34;&gt;3.10 小结&lt;/h3&gt;
&lt;h2 id=&#34;第4章-常用命令&#34;&gt;第4章 常用命令&lt;/h2&gt;
&lt;h3 id=&#34;41-数值操作命令math&#34;&gt;4.1 数值操作命令：math&lt;/h3&gt;
&lt;h3 id=&#34;42-字符串操作命令string&#34;&gt;4.2 字符串操作命令：string&lt;/h3&gt;
&lt;h3 id=&#34;43-列表操作命令list&#34;&gt;4.3 列表操作命令：list&lt;/h3&gt;
&lt;h3 id=&#34;44-文件操作命令file&#34;&gt;4.4 文件操作命令：file&lt;/h3&gt;
&lt;h3 id=&#34;45-路径操作命令cmake_path&#34;&gt;4.5 路径操作命令：cmake_path&lt;/h3&gt;
&lt;h3 id=&#34;46-路径操作命令get_filename_component&#34;&gt;4.6 路径操作命令：get_filename_component&lt;/h3&gt;
&lt;h3 id=&#34;47-配置模板文件configure_file&#34;&gt;4.7 配置模板文件：configure_file&lt;/h3&gt;
&lt;h3 id=&#34;48-日志输出命令message&#34;&gt;4.8 日志输出命令：message&lt;/h3&gt;
&lt;h3 id=&#34;49-执行程序execute_process&#34;&gt;4.9 执行程序：execute_process&lt;/h3&gt;
&lt;h3 id=&#34;410-引用cmake程序include&#34;&gt;4.10 引用CMake程序：include&lt;/h3&gt;
&lt;h3 id=&#34;411-执行代码片段cmake_language&#34;&gt;4.11 执行代码片段：cmake_language&lt;/h3&gt;
&lt;h3 id=&#34;412-监控变量variable_watch&#34;&gt;4.12 监控变量：variable_watch&lt;/h3&gt;
&lt;h2 id=&#34;第5章-实践cmake快速排序&#34;&gt;第5章 实践：CMake快速排序&lt;/h2&gt;
&lt;h2 id=&#34;第6章-cmake构建初探&#34;&gt;第6章 CMake构建初探&lt;/h2&gt;
&lt;h3 id=&#34;61-cmake项目的生命周期&#34;&gt;6.1 CMake项目的生命周期&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不同的构建模式分别对应一系列不同的预置编译链接选项，我们可以根据需求方便地切换。 CMake默认提供如下四种构建模式。
⏱ 2024-05-02 06:22:17 ^3300091899-43-5539-5598&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;62-项目配置与缓存变量&#34;&gt;6.2 项目配置与缓存变量&lt;/h3&gt;
&lt;h3 id=&#34;63-cmake命令行的使用&#34;&gt;6.3 CMake命令行的使用&lt;/h3&gt;
&lt;h3 id=&#34;64-使用visual-studio打开cmake项目&#34;&gt;6.4 使用Visual Studio打开CMake项目&lt;/h3&gt;
&lt;h3 id=&#34;65-小结&#34;&gt;6.5 小结&lt;/h3&gt;
&lt;h2 id=&#34;第7章-构建目标和属性&#34;&gt;第7章 构建目标和属性&lt;/h2&gt;
&lt;h3 id=&#34;71-二进制构建目标&#34;&gt;7.1 二进制构建目标&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不会在构建时被链接到任何一个程序中，仅用于运行时动态链接（通过LoadLibrary或dlopen等API）
⏱ 2024-05-02 06:52:20 ^3300091899-49-3999-4053&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因此，最佳实践是永远一一罗列全部源文件。这样，添加新的源文件必然导致CMakeLists.txt修改。构建项目时，也就会重新配置生成该项目，源文件的变动自然也会被检测到，从而导致相应部分的重新构建。
⏱ 2024-05-02 07:57:08 ^3300091899-49-7289-7388&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;72-伪构建目标&#34;&gt;7.2 伪构建目标&lt;/h3&gt;
&lt;h3 id=&#34;73-子目录&#34;&gt;7.3 子目录&lt;/h3&gt;
&lt;h3 id=&#34;74-项目project&#34;&gt;7.4 项目：project&lt;/h3&gt;
&lt;h3 id=&#34;75-属性get_propertyset_property&#34;&gt;7.5 属性：get_property、set_property&lt;/h3&gt;
&lt;h3 id=&#34;76-属性相关命令&#34;&gt;7.6 属性相关命令&lt;/h3&gt;
&lt;h3 id=&#34;77-自定义构建规则add_custom_command&#34;&gt;7.7 自定义构建规则：add_custom_command&lt;/h3&gt;
&lt;h3 id=&#34;78-自定义构建目标add_custom_target&#34;&gt;7.8 自定义构建目标：add_custom_target&lt;/h3&gt;
&lt;h3 id=&#34;79-设置依赖关系add_dependencies&#34;&gt;7.9 设置依赖关系：add_dependencies&lt;/h3&gt;
&lt;h3 id=&#34;710-小结&#34;&gt;7.10 小结&lt;/h3&gt;
&lt;h2 id=&#34;第8章-生成器表达式&#34;&gt;第8章 生成器表达式&lt;/h2&gt;
&lt;h3 id=&#34;81-支持生成器表达式的命令&#34;&gt;8.1 支持生成器表达式的命令&lt;/h3&gt;
&lt;h3 id=&#34;82-布尔型生成器表达式&#34;&gt;8.2 布尔型生成器表达式&lt;/h3&gt;
&lt;h3 id=&#34;83-字符串生成器表达式&#34;&gt;8.3 字符串生成器表达式&lt;/h3&gt;
&lt;h3 id=&#34;84-小结&#34;&gt;8.4 小结&lt;/h3&gt;
&lt;h2 id=&#34;第9章-模块&#34;&gt;第9章 模块&lt;/h2&gt;
&lt;h3 id=&#34;91-引用功能模块&#34;&gt;9.1 引用功能模块&lt;/h3&gt;
&lt;h3 id=&#34;92-常用的预置功能模块&#34;&gt;9.2 常用的预置功能模块&lt;/h3&gt;
&lt;h3 id=&#34;93-查找模块&#34;&gt;9.3 查找模块&lt;/h3&gt;
&lt;h3 id=&#34;94-编写自定义查找模块&#34;&gt;9.4 编写自定义查找模块&lt;/h3&gt;
&lt;h3 id=&#34;95-小结&#34;&gt;9.5 小结&lt;/h3&gt;
&lt;h2 id=&#34;第10章-策略与向后兼容&#34;&gt;第10章 策略与向后兼容&lt;/h2&gt;
&lt;h3 id=&#34;101-cmake策略以cmp0115为例&#34;&gt;10.1 CMake策略（以CMP0115为例）&lt;/h3&gt;
&lt;h3 id=&#34;102-指定cmake最低版本要求cmake_minimum_required&#34;&gt;10.2 指定CMake最低版本要求：cmake_minimum_required&lt;/h3&gt;
&lt;h3 id=&#34;103-管理策略行为cmake_policy&#34;&gt;10.3 管理策略行为：cmake_policy&lt;/h3&gt;
&lt;h3 id=&#34;104-渐进式重构cmake程序&#34;&gt;10.4 渐进式重构CMake程序&lt;/h3&gt;
&lt;h3 id=&#34;105-小结&#34;&gt;10.5 小结&lt;/h3&gt;
&lt;h2 id=&#34;第11章-实践基于onnxruntime的手写数字识别库&#34;&gt;第11章 实践：基于onnxruntime的手写数字识别库&lt;/h2&gt;
&lt;h3 id=&#34;111-前期设计&#34;&gt;11.1 前期设计&lt;/h3&gt;
&lt;h3 id=&#34;112-第三方库&#34;&gt;11.2 第三方库&lt;/h3&gt;
&lt;h3 id=&#34;113-cmake目录程序&#34;&gt;11.3 CMake目录程序&lt;/h3&gt;
&lt;h3 id=&#34;114-代码实现&#34;&gt;11.4 代码实现&lt;/h3&gt;
&lt;h3 id=&#34;115-构建和运行&#34;&gt;11.5 构建和运行&lt;/h3&gt;
&lt;h3 id=&#34;116-小结&#34;&gt;11.6 小结&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;前言-1&#34;&gt;前言&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 第7章介绍CMake从配置生成项目、构建项目，到项目被用户使用的完整生命周期，以帮助读者对CMake的功能使用建立宏观认知  ^6733360-7RcT8obzi
- 💭 看起来是重点
- ⏱ 2024-05-15 15:33:47&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 第11章则综合应用了本书介绍的知识  ^6733360-7RcTaczKd
- 💭 编写大型软件的样例
- ⏱ 2024-05-15 15:34:14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;14-构建动态库-1&#34;&gt;1.4 构建动态库&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 地址无关代码(Position-Independent Code，PIC)就是指这种不访问内存绝对地址的代码。如果想让GCC编译器和Clang编译器生成地址无关代码，必须指定一个编译器参数-fPIC。  ^6733360-7QRPcUtdJ
- 💭 原来是这么回事
- ⏱ 2024-05-01 19:13:44&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 地址无关代码(Position-Independent Code，PIC)就是指这种不访问内存绝对地址的代码。如果想让GCC编译器和Clang编译器生成地址无关代码，必须指定一个编译器参数-fPIC。  ^6733360-7QAos6c4b
- 💭 原来是这样的
- ⏱ 2024-04-20 08:11:49&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;15-引用第三方库-1&#34;&gt;1.5 引用第三方库&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 首先来尝试使用Boost中的头文件库。头文件库(header-only library)指只包含头文件（.h、.hpp等）的程序库。使用这种库非常方便，只需在程序中引用它的头文件，无须对库本身进行额外的编译。源程序引用头文件，相当于复制了头文件的内容，这样头文件库实际上也就成为了引用它的程序的一部分。所以使用头文件库只需编译引用它的程序，头文件库代码会自动被编译。  ^6733360-7QRR60fMH
- 💭 头文件编译
- ⏱ 2024-05-01 19:42:35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 最典型的例子可能就是C++的标准模板库(Standard Template Library，STL)了。  ^6733360-7QRRrQcne
- 💭 这个是头文件库？函数的实现也都是在头文件里面吗？
- ⏱ 2024-05-01 19:47:57&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 。BOOST_LIB_DIR变量，与Windows中一样，定义了Boost库的库文件目录。  ^6733360-7QRX81SRa
- 💭 手动敲了下，要特别注意文件里面的空格和tab键
- ⏱ 2024-05-01 21:14:41&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;16-旅行笔记-1&#34;&gt;1.6 旅行笔记&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 与构建目标自身源程序相关的属性，确定了构建目标的构建要求(build specification)；而与其使用者相关的属性，则决定了构建目标的使用要求(usage requirements)。目标的使用要求，实际上会被传递到该目标使用者的构建要求中。正是这两种需求赋予了构建目标这个概念丰富的内涵，使其称为最核心的抽象概念。  ^6733360-7QRY31p5v
- 💭 这段太绕了
- ⏱ 2024-05-01 21:28:43&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第7章-构建目标和属性-1&#34;&gt;第7章 构建目标和属性&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 毫不夸张地说，如果学习CMake的目标就是组织简单的C和C++小项目的构建流程，那么阅读掌握本章内容就足够了。  ^6733360-7QSxIxBFv
- 💭 幸亏多翻了几页
- ⏱ 2024-05-02 06:33:22&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/understanding-photography/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/understanding-photography/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] Understanding Photography&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://res.weread.qq.com/wrepub/CB_79m81S83Y0Ts6k06kf9AdC6F_parsecover&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; Understanding Photography|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： Understanding Photography&lt;/li&gt;
&lt;li&gt;作者： Sean T. McHugh&lt;/li&gt;
&lt;li&gt;简介：&lt;/li&gt;
&lt;li&gt;出版时间&lt;/li&gt;
&lt;li&gt;ISBN：&lt;/li&gt;
&lt;li&gt;分类：&lt;/li&gt;
&lt;li&gt;出版社： No Starch Press&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/08c42423643425f444a66313833313673477030366c57366b66444753324d6b955&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;cover-page&#34;&gt;Cover Page&lt;/h2&gt;
&lt;h2 id=&#34;title-page&#34;&gt;Title Page&lt;/h2&gt;
&lt;h2 id=&#34;copyright-page&#34;&gt;Copyright Page&lt;/h2&gt;
&lt;h2 id=&#34;dedication&#34;&gt;Dedication&lt;/h2&gt;
&lt;h2 id=&#34;contents&#34;&gt;CONTENTS&lt;/h2&gt;
&lt;h2 id=&#34;about-the-author&#34;&gt;ABOUT THE AUTHOR&lt;/h2&gt;
&lt;h2 id=&#34;acknowledgments&#34;&gt;ACKNOWLEDGMENTS&lt;/h2&gt;
&lt;h2 id=&#34;introduction&#34;&gt;INTRODUCTION&lt;/h2&gt;
&lt;h2 id=&#34;chapter-1-basic-concepts-in-photography&#34;&gt;CHAPTER 1: BASIC CONCEPTS IN PHOTOGRAPHY&lt;/h2&gt;
&lt;h2 id=&#34;chapter-2-digital-image-characteristics&#34;&gt;CHAPTER 2: DIGITAL IMAGE CHARACTERISTICS&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 Highlights are within the window in the upper center, midtones are on the steps being hit by light, and shadows are toward the end of the staircase and where steps are not directly illuminated. Due to the relatively high fraction of shadows in the image, the histogram is higher toward the left than the right.
⏱ 2024-01-08 07:24:01 ^CB-DJf18316sGp06lW6kfDGS2Mk-10-30574-30884&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;chapter-3-understanding-camera-lenses&#34;&gt;CHAPTER 3: UNDERSTANDING CAMERA LENSES&lt;/h2&gt;
&lt;h2 id=&#34;chapter-4-camera-types-and-tripods&#34;&gt;CHAPTER 4: CAMERA TYPES AND TRIPODS&lt;/h2&gt;
&lt;h2 id=&#34;chapter-5-lens-filters&#34;&gt;CHAPTER 5: LENS FILTERS&lt;/h2&gt;
&lt;h2 id=&#34;chapter-6-using-flash-to-enhance-subject-illumination&#34;&gt;CHAPTER 6: USING FLASH TO ENHANCE SUBJECT ILLUMINATION&lt;/h2&gt;
&lt;h2 id=&#34;chapter-7-working-with-natural-light-and-weather&#34;&gt;CHAPTER 7: WORKING WITH NATURAL LIGHT AND WEATHER&lt;/h2&gt;
&lt;h2 id=&#34;chapter-8-introduction-to-portrait-lighting&#34;&gt;CHAPTER 8: INTRODUCTION TO PORTRAIT LIGHTING&lt;/h2&gt;
&lt;h2 id=&#34;chapter-9-other-shooting-techniques&#34;&gt;CHAPTER 9: OTHER SHOOTING TECHNIQUES&lt;/h2&gt;
&lt;h2 id=&#34;appendix-cleaning-camera-sensors&#34;&gt;APPENDIX: CLEANING CAMERA SENSORS&lt;/h2&gt;
&lt;h2 id=&#34;index&#34;&gt;INDEX&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%B8%80%E6%9C%AC%E4%B9%A6%E7%9C%8B%E6%87%82%E5%9C%B0%E7%BC%98%E4%B8%96%E7%95%8C/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%B8%80%E6%9C%AC%E4%B9%A6%E7%9C%8B%E6%87%82%E5%9C%B0%E7%BC%98%E4%B8%96%E7%95%8C/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 一本书看懂地缘世界&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/16/YueWen_29600050/t7_YueWen_29600050.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 一本书看懂地缘世界|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 一本书看懂地缘世界&lt;/li&gt;
&lt;li&gt;作者： 王伟&lt;/li&gt;
&lt;li&gt;简介： 美国，从立国、崛起到称霸，走过的套路好像武侠小说中的“大侠”；欧洲，曾经是“武林盟主”，不过已经“退居二线”；俄罗斯，在地缘战略上的诉求就和其国徽上的双头鹰一样——左顾右盼；印度，要做“有声有色”的大国，实际情况却因其独特的地理环境变得复杂；中国，具备成为“王者”的所有条件，但要想真正“上位”，还必须依靠智慧和勇气，踏踏实实打拼出来！&lt;/li&gt;
&lt;li&gt;出版时间 2017-10-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787508667751&lt;/li&gt;
&lt;li&gt;分类： 政治军事-军事&lt;/li&gt;
&lt;li&gt;出版社： 中信出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/c893207071c3a932c8937d0&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;自序-世界与中国&#34;&gt;自序 世界与中国&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 中国的“一带一路”倡议，其主体恰恰是要将中国与主要的“破碎地带”串联起来，共同发展。从这个意义上说，如何处理好同“破碎地带”的关系，和如何处理好同各个大国的关系，这两个问题的权重是一样的。
⏱ 2024-05-18 12:52:02 ^29600050-45-1792-1886&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第一章-美国世界霸主之路&#34;&gt;第一章 美国——世界霸主之路&lt;/h2&gt;
&lt;h3 id=&#34;第一节-资源丰富的大国胚子&#34;&gt;第一节 资源丰富的大国胚子&lt;/h3&gt;
&lt;h3 id=&#34;第二节-领土扩张插上翅膀&#34;&gt;第二节 领土扩张，插上翅膀&lt;/h3&gt;
&lt;h3 id=&#34;第三节-世界大战成就的霸业&#34;&gt;第三节 世界大战成就的霸业&lt;/h3&gt;
&lt;h3 id=&#34;第四节-美国视角下的世界&#34;&gt;第四节 美国视角下的世界&lt;/h3&gt;
&lt;h3 id=&#34;第五节-美强苏弱的地缘态势&#34;&gt;第五节 美强苏弱的地缘态势&lt;/h3&gt;
&lt;h3 id=&#34;第六节-美国看苏联解体&#34;&gt;第六节 美国看苏联解体&lt;/h3&gt;
&lt;h3 id=&#34;第七节-美军的全球部署与台风眼的反美国家&#34;&gt;第七节 美军的全球部署与“台风眼”的反美国家&lt;/h3&gt;
&lt;h2 id=&#34;第二章-欧洲几百年前的老大&#34;&gt;第二章 欧洲——几百年前的老大&lt;/h2&gt;
&lt;h3 id=&#34;第一节-延续千年的战国时期&#34;&gt;第一节 延续千年的“战国时期”&lt;/h3&gt;
&lt;h3 id=&#34;第二节-欧洲的三大软肋&#34;&gt;第二节 欧洲的三大软肋&lt;/h3&gt;
&lt;h3 id=&#34;第三节-海权帝国的训练营南欧&#34;&gt;第三节 海权帝国的训练营——南欧&lt;/h3&gt;
&lt;h3 id=&#34;第四节-女皇的嫁妆克里米亚&#34;&gt;第四节 女皇的嫁妆——克里米亚&lt;/h3&gt;
&lt;h3 id=&#34;第五节-用地图给乌克兰算命&#34;&gt;第五节 用地图给乌克兰“算命”&lt;/h3&gt;
&lt;h2 id=&#34;第三章-俄罗斯地有多广心有多大&#34;&gt;第三章 俄罗斯——地有多广，心有多大&lt;/h2&gt;
&lt;h3 id=&#34;第一节-俯视欧亚的双头鹰&#34;&gt;第一节 俯视欧亚的“双头鹰”&lt;/h3&gt;
&lt;h3 id=&#34;第二节-从地缘看俄罗斯的软肋&#34;&gt;第二节 从地缘看俄罗斯的软肋&lt;/h3&gt;
&lt;h3 id=&#34;第三节-坐吃山不空的俄罗斯&#34;&gt;第三节 “坐吃山不空”的俄罗斯&lt;/h3&gt;
&lt;h3 id=&#34;第四节-俄罗斯的近忧与远虑车臣&#34;&gt;第四节 俄罗斯的近忧与远虑——车臣&lt;/h3&gt;
&lt;h3 id=&#34;第五节-俄罗斯的近忧与远虑远东&#34;&gt;第五节 俄罗斯的近忧与远虑——远东&lt;/h3&gt;
&lt;h2 id=&#34;第四章-印度做有声有色的大国&#34;&gt;第四章 印度——做“有声有色”的大国&lt;/h2&gt;
&lt;h3 id=&#34;第一节-以swot分析法看莫迪的基本盘&#34;&gt;第一节 以SWOT分析法看莫迪的“基本盘”&lt;/h3&gt;
&lt;h3 id=&#34;第二节-性格决定命运地缘决定性格&#34;&gt;第二节 性格决定命运，地缘决定“性格”&lt;/h3&gt;
&lt;h2 id=&#34;第五章-亚板块与破碎地带混乱与希望&#34;&gt;第五章 亚板块与破碎地带——混乱与希望&lt;/h2&gt;
&lt;h3 id=&#34;第一节-撒哈拉以南非洲绝望与希望并存之地&#34;&gt;第一节 撒哈拉以南非洲——绝望与希望并存之地&lt;/h3&gt;
&lt;h3 id=&#34;第二节-中东的四个关键词&#34;&gt;第二节 中东的四个关键词&lt;/h3&gt;
&lt;h3 id=&#34;第三节-美国的小伙伴焦虑的澳大利亚&#34;&gt;第三节 美国的小伙伴——焦虑的澳大利亚&lt;/h3&gt;
&lt;h3 id=&#34;第四节-难以安宁的巴基斯坦&#34;&gt;第四节 难以安宁的巴基斯坦&lt;/h3&gt;
&lt;h2 id=&#34;第六章-各家都有自己的账&#34;&gt;第六章 各家都有自己的账&lt;/h2&gt;
&lt;h3 id=&#34;第一节-西欧先发之利&#34;&gt;第一节 西欧——先发之利&lt;/h3&gt;
&lt;h3 id=&#34;第二节-美国两洋之利&#34;&gt;第二节 美国——两洋之利&lt;/h3&gt;
&lt;h3 id=&#34;第三节-俄罗斯陆权与资源之利&#34;&gt;第三节 俄罗斯——陆权与资源之利&lt;/h3&gt;
&lt;h3 id=&#34;第四节-各大势力的心里话&#34;&gt;第四节 各大势力的心里话&lt;/h3&gt;
&lt;h3 id=&#34;第五节-强龙难压地头蛇亚板块和破碎地带&#34;&gt;第五节 强龙难压地头蛇——亚板块和破碎地带&lt;/h3&gt;
&lt;h2 id=&#34;第七章-中国王者归来&#34;&gt;第七章 中国——王者归来&lt;/h2&gt;
&lt;h3 id=&#34;第一节-中央之国&#34;&gt;第一节 中央之国&lt;/h3&gt;
&lt;h3 id=&#34;第二节-向东向西&#34;&gt;第二节 向东？向西？&lt;/h3&gt;
&lt;h3 id=&#34;第三节-海陆之利&#34;&gt;第三节 海陆之利&lt;/h3&gt;
&lt;h3 id=&#34;第四节-一带一路王者归来&#34;&gt;第四节 “一带一路”，王者归来&lt;/h3&gt;
&lt;h2 id=&#34;资料来源&#34;&gt;资料来源&lt;/h2&gt;
&lt;h2 id=&#34;文后&#34;&gt;文后&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%B8%80%E7%AB%99%E5%BC%8F%E5%AD%A6%E4%B9%A0c%E7%BC%96%E7%A8%8B/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%B8%80%E7%AB%99%E5%BC%8F%E5%AD%A6%E4%B9%A0c%E7%BC%96%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 一站式学习C编程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/890/680890/t7_680890.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 一站式学习C编程|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 一站式学习C编程&lt;/li&gt;
&lt;li&gt;作者： 宋劲杉编著&lt;/li&gt;
&lt;li&gt;简介： 本书有两条线索，一条线索是以Linux平台为载体全面深入地介绍C语言的语法和程序的工作原理，另一条线索是介绍程序设计的基本思想和开发调试方法。&lt;/li&gt;
&lt;li&gt;出版时间 2011-03-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787121129827&lt;/li&gt;
&lt;li&gt;分类： 科学技术-工业技术&lt;/li&gt;
&lt;li&gt;出版社： 电子工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/6c732a205a63ba6c7a91107&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我认为程序员有三种境界[插图]：第一种是把编程当做谋生手段的程序员，这种人学点技术找到工作就觉得修成正果了，上班时能偷懒则偷懒，一听说加班就怨声载道，下班后绝不碰跟工作相关的东西；第二种是希望通过编程不断提高自己生活品质的程序员，这种人向来认为写代码和看书学习是自己的事，是为提高自己的竞争力而做的，只不过顺便帮老板创造了价值，所以加班什么的从来不计较，不仅积极完成工作，而且每时每刻都在想如何把工作完成得更漂亮；最高境界的是把编程当做毕生爱好的程序员，这种人通常也具备第二种人的品质，此外还有一些独特之处，无论是工作中用到的技术还是与工作无关的技术都同样有兴趣钻研，无论是有报酬的工作还是无报酬的开源软件都同样积极参与，甚至退休之后仍把编程当做消遣，换句话说，编程就是一种生活方式。我自己大概属于第二种人吧。如果你不幸属于第一种人，那么你不适合做程序员，请放弃学习本书。
⏱ 2024-05-06 10:42:47 ^680890-3-3026-3526&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;上篇-c语言入门&#34;&gt;上篇 C语言入门&lt;/h2&gt;
&lt;h4 id=&#34;12-自然语言和形式语言&#34;&gt;1.2 自然语言和形式语言&lt;/h4&gt;
&lt;h4 id=&#34;13-程序的调试&#34;&gt;1.3 程序的调试&lt;/h4&gt;
&lt;h4 id=&#34;14-第一个程序&#34;&gt;1.4 第一个程序&lt;/h4&gt;
&lt;h3 id=&#34;第2章-常量变量和表达式&#34;&gt;第2章 常量、变量和表达式&lt;/h3&gt;
&lt;h4 id=&#34;22-常量&#34;&gt;2.2 常量&lt;/h4&gt;
&lt;h4 id=&#34;23-变量&#34;&gt;2.3 变量&lt;/h4&gt;
&lt;h4 id=&#34;24-赋值&#34;&gt;2.4 赋值&lt;/h4&gt;
&lt;h4 id=&#34;25-表达式&#34;&gt;2.5 表达式&lt;/h4&gt;
&lt;h4 id=&#34;26-字符类型与字符编码&#34;&gt;2.6 字符类型与字符编码&lt;/h4&gt;
&lt;h3 id=&#34;第3章-简单函数&#34;&gt;第3章 简单函数&lt;/h3&gt;
&lt;h4 id=&#34;32-自定义函数&#34;&gt;3.2 自定义函数&lt;/h4&gt;
&lt;h4 id=&#34;33-形参和实参&#34;&gt;3.3 形参和实参&lt;/h4&gt;
&lt;h4 id=&#34;34-全局变量局部变量和作用域&#34;&gt;3.4 全局变量、局部变量和作用域&lt;/h4&gt;
&lt;h3 id=&#34;第4章-分支语句&#34;&gt;第4章 分支语句&lt;/h3&gt;
&lt;h4 id=&#34;42-ifelse语句&#34;&gt;4.2 if/else语句&lt;/h4&gt;
&lt;h4 id=&#34;43-布尔代数&#34;&gt;4.3 布尔代数&lt;/h4&gt;
&lt;h4 id=&#34;44-switch语句&#34;&gt;4.4 switch语句&lt;/h4&gt;
&lt;h3 id=&#34;第5章-深入理解函数&#34;&gt;第5章 深入理解函数&lt;/h3&gt;
&lt;h4 id=&#34;52-增量式开发&#34;&gt;5.2 增量式开发&lt;/h4&gt;
&lt;h4 id=&#34;53-递归&#34;&gt;5.3 递归&lt;/h4&gt;
&lt;h3 id=&#34;第6章-循环语句&#34;&gt;第6章 循环语句&lt;/h3&gt;
&lt;h4 id=&#34;62-dowhile语句&#34;&gt;6.2 do/while语句&lt;/h4&gt;
&lt;h4 id=&#34;63-for语句&#34;&gt;6.3 for语句&lt;/h4&gt;
&lt;h4 id=&#34;64-break和continue语句&#34;&gt;6.4 break和continue语句&lt;/h4&gt;
&lt;h4 id=&#34;65-嵌套循环&#34;&gt;6.5 嵌套循环&lt;/h4&gt;
&lt;h4 id=&#34;66-goto语句和标号&#34;&gt;6.6 goto语句和标号&lt;/h4&gt;
&lt;h3 id=&#34;第7章-结构体&#34;&gt;第7章 结构体&lt;/h3&gt;
&lt;h4 id=&#34;72-数据抽象&#34;&gt;7.2 数据抽象&lt;/h4&gt;
&lt;h4 id=&#34;73-数据类型标志&#34;&gt;7.3 数据类型标志&lt;/h4&gt;
&lt;h4 id=&#34;74-嵌套结构体&#34;&gt;7.4 嵌套结构体&lt;/h4&gt;
&lt;h3 id=&#34;第8章-数组&#34;&gt;第8章 数组&lt;/h3&gt;
&lt;h4 id=&#34;82-数组应用实例统计随机数&#34;&gt;8.2 数组应用实例：统计随机数&lt;/h4&gt;
&lt;h4 id=&#34;83-数组应用实例直方图&#34;&gt;8.3 数组应用实例：直方图&lt;/h4&gt;
&lt;h4 id=&#34;84-字符串&#34;&gt;8.4 字符串&lt;/h4&gt;
&lt;h4 id=&#34;85-多维数组&#34;&gt;8.5 多维数组&lt;/h4&gt;
&lt;h3 id=&#34;第9章-编码风格&#34;&gt;第9章 编码风格&lt;/h3&gt;
&lt;h4 id=&#34;91-缩进和空白&#34;&gt;9.1 缩进和空白&lt;/h4&gt;
&lt;h4 id=&#34;92-注释&#34;&gt;9.2 注释&lt;/h4&gt;
&lt;h4 id=&#34;93-标识符命名&#34;&gt;9.3 标识符命名&lt;/h4&gt;
&lt;h4 id=&#34;94-函数&#34;&gt;9.4 函数&lt;/h4&gt;
&lt;h4 id=&#34;95-indent工具&#34;&gt;9.5 indent工具&lt;/h4&gt;
&lt;h3 id=&#34;第10章-gdb&#34;&gt;第10章 gdb&lt;/h3&gt;
&lt;h4 id=&#34;101-单步执行和跟踪函数调用&#34;&gt;10.1 单步执行和跟踪函数调用&lt;/h4&gt;
&lt;h4 id=&#34;102-断点&#34;&gt;10.2 断点&lt;/h4&gt;
&lt;h4 id=&#34;103-观察点&#34;&gt;10.3 观察点&lt;/h4&gt;
&lt;h4 id=&#34;104-段错误&#34;&gt;10.4 段错误&lt;/h4&gt;
&lt;h3 id=&#34;第11章-排序与查找&#34;&gt;第11章 排序与查找&lt;/h3&gt;
&lt;h4 id=&#34;112-插入排序&#34;&gt;11.2 插入排序&lt;/h4&gt;
&lt;h4 id=&#34;113-算法的时间复杂度分析&#34;&gt;11.3 算法的时间复杂度分析&lt;/h4&gt;
&lt;h4 id=&#34;114-归并排序&#34;&gt;11.4 归并排序&lt;/h4&gt;
&lt;h4 id=&#34;115-线性查找&#34;&gt;11.5 线性查找&lt;/h4&gt;
&lt;h4 id=&#34;116-折半查找&#34;&gt;11.6 折半查找&lt;/h4&gt;
&lt;h3 id=&#34;第12章-栈与队列&#34;&gt;第12章 栈与队列&lt;/h3&gt;
&lt;h4 id=&#34;122-堆栈&#34;&gt;12.2 堆栈&lt;/h4&gt;
&lt;h4 id=&#34;123-深度优先搜索&#34;&gt;12.3 深度优先搜索&lt;/h4&gt;
&lt;h4 id=&#34;124-队列与广度优先搜索&#34;&gt;12.4 队列与广度优先搜索&lt;/h4&gt;
&lt;h4 id=&#34;125-环形队列&#34;&gt;12.5 环形队列&lt;/h4&gt;
&lt;h3 id=&#34;本阶段总结&#34;&gt;本阶段总结&lt;/h3&gt;
&lt;h2 id=&#34;下篇-c语言本质&#34;&gt;下篇 C语言本质&lt;/h2&gt;
&lt;h4 id=&#34;132-不同进制之间的换算&#34;&gt;13.2 不同进制之间的换算&lt;/h4&gt;
&lt;h4 id=&#34;133-整数的加减运算&#34;&gt;13.3 整数的加减运算&lt;/h4&gt;
&lt;h4 id=&#34;134-浮点数&#34;&gt;13.4 浮点数&lt;/h4&gt;
&lt;h3 id=&#34;第14章-数据类型详解&#34;&gt;第14章 数据类型详解&lt;/h3&gt;
&lt;h4 id=&#34;142-浮点型&#34;&gt;14.2 浮点型&lt;/h4&gt;
&lt;h4 id=&#34;143-类型转换&#34;&gt;14.3 类型转换&lt;/h4&gt;
&lt;h3 id=&#34;第15章-运算符详解&#34;&gt;第15章 运算符详解&lt;/h3&gt;
&lt;h4 id=&#34;151-位运算&#34;&gt;15.1 位运算&lt;/h4&gt;
&lt;h4 id=&#34;152-其他运算符&#34;&gt;15.2 其他运算符&lt;/h4&gt;
&lt;h4 id=&#34;153-side-effect与sequence-point&#34;&gt;15.3 Side Effect与Sequence Point&lt;/h4&gt;
&lt;h4 id=&#34;154-运算符总结&#34;&gt;15.4 运算符总结&lt;/h4&gt;
&lt;h3 id=&#34;第16章-计算机体系结构基础&#34;&gt;第16章 计算机体系结构基础&lt;/h3&gt;
&lt;h4 id=&#34;161-内存与地址&#34;&gt;16.1 内存与地址&lt;/h4&gt;
&lt;h4 id=&#34;162-cpu&#34;&gt;16.2 CPU&lt;/h4&gt;
&lt;h4 id=&#34;163-设备&#34;&gt;16.3 设备&lt;/h4&gt;
&lt;h4 id=&#34;164-mmu&#34;&gt;16.4 MMU&lt;/h4&gt;
&lt;h4 id=&#34;165-memory-hierarchy&#34;&gt;16.5 Memory Hierarchy&lt;/h4&gt;
&lt;h3 id=&#34;第17章-x86汇编程序基础&#34;&gt;第17章 x86汇编程序基础&lt;/h3&gt;
&lt;h4 id=&#34;171-最简单的汇编程序&#34;&gt;17.1 最简单的汇编程序&lt;/h4&gt;
&lt;h4 id=&#34;172-x86的寄存器&#34;&gt;17.2 x86的寄存器&lt;/h4&gt;
&lt;h4 id=&#34;173-第二个汇编程序&#34;&gt;17.3 第二个汇编程序&lt;/h4&gt;
&lt;h4 id=&#34;174-寻址方式&#34;&gt;17.4 寻址方式&lt;/h4&gt;
&lt;h4 id=&#34;175-elf文件&#34;&gt;17.5 ELF文件&lt;/h4&gt;
&lt;h3 id=&#34;第18章-汇编与c之间的关系&#34;&gt;第18章 汇编与C之间的关系&lt;/h3&gt;
&lt;h4 id=&#34;181-函数调用&#34;&gt;18.1 函数调用&lt;/h4&gt;
&lt;h4 id=&#34;182-main函数启动例程和退出状态&#34;&gt;18.2 main函数、启动例程和退出状态&lt;/h4&gt;
&lt;h4 id=&#34;183-变量的存储布局&#34;&gt;18.3 变量的存储布局&lt;/h4&gt;
&lt;h4 id=&#34;184-结构体和联合体&#34;&gt;18.4 结构体和联合体&lt;/h4&gt;
&lt;h4 id=&#34;185-c内联汇编&#34;&gt;18.5 C内联汇编&lt;/h4&gt;
&lt;h4 id=&#34;186-volatile限定符&#34;&gt;18.6 volatile限定符&lt;/h4&gt;
&lt;h3 id=&#34;第19章-链接详解&#34;&gt;第19章 链接详解&lt;/h3&gt;
&lt;h4 id=&#34;192-定义和声明&#34;&gt;19.2 定义和声明&lt;/h4&gt;
&lt;h4 id=&#34;193-静态库&#34;&gt;19.3 静态库&lt;/h4&gt;
&lt;h4 id=&#34;194-共享库&#34;&gt;19.4 共享库&lt;/h4&gt;
&lt;h4 id=&#34;195-虚拟内存管理&#34;&gt;19.5 虚拟内存管理&lt;/h4&gt;
&lt;h3 id=&#34;第20章-预处理&#34;&gt;第20章 预处理&lt;/h3&gt;
&lt;h4 id=&#34;202-宏定义&#34;&gt;20.2 宏定义&lt;/h4&gt;
&lt;h4 id=&#34;203-条件预处理指示&#34;&gt;20.3 条件预处理指示&lt;/h4&gt;
&lt;h4 id=&#34;204-其他预处理特性&#34;&gt;20.4 其他预处理特性&lt;/h4&gt;
&lt;h3 id=&#34;第21章-makefile基础&#34;&gt;第21章 Makefile基础&lt;/h3&gt;
&lt;h4 id=&#34;212-隐含规则和模式规则&#34;&gt;21.2 隐含规则和模式规则&lt;/h4&gt;
&lt;h4 id=&#34;213-变量&#34;&gt;21.3 变量&lt;/h4&gt;
&lt;h4 id=&#34;214-自动处理头文件的依赖关系&#34;&gt;21.4 自动处理头文件的依赖关系&lt;/h4&gt;
&lt;h4 id=&#34;215-常用的make命令行选项&#34;&gt;21.5 常用的make命令行选项&lt;/h4&gt;
&lt;h3 id=&#34;第22章-指针&#34;&gt;第22章 指针&lt;/h3&gt;
&lt;h4 id=&#34;222-指针类型的参数和返回值&#34;&gt;22.2 指针类型的参数和返回值&lt;/h4&gt;
&lt;h4 id=&#34;223-指针与数组&#34;&gt;22.3 指针与数组&lt;/h4&gt;
&lt;h4 id=&#34;224-指针与const限定符&#34;&gt;22.4 指针与const限定符&lt;/h4&gt;
&lt;h4 id=&#34;225-指针与结构体&#34;&gt;22.5 指针与结构体&lt;/h4&gt;
&lt;h4 id=&#34;226-指向指针的指针与指针数组&#34;&gt;22.6 指向指针的指针与指针数组&lt;/h4&gt;
&lt;h4 id=&#34;227-指向数组的指针与多维数组&#34;&gt;22.7 指向数组的指针与多维数组&lt;/h4&gt;
&lt;h4 id=&#34;228-函数类型和函数指针类型&#34;&gt;22.8 函数类型和函数指针类型&lt;/h4&gt;
&lt;h4 id=&#34;229-不完全类型和复杂声明&#34;&gt;22.9 不完全类型和复杂声明&lt;/h4&gt;
&lt;h3 id=&#34;第23章-函数接口&#34;&gt;第23章 函数接口&lt;/h3&gt;
&lt;h4 id=&#34;231-本章的预备知识&#34;&gt;23.1 本章的预备知识&lt;/h4&gt;
&lt;h4 id=&#34;232-传入参数与传出参数&#34;&gt;23.2 传入参数与传出参数&lt;/h4&gt;
&lt;h4 id=&#34;233-两层指针的参数&#34;&gt;23.3 两层指针的参数&lt;/h4&gt;
&lt;h4 id=&#34;234-返回值是指针的情况&#34;&gt;23.4 返回值是指针的情况&lt;/h4&gt;
&lt;h4 id=&#34;235-回调函数&#34;&gt;23.5 回调函数&lt;/h4&gt;
&lt;h4 id=&#34;236-可变参数&#34;&gt;23.6 可变参数&lt;/h4&gt;
&lt;h3 id=&#34;第24章-c标准库&#34;&gt;第24章 C标准库&lt;/h3&gt;
&lt;h4 id=&#34;241-字符串操作函数&#34;&gt;24.1 字符串操作函数&lt;/h4&gt;
&lt;h4 id=&#34;242-标准lo库函数&#34;&gt;24.2 标准l/O库函数&lt;/h4&gt;
&lt;h4 id=&#34;243-数值字符串转换函数&#34;&gt;24.3 数值字符串转换函数&lt;/h4&gt;
&lt;h4 id=&#34;244-分配内存的函数&#34;&gt;24.4 分配内存的函数&lt;/h4&gt;
&lt;h3 id=&#34;第25章-链表二叉树和哈希表&#34;&gt;第25章 链表、二叉树和哈希表&lt;/h3&gt;
&lt;h4 id=&#34;251-链表&#34;&gt;25.1 链表&lt;/h4&gt;
&lt;h4 id=&#34;252-二叉树&#34;&gt;25.2 二叉树&lt;/h4&gt;
&lt;h4 id=&#34;253-哈希表&#34;&gt;25.3 哈希表&lt;/h4&gt;
&lt;h3 id=&#34;本阶段总结-1&#34;&gt;本阶段总结&lt;/h3&gt;
&lt;h2 id=&#34;附录a&#34;&gt;附录A&lt;/h2&gt;
&lt;h2 id=&#34;字符编码&#34;&gt;字符编码&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%B8%8D%E6%8B%98%E4%B8%80%E6%A0%BC%E7%BD%91%E9%A3%9E%E7%9A%84%E8%87%AA%E7%94%B1%E4%B8%8E%E8%B4%A3%E4%BB%BB%E5%B7%A5%E4%BD%9C%E6%B3%95/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%B8%8D%E6%8B%98%E4%B8%80%E6%A0%BC%E7%BD%91%E9%A3%9E%E7%9A%84%E8%87%AA%E7%94%B1%E4%B8%8E%E8%B4%A3%E4%BB%BB%E5%B7%A5%E4%BD%9C%E6%B3%95/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 不拘一格：网飞的自由与责任工作法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/76/YueWen_35364704/t7_YueWen_35364704.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 不拘一格：网飞的自由与责任工作法|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 不拘一格：网飞的自由与责任工作法&lt;/li&gt;
&lt;li&gt;作者： 里德·哈斯廷斯 艾琳·迈耶&lt;/li&gt;
&lt;li&gt;简介： 网飞，一家市值超2000亿美元，全球付费订阅用户超1.9亿，业务版图遍布近200个国家和地区的商业巨头，作为创始人兼CEO，里德·哈斯廷斯引领网飞实现了成功转型和强势增长，并坦言这得益于一套违反直觉的管理原则：在网飞，你不需要取悦你的老板，只要给出坦诚的反馈；你不需要层层审批，就可以决定出差标准；你不需要用加班证明自己，只要充分展示自己的才能就能得到丰厚报酬。里德·哈斯廷斯认为，如果你给员工更多的自由，而不是制定规则来阻止他们发挥自己的判断，他们会做出更好的决定，也更有责任感。本书是里德·哈斯廷斯的作品，联合欧洲工商管理学院教授艾琳·迈耶，开创性地利用内外部交叉视角，揭示了人才重于流程、创新高于效率、自由多于管控的文化内核，让读者能从网飞的实践经验中获得高价值的思维启发。&lt;/li&gt;
&lt;li&gt;出版时间 2020-11-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787521719482&lt;/li&gt;
&lt;li&gt;分类： 经济理财-商业&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/04d32ae0721b9f6004dff5c&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;推荐序一-企业如何最大化地驱动创新&#34;&gt;推荐序一 企业如何最大化地驱动创新&lt;/h2&gt;
&lt;h2 id=&#34;推荐序二-打造面向未来的新型组织文化&#34;&gt;推荐序二 打造面向未来的新型组织文化&lt;/h2&gt;
&lt;h2 id=&#34;自序一-没有规则的规则&#34;&gt;自序一 没有规则的规则&lt;/h2&gt;
&lt;h2 id=&#34;自序二-把员工当成真正的成年人&#34;&gt;自序二 把员工当成真正的成年人&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-迈向自由与责任的企业文化&#34;&gt;第一部分 迈向自由与责任的企业文化&lt;/h2&gt;
&lt;h3 id=&#34;1-优秀同事造就优质工作环境&#34;&gt;1 优秀同事造就优质工作环境&lt;/h3&gt;
&lt;h3 id=&#34;2-以积极的态度说出你真实的想法&#34;&gt;2 以积极的态度说出你真实的想法&lt;/h3&gt;
&lt;h3 id=&#34;3上-取消限期休假制度&#34;&gt;3上 取消限期休假制度&lt;/h3&gt;
&lt;h3 id=&#34;3下-取消差旅和经费审批&#34;&gt;3下 取消差旅和经费审批&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-打造自由与责任的企业文化&#34;&gt;第二部分 打造自由与责任的企业文化&lt;/h2&gt;
&lt;h3 id=&#34;4-支付行业最高薪资&#34;&gt;4 支付行业最高薪资&lt;/h3&gt;
&lt;h3 id=&#34;5-开卷管理&#34;&gt;5 开卷管理&lt;/h3&gt;
&lt;h3 id=&#34;6-无须决策审批&#34;&gt;6 无须决策审批&lt;/h3&gt;
&lt;h2 id=&#34;第三部分-巩固自由与责任的企业文化&#34;&gt;第三部分 巩固自由与责任的企业文化&lt;/h2&gt;
&lt;h3 id=&#34;7-员工留任测试&#34;&gt;7 员工留任测试&lt;/h3&gt;
&lt;h3 id=&#34;8-反馈循环&#34;&gt;8 反馈循环&lt;/h3&gt;
&lt;h3 id=&#34;9-情景管理而非控制管理&#34;&gt;9 情景管理而非控制管理&lt;/h3&gt;
&lt;h2 id=&#34;第四部分-走向全球&#34;&gt;第四部分 走向全球&lt;/h2&gt;
&lt;h3 id=&#34;10-走向全球的网飞文化&#34;&gt;10 走向全球的网飞文化&lt;/h3&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;自序一-没有规则的规则-1&#34;&gt;自序一 没有规则的规则&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当时甚至连我自己都没有意识到，我们有一点是百视达所不具备的，那就是人才重于流程、创新高于效率、自由多于管控的企业文化。我们的文化强调以人才密度实现最高绩效，对员工实行情景管理而不是控制。这使得我们能够不断地成长，并随着整个世界、随着客户需求的变化而变化。如果一定要说网飞有什么不同之处，那就是它不拘泥于规则。  ^6733360-7oQrSOOO9
- 💭 企业文化
- ⏱ 2021-03-16 15:10:47&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1-优秀同事造就优质工作环境-1&#34;&gt;1 优秀同事造就优质工作环境&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 从2001年的裁员事件中，里德发现：工作表现无论好与坏，都是具有感染力的。如果你表现平平，可能会影响到很多本可以表现出色的人，导致他们也无心进取。如果你的团队成员个个表现出色，那他们也会相互激励，从而推动彼此取得更大的成就。  ^6733360-7oRJ6Wn0S
- 💭 新颖
- ⏱ 2021-03-17 11:20:31&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 有一个叫卡尔文的男孩开始在操场上挑动大家斗殴。问题的关键并不是我们受到了霸凌或者欺负，而是这个本来并不那么引人注目的孩子，却给我们带来了一种新的行为模式，让我们都受到了他的影响，并且也开始采用相同的方式去对付其他人。我并不想卷入其中，但不去又会深感耻辱，这种感觉比参与斗殴更糟糕。一场斗殴的输赢，对我们似乎真的很重要。如果没有卡尔文，我们在一起玩耍和相处的方式会好得多。所以，当父亲告诉我要回到马萨诸塞时，我都有一种迫不及待的感觉。  ^6733360-7oRJfCKj1
- 💭 小孩受周围影响很大
- ⏱ 2021-03-17 11:22:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2-以积极的态度说出你真实的想法-1&#34;&gt;2 以积极的态度说出你真实的想法&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你肯定在想，既然坦诚的反馈有这么多的益处，那为什么在大多数公司里面，我们给出和收到的反馈都很少呢？如果你对人类行为有大致的认识，你就可以知道其中的原因。  ^6733360-7oS4OUTxE
- 💭 不仅是公司，熟人夫妻之间的反馈坦诚与否，也影响到他们相处的感觉
- ⏱ 2021-03-17 16:51:59&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 反馈环是提高绩效最有效的办法之一。如果在我们合作共事的过程中，能不断地提出并接收到反馈，便能学得更快，完成得更多。反馈有助于我们避免误解，营造共担责任的氛围，同时减少对权力和规则的需求。  ^6733360-7oS4U52UV
- 💭 反馈是提高技能的关键环节
- ⏱ 2021-03-17 16:53:15&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%BF%AB%E4%B9%90%E7%9A%84%E4%BA%BA/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%BF%AB%E4%B9%90%E7%9A%84%E4%BA%BA/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 世界上最快乐的人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/188/38458188/t7_38458188.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 世界上最快乐的人|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 世界上最快乐的人&lt;/li&gt;
&lt;li&gt;作者： 咏给·明就仁波切&lt;/li&gt;
&lt;li&gt;简介： 2002年明就仁波切参加美国威斯康星大学理查德·戴维森主持的实验研究，被测出大脑中的快乐指数在禅定状态中跃升了百分之七百，一度让科学家以为仪器坏了，被《时代周刊》杂志誉为“世界上最快乐的人”。享誉世界心灵导师、禅修大师明就仁波切，在本书中，阐述了他是如何通过佛法禅修克服童年时代的恐慌症，获得内在真正的快乐的。他首先描述了自己亲身经历的禅修困境与状态，然后通过个人体验以及现代的科学研究，揭开快乐的秘密，最后给出具体的方法，以便人们在日常生活中利用自己的身体感官知觉去做各种禅修练习，达到非比寻常的快乐。&lt;/li&gt;
&lt;li&gt;出版时间 2013-10-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787544349635&lt;/li&gt;
&lt;li&gt;分类： 哲学宗教-宗教&lt;/li&gt;
&lt;li&gt;出版社： 海南出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/23a32e80724ad34c23a600b&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;推荐序-如何才能得到真正的快乐&#34;&gt;推荐序 如何才能得到真正的快乐&lt;/h2&gt;
&lt;h2 id=&#34;第一部-我们为何不快乐&#34;&gt;第一部 我们为何不快乐&lt;/h2&gt;
&lt;h3 id=&#34;第一章-旅程的起点&#34;&gt;第一章 旅程的起点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在梵文中，“佛”是对“觉醒者”的称呼。佛陀体悟的是自己
⏱ 2024-04-13 20:01:05 ^38458188-4-4747-4803&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第二章-内在的交响乐&#34;&gt;第二章 内在的交响乐&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 事实上，科学家们对“心”的活动的研究愈精细，就愈接近佛法对“心”的理解——“心”是一种不断的活动，而不是一个明确的实体。
⏱ 2024-04-13 21:09:51 ^38458188-5-1738-1798&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 穿着僧袍、顶着响亮的头衔在全球巡回讲学的好处之一就是：通常不可能理会普通人的一些人，都把我当成重要人物，乐意和我交谈。与世界各地的科学家对话时，我很惊异地发现，科学界几乎有一个共识：正因为大脑是如此被建构的，所以大脑的确可以对日常生活的态度产生实质的改变
⏱ 2024-04-13 21:13:51 ^38458188-5-3773-3900&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在我听过的对大脑的比喻当中，最有趣的是加州大学圣地亚哥分校神经科学系系主任罗伯特·李文斯顿医生（Robert B, Livingston, M.D.）所提出的。他在1987年“心与生命学会”首次研讨会中，把大脑比喻为“一个和谐且纪律良好的交响乐团”。他解释道，大脑就像交响乐团，由许多组的演奏者构成，通过共同合作而产生特定的结果，例如动作、想法、情绪、记忆和生理感受等。当你看到别人打哈欠、眨眼、打喷嚏，甚至只是举起手臂，尽管这些动作看起来似乎相当简单，但这些简单动作所涉及的参与者数量，以及参与者之间的各种互动，却形成异常复杂的画面
⏱ 2024-04-13 21:14:46 ^38458188-5-4155-4422&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 仅仅知道人脑由这三层不同的构造所组成的事实，就已经够令人惊讶了。更神奇的是，任何一个念头的产生都必须经过脑干、脑边缘区域与皮质层这三层构造之间一系列复杂的互动。此外，每一个念头、感受或经验似乎都是一组不同的互动关系，所涉及的大脑区域也都是独特的，不是其他念头所能启动的区域。
⏱ 2024-04-13 21:50:20 ^38458188-5-9582-9719&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第三章-超越心超越脑&#34;&gt;第三章 超越心，超越脑&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这些受限、焦虑、恐惧等感受，只不过是神经元在饶舌而已；在本质上，这些感受都只是习性，而习性是能够断除的。
⏱ 2024-04-13 22:40:33 ^38458188-6-1267-1319&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 现在我要告诉你一个大秘密——任何时刻，将注意力安住在往来于心中的一切，这就是禅修；以这样的方式安住，就是体验本然心。
⏱ 2024-04-14 10:14:02 ^38458188-6-8798-8856&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你也唤醒了新的神经传导路径。当这些路径的连接愈来愈强、愈来愈深时，你就会愈来愈有能力接受每个瞬间从心中蜂拥而过的种种念头。无论有什么纷扰的念头生起，都只会变成激起本然寂静觉性的媒介，而这本然的寂静则包容并渗透、充满这些念头，就好像虚空包裹并渗透、充满现象世界的每个粒子一样。
⏱ 2024-04-14 10:15:59 ^38458188-6-9768-9905&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第四章-空性&#34;&gt;第四章 空性&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 无论是梦境或清醒时刻，你体验的基础都是相同的，即念头、感受和感官知觉等，都是随着因缘条件的变化而不断变化的。如果你能将这样的对照谨记在心，那么，清醒时刻所经历的一切就会失去对你的影响力。念头就是念头，情绪就是情绪，感官知觉就是感官知觉。这一切在清醒的日常生活中轻易且快速地来来去去，正如同在梦境中一般。
⏱ 2024-04-14 10:57:28 ^38458188-7-6295-6446&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 。然而量子理论对宇宙现象的诠释，仍停留在一种相当抽象的数学叙述阶段。不过我们也要记住，数学是一种符号语言，是一种以数字和符号代替文字所写成的诗歌，表达潜藏于世俗经验背后的实相。
⏱ 2024-04-14 11:32:58 ^38458188-7-11854-11942&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第五章-感知的相对性&#34;&gt;第五章 感知的相对性&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 早期的英文译者可能都忽略了空性较微妙的一层意义：空性是由这无限可能性所生起的一切，无论是念头、字句、星球或桌子，都不是真实存在的“事物（thing）”，而是许多因缘条件聚合的结果。如果其中任何一项因缘条件改变或去除了，就会出现另一个完全不同的结果
⏱ 2024-04-14 11:35:49 ^38458188-8-562-685&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 大脑在感知过程中所扮演的活跃角色，是决定我们内心一般状态的关键。对于那些勇于尝试心智训练，想要逐步改变多年积习的人来说，这个活跃的角色开启一种可能性，即通过不断的修心训练可让大脑发展出新的神经元连接。这不仅能转化既有的感知，更可消除焦虑、无助感和痛苦等心理状态，进而迈向较持久的喜乐与平静状态。
⏱ 2024-04-14 11:46:23 ^38458188-8-3581-3728&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  佛法的修持提供了一种替代方法，让我们放弃原本基于恐惧的生存观点，而把生命当作是一连串奇特和美妙事件的展示，并以这种态度去体验生命 ^38458188-8-4431-4495&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 有意思 - ⏱ 2024-04-14 11:47:39&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 消融主体和客体的分别，并不表示所领会到的一切境相就会变成模糊的一大团。你的感知经验仍然会有主体和客体的分别，只是与此同时，你也会了解到这种分别实质上只是概念性的。换句话说，你所感知的事物和感知事物的心并没有什么不同。
⏱ 2024-04-14 11:51:05 ^38458188-8-5772-5880&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 从佛教的观点来看，时间的本质是空性的，就如同空间与在空间中移动物体的本质一样。试图以愈来愈小的单位审视时间的努力，到了某种程度之后，必然会瓦解。你可以利用禅修来体验对时间的感知，试着将时间分解为愈来愈小的单位，直到再也无法命名或下定义的地步。达到这种地步时，你就进入了一种超越言语、超越观念、超越概念的体验。
⏱ 2024-04-14 12:00:53 ^38458188-8-10897-11051&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 虽然西方人特别重视自由的能力，但观察事件的行为本身会以随机、不可预测的方式，影响到观察结果的这种概念，所负的责任似乎太过沉重了。相形之下，把自己当作受害者，而将责任或过错归咎于自身之外的人或力量，可就容易多了。然而，如果我们正视现代科学的新发现，我们就应该为自身每一瞬间的经验担负起责任。
⏱ 2024-04-14 12:04:59 ^38458188-8-12420-12564&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我们也会以崭新的观点来看待身边的人，不再把他们当作是威胁我们个人安全或快乐的人，而是体会到，他们只不过是不认识自身本质无限可能性的人罢了。由于我们自身的本质并不会被“是这样”或“是那样”的任意武断区别所限制，它不会只具备某些能力而欠缺其他能力，所以我们绝对有能力应付任何境遇所带来的任何挑战，并在其中发掘自我。
⏱ 2024-04-14 12:05:49 ^38458188-8-12714-12869&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第六章-天赋明性&#34;&gt;第六章 天赋明性&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这个禅修一开始也是先挺直身体坐着，自然地呼吸，让心逐渐地放松。“当心安住时，”在尼泊尔小小的讲堂里，父亲这样指示我们，“让自己觉察所有掠过自心的念头、情绪和感官知觉。当你看着它们经过时，就问问自己：‘心和掠过心的念头有任何差异吗？思考者和思考者所感知的念头有任何差异吗？’持续以这些问题来审视你的念头，三分钟之后停下来。”我们就这样坐着，有些人显得烦躁紧张，有些人则忐忑不安，但我们都专心观察自己的心，并且问自己念头和思考者之间是否存在任何差异。
⏱ 2024-04-14 12:37:05 ^38458188-9-1461-1684&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不过，认为事物存在于“外界”或“内在”的这种习性，是很难完全断舍的。这意味着要放下你所珍爱的幻相，认出从自心投射出的一切，即你认为是“他”（外界）的一切，事实上都只是自心自然的显现罢了。而这也意味着要放下“关于实相”的想法，如实地体验实相的相续之流。不过，你也不需要完全摆脱自己的感知，不需要把自己孤立在山洞中或到山里闭关：你无须刻意地投入，只要以一种在梦中体验对境的方式来看待一切情境，就能尽情地体验这一切经历，如此，发生在眼前的种种经验，就会开始让你感到惊奇连连。
⏱ 2024-04-14 12:44:42 ^38458188-9-6475&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第七章-悲心&#34;&gt;第七章 悲心&lt;/h3&gt;
&lt;h3 id=&#34;第八章-我们为何不快乐&#34;&gt;第八章 我们为何不快乐？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 生活在这个世界，却不愿意接受它的相对性差异，就跟企图逃避生为左撇子或右撇子一样可笑与困难。这样逃避又有什么意义呢？对涅槃更正确的诠释是，采用一种更开阔的观点来看相对世界中的种种体验，即接纳所有体验，不论快乐或痛苦，全都是觉性的展现。
⏱ 2024-04-14 13:15:42 ^38458188-11-6754-6870&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 佛陀将贪着比喻为饮用海洋中的咸水，喝得愈多，就愈口渴。同样的道理，当我们的心被贪着所制约时，无论拥有多少，我们永远都无法真正感到满足。我们失去了区别什么是“快乐的直接体验”，什么又是“暂时让我们快乐的对境”的能力。所以，我们不仅变得愈来愈依赖外境，也强化了“依赖外境给予我们快乐”的这种神经元模式的制约。
⏱ 2024-04-14 13:20:39 ^38458188-11-7918-8070&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 先不管动机好坏，你会发现自己不断重复相同的模式，却期待结果有所不同。这些年来，与我共事的大部分人都告诉我，他们总是期盼着一个星期赶快过去，好享受轻松的周末时光。但是当周末结束，回到办公室时，又开始寄望一星期赶快过去，梦想着下个周末的到来。
⏱ 2024-04-14 14:04:09 ^38458188-11-12010-12129&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第二部-安住自心的方法&#34;&gt;第二部 安住自心的方法&lt;/h2&gt;
&lt;h3 id=&#34;第九章-找到平衡点&#34;&gt;第九章 找到平衡点&lt;/h3&gt;
&lt;h3 id=&#34;第十章-单纯地安住&#34;&gt;第十章 单纯地安住&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  这就是无所缘的止禅修所说的安住自心的方法，就好像刚结束了一整天辛劳的工作一样，这时只要放下、放松就好。你不需要阻止任何念头、情绪或感官知觉的生起，也不需要跟随它们，就这样安住在开阔的当下，任由它们的发生。如果念头或情绪生起，就让自己清楚地察觉它们的存在。无所缘的止禅修并不是让你的心漫无目的地游荡于幻想、记忆或白日梦中。禅修时，你可能没有特别执着在什么对境，但是你还是有觉知，还是清楚当下发生的一切。这就是自心某种程度的呈现，可以概括地说是一个觉性的中心。 ^38458188-14-1961-2189&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 无所缘禅修的状态 - ⏱ 2024-04-21 11:52:09&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 开始禅修时要慢慢来。我父亲曾经很谨慎地告诉包括我在内的所有新学生，初学禅修时最有效的方法，就是一天当中让心安住的次数要多，但每次安住的时间要短。他说，不然你可能会觉得禅修愈来愈无聊，或对自己的进展感到很失望，到最后干脆就放弃了。这种短时间、多次的方法，就像古书中所说的“涓滴挹注，终能满怀”。
⏱ 2024-04-14 16:42:51 ^38458188-14-3640-3786&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第十一章-安住在对境上&#34;&gt;第十一章 安住在对境上&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 身为一个好奇的孩子，我当然一定得知道这个转化为什么会发生。只要看着这个过程一会儿，我就明白了：当我让自己纯然地观照某个知觉时，我全心投入当下所发生的一切情境之中，这让我看到自己的心有一部分在抗拒痛苦的感觉，另一部分则在催促自己要客观地看着它。看着同时间发生的两种矛盾、冲突时，我可以看到自己的心在处理“逃避”与“接受”的中间过程。结果，觉察心的活动竟然变得比“逃避”或“接受”还要有趣得多。看着自心在运作真是棒极了！我想，这就是我所能给予“明性”最实际的定义了：明性就是能够观照自心同时在多种层面上运作的一种能力。
⏱ 2024-04-16 11:37:00 ^38458188-15-4083-4340&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 就这样交替练习“专注于对境”，以及“让心安住于赤裸的觉性”，你就会开始体会神经科学家们所说的基本真理：我们所感知的一切，其实只是产生于心中的一种重建罢了。换句话说，所见之物和能见之心，两者是没有分别的
⏱ 2024-04-16 18:09:56 ^38458188-15-7524-7624&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 西塔琴演奏家松了一大口气，回到自己的茅屋开始弹琴。他听着琴声，不求自己的演奏是否臻至完美，也不期待从演奏或修持中得到什么成果。由于他学会了单纯地修持，而不期待成果，因此，几年之后他自己也成为一位大成就者。
⏱ 2024-04-16 20:51:51 ^38458188-15-10064-10166&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第十二章-善用念头和情绪&#34;&gt;第十二章 善用念头和情绪&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 将纯然的注意力集中在当下的体验上，就是禅修。即使神经元以“我不知道怎么禅修”的念头出现，只要你能看着它，那么它也可以成为禅修的助缘。
⏱ 2024-04-17 08:49:31 ^38458188-16-7936-8002&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第十三章-慈悲&#34;&gt;第十三章 慈悲&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当然，这个故事是要告诉我们，不应期待立即的结果，而是要循序渐进地学习禅修。由于我们的“自”与“他”二元观是长久累积的习性，因此不能奢求马上就能将之克服。假使我们太急于一头栽入悲心之道，就会跟刚刚那位轻率放弃所拥有一切的仁兄一样。这还算好，最糟的是，可能还会因为后悔自己的善行，而给自己制造一堆经年累月才能完全克服的心理障碍。
⏱ 2024-04-20 06:14:38 ^38458188-17-4251-4413&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第十四章-修持的方法时间与地点&#34;&gt;第十四章 修持的方法、时间与地点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 重点是，选择一个你最喜欢的方法，然后持续修持一段时间。假使你是属于偏“视觉型”的人，那么一开始练习安定自心时，就可以先用色相禅修法练习一段时间；假使你对身体的感受较为敏感，那就试试身体扫描法或专注在呼吸上；假使你是个“言辞型”的人，就试试念诵咒语。技巧本身并不重要，重要的是学到如何安住自心——跟心互动，而不是被心牵动。
⏱ 2024-04-21 11:42:42 ^38458188-18-1244-1404&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这个故事说明了初学禅修时避免过度紧绷是很重要的。现代人由于生活繁忙，在初学正式禅修时，就算每天只抽出15分钟，也都代表了极大的承诺。无论你将这15分钟分成三个5分钟或五个3分钟来练习都可以。
⏱ 2024-04-21 11:45:47 ^38458188-18-3950-4045&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 正式禅修非常棒，因为一天坐5分钟、10分钟或15分钟，就会创造一个改变自己观感的机会
⏱ 2024-04-21 11:50:40 ^38458188-18-6733-6775&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第三部-快乐的心健康的身&#34;&gt;第三部 快乐的心健康的身&lt;/h2&gt;
&lt;h3 id=&#34;第十五章-问题与可能性&#34;&gt;第十五章 问题与可能性&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在“河流般的体验”之中，你的心可能还是会有高低起伏，但是，当你到达下一阶段，也就是我的老师们所说的“湖泊般的体验”时，你的心就会开始感到非常平稳、宽广且开阔，就像是平静无波的湖泊一样：你发现自己打从心里感到快乐，没有任何高低起伏；你充满了自信、稳定，而且多少已体悟到禅定觉性的持续境界，即使在睡梦中也是。
⏱ 2024-04-21 15:28:22 ^38458188-20-6161-6313&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第十六章-从内在做起&#34;&gt;第十六章 从内在做起&lt;/h3&gt;
&lt;h3 id=&#34;第十七章-快乐的生物学&#34;&gt;第十七章 快乐的生物学&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你所想的一切、所说的一切，以及你所做的一切，都会反射到自己身上，成为自己的经验。假如你造成他人的痛苦，你就会经历十倍的痛苦；假如你给予他人快乐和幸福，那么你就会体验十倍的快乐；假如你的心很平静，那么周遭的人也会体会到相同程度的平静感。
⏱ 2024-04-23 12:51:39 ^38458188-22-2271-2388&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 换句话说，大脑左前额叶活动发生重大改变的人，免疫系统显然也增强了。
⏱ 2024-04-23 12:53:17 ^38458188-22-3594-3627&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第十八章-向前迈进&#34;&gt;第十八章 向前迈进&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 只有人类具备审慎选择自己人生方向的能力，也只有人类能够分辨哪些抉择是通往短暂快乐的山谷，而哪些又是进入恒常宁静与福祉的乐土。虽然基因的影响可能会让我们执着于短暂的快乐，但我们也天生具备认识内在更深刻恒久的自信、宁静和福祉的能力。
⏱ 2024-04-26 12:43:58 ^38458188-23-542-656&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第二章-内在的交响乐-1&#34;&gt;第二章 内在的交响乐&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 大脑这个区域受到损伤的人很难制造新的记忆，对于海马回受伤前的一切，他们记得清清楚楚，但海马回受伤后所遇见的任何人与发生的任何事，他们一瞬间就忘记了。海马回也是大脑中最先受到阿兹海默症及精神分裂症、重度忧郁症、躁郁症等精神疾病影响的区域之一。  ^6733360-7QqBFdPuy
- 💭 讲海马体最清楚的了
- ⏱ 2024-04-13 21:46:50&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在那一瞬间，我突然“开窍了”。我体悟到无论是以“我”的心还是以“我”的观点去思考，或者如窗外的山峦与天空般广阔开放地去体验万物，两者其实无二无别。  ^6733360-7QqCetIZ8
- 💭 没太懂
- ⏱ 2024-04-13 21:55:31&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第四章-空性-1&#34;&gt;第四章 空性&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这样叙述绝对真理和相对真理之间的关系，虽然非常理智，却无法提供我们了解这种关系所需要的直觉性领会，或以现代语言来说，一种“本能式”的领悟。  ^6733360-7QrpREO0t
- 💭 直觉性领悟很重要
- ⏱ 2024-04-14 10:33:21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第五章-感知的相对性-1&#34;&gt;第五章 感知的相对性&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 佛法的修持提供了一种替代方法，让我们放弃原本基于恐惧的生存观点，而把生命当作是一连串奇特和美妙事件的展示，并以这种态度去体验生命  ^6733360-7QruJY8xX
- 💭 有意思
- ⏱ 2024-04-14 11:47:48&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于这样的转换很难用理智去领会，为了更进一步了解这一点，我要再度以梦境为例。做梦的时候，如果你能认出自己正在经历的一切只不过是梦，那么你就能认识到，你在梦中所经历的一切都只发生在自己的心中。认识到这一点之后，你就能让自己脱离“梦中难题”“梦中之苦”或“梦中限制”。梦境虽然仍持续着，但是，“梦是梦”的认识会让你从梦中情境的痛苦和不悦中解脱出来。恐惧、苦恼及痛苦都会被一种几近孩子般的惊奇感所取代：“哇，你看，我的心竟然能够制造出这样的东西来！”  ^6733360-7QruZBNX9
- 💭 这个比喻非常妙
- ⏱ 2024-04-14 11:51:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在亚原子层次上，物理学家遇到一个非常有趣的问题，也就是当他们试图测量粒子在亚原子空间中的确切位置时，便无法百分之百精准测量粒子的速度；而当他们企图测量粒子的速度时，则无法精准确认粒子的位置。想要同时准确测量粒子的位置和速度时所遇到的问题，就是海森堡测不准原理 ①所要解释的原理，海森堡测不准原理是以提出这项原理的量子力学先驱之一的华纳·海森堡（Werner Heisenberg）而命名的。  ^6733360-7Qrv392Pu
- 💭 讲得很清晰哦
- ⏱ 2024-04-14 11:52:31&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第六章-天赋明性-1&#34;&gt;第六章 天赋明性&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 那么他们通常就会接受医生的建议，去做这原本不能忍受的事，甚至花钱也在所不惜。坐在蒸气室里，他们想着：“流了这么多汗真好！真是舒服极了！”他们之所以能够这样做，是因为他们转换了自己对炎热和流汗的心理感知。由此可知，炎热和流汗其实只是被赋予不同意义的现象罢了。如果医生还告诉他们，做完蒸气浴后冲个冷水澡会促进血液循环，那么他们就会学着接受寒冷，甚至还会觉得这真是个提神的好方法呢。  ^6733360-7QryWGweV
- 💭 核心例子
- ⏱ 2024-04-14 12:52:00&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第八章-我们为何不快乐-1&#34;&gt;第八章 我们为何不快乐？&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 虽然人们生活在物质充裕的文明中，也常面带微笑，但是，他们眼中却不时流露出不满，甚至是绝望。在我的公开或私人谈话中，人们也总绕着“如何变得更好、更强”或“如何克服‘自我憎恶’”之类的问题打转。  ^6733360-7QrzPvGW6
- 💭 有人说过每个人都生活在寂静的绝望中
- ⏱ 2024-04-14 13:05:31&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第十章-单纯地安住-1&#34;&gt;第十章 单纯地安住&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这就是无所缘的止禅修所说的安住自心的方法，就好像刚结束了一整天辛劳的工作一样，这时只要放下、放松就好。你不需要阻止任何念头、情绪或感官知觉的生起，也不需要跟随它们，就这样安住在开阔的当下，任由它们的发生。如果念头或情绪生起，就让自己清楚地察觉它们的存在。无所缘的止禅修并不是让你的心漫无目的地游荡于幻想、记忆或白日梦中。禅修时，你可能没有特别执着在什么对境，但是你还是有觉知，还是清楚当下发生的一切。这就是自心某种程度的呈现，可以概括地说是一个觉性的中心。  ^6733360-7QC9cwYb0
- 💭 无所缘禅修的状态
- ⏱ 2024-04-21 11:52:18&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第十一章-安住在对境上-1&#34;&gt;第十一章 安住在对境上&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在“有所缘的禅修”中，我们利用自己的感官作为安住自心的方法。我们可以利用眼根来禅修形状和颜色，以耳根来禅修声音，以鼻根来禅修气味，以舌根来禅修味道，以身根来禅修身体的知觉。如此，透过感官接收到的各种信息就会成为我们修持的珍贵资源。  ^6733360-7Qt5W97YU
- 💭 厉害
- ⏱ 2024-04-15 13:02:25&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第十三章-慈悲-1&#34;&gt;第十三章 慈悲&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-10&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 将心安住在无所缘禅修中一会儿之后，先做一次快速的“扫描修持”，逐步地观察自己的身体。当你扫描身体时，让自己了解到，拥有人身是多么美好的一件事，更何况还有一颗能够“扫描”它的心！我们要让自己了解，单是拥有生命这个基本事实就多么了不起，而拥有人身和心这样伟大的礼物，又是多么幸运啊！  ^6733360-7QC7W5hpu
- 💭 这段居然没人划线
- ⏱ 2024-04-21 11:32:59&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-11&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 慈心和悲心的修持实际上包括培养一种认识，即知道所有生物都想得到健全完整、安全且快乐。你只要记得，他人内心正在经历的任何状态，其实就是你自己内心正在经历的状态。当你能够这样记得的时候，你就会了解，根本没有任何理由对其他人或事物感到恐惧。你会感到害怕的唯一原因，就是因为没有认清你所面对的其他人或生物跟你一样，都只是想要离苦得乐的众生。  ^6733360-7QC837AUS
- 💭 推己及人
- ⏱ 2024-04-21 11:34:42&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第十四章-修持的方法时间与地点-1&#34;&gt;第十四章 修持的方法、时间与地点&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-12&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 神经元对话制造了某种看似天然生成或独立的自我，或者某种看似天然生成或独立的他人。若想斩断这些积习已久的神经元对话，那么，养成正式禅修的习惯是最有效的方法。若能抽出时间做正式禅修，你就会发展出一种具有建设性的习性：这种习性不仅能削弱旧有的神经元模式，还能有效地建立起一种新的神经元模式，使你能认出自心如何参与感知过程。  ^6733360-7QC8FhnuF
- 💭 生物学基础
- ⏱ 2024-04-21 11:44:06&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第十五章-问题与可能性-1&#34;&gt;第十五章 问题与可能性&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-13&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 另一种对治法则是将眼睛向上凝视，你不需要抬起头或下巴，只要把眼光往上移，凝视着上方即可。这样做通常可以让心产生清醒的作用。而当你的心感到烦躁时，凝视下方则能产生一种安定的作用。  ^6733360-7QCmZqHHF
- 💭 有点意思
- ⏱ 2024-04-21 15:22:50&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-14&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 再继续练习下去，你会发现自己愈来愈能够在每个体验生起的瞬间就清楚觉察到它。我的老师曾把这个现象比喻为强风中飘扬的旗幡：旗幡不断随着风的方向飘荡，旗幡的动向就好比在你心中迅速生灭的种种妄念，而旗杆则犹如你自然的觉性，笔直稳固、屹立不动地固定在地上。无论风多么强劲，无论强风将旗幡吹往哪个方向，旗杆总是在那儿，如如不动。  ^6733360-7QCngwWQm
- 💭 境界高超
- ⏱ 2024-04-21 15:27:03&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第十六章-从内在做起-1&#34;&gt;第十六章 从内在做起&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-15&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当然，拥有非常复杂的大脑皮质层也有缺点。很多优柔寡断的人常常让自己卡在反复推敲的死胡同里，从该不该跟伴侣一刀两断，到什么时候应该去超市购物，都要仔细琢磨其中的利弊，结果是什么也决定不了。不过，这种能够在不同选择中做取舍的能力，的确是很棒的优势，而且是好处远多于坏处。  ^6733360-7QCGlXtl1
- 💭 之前就是
- ⏱ 2024-04-21 20:18:29&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%B8%9A%E4%BD%99%E6%97%A0%E7%BA%BF%E7%94%B5%E9%80%9A%E4%BF%A1%E7%AC%AC%E4%BA%94%E7%89%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%B8%9A%E4%BD%99%E6%97%A0%E7%BA%BF%E7%94%B5%E9%80%9A%E4%BF%A1%E7%AC%AC%E4%BA%94%E7%89%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 业余无线电通信（第五版）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/97/YueWen_37157080/t7_YueWen_37157080.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 业余无线电通信（第五版）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 业余无线电通信（第五版）&lt;/li&gt;
&lt;li&gt;作者： 童效勇 陈方编著&lt;/li&gt;
&lt;li&gt;简介： 业余无线电通信 从1994年开始出版，已经成为业余无线电爱好者的入门工具书。本书是由业余无线电家童效勇（BA1AA）和陈方（BA4RC）为广大业余无线电编写的业余无线电通信入门教材，书中系统地介绍了开设、操作业余无线电台的相关知识和法律法规，主要内容包括：业余无线电通信简史、业余无线电通信操作实践、收发报技术的自我训练、业余无线电奖励证书和竞赛活动、不同业余无线电波段的运用、业余短波天线、业余无线电收发信机、依法设置和使用业余无线电台等。业余无线电通信既可作为开展业余无线电活动的教材，也可作为业余无线电爱好者的自修读本和手册。&lt;/li&gt;
&lt;li&gt;出版时间 2021-04-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115556288&lt;/li&gt;
&lt;li&gt;分类： 科学技术-工业技术&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/89d32af07236f8d889d4ed0&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;内-容-提-要&#34;&gt;内 容 提 要&lt;/h2&gt;
&lt;h2 id=&#34;编著者的话&#34;&gt;编著者的话&lt;/h2&gt;
&lt;h2 id=&#34;修订说明&#34;&gt;修订说明&lt;/h2&gt;
&lt;h2 id=&#34;第1章-什么是业余无线电通信&#34;&gt;第1章 什么是业余无线电通信&lt;/h2&gt;
&lt;h3 id=&#34;11-什么是业余电台&#34;&gt;1.1 什么是业余电台&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在任何国家、任何地方，未经国家主管部门批准的无线电发信（包括试验发信）都是被严格禁止的。
⏱ 2023-01-02 14:46:03 ^37157080-7-1384-1428&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;12-业余无线电的起源及在我国的发展历程&#34;&gt;1.2 业余无线电的起源及在我国的发展历程&lt;/h3&gt;
&lt;h3 id=&#34;13-怎样寻找业余电台&#34;&gt;1.3 怎样寻找业余电台&lt;/h3&gt;
&lt;h3 id=&#34;14-业余电台的活动内容&#34;&gt;1.4 业余电台的活动内容&lt;/h3&gt;
&lt;h2 id=&#34;第2章-业余无线电通信操作实践&#34;&gt;第2章 业余无线电通信操作实践&lt;/h2&gt;
&lt;h3 id=&#34;22-业余电台的信号报告&#34;&gt;2.2 业余电台的信号报告&lt;/h3&gt;
&lt;h3 id=&#34;23-业余电台地理位置的报告&#34;&gt;2.3 业余电台地理位置的报告&lt;/h3&gt;
&lt;h3 id=&#34;24-业余电台的qsl卡片&#34;&gt;2.4 业余电台的QSL卡片&lt;/h3&gt;
&lt;h3 id=&#34;25-业余电台的登记&#34;&gt;2.5 业余电台的登记&lt;/h3&gt;
&lt;h3 id=&#34;26-业余无线电通信的语言&#34;&gt;2.6 业余无线电通信的语言&lt;/h3&gt;
&lt;h3 id=&#34;27-业余无线电通信基本程序&#34;&gt;2.7 业余无线电通信基本程序&lt;/h3&gt;
&lt;h3 id=&#34;28-完整通信程序举例&#34;&gt;2.8 完整通信程序举例&lt;/h3&gt;
&lt;h3 id=&#34;29-网络通信&#34;&gt;2.9 网络通信&lt;/h3&gt;
&lt;h3 id=&#34;210-遇险通信和应急救援通信&#34;&gt;2.10 遇险通信和应急救援通信&lt;/h3&gt;
&lt;h2 id=&#34;第3章-收发报技术的自我训练&#34;&gt;第3章 收发报技术的自我训练&lt;/h2&gt;
&lt;h3 id=&#34;31-正确地记忆电码符号&#34;&gt;3.1 正确地记忆电码符号&lt;/h3&gt;
&lt;h3 id=&#34;32-收报训练&#34;&gt;3.2 收报训练&lt;/h3&gt;
&lt;h3 id=&#34;33-发报练习&#34;&gt;3.3 发报练习&lt;/h3&gt;
&lt;h3 id=&#34;34-严格自我要求保证练习质量&#34;&gt;3.4 严格自我要求，保证练习质量&lt;/h3&gt;
&lt;h2 id=&#34;第4章-业余电台的奖励证书和竞赛活动&#34;&gt;第4章 业余电台的奖励证书和竞赛活动&lt;/h2&gt;
&lt;h3 id=&#34;41-业余电台的奖励证书&#34;&gt;4.1 业余电台的奖励证书&lt;/h3&gt;
&lt;h3 id=&#34;42-业余电台的竞赛&#34;&gt;4.2 业余电台的竞赛&lt;/h3&gt;
&lt;h3 id=&#34;43-iota空中之岛活动&#34;&gt;4.3 IOTA“空中之岛”活动&lt;/h3&gt;
&lt;h3 id=&#34;44-fcc业余无线电执照资格考试&#34;&gt;4.4 FCC业余无线电执照资格考试&lt;/h3&gt;
&lt;h2 id=&#34;第5章-怎样运用不同的业余波段&#34;&gt;第5章 怎样运用不同的业余波段&lt;/h2&gt;
&lt;h3 id=&#34;51-无线电波的传播方式&#34;&gt;5.1 无线电波的传播方式&lt;/h3&gt;
&lt;h3 id=&#34;52-电离层与天波传播&#34;&gt;5.2 电离层与天波传播&lt;/h3&gt;
&lt;h3 id=&#34;53-太阳黑子的影响&#34;&gt;5.3 太阳黑子的影响&lt;/h3&gt;
&lt;h3 id=&#34;54-怎样利用几个不同的主要业余波段&#34;&gt;5.4 怎样利用几个不同的主要业余波段&lt;/h3&gt;
&lt;h3 id=&#34;55-业余波段上的信标beacons&#34;&gt;5.5 业余波段上的信标（Beacons）&lt;/h3&gt;
&lt;h2 id=&#34;第6章-业余短波天线&#34;&gt;第6章 业余短波天线&lt;/h2&gt;
&lt;h3 id=&#34;61-天线&#34;&gt;6.1 天线&lt;/h3&gt;
&lt;h3 id=&#34;62-传输线&#34;&gt;6.2 传输线&lt;/h3&gt;
&lt;h2 id=&#34;第7章-业余无线电收发信机&#34;&gt;第7章 业余无线电收发信机&lt;/h2&gt;
&lt;h3 id=&#34;72-短波发信机&#34;&gt;7.2 短波发信机&lt;/h3&gt;
&lt;h3 id=&#34;73-超短波收发信机&#34;&gt;7.3 超短波收发信机&lt;/h3&gt;
&lt;h3 id=&#34;74-成品业余无线电收发信机介绍&#34;&gt;7.4 成品业余无线电收发信机介绍&lt;/h3&gt;
&lt;h3 id=&#34;75-收发信设备中常见英文名字的意义&#34;&gt;7.5 收发信设备中常见英文名字的意义&lt;/h3&gt;
&lt;h3 id=&#34;76-自己动手制作辅助器材&#34;&gt;7.6 自己动手制作辅助器材&lt;/h3&gt;
&lt;h2 id=&#34;第8章-依法设置和使用业余电台&#34;&gt;第8章 依法设置和使用业余电台&lt;/h2&gt;
&lt;h3 id=&#34;81-业余电台的分类管理及相应操作能力要求&#34;&gt;8.1 业余电台的分类管理及相应操作能力要求&lt;/h3&gt;
&lt;h3 id=&#34;82-个人设置业余电台的基本条件和申办程序&#34;&gt;8.2 个人设置业余电台的基本条件和申办程序&lt;/h3&gt;
&lt;h3 id=&#34;83-单位或团体设置业余电台的申办程序&#34;&gt;8.3 单位或团体设置业余电台的申办程序&lt;/h3&gt;
&lt;h3 id=&#34;84-特殊业余无线电台站&#34;&gt;8.4 特殊业余无线电台站&lt;/h3&gt;
&lt;h3 id=&#34;85-竞赛中的临时专用呼号&#34;&gt;8.5 竞赛中的临时专用呼号&lt;/h3&gt;
&lt;h3 id=&#34;86-如何申办和使用业余无线电中继台&#34;&gt;8.6 如何申办和使用业余无线电中继台&lt;/h3&gt;
&lt;h3 id=&#34;87-业余电台涉外交流活动方面的有关规定&#34;&gt;8.7 业余电台涉外交流活动方面的有关规定&lt;/h3&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;14-业余电台的活动内容-1&#34;&gt;1.4 业余电台的活动内容&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 世界上许多爱好者热衷于用只有几瓦甚至更小功率的电台进行远程通信试验，他们为如何利用尽可能小的发射功率，联络到距离尽可能远、范围尽可能广的业余电台而发着“高烧”，并因此而不断地推出一些性能优良的小功率电台，而利用不到5W功率的QRP小功率业余电台，沟通全球并取得WAC奖状的爱好者，在世界上已不乏其人。在对保护电磁环境的要求越来越高的今天，用尽可能小的发射功率实现更远距离的通信有着非常重要的现实意义，而层出不穷的面向微弱信号无线电数字通信软件也使得QRP小功率通信有了更加广阔的天地。  ^6733360-7F0CHtRsg
- 💭 这个好玩
- ⏱ 2023-01-04 11:19:53&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%B8%AD%E5%8C%BB%E7%9A%84%E5%B8%B8%E8%AF%86/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%B8%AD%E5%8C%BB%E7%9A%84%E5%B8%B8%E8%AF%86/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 中医的常识&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/81/cpPlatform_sD6aK9kimCrfTKv1RiJJ14/t7_cpPlatform_sD6aK9kimCrfTKv1RiJJ14.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 中医的常识|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 中医的常识&lt;/li&gt;
&lt;li&gt;作者： 徐文兵&lt;/li&gt;
&lt;li&gt;简介： 知道中医的常识，不是要求大家变成医生，但要变成一个明事理的人。这样你将来得了病会有一个辩证的，有一个从正反面看的态度，能形成自己的价值观和看法。
本书从认识中医、中医非药物疗法、识字、民以食为天、七情、历史、医案等方面入手，告诉我们如何掌握中医的常识，成为一个能自救，能帮助家人、朋友的明道之人。&lt;/li&gt;
&lt;li&gt;出版时间 2022-12-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787539083940&lt;/li&gt;
&lt;li&gt;分类： 医学健康-健康&lt;/li&gt;
&lt;li&gt;出版社： 江西科学技术出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/bd132da0813ab76f7g0186ec&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;认识中医&#34;&gt;认识中医&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 比如我爹传我的方子，我靠方子治了很多病，挣了钱，活下来，这已经很不容易了。问题是人有好奇心，他总是想，为什么能治好病？为什么没治好？我觉得，人活到知其所以然这个境界，就有一种快感。一种探索未知，与天地沟通、与古人沟通的那种快感
⏱ 2024-05-09 18:28:55 ^3300042158-3-10842-10955&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 男人喜欢女人，这是本心；师父教他女人是老虎会吃人，这是后天培养的意识。小和尚之所以辗转反侧，是因为心和意在打架。现代人活得痛苦的原因也是如此，于是在人前装一套，回到家里是另外一套，心理素质差点的就会崩溃。
⏱ 2024-05-09 18:32:26 ^3300042158-3-12704-12806&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 能活得完全从心所欲很难，我们只能在心和意之间尽量找一个平衡点。你要是完全为了爱活着，就不要结婚了，结婚完全是后天的意识行为，是人类社会特有的。我们要在其中找平衡，要了解自己。
⏱ 2024-05-09 18:36:57 ^3300042158-3-13444-13531&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在华佗、张仲景那个年代，还有陶弘景、葛洪、孙思邈等人都是道和医不分的，是一体的，从唐开始就变成儒医了。道家是讲修身的，处于静的状态。人只有在静的状态才能开慧，恢复敏锐的感觉能力。儒家是到唐宋的时候把道和佛的东西都拿过去了，全变成了纸面上的东西。
⏱ 2024-05-09 18:38:19 ^3300042158-3-13885-14007&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 鉴别真假中医有个标准——给你号脉的时候，大夫的手是否是热乎乎的，因为手是热乎乎的代表气能过来。我希望大家能恢复觉，在觉的基础上体会中医讲的气。
⏱ 2024-05-09 18:40:57 ^3300042158-3-15276-15347&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我治胃病，不怕患者说“我胃疼”“我反酸”“我胀气”“我打嗝”……我怕那种一摸肚子冰凉，但这个人吃嘛嘛香，这种患者赶紧去做胃镜。什么意思？家里着火了，报警器响了，这种人不是去灭火，而是把报警器摘了。同样的道理，受伤以后用冰块一敷，不疼了吧？那是觉没了，但伤口还在。疼痛是人体的报警信号，是要让人歇会儿，有的运动员却打封闭针接着跑。困了就该睡觉了，但现在的年轻人喝罐红牛接着熬。
⏱ 2024-05-09 18:49:30 ^3300042158-3-16757-16944&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 魄比神相对低级，但这是自我保护不可或缺的一部分。比如一盆滚烫的开水，你把手放上去立即拿开，这就是本能的魄的反射；如果你把它提高到意识行为，心想“哎呀，水有100摄氏度吧，100摄氏度会烫伤表皮、真皮，起泡、留疤”，然后再把手拿回来，手就不能要了。我治过的很多患者说以前吃凉的没事，现在吃点凉的就不舒服，我说：“恭喜你变成‘贵族’了。”
⏱ 2024-05-09 18:55:32 ^3300042158-3-18035-18202&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我的学生都要练内家拳、站桩。我不强调静坐，因为我坚定地认为，如果没有师父的护持和指引，静坐的人很多会出偏。
⏱ 2024-05-09 19:00:34 ^3300042158-3-18517-18570&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 更高的一个层次是“法”，法是历法，“法于阴阳”的意思是根据日月星辰的变化调节生活，昼夜、四季的变化是日的变化，阴晴圆缺是月的变化。古人是把人放在宇宙的状态下观察的，人的身体出问题不是人本身小范围的事。
⏱ 2024-05-09 19:04:37 ^3300042158-3-19787-19887&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 中国有日历、月历，还有著名的北斗历，“斗柄东指，天下皆春”，因此，二十四节气的变化能用北斗的勺子指出来，北极星其实是银河里的一部分。为什么叫汉族？其实是星汉，中国人认为自己是银河的子孙，星汉灿烂，汉是银河的意思。中国人的宇宙观远远超乎普通人的想象。
⏱ 2024-05-09 19:05:15 ^3300042158-3-20107-20231&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 有的人说中医不学解剖，我们也学，但我们发现只学解剖没有用，要能解释解剖背后的东西才有意义，这才是中医
⏱ 2024-05-10 06:54:25 ^3300042158-3-24898-24948&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在身心健康评估中，我们还涉及一个问题就是要关心你每天做不做梦，都做什么样的梦，因为梦境是人放弃意识以后最真实的内心流露。凡是白天做什么事，晚上就做什么梦的人不是睡着了，而是昏过去了，因为心神根本没有得到真正的休息，这是考察内心的一个方式。在我治病的过程中，患者的梦境会改变。
⏱ 2024-05-10 13:02:25 ^3300042158-3-28841-28978&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第二章-从心认识汉字&#34;&gt;第二章 从“心”认识汉字&lt;/h3&gt;
&lt;h3 id=&#34;第三章-中医对免疫力的看法&#34;&gt;第三章 中医对免疫力的看法&lt;/h3&gt;
&lt;h3 id=&#34;第四章-现在的病大多数都是生活方式病&#34;&gt;第四章 现在的病大多数都是生活方式病&lt;/h3&gt;
&lt;h3 id=&#34;第五章-很多人的病是价值观出了问题导致的&#34;&gt;第五章 很多人的病是价值观出了问题导致的&lt;/h3&gt;
&lt;h3 id=&#34;第六章-失去了尊重和信任医患关系只能日趋紧张&#34;&gt;第六章 失去了尊重和信任，医患关系只能日趋紧张&lt;/h3&gt;
&lt;h2 id=&#34;中医非药物疗法&#34;&gt;中医非药物疗法&lt;/h2&gt;
&lt;h3 id=&#34;第八章-中医非药物疗法之一针刺&#34;&gt;第八章 中医非药物疗法之一：针刺&lt;/h3&gt;
&lt;h3 id=&#34;第九章-中医非药物疗法之二艾灸&#34;&gt;第九章 中医非药物疗法之二：艾灸&lt;/h3&gt;
&lt;h3 id=&#34;第十章-中医非药物疗法之三砭石&#34;&gt;第十章 中医非药物疗法之三：砭石&lt;/h3&gt;
&lt;h3 id=&#34;第十一章-中医非药物疗法之四按跷&#34;&gt;第十一章 中医非药物疗法之四：按跷&lt;/h3&gt;
&lt;h3 id=&#34;第十二章-中医非药物疗法之五导引&#34;&gt;第十二章 中医非药物疗法之五：导引&lt;/h3&gt;
&lt;h2 id=&#34;民以食为天&#34;&gt;民以食为天&lt;/h2&gt;
&lt;h3 id=&#34;第十四章-真正的食疗不是你看见的那样简单&#34;&gt;第十四章 真正的食疗不是你看见的那样简单&lt;/h3&gt;
&lt;h3 id=&#34;第十五章-四季饮食滋味&#34;&gt;第十五章 四季饮食滋味&lt;/h3&gt;
&lt;h2 id=&#34;七情&#34;&gt;七情&lt;/h2&gt;
&lt;h3 id=&#34;第十七章-顺应人的本能就能让人喜&#34;&gt;第十七章 顺应人的本能，就能让人喜&lt;/h3&gt;
&lt;h3 id=&#34;第十八章-怒把气隐忍压抑在体内成为它的奴隶&#34;&gt;第十八章 怒：把气隐忍、压抑在体内，成为它的奴隶&lt;/h3&gt;
&lt;h3 id=&#34;第十九章-忧是总把将来的事往坏处想虑是期待一件事发生&#34;&gt;第十九章 忧是总把将来的事往坏处想，虑是期待一件事发生&lt;/h3&gt;
&lt;h3 id=&#34;第二十章-百思不得其解的表现是肠胃堵塞&#34;&gt;第二十章 百思不得其解的表现是肠胃堵塞&lt;/h3&gt;
&lt;h3 id=&#34;第二十一章-悲起初会伤肺时间长了会伤心&#34;&gt;第二十一章 悲起初会伤肺，时间长了会伤心&lt;/h3&gt;
&lt;h3 id=&#34;第二十二章-在七情里恐对心的刺激量是最大的&#34;&gt;第二十二章 在七情里，恐对心的刺激量是最大的&lt;/h3&gt;
&lt;h3 id=&#34;第二十三章-惊则气乱惊心动魄惊魂未定&#34;&gt;第二十三章 “惊则气乱”：“惊心动魄”“惊魂未定”……&lt;/h3&gt;
&lt;h2 id=&#34;历史&#34;&gt;历史&lt;/h2&gt;
&lt;h3 id=&#34;第二十五章-真正的中医是什么样子&#34;&gt;第二十五章 真正的中医是什么样子&lt;/h3&gt;
&lt;h2 id=&#34;医案&#34;&gt;医案&lt;/h2&gt;
&lt;h3 id=&#34;第二十七章-孩子终于换牙了&#34;&gt;第二十七章 孩子终于换牙了&lt;/h3&gt;
&lt;h3 id=&#34;第二十八章-鲁迅父亲的医案分析兼论鲁迅为什么骂中医&#34;&gt;第二十八章 鲁迅父亲的医案分析——兼论鲁迅为什么骂中医&lt;/h3&gt;
&lt;h3 id=&#34;第二十九章-不孕症医案分析&#34;&gt;第二十九章 不孕症医案分析&lt;/h3&gt;
&lt;h3 id=&#34;第三十章-痛风医案分析&#34;&gt;第三十章 痛风医案分析&lt;/h3&gt;
&lt;h2 id=&#34;徐公释疑&#34;&gt;徐公释疑&lt;/h2&gt;
&lt;h3 id=&#34;第三十二章-徐公释疑二如何修复自愈能力&#34;&gt;第三十二章 徐公释疑二：如何修复自愈能力&lt;/h3&gt;
&lt;h3 id=&#34;第三十三章-徐公释疑三什么样的工作叫好工作&#34;&gt;第三十三章 徐公释疑三：什么样的工作叫“好工作”&lt;/h3&gt;
&lt;h3 id=&#34;第三十四章-徐公释疑四只靠修行就能治好病吗&#34;&gt;第三十四章 徐公释疑四：只靠修行就能治好病吗&lt;/h3&gt;
&lt;h3 id=&#34;第三十五章-徐公释疑五记忆力和年龄其实没啥关系&#34;&gt;第三十五章 徐公释疑五：记忆力和年龄其实没啥关系&lt;/h3&gt;
&lt;h3 id=&#34;第三十六章-徐公释疑六痛苦的过往要怎么处理是原谅报复还是遗忘&#34;&gt;第三十六章 徐公释疑六：痛苦的过往要怎么处理，是原谅、报复，还是遗忘&lt;/h3&gt;
&lt;h3 id=&#34;第三十七章-徐公释疑七入芝兰之室久而不闻其香&#34;&gt;第三十七章 徐公释疑七：“入芝兰之室，久而不闻其香”&lt;/h3&gt;
&lt;h3 id=&#34;第三十八章-徐公释疑八你才是最高级的智能&#34;&gt;第三十八章 徐公释疑八：你才是最高级的智能&lt;/h3&gt;
&lt;h3 id=&#34;第三十九章-徐公释疑九学国学会遇到哪些坑&#34;&gt;第三十九章 徐公释疑九：学国学，会遇到哪些“坑”&lt;/h3&gt;
&lt;h3 id=&#34;第四十章-徐公释疑十于无句读处读书&#34;&gt;第四十章 徐公释疑十：于无句读处读书&lt;/h3&gt;
&lt;h3 id=&#34;第四十一章-徐公释疑十一只有讲礼的人才会有人和&#34;&gt;第四十一章 徐公释疑十一：只有讲礼的人才会有“人和”&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;认识中医-1&#34;&gt;认识中医&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 中医的本源是“巫”。在古书中，巫是能沟通天地、鬼神，身体感觉能力非常强的人，但传到后世，人心逐渐涣散、没落，人逐渐退化，丧失了这种本能  ^6733360-7R3XkBA8C
- 💭 我一直在想人的年龄在长，心性呢？
- ⏱ 2024-05-09 18:37:50&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 现在很多胃病特别重的人，吃嘛嘛香，吃什么都没事，认为自己有一个铁胃。这种人更可怕，查出来都是很重的病。我一直讲，吃水果要吃应季、当地产的，因为水果本身有一种酶，会破坏我们的口腔黏膜和胃的黏膜。那些得病的人经过一些调理以后，慢慢觉得吃水果难受。但现在的人不停地吃水果，最后不难受了，这不是好了，而是“无觉”了。我培养学生，首先会让他们恢复“觉”。  ^6733360-7R3XrBJFE
- 💭 有点意思
- ⏱ 2024-05-09 18:39:33&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 养心是什么？养的意思就是顺应，养心就是发现自己的本心，知道自己最需要的东西。带孩子也是一样，老话说：“三岁看大，七岁看老。”三岁之前观察孩子的天性，他是什么样的人，他对什么有兴趣，他讨厌什么，然后你再教育他。我们现在不是这样教育，而是爹妈喜欢什么就给孩子什么。  ^6733360-7R57QMVYR
- 💭 带小孩要顺应天性
- ⏱ 2024-05-10 13:05:07&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 养心和养神，就是反观内心，首先知道自己的欲望。我们现在都是为孩子定点，比如几点让孩子吃饭，他就得吃，从来不问那会儿他饥不饥、饿不饿。现在都说吃早餐有利于健康，不吃早餐容易得胆结石，可从来不问早晨起来你饿不饿。昨天吃的东西还没消化完，打个嗝还泛着味，吃什么早餐？观察一下内心的欲望、心愿，然后顺应它，这样人一辈子就活得不痛苦。  ^6733360-7R57Vy2ia
- 💭 有道理
- ⏱ 2024-05-10 13:06:17&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这说明什么？说明现代医学解决了一个人的肉身能够长时间存在的问题，但没有解决人的心理问题。这一点中医、道家是有自己特长的，我们从来认为身心不二，你保护好自己的肉身，本身也是养你的心和神待的宅子，把这个宅子维护好，做到心有所居、心有所安。  ^6733360-7R5bf3Cq1
- 💭 跟村上春树的说法差不多
- ⏱ 2024-05-10 13:56:54&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%B8%AD%E5%9B%BD%E5%B1%85%E6%B0%91%E8%86%B3%E9%A3%9F%E6%8C%87%E5%8D%97%E5%BD%A9%E5%9B%BE%E7%B2%BE%E8%A3%85/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%B8%AD%E5%9B%BD%E5%B1%85%E6%B0%91%E8%86%B3%E9%A3%9F%E6%8C%87%E5%8D%97%E5%BD%A9%E5%9B%BE%E7%B2%BE%E8%A3%85/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 中国居民膳食指南（彩图精装）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/66/YueWen_813440/t7_YueWen_813440.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 中国居民膳食指南（彩图精装）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 中国居民膳食指南（彩图精装）&lt;/li&gt;
&lt;li&gt;作者： 翁良&lt;/li&gt;
&lt;li&gt;简介： 本书是以权威数据和最新研究成果为依据，结合《中国居民膳食指南》和《平衡膳食宝塔》，根据中国人的体质、饮食习惯、地域差异，结合现代营养学，对中国居民膳食进行了更深入更细化的阐述，分为营养膳食总则、不同人群营养膳食指南、疾病患者膳食指南三部分，分别介绍了各类食物的营养功能和正确饮食方法，针对不同的人群分别告诉人们正确的饮食方式，使广大读者能够通过本书了解各类食物的营养，选择适合自己的膳食。不同人群膳食指南是根据各人群的生理特点及其对膳食营养需要而制定的，目标人群包括孕妇、乳母、婴幼儿、学龄前儿童、儿童青少年、老年人群及患病人群，避免因不合理膳食带来的各种疾病。同时，本书还借鉴应用传统医学理论和顺应国际健康趋势，将适量运动健身、节制油盐摄入、四季养生宜忌等内容引入了本书，使本书成为百姓生活中的健康宝典和必备之书，为中国人提供最科学、最完善的饮食方案。&lt;/li&gt;
&lt;li&gt;出版时间 2015-02-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787546620053&lt;/li&gt;
&lt;li&gt;分类： 医学健康-健康&lt;/li&gt;
&lt;li&gt;出版社： 新疆科学技术出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/fe232ec05c6980fe21235f7&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;上篇-营养膳食总则&#34;&gt;上篇 营养膳食总则&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 坚果大多营养丰富，吃起来香酥可口，因而受到广泛喜爱。其中花生、核桃、杏仁、松子、瓜子、榛子、葵花子等含脂肪及蛋白质都较为丰富；栗子、莲子、菱角除碳水化合物丰富外，也含一些特有的无机盐、维生素等。[插图]◎坚果包含花生、核桃、杏仁、榛子、瓜子等，其大多营养丰富，吃起来香酥可口，深受大家喜爱。
⏱ 2024-01-09 13:49:54 ^813440-4-8108-8471&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  日常烧汤时，含氮浸出物溶于汤中，浸出物越多，汤味越浓厚鲜美。但肉类煮熟后蛋白质凝固，仅很少蛋白质水解为氧基酸而溶于汤中，大部分蛋白质仍在肉中。因此，不能“只喝汤不吃肉”，应汤肉兼食。动物内脏（各种动物的肝、肾、心、肚、舌等）富含优质蛋白质，并且较一般肉类无机盐、维生素含量多，而脂肪含量较低，因此营养价值高于肉类。此外，内脏所含丰富的维生素A、维生素B1、维生素B2、烟酸、维生素B12、叶酸等和无机盐则为肉类所不及。 ^813440-4-15295-15579&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 主要吃肉，其次喝汤 - ⏱ 2024-01-09 13:52:43&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第一章膳食营养与人体健康&#34;&gt;第一章膳食营养与人体健康&lt;/h3&gt;
&lt;h3 id=&#34;第二章平衡膳食是养生之道&#34;&gt;第二章平衡膳食是养生之道&lt;/h3&gt;
&lt;h3 id=&#34;第三章中国居民四季饮食指南&#34;&gt;第三章中国居民四季饮食指南&lt;/h3&gt;
&lt;h3 id=&#34;第四章食物相宜&#34;&gt;第四章食物相宜&lt;/h3&gt;
&lt;h3 id=&#34;第五章食物相克&#34;&gt;第五章食物相克&lt;/h3&gt;
&lt;h2 id=&#34;中篇-不同人群的营养膳食指南&#34;&gt;中篇 不同人群的营养膳食指南&lt;/h2&gt;
&lt;h3 id=&#34;第一章孕期妇女膳食指南&#34;&gt;第一章孕期妇女膳食指南&lt;/h3&gt;
&lt;h3 id=&#34;第二章哺乳期妇女膳食指南&#34;&gt;第二章哺乳期妇女膳食指南&lt;/h3&gt;
&lt;h3 id=&#34;第三章06月龄婴儿喂养指南&#34;&gt;第三章0～6月龄婴儿喂养指南&lt;/h3&gt;
&lt;h3 id=&#34;第四章612月龄婴儿喂养指南&#34;&gt;第四章6～12月龄婴儿喂养指南&lt;/h3&gt;
&lt;h3 id=&#34;第五章13岁幼儿喂养指南&#34;&gt;第五章1～3岁幼儿喂养指南&lt;/h3&gt;
&lt;h3 id=&#34;第六章学龄前儿童膳食指南&#34;&gt;第六章学龄前儿童膳食指南&lt;/h3&gt;
&lt;h3 id=&#34;第七章青少年膳食指南&#34;&gt;第七章青少年膳食指南&lt;/h3&gt;
&lt;h3 id=&#34;第八章男性膳食指南&#34;&gt;第八章男性膳食指南&lt;/h3&gt;
&lt;h3 id=&#34;第九章女性膳食指南&#34;&gt;第九章女性膳食指南&lt;/h3&gt;
&lt;h3 id=&#34;第十章老年人膳食指南&#34;&gt;第十章老年人膳食指南&lt;/h3&gt;
&lt;h3 id=&#34;第十一章体重异常人群膳食指南&#34;&gt;第十一章体重异常人群膳食指南&lt;/h3&gt;
&lt;h2 id=&#34;下篇-不同病症膳食指南&#34;&gt;下篇 不同病症膳食指南&lt;/h2&gt;
&lt;h3 id=&#34;第一章高血压&#34;&gt;第一章高血压&lt;/h3&gt;
&lt;h3 id=&#34;第二章冠心病&#34;&gt;第二章冠心病&lt;/h3&gt;
&lt;h3 id=&#34;第三章贫血&#34;&gt;第三章贫血&lt;/h3&gt;
&lt;h3 id=&#34;第四章高脂血症&#34;&gt;第四章高脂血症&lt;/h3&gt;
&lt;h3 id=&#34;第五章哮喘&#34;&gt;第五章哮喘&lt;/h3&gt;
&lt;h3 id=&#34;第六章胃病&#34;&gt;第六章胃病&lt;/h3&gt;
&lt;h3 id=&#34;第七章肝炎&#34;&gt;第七章肝炎&lt;/h3&gt;
&lt;h3 id=&#34;第八章结石&#34;&gt;第八章结石&lt;/h3&gt;
&lt;h3 id=&#34;第九章肾炎&#34;&gt;第九章肾炎&lt;/h3&gt;
&lt;h3 id=&#34;第十章糖尿病&#34;&gt;第十章糖尿病&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;上篇-营养膳食总则-1&#34;&gt;上篇 营养膳食总则&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一位医学教授说：“什么时候吃比吃什么更重要！”实践证明：每天早上一次摄入2000千卡热量的食物，对体重影响不大；而晚上摄入同量的食物，体重就会明显增加。现代家庭，晚餐往往比较丰盛，尽情吃喝，体内摄入大量营养物质。但晚上一般活动少，蛋白质不能全部消化，产生胺、酚等毒性产物，增加了肝、肾等解毒器官的负担。因此，应改变这种饮食习惯，晚餐宜吃一些清淡食物，并控制食量，既可防胖，又可防病。  ^6733360-7O5ANkl4H
- 💭 牛奶早上喝比晚上喝好
- ⏱ 2024-01-09 13:46:20&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 日常烧汤时，含氮浸出物溶于汤中，浸出物越多，汤味越浓厚鲜美。但肉类煮熟后蛋白质凝固，仅很少蛋白质水解为氧基酸而溶于汤中，大部分蛋白质仍在肉中。因此，不能“只喝汤不吃肉”，应汤肉兼食。动物内脏（各种动物的肝、肾、心、肚、舌等）富含优质蛋白质，并且较一般肉类无机盐、维生素含量多，而脂肪含量较低，因此营养价值高于肉类。此外，内脏所含丰富的维生素A、维生素B1、维生素B2、烟酸、维生素B12、叶酸等和无机盐则为肉类所不及。  ^6733360-7O5BeWvRu
- 💭 主要吃肉，其次喝汤
- ⏱ 2024-01-09 13:53:08&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%B8%BA%E8%87%AA%E5%B7%B1%E6%80%9D%E8%80%83%E7%BB%88%E8%BA%AB%E6%88%90%E9%95%BF%E7%9A%84%E5%BA%95%E5%B1%82%E9%80%BB%E8%BE%91/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%B8%BA%E8%87%AA%E5%B7%B1%E6%80%9D%E8%80%83%E7%BB%88%E8%BA%AB%E6%88%90%E9%95%BF%E7%9A%84%E5%BA%95%E5%B1%82%E9%80%BB%E8%BE%91/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 为自己思考:终身成长的底层逻辑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/86/cpplatform_mrnm9vtecf11tm8wr7xowq/t7_cpplatform_mrnm9vtecf11tm8wr7xowq1697016056.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 为自己思考:终身成长的底层逻辑|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 为自己思考:终身成长的底层逻辑&lt;/li&gt;
&lt;li&gt;作者： 奥赞·瓦罗尔&lt;/li&gt;
&lt;li&gt;简介： ★ 宝藏潜力作家新作！前作《像火箭科学家一样思考》入选2021年度得到年度书单
★ 英文版上市第一周，登顶美国亚马逊新书畅销榜首位
★ 被评为《华尔街日报》畅销书
★写给那些“想要醒来”的人，在信息茧房中掌握独立思考的底层逻辑和方法。
生活中，我们经常会面临像《黑客帝国》红蓝药丸一样的选择题。当你在被他人规划的生活中逐渐麻木，就像活在《黑客帝国》中的虚拟世界，失去自我，失去独立思考能力。但你实在受够了，你迫切想要挣脱现状，那你就需要这本书。迈入未知需要勇气，但不要害怕，本书正是为了帮助你从麻木中醒来，挖掘内在的天赋而存在的。
本书将替代那颗“红色药丸”，帮你打破思维囚室，唤醒你的潜在天赋，成为真正的自己。拒绝随波逐流，真理只存在于你的内心。（文末附赠导读手册）。&lt;/li&gt;
&lt;li&gt;出版时间 2023-10-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787559671790&lt;/li&gt;
&lt;li&gt;分类： 哲学宗教-思维科学&lt;/li&gt;
&lt;li&gt;出版社： 北京联合出版公司&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/dc1326c0813ab8376g017276&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献词&#34;&gt;献词&lt;/h2&gt;
&lt;h2 id=&#34;格言&#34;&gt;格言&lt;/h2&gt;
&lt;h2 id=&#34;前言-该醒来了&#34;&gt;前言 该醒来了&lt;/h2&gt;
&lt;h2 id=&#34;本书想对你说的话&#34;&gt;本书想对你说的话&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-死亡&#34;&gt;第一部分 死亡&lt;/h2&gt;
&lt;h3 id=&#34;第一章-忘掉所学&#34;&gt;第一章 忘掉所学&lt;/h3&gt;
&lt;h3 id=&#34;第二章-弃旧&#34;&gt;第二章 弃旧&lt;/h3&gt;
&lt;h3 id=&#34;第三章-排毒&#34;&gt;第三章 排毒&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-新生&#34;&gt;第二部分 新生&lt;/h2&gt;
&lt;h3 id=&#34;第四章-独特的你非凡的你&#34;&gt;第四章 独特的你，非凡的你&lt;/h3&gt;
&lt;h3 id=&#34;第五章-发现你的使命&#34;&gt;第五章 发现你的使命&lt;/h3&gt;
&lt;h2 id=&#34;第三部分-内在的旅程&#34;&gt;第三部分 内在的旅程&lt;/h2&gt;
&lt;h3 id=&#34;第六章-解锁内在的智慧&#34;&gt;第六章 解锁内在的智慧&lt;/h3&gt;
&lt;h3 id=&#34;第七章-释放玩耍的力量&#34;&gt;第七章 释放玩耍的力量&lt;/h3&gt;
&lt;h3 id=&#34;第八章-大胆创造&#34;&gt;第八章 大胆创造&lt;/h3&gt;
&lt;h2 id=&#34;第四部分-外在的旅程&#34;&gt;第四部分 外在的旅程&lt;/h2&gt;
&lt;h3 id=&#34;第九章-是谁在胡扯&#34;&gt;第九章 是谁在胡扯&lt;/h3&gt;
&lt;h3 id=&#34;第十章-看向别人不看的地方&#34;&gt;第十章 看向别人不看的地方&lt;/h3&gt;
&lt;h3 id=&#34;第十一章-我不是你的上师&#34;&gt;第十一章 我不是你的上师&lt;/h3&gt;
&lt;h2 id=&#34;第五部分-彻底转变&#34;&gt;第五部分 彻底转变&lt;/h2&gt;
&lt;h3 id=&#34;第十二章-放开手让未来自然发生&#34;&gt;第十二章 放开手，让未来自然发生&lt;/h3&gt;
&lt;h3 id=&#34;第十三章-蜕变&#34;&gt;第十三章 蜕变&lt;/h3&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;h2 id=&#34;接下来做什么&#34;&gt;接下来做什么？&lt;/h2&gt;
&lt;h2 id=&#34;为自己思考导读手册&#34;&gt;为自己思考导读手册&lt;/h2&gt;
&lt;h3 id=&#34;第一部分-死亡-1&#34;&gt;第一部分 死亡&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我们以后不要再问孩子：“今天你在学校都学了些什么呀？”而是改为：“今天你对什么事情感到好奇？”“你想深入了解什么问题？”“你准备怎样找到答案？”任何经过用心设计、能帮助学生独立思考并质疑世俗认知的问题都可以。
⏱ 2024-04-25 20:22:50 ^3300074147-28-957-1061&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 和别人交流时，我们的目标不是评判对方或批评对方，而是要带着好奇心了解对方的观点。每当你发现一个新的视角，你就改变了自己对世界的看法
⏱ 2024-04-25 20:24:07 ^3300074147-28-2456-2521&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我的意思不是说，你不大可能把每件事都做完——我是说，你绝对做不完。这话听起来可能有点让人郁闷，但我们应该感到释然才对。唯有意识到不可能面面俱到，我才能把精力聚焦在真正重要的事情上。我对“摄入”的东西更挑剔了。我们的目标是要有意识地、仔细地甄别手中待抛的小球，清楚地知道哪一个掉了是没关系的。这样，你就可以专心致志地抛好那些最重要的球
⏱ 2024-04-25 20:27:15 ^3300074147-28-5748-5914&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 令你成为出色的软件工程师的，是你写的软件的质量，而不是你开会的时长；令你的产品大卖特卖的，是它优异的特性，而不是拍电视广告时摄影机的角度。当我们忙于应付那些“不得不做”的微末小事时，我们也避开了更为复杂的、能够帮助我们升级进阶的大事。想好哪些事情是重要的，然后孜孜不倦地优先做它们。把“选出真正该做的事”列入你的待办清单。不要再去尽力完成更多事情，开始做真正重要的事情吧
⏱ 2024-04-25 20:18:23 ^3300074147-28-6043-6228&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第二部分-新生-1&#34;&gt;第二部分 新生&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一样东西之所以能脱颖而出，正是因为它与众不同。如果你融入了背景板——如果你不曾展现出自己的特质，没有指纹，没有对比，没有任何特异之处——你就会泯然众人，谁也看不见你。你已经变成了背景板。
⏱ 2024-04-25 20:29:20 ^3300074147-29-819-912&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一旦把组成“你”的核心要素解构出来，就从零开始，重构一个全新的自己。但是，不要拷贝原有的东西。去重新想象，用崭新的方式把你的核心特质重新组合起来，找出潜在的崭新未来
⏱ 2024-04-25 20:30:45 ^3300074147-29-2007-2089&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 去追随你的好奇心。你觉得哪些事情很有趣？那些能勾起你好奇心的事不是偶然发生的，它们会为你指出该去的方向。记下自己何时感到浑身是劲、跃跃欲试，也记下何时感到厌倦、无聊和疲惫。要学会察觉身体的反应，当你感受到生命的活力时，看看身体向你发送了什么信号。以后你就可以遵循这些信号的指引了
⏱ 2024-04-25 20:31:57 ^3300074147-29-3233-3372&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第三部分-内在的旅程-1&#34;&gt;第三部分 内在的旅程&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 没有玩乐权利的员工是没有原创性的。处于自动驾驶模式、被既定的规则和边界限制住的时候，你没法想出新点子。如果你不停地重复做着相同的日常事项，就无法发现周围的可能性。如果你不享受正在做的事，就不可能达到这个领域的最高水准。真正的目标在于，你要有充分的意识，什么时候切换到玩乐模式，什么时候再切换回来。当我们要构思新创意、寻找不同的解决办法时，玩乐最有帮助。但到了执行的时候，就要更加严肃认真才行。
⏱ 2024-05-03 09:21:51 ^3300074147-30-4087-4283&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第四部分-外在的旅程-1&#34;&gt;第四部分 外在的旅程&lt;/h3&gt;
&lt;h3 id=&#34;第五部分-彻底转变-1&#34;&gt;第五部分 彻底转变&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第一部分-死亡-2&#34;&gt;第一部分 死亡&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 部族  ^6733360-7QIM3eUou
- 💭 这里的部族换成群体更合适
- ⏱ 2024-04-25 20:25:31&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我们总是忙着跟鳄鱼打得不可开交，而不是穿越沼泽。我们把时间花在最熟悉的事情上，比如回邮件、参加没完没了的会议，而不是做完手上的项目或推出新产品。  ^6733360-7QIMes5AG
- 💭 不该参加的会议就不用去
- ⏱ 2024-04-25 20:28:17&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%BD%8E%E7%A2%B3%E6%B0%B4%E7%94%9F%E6%B4%BB/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%BD%8E%E7%A2%B3%E6%B0%B4%E7%94%9F%E6%B4%BB/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 低碳水生活&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/77/cpPlatform_ccfmgFKyXch45U7f9SzejU/t7_cpPlatform_ccfmgFKyXch45U7f9SzejU.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 低碳水生活|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 低碳水生活&lt;/li&gt;
&lt;li&gt;作者： 埃里克·韦斯特曼 埃米·伯杰&lt;/li&gt;
&lt;li&gt;简介： 多种饮食方式、饮食理论的出现是不是经常让你感到不知所措？实践起来也时常效果不佳却不知道背后的原因。本书作者、医学博士埃里克·韦斯特曼和营养专家埃米·伯杰，将与你分享经过实践验证、以科学为基础的健康饮食指南！ 全书共分为三大部分，第 一部分梳理原理，介绍糖、碳水等对人的影响；第二部分介绍了作者独创的“改变生活饮食法”的具体阶段及饮食建议；第三部分重点讲解在外就餐等特殊情况的特别注意事项与饮食建议。 作者提供了一整套健康生酮饮食实践指南，旨在解答你关于碳水摄入的一切困惑。没有复杂、晦涩的科学术语，只有原理解释、实践指南等必要信息。书中简单、不挨饿、好坚持的计划适合任何一种生活方式，无论你是在有机绿色食品店还是在菜市场采购食材，无论你喜欢自己下厨还是点外卖吃快餐，都有机会实现健康饮食目标，收获健康与好身材！&lt;/li&gt;
&lt;li&gt;出版时间 2022-10-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787521746822&lt;/li&gt;
&lt;li&gt;分类： 生活百科-美食&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/81532d20813ab74ceg0199c9&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;1-何以至此&#34;&gt;1 何以至此&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你可能习惯性地认为要刻意通过体育运动“燃烧热量”，比如散步、跑步、游泳、骑自行车、举重等。但身体全天都在燃烧热量，甚至在睡觉时也不停止。身体将制造的大部分热量用于维持生命。这可能就是你听说的基础代谢率。细胞会将巨大热量用于肉眼不可见的过程，而这些过程所消耗的热量总和远远大于长时间剧烈运动的合理消耗。
⏱ 2024-01-07 06:56:12 ^3300036629-4-4026-4176&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第二章-糖抢劫犯破坏者摔跤手&#34;&gt;第二章 糖：抢劫犯、破坏者、摔跤手&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 吃碳水会使血糖升高。某些类型的碳水对血糖的影响比其他类型更显著，但一般来说，碳水对血糖的影响大于蛋白质和脂肪对血糖的影响。血糖升高会促使胰腺分泌胰岛素，这种激素有助于降低血糖
⏱ 2024-01-09 11:24:21 ^3300036629-5-466-553&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 精制碳水没有官方定义。你可以将其理解为从天然食物中提取的糖类和淀粉质，经过浓缩加入其他食物中，或者是被加工成身体更易吸收的糖类。这种精制工序通常也会剔除碳水密集型食物中的纤维、水分、维生素和矿物质，所以吃精制碳水时，身体只能获取大量碳水，却得不到全食物中的其他营养成分。例如，冰糖和果葡糖浆属于精制碳水；贝果、意大利面食、曲奇、薄饼干、烤糕点、松饼、皮塔饼、墨西哥炸玉米片和早餐麦片，即便是用全谷物做成的，也都属于精制碳水。我会在第四章详述。
⏱ 2024-01-07 06:58:35 ^3300036629-5-740-961&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 之前许多医学和营养学专业人士认为，糖分摄入过量最严重的后果是龋齿。而现在我们已经了解到，摄入过量糖分会造成其他许多问题，相比之下龋齿不过是如公园散步一般的小事，至多是到牙科诊所一游。糖的破坏力远远不止损坏牙齿而已。全身的器官和组织都无法逃脱过量糖分的负面影响。如果你身患2型糖尿，或曾目睹亲人受这种病的荼毒，你就会充分了解慢性高血糖的破坏性。它会影响肝、肾、眼睛、心脏和血管、大脑、神经、皮肤，甚至前列腺、阴茎和卵巢。全部会遭殃。
⏱ 2024-01-07 07:03:03 ^3300036629-5-3081-3296&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 糖化的蛋白质，就是被糖分破坏的蛋白质，它无法正常工作。如果体内的蛋白质无法正常运转，那么你也无法正常运转。如果你有糖尿病，很可能你每次就诊时医生都会要求你做糖化血红蛋白化验；即便你没有糖尿病，可能也做过多次这种化验。糖化血红蛋白化验不仅测量空腹血糖，还测量糖化的血红蛋白，也就是血液中被糖粘连的血红蛋白比例。糖化血红蛋白化验能够表明过去三个月左右的平均血糖值。虽然实际原理要略复杂一些，但总体来说，糖化血红蛋白越高，血糖就越高。
⏱ 2024-01-09 12:38:39 ^3300036629-5-4261-4475&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 甜食被人为设计和制造得具有成瘾性。整个产业都致力于研究甜食的口味和口感，以诱惑消费者不断地回购、再回购。食品生产商的生物学和生理学造诣比某些医生更深，他们利用这些知识来绑架你的胃口。糖与脂肪结合会更令人难以抗拒，再加入调味剂，就越发如虎添翼。你不会直接吃掉七茶匙食糖，但如果等量的糖伪装成冰激凌、焦糖糖果、麦片或奶昔，你就能毫不费力地下咽了。你也许不会吃混合了油或黄油的糖，但糖加上面粉、鸡蛋和可可粉做成巧克力杯子蛋糕或布朗尼，就会变得无比诱人。吃甜食时，你会觉得它们无比诱人。
⏱ 2024-01-07 07:05:33 ^3300036629-5-6022-6290&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第三章-胰岛素不仅是血糖激素&#34;&gt;第三章 胰岛素：不仅是血糖激素&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但糖化血红蛋白也像空腹血糖一样存在局限性，不是总能反映血糖的全貌。数百万人空腹血糖和糖化血红蛋白都正常，是因为长期升高的胰岛素将这些指标约束在正常范围内。即便血糖正常，高胰岛素也是引发健康和体重问题的罪魁祸首。
⏱ 2024-01-07 07:09:00 ^3300036629-6-611-716&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 与脂肪和蛋白质相比，碳水对血糖的影响最大，因此对胰岛素的影响也最大。胰岛素升高就像在燃烧脂肪时猛踩刹车，却在燃烧碳水时猛踩油门。因此，如果碳水使胰岛素升高的效果最显著，那么碳水限制身体燃烧脂肪的效果也同样最显著。没有燃烧掉的脂肪就会被储存起来。
⏱ 2024-01-07 07:09:56 ^3300036629-6-1390-1512&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 钠元素、尿酸、肾功能和整体健康之间的相似之处并不止于此。嘌呤分解产生尿酸。嘌呤是身体制造的一种含氮化合物，也存在于食物中——特别是富含蛋白质的食物。贝类、红肉、动物内脏（肝、肾）等嘌呤含量较高，因此痛风患者常常被建议对上述食物忌口。但是，红肉和贝类是现代饮食中营养最丰富的食物。它们不但是完全蛋白质的优质来源，而且富含维生素B、铁元素、锌元素、硒元素以及其他关键维生素和矿物质。你可以从其他食物中获取这些营养，但红肉和海鲜提供的这些营养含量特别高，而且更易被身体吸收，其实尿酸患者并不需要避开这些食物。
⏱ 2024-01-07 07:18:33 ^3300036629-6-3586-3837&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你要记住，胰岛素除了影响血糖，还是一种储存激素。它能将脂肪存放在脂肪细胞中，所以采用胰岛素注射的2型糖尿患者会增重，而且很难减重。
⏱ 2024-01-09 12:41:27 ^3300036629-6-7594-7659&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第四章-碳水速成班&#34;&gt;第四章 碳水速成班&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但是，食品加工本身不一定是坏事。有的食品与原料的形态大不相同，但吃起来没有问题。比如，意大利蒜味腊肠和意大利熏火腿看起来完全不像猪，汉堡牛肉饼看起来也不像牛。某种食品对健康有没有损害，并不取决于其加工程度，而是取决于它对血糖和胰岛素的影响，尤其是取决于你的胃口大小和自控力。如果你直接啃整根玉米，啃完一到两根就满足了，但如果把玉米变成炸玉米薄片，即便是全谷物的玉米，那么你也可能会独自干掉一大袋，这样摄入的总热量和碳水就多了。
⏱ 2024-01-09 12:47:55 ^3300036629-7-4197-4410&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2-改变生活饮食法&#34;&gt;2 改变生活饮食法&lt;/h2&gt;
&lt;h3 id=&#34;第六章-找到你的碳水门槛&#34;&gt;第六章 找到你的碳水门槛&lt;/h3&gt;
&lt;h3 id=&#34;第七章-改变生活饮食法阶段一&#34;&gt;第七章 改变生活饮食法阶段一&lt;/h3&gt;
&lt;h3 id=&#34;第八章-改变生活饮食法阶段二&#34;&gt;第八章 改变生活饮食法阶段二&lt;/h3&gt;
&lt;h3 id=&#34;第九章-改变生活饮食法阶段三&#34;&gt;第九章 改变生活饮食法阶段三&lt;/h3&gt;
&lt;h2 id=&#34;3-现实生活中的改变生活饮食法&#34;&gt;3 现实生活中的改变生活饮食法&lt;/h2&gt;
&lt;h3 id=&#34;第十一章-常见问题&#34;&gt;第十一章 常见问题&lt;/h3&gt;
&lt;h3 id=&#34;第十二章-餐食和零食创意&#34;&gt;第十二章 餐食和零食创意&lt;/h3&gt;
&lt;h3 id=&#34;第十三章-在外就餐或边走边吃时遵循改变生活饮食法&#34;&gt;第十三章 在外就餐或边走边吃时遵循改变生活饮食法&lt;/h3&gt;
&lt;h2 id=&#34;附录a-1型糖尿病的注意事项注意事项&#34;&gt;附录A 1型糖尿病的注意事项注意事项&lt;/h2&gt;
&lt;h2 id=&#34;附录b-食物清单&#34;&gt;附录B 食物清单&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E4%BD%A0%E6%98%AF%E4%BD%A0%E5%90%83%E5%87%BA%E6%9D%A5%E7%9A%84%E5%A5%97%E8%A3%85%E5%85%B12%E5%86%8C/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E4%BD%A0%E6%98%AF%E4%BD%A0%E5%90%83%E5%87%BA%E6%9D%A5%E7%9A%84%E5%A5%97%E8%A3%85%E5%85%B12%E5%86%8C/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 你是你吃出来的（套装共2册）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/34/yuewen_39128586/t7_yuewen_391285861678700081.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 你是你吃出来的（套装共2册）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 你是你吃出来的（套装共2册）&lt;/li&gt;
&lt;li&gt;作者： 夏萌&lt;/li&gt;
&lt;li&gt;简介： 本书由《你是你吃出来的：吃对少生病，病了这样吃》《你是你吃出来的2：慢病康复的饮食密码》构成的套装。《你是你吃出来的：吃对少生病，病了这样吃》：高血压、高血脂、糖尿病、冠心病等慢病人群都曾陷入同一个误区——误以为低油低脂保健康，其实多是蛋白质缺乏式营养不良；误以为只能终生服药或手术，忽略了饮食等生活方式改变带来的真正康复。《你是你吃出来的2：慢病康复的饮食密码》：本书是一本针对高血压、高脂血、糖尿病、痛风等慢病患者、亚健康人群从临床医学角度提出营养治病调理思路和方案的临床营养实践类图书。营养专家夏萌老师总结几十年临床经验，从营养学角度辨别诊治多种慢病和亚健康的成因，破除营养认知误区，深入浅出地剖析疾病的饮食根源，带给慢病患者科学的营养指导。&lt;/li&gt;
&lt;li&gt;出版时间 2021-07-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN：&lt;/li&gt;
&lt;li&gt;分类： 医学健康-健康&lt;/li&gt;
&lt;li&gt;出版社： 江西科技出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/ebd322f072550e0aebd4ff9&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;你是你吃出来的&#34;&gt;你是你吃出来的&lt;/h2&gt;
&lt;h3 id=&#34;版权信息-1&#34;&gt;版权信息&lt;/h3&gt;
&lt;h3 id=&#34;序言&#34;&gt;序言&lt;/h3&gt;
&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 大家可能不知道，面条这种食物，吸收得太快，很容易升血糖，也很容易饿。他选了这种食物做晚餐，除了痛快痛快嘴，百害而无一利。我让他把晚饭的面条换成一根老玉米，平时多吃些瘦肉，每天必须喝牛奶。
⏱ 2023-12-21 13:47:39 ^39128586-55-6972-7065&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;part-01-慢病时代饮食革命带来防治新契机&#34;&gt;PART 01 慢病时代——饮食革命带来防治新契机&lt;/h3&gt;
&lt;h4 id=&#34;我们活在快餐当道的世界身体却困在了石器时代&#34;&gt;我们活在快餐当道的世界，身体却困在了石器时代&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 治疗方向错了——这种对抗疗法以前是用来针对外来因素给人体造成的疾病。例如外伤，病毒感染导致的疾病，常采用止血、抗炎、抢救和预防接种等方式，但并不适用于慢病。慢病是行为方式错误造成的，矫正错误行为才是根本。
⏱ 2023-12-21 13:51:29 ^39128586-57-2255-2357&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  这些营养，从临床医学角度准确地描述，叫作七大营养素，包括：碳水化合物（又称为糖类，包括葡萄糖、果糖、麦芽糖、淀粉等）蛋白质（分为必需氨基酸和非必需氨基酸）脂类（分为脂肪和类脂，脂肪又叫甘油三酯，分为必需脂肪酸和非必需脂肪酸；类脂包括磷脂、胆固醇、胆固醇脂、糖脂）维生素（分为脂溶性维生素和水溶性维生素）矿物质（分为常量元素和微量元素）膳食纤维（分为可溶性膳食纤维和不可溶性膳食纤维）水 ^39128586-57-4421-4932&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 此处需要画脑图 - ⏱ 2023-12-21 19:08:48&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一个人如果躺着不动，室温保持在20～25℃，测出来的能量消耗称为基础代谢。一般来讲，男性为1400千卡／天左右，女性在1300千卡／天左右。
⏱ 2023-12-21 19:16:00 ^39128586-57-5290-5360&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 总结起来，食物进到人体中有四个主要去向：给细胞提供能量、成为细胞结构、调节细胞代谢、养肠道菌群。给细胞提供能量——主要靠碳水化合物类，也就是粮食、水果等。成为细胞结构——主要靠蛋白质类和脂类，主要存在于肉、蛋、奶、鱼中。调节细胞代谢——蛋白质类和胆固醇类，还有维生素、矿物质。养肠道菌群——食物中的膳食纤维。这就是七大营养素修复细胞损伤的方式。
⏱ 2023-12-21 19:28:16 ^39128586-57-8785-9102&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;防治慢病吃什么35动物类食物65植物类食物&#34;&gt;防治慢病吃什么：35%动物类食物+65%植物类食物&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这一切带来的后果是，几乎所有食物中的营养素都在贬值。据日本2006年发布的一则调查显示，和20年前相比，菠菜的营养素只剩下了不到20%。与此同时，食品安全成为重要问题，一些从未在我们生活中出现的食物出现了，比如：各种添加剂：口味剂、防腐剂、保鲜剂、色素等。工业生产的反式脂肪酸（人造黄油、起酥油）。精米、精面。精米、精面是近几十年工业发展的结果，老祖宗吃的是五谷杂粮，那时候食物加工要靠手工，不可能制造出精细的米和面。精米、精面衍生出的各种食物，比如各种点心、面条、米粉等。各种小食品，如膨化食品、糖果、口香糖等。各种饮料。老祖宗喝的是干净的河水、烧开的水、矿泉水和茶水。各种方便食品：方便面、饼干、膨化食品等。回头看，人类曾经是地球上摄食种类最多的动物，以荤素搭配的饮食结构为最鲜明特色。相比其他动物要丰富得多的营养素摄取，让人类逐渐进化，成为世界的霸主。但是近1万年来的农业革命，以及近200年的工业革命，让一些细胞不认识的不速之客成为人类习以为常的盘中餐，人们对食物的追逐变成了等待它的成熟和不费吹灰之力的购买。
⏱ 2023-12-21 19:34:25 ^39128586-58-2938-3609&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;防治慢病怎么吃注重结构型营养素和营养密度&#34;&gt;防治慢病怎么吃：注重结构型营养素和营养密度&lt;/h4&gt;
&lt;h3 id=&#34;part-02-不生病的奥秘七大营养素平衡&#34;&gt;PART 02 不生病的奥秘——七大营养素平衡&lt;/h3&gt;
&lt;h4 id=&#34;能量平衡比例合理更重要&#34;&gt;能量平衡：比例合理更重要&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 第一步：要知道他的标准体重。标准体重（千克）=身高（厘米）－105，因此这位男士的标准体重是175－105=70（千克）。第二步：他是个轻体力劳动者，而且不是大胖子，也不是很瘦的人，因此每日每千克体重所需能量为30千卡，这位男士每日所需总能量为70×30＝2100（千卡）。第三步：计算三大能量比例。碳水化合物占总能量的55%：2100×55%＝1155（千卡），每克碳水化合物产生4千卡能量，此人每日应该摄入碳水化合物为1155÷4＝288.75（克）。算出288.75克的碳水化合物后，在实际操作中还有一个技巧可以用，就是将这些碳水化合物一分为二，一半是粗粮和谷薯，另一半是米面。如果是体力劳动者或者比较瘦的人，还有胃肠功能差的人，我会把细粮的比例加大；如果是肥胖者或者运动量很少的人，我会把粗粮的比例加大。蛋白质占总能量的15%：2100×15%＝315（千卡），每克蛋白质产生4千卡能量，所需蛋白质315÷4＝78.75（克）。其中动植物蛋白质应该各占一半，即各39.375克。一个中等大小鸡蛋差不多含有6克蛋白质，200毫升牛奶含有6克蛋白质，瘦肉（四条腿或两条腿的动物）以及鱼类基本上含有17%～20%的蛋白质，即每100克肉含有17～20克蛋白质。所以此人应该每天吃1个鸡蛋、300毫升牛奶和约150克肉类或鱼类（相当于3两）。实际操作时必须注意，蛋白质的摄入量不能打折扣，鼓励尽量多一些，但不要超过20%。脂类占总能量的30%：2100×30%＝630（千卡），每克脂类产生9千卡能量，因此需要630÷9＝70（克）。其中植物油占一半，为每天35克。动物油在吃鸡蛋、肉类食物和喝牛奶时可以获得，为35克。如果一个人吃得很素，动物油来源少，那么他的植物油必须增加。脂类的摄入在保证数量的同时还要注重比例，单不饱和脂肪酸和多不饱和脂肪酸要更多一些，因此鱼、虾和海藻要多吃一些。如果平时消耗能量很大，比如送快递的快递员、下地的农民，即使身高、体重不变，但因为能量消耗大大增加了，所以每种营养素的摄入都要相应有一个较大幅度的提高。年龄大的人一般能量消耗少，要相应减少饮食的总能量，但是三大能量比例不要变。
⏱ 2023-12-24 11:13:01 ^39128586-61-5496-6634&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;蛋白质平衡选对优质蛋白事半功倍&#34;&gt;蛋白质平衡：选对优质蛋白，事半功倍&lt;/h4&gt;
&lt;h4 id=&#34;碳水化合物平衡体力消耗量是重要参照&#34;&gt;碳水化合物平衡：体力消耗量是重要参照&lt;/h4&gt;
&lt;h4 id=&#34;脂类平衡每日摄入量不能低于总能量的30&#34;&gt;脂类平衡：每日摄入量不能低于总能量的30%&lt;/h4&gt;
&lt;h4 id=&#34;维生素平衡极容易缺乏很难过量&#34;&gt;维生素平衡：极容易缺乏，很难过量&lt;/h4&gt;
&lt;h4 id=&#34;矿物质平衡四两拨千斤&#34;&gt;矿物质平衡：四两拨千斤&lt;/h4&gt;
&lt;h4 id=&#34;膳食纤维平衡粗粮吃多了会营养不良&#34;&gt;膳食纤维平衡：粗粮吃多了会营养不良&lt;/h4&gt;
&lt;h4 id=&#34;水平衡不是每天8杯水那么简单&#34;&gt;水平衡：不是每天8杯水那么简单&lt;/h4&gt;
&lt;h4 id=&#34;七大营养素平衡小结学会听懂身体的语言&#34;&gt;七大营养素平衡小结：学会听懂身体的语言&lt;/h4&gt;
&lt;h3 id=&#34;part-03-中国式平衡膳食&#34;&gt;PART 03 中国式平衡膳食&lt;/h3&gt;
&lt;h4 id=&#34;全世界平衡膳食标杆地中海式饮食&#34;&gt;全世界平衡膳食标杆——地中海式饮食&lt;/h4&gt;
&lt;h4 id=&#34;人人都该懂点儿中国居民膳食指南&#34;&gt;人人都该懂点儿《中国居民膳食指南》&lt;/h4&gt;
&lt;h4 id=&#34;世上最好的药早餐午餐和晚餐&#34;&gt;世上最好的药：早餐、午餐和晚餐&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 第二，早餐要高蛋白、高碳水化合物。正常人每天需要的蛋白质是每千克体重×(1～1.2)克，此人需要的蛋白质应该是70～84克。我们按照80克计算，其中一半是动物蛋白，应该是40克。如果均匀分配到三餐的话，40÷3≈13.3克。早餐要高蛋白，怎么也应该超过13.3克。如果此人晚上吃得很清淡，没有肉、蛋、奶、鱼，则早餐就要负责起1/2的蛋白质量，相当于20克。早餐必须补充充足的蛋白质，因为一上午要运动、要动脑，需要各种各样的氨基酸，而且有了蛋白质一上午都不容易饿，所以早餐应该有牛奶、鸡蛋，最好有肉类。
⏱ 2023-12-31 23:00:14 ^39128586-73-2593-2843&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 冰箱里事先准备好已经做熟的主食（玉米、馅饼、包子等）。牛奶一周买一次，把一个星期的量准备好。坚果是早就剥好壳的腰果、核桃等，装在瓶子里，放在冰箱里储存。鸡蛋事先煮好，一次多煮几个。家里再储备点水果、黄瓜和西红柿。
⏱ 2023-12-31 23:07:25 ^39128586-73-4954-5060&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;选对食物是一门技术活儿&#34;&gt;选对食物是一门技术活儿&lt;/h4&gt;
&lt;h4 id=&#34;没有放之四海而皆准的食谱&#34;&gt;没有放之四海而皆准的食谱&lt;/h4&gt;
&lt;h3 id=&#34;part-04-我们到底应该怎么吃&#34;&gt;PART 04 我们到底应该怎么吃&lt;/h3&gt;
&lt;h4 id=&#34;肉蛋奶类普遍吃得太少而不是过多&#34;&gt;肉蛋奶类：普遍吃得太少而不是过多&lt;/h4&gt;
&lt;h4 id=&#34;粮食中国传统饮食过于注重主食&#34;&gt;粮食：中国传统饮食过于注重主食&lt;/h4&gt;
&lt;h4 id=&#34;食用油闻油色变的我们往往忽视了油的质量&#34;&gt;食用油：闻油色变的我们往往忽视了油的质量&lt;/h4&gt;
&lt;h4 id=&#34;蔬菜太多人不清楚什么是菜&#34;&gt;蔬菜：太多人不清楚什么是菜&lt;/h4&gt;
&lt;h4 id=&#34;水果吃得实在太少了&#34;&gt;水果：吃得实在太少了&lt;/h4&gt;
&lt;h3 id=&#34;part-05-病了怎样吃知道这四点就够了&#34;&gt;PART 05 病了怎样吃？知道这四点就够了&lt;/h3&gt;
&lt;h4 id=&#34;上皮组织人体80以上肿瘤的发生地&#34;&gt;上皮组织：人体80%以上肿瘤的发生地&lt;/h4&gt;
&lt;h4 id=&#34;结缔组织不只和美容相关&#34;&gt;结缔组织：不只和美容相关&lt;/h4&gt;
&lt;h4 id=&#34;肌肉组织肠胃心脏等器官动力不足都可以由此入手&#34;&gt;肌肉组织：肠胃、心脏等器官动力不足都可以由此入手&lt;/h4&gt;
&lt;h4 id=&#34;神经组织最容易被饿着的指挥系统&#34;&gt;神经组织：最容易被饿着的指挥系统&lt;/h4&gt;
&lt;h3 id=&#34;后记&#34;&gt;后记&lt;/h3&gt;
&lt;h2 id=&#34;你是你吃出来的2&#34;&gt;你是你吃出来的2&lt;/h2&gt;
&lt;h3 id=&#34;版权信息-2&#34;&gt;版权信息&lt;/h3&gt;
&lt;h3 id=&#34;推荐序-科学吃好一日三餐维护我们的自愈力&#34;&gt;推荐序 科学吃好一日三餐，维护我们的自愈力&lt;/h3&gt;
&lt;h3 id=&#34;推荐序-人人健康国家富强&#34;&gt;推荐序 人人健康，国家富强&lt;/h3&gt;
&lt;h3 id=&#34;自序&#34;&gt;自序&lt;/h3&gt;
&lt;h3 id=&#34;part-01-你一定要了解的营养诊疗流程&#34;&gt;PART 01 你一定要了解的营养诊疗流程&lt;/h3&gt;
&lt;h4 id=&#34;脱离流程谈营养调理纯属忽悠&#34;&gt;脱离流程谈营养调理，纯属忽悠&lt;/h4&gt;
&lt;h4 id=&#34;化繁为简5分钟营养习惯自测法&#34;&gt;化繁为简，5分钟营养习惯自测法&lt;/h4&gt;
&lt;h3 id=&#34;part-02-高血压害怕我们这样做&#34;&gt;PART 02 高血压害怕我们这样做&lt;/h3&gt;
&lt;h4 id=&#34;一个月从出现并发症到血压恢复正常我用了这四步&#34;&gt;一个月从出现并发症到血压恢复正常，我用了这四步&lt;/h4&gt;
&lt;h4 id=&#34;血压四怕盐多肉少宅情绪差&#34;&gt;血压四怕：盐多、肉少、宅、情绪差&lt;/h4&gt;
&lt;h4 id=&#34;降压药治标不治本&#34;&gt;降压药治标不治本&lt;/h4&gt;
&lt;h4 id=&#34;高血压人群饮食黄金七则&#34;&gt;高血压人群饮食黄金七则&lt;/h4&gt;
&lt;h4 id=&#34;怎么吃全球都在用的dash饮食清单&#34;&gt;怎么吃？全球都在用的DASH饮食清单&lt;/h4&gt;
&lt;h4 id=&#34;两类特殊类型高血压人群的饮食提醒&#34;&gt;两类特殊类型高血压人群的饮食提醒&lt;/h4&gt;
&lt;h4 id=&#34;常见误区解答&#34;&gt;常见误区解答&lt;/h4&gt;
&lt;h3 id=&#34;part-03-吃对了降血脂哪有那么难&#34;&gt;PART 03 吃对了，降血脂哪有那么难&lt;/h3&gt;
&lt;h4 id=&#34;饮食改变让他的颈动脉斑块化基本消失&#34;&gt;饮食改变让他的颈动脉斑块化基本消失&lt;/h4&gt;
&lt;h4 id=&#34;血脂体脂和食物脂肪一一分清楚&#34;&gt;血脂、体脂和食物脂肪，一一分清楚&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 脂蛋白是装满货物的小船，脂肪、磷脂和胆固醇都是船上的货物。空腹抽血化验查出来的是甘油三酯、高密度脂蛋白胆固醇和低密度脂蛋白胆固醇，实际上是在检验高密度脂蛋白和低密度脂蛋白这两种船上的货物数量。近几十年研究发现，在血液中移动的脂蛋白上的某种成分过高或者过低，与人体某些疾病有关，特别是冠心病、脑卒中、动脉粥样硬化，因此，血脂检测就成了医务人员非常重视的一项化验项目。
⏱ 2023-12-27 08:31:06 ^39128586-106-2461-2643&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  乳糜微粒：代表着摄入的脂类，其中甘油三酯、胆固醇、蛋白质来自食物，磷脂是在小肠壁合成的。甘油三酯比例比较高，这是真正食物中的脂肪。如果正常人在吃完饭后立即抽血化验，可以查到明显的乳糜血，这里面包含的甘油三酯代表刚刚吃进去的脂肪，比如，肉类中的油、炒菜时的油、坚果或奶制品中的油等等。乳糜微粒的胆固醇代表你吃进去的胆固醇。极低密度脂蛋白：是由肝脏合成，运输肝脏合成的内源性甘油三酯、胆固醇和磷脂，其中甘油三酯的比例很大。来到血液中之后，极低密度脂蛋白中的甘油三酯很快被细胞接受利用，极低密度脂蛋白的体积开始变小，成了低密度脂蛋白。低密度脂蛋白：由极低密度脂蛋白转化而来，船还是载脂蛋白B，货物中的甘油三酯减少，胆固醇比例相对增高。高密度脂蛋白：合成有两个来源，主要由肝脏合成，其次是小肠合成，因此，与进食和肝脏合成能力均有关系。其中胆固醇占15%～20%，磷脂占25%～32%，蛋白质占50%。这里面蛋白质占了一半，这点特别重要。 ^39128586-106-5110-5611&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 终于有人讲清楚了 - ⏱ 2023-12-27 08:42:07&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 血脂中的甘油三酯代表什么？甘油三酯是肝脏合成的、脂蛋白小船上的货物之一，是移动的能量。它不是吃进去的脂肪，是肝脏把多余的碳水化合物及酒精的能量转化为脂肪，然后转移出去，成为储存的固定脂肪。
⏱ 2023-12-27 08:58:37 ^39128586-106-9759-9882&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 而血脂化验中的其他三项（总胆固醇、高密度脂蛋白胆固醇、低密度脂蛋白胆固醇）说的都是胆固醇的事。胆固醇不是能量，它是细胞的结构成分，也是类固醇激素的合成原料。千万不要把甘油三酯和胆固醇搞混。
⏱ 2023-12-27 08:58:23 ^39128586-106-9911-10034&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;胆固醇系统运行法则两个和尚挑水吃&#34;&gt;胆固醇系统运行法则：两个和尚挑水吃&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 肝脏是人体的化工厂。人的生活规律是白天吃饭，晚上睡觉，但肝脏在你入睡后仍然非常忙碌。白天，肝脏分解、代谢从肠道吸收的一些有用或有害的物质；晚上人不再进食的时候，肝脏转换成合成模式，继续“上夜班”，合成各种人体必需的物质。经过一夜的辛勤工作，肝脏把储存在肝脏里面的能量转化为甘油三酯、磷脂和胆固醇，以极低密度脂蛋白和低密度脂蛋白的形式移出肝脏，送到周围组织细胞中。胆固醇要想进入细胞中，需要借助脂蛋白受体。
⏱ 2023-12-27 09:29:05 ^39128586-107-2234-2465&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;降低胆固醇想3步做3步&#34;&gt;降低胆固醇，想3步做3步&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 低密度脂蛋白这个“好孩子”在被氧化的时候容易变成“坏孩子”。另外，它还有一个特点，就是有着不同的尺寸，有的颗粒小而密集，有的颗粒又大又圆，蓬松得像棉花一样。颗粒小而密的低密度脂蛋白一旦被氧化，很容易进入血管内皮细胞下层。最近至少已有10篇文章指出，减少摄入碳水化合物，能使低密度脂蛋白从小而密转化为大而膨松。也就是说，吃碳水化合物过多会加重小而密的低密度脂蛋白形成。而且很多研究显示，过多摄入碳水化合物可使低密度脂蛋白胆固醇水平升高。
⏱ 2023-12-27 11:28:11 ^39128586-108-9012-9229&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 所以在高脂血症问题上，抗氧化和减少碳水化合物摄入非常重要。最好不要吃糖果、蛋糕、饼干、点心和含糖饮料，大家喜欢的米粥、米饭、面条、馒头的食用量一定要控制。比较好的碳水化合物来源是新鲜水果、土豆、南瓜、玉米、山药等粗粮。
⏱ 2023-12-27 11:37:51 ^39128586-108-10348-10457&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;高脂血症人群饮食建议&#34;&gt;高脂血症人群饮食建议&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 第一，控制碳水化合物的摄入特别重要，包括含蔗糖的饮料和含高果糖、玉米果糖浆的各种加工食品的摄入。
⏱ 2023-12-27 11:56:06 ^39128586-109-3022-3070&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 现在大家炒菜用的都是植物油，这些从植物中压榨出来的油大多是多不饱和脂肪酸、单不饱和脂肪酸，比如，花生油、菜籽油、亚麻籽油、橄榄油。这些年来，我们的饮食已经发生了巨大的改变，但如果今天让我在动物油和植物油中选一种，我仍然首选人类从狩猎时代就一直吃的动物油。为什么呢？因为近些年来外部环境变化得非常快，但我们的基因与一万年前相比却基本上是一样的。环境的快速变化与基因的稳定形成了强烈的反差，从而也造成了慢病的流行。现在家庭常用的花生油、菜籽油、豆油、玉米油、香油、葵花子油等都是食用植物油，这些植物油中的ω-6亚油酸含量很高，它属于必需脂肪酸，但是什么都不能过量。人类从早期食用以饱和脂肪酸和ω-3为主的动物油，突然变成现在以ω-6为主的植物油，比例失衡，会使体内产生更多的炎症因子，更容易导致血管损伤。一般来说，植物油中大多ω-6含量高一些，深海鱼中ω-3含量高一些。而植物油中含单不饱和脂肪酸比较多的是橄榄油和茶籽油，动物油中含有ω-3脂肪酸较多的有鲑鱼、鲭鱼等深海鱼，另外某些植物油（芝麻油、亚麻籽油）也含有ω-3脂肪酸，这些都是不错的选择。
⏱ 2023-12-27 11:58:54 ^39128586-109-4481-5040&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;part-04-血糖稳定一日三餐有讲究&#34;&gt;PART 04 血糖稳定，一日三餐有讲究&lt;/h3&gt;
&lt;h4 id=&#34;每天散步1小时不沾荤腥为什么会得糖尿病&#34;&gt;每天散步1小时，不沾荤腥，为什么会得糖尿病？&lt;/h4&gt;
&lt;h4 id=&#34;我们为什么容易得糖尿病&#34;&gt;我们为什么容易得糖尿病？&lt;/h4&gt;
&lt;h4 id=&#34;血糖到底从哪儿来到哪儿去&#34;&gt;血糖到底从哪儿来，到哪儿去&lt;/h4&gt;
&lt;h4 id=&#34;胰岛素以一敌五做错了等于釜底抽薪&#34;&gt;胰岛素以一敌五，做错了等于釜底抽薪&lt;/h4&gt;
&lt;h4 id=&#34;人人都能用的糖尿病食谱不用也罢&#34;&gt;人人都能用的糖尿病食谱，不用也罢&lt;/h4&gt;
&lt;h4 id=&#34;只有医生知道的控糖诀窍&#34;&gt;只有医生知道的控糖诀窍&lt;/h4&gt;
&lt;h4 id=&#34;常见误区解答-1&#34;&gt;常见误区解答&lt;/h4&gt;
&lt;h3 id=&#34;part-05-别把肾脏吃成牺牲品&#34;&gt;PART 05 别把肾脏吃成牺牲品&lt;/h3&gt;
&lt;h4 id=&#34;我的肾病是这样调好的&#34;&gt;我的肾病是这样调好的&lt;/h4&gt;
&lt;h4 id=&#34;慢性肾病是这样发生的&#34;&gt;慢性肾病是这样发生的&lt;/h4&gt;
&lt;h4 id=&#34;抓大放小肾脏健康吃出来&#34;&gt;抓大放小，肾脏健康吃出来&lt;/h4&gt;
&lt;h4 id=&#34;有一种骨折和肾病相关&#34;&gt;有一种骨折和肾病相关&lt;/h4&gt;
&lt;h4 id=&#34;常见误区解答-2&#34;&gt;常见误区解答&lt;/h4&gt;
&lt;h3 id=&#34;part-06-痛风饮食不简单&#34;&gt;PART 06 痛风饮食不简单&lt;/h3&gt;
&lt;h4 id=&#34;不吃肉不喝酒痛风怎么会找上她&#34;&gt;不吃肉不喝酒，痛风怎么会找上她&lt;/h4&gt;
&lt;h4 id=&#34;痛风是身体在报警&#34;&gt;痛风是身体在报警&lt;/h4&gt;
&lt;h4 id=&#34;保持尿酸平衡是个系统工程&#34;&gt;保持尿酸平衡是个系统工程&lt;/h4&gt;
&lt;h4 id=&#34;吃对食物不再痛&#34;&gt;吃对食物不再痛&lt;/h4&gt;
&lt;h4 id=&#34;小习惯大问题&#34;&gt;小习惯，大问题&lt;/h4&gt;
&lt;h4 id=&#34;常见误区解答-3&#34;&gt;常见误区解答&lt;/h4&gt;
&lt;h3 id=&#34;part-07-远离肿瘤攘外必先安内&#34;&gt;PART 07 远离肿瘤，攘外必先安内&lt;/h3&gt;
&lt;h4 id=&#34;他肿瘤标志物值606单位毫升却在5个月后完全恢复正常&#34;&gt;他肿瘤标志物值606单位/毫升，却在5个月后完全恢复正常&lt;/h4&gt;
&lt;h4 id=&#34;十年磨一剑肿瘤是身体里的坏孩子&#34;&gt;十年磨一剑，肿瘤是身体里的坏孩子&lt;/h4&gt;
&lt;h4 id=&#34;防治肿瘤提高免疫力最关键&#34;&gt;防治肿瘤，提高免疫力最关键&lt;/h4&gt;
&lt;h4 id=&#34;得了肿瘤怎么办&#34;&gt;得了肿瘤怎么办？&lt;/h4&gt;
&lt;h4 id=&#34;肿瘤患者食愈方案&#34;&gt;肿瘤患者食愈方案&lt;/h4&gt;
&lt;h4 id=&#34;好钢用在刀刃上如何应对肿瘤治疗不良反应&#34;&gt;好钢用在刀刃上——如何应对肿瘤治疗不良反应&lt;/h4&gt;
&lt;h4 id=&#34;癌症三分之一可防三分之一可治三分之一可缓解&#34;&gt;癌症三分之一可防，三分之一可治，三分之一可缓解&lt;/h4&gt;
&lt;h4 id=&#34;常见误区解答-4&#34;&gt;常见误区解答&lt;/h4&gt;
&lt;h3 id=&#34;part-08-养心就是养命&#34;&gt;PART 08 养心就是养命&lt;/h3&gt;
&lt;h4 id=&#34;弄清部位和原因看人下菜碟&#34;&gt;弄清部位和原因，看人下菜碟&lt;/h4&gt;
&lt;h4 id=&#34;心衰营养哪里来低钠高营养&#34;&gt;心衰营养哪里来？低钠高营养&lt;/h4&gt;
&lt;h4 id=&#34;动脉粥样硬化营养治疗好钢用在刀刃上&#34;&gt;动脉粥样硬化营养治疗：好钢用在刀刃上&lt;/h4&gt;
&lt;h4 id=&#34;冠心病患者怎么吃疗效藏在细节里&#34;&gt;冠心病患者怎么吃？疗效藏在细节里&lt;/h4&gt;
&lt;h4 id=&#34;专治心律不齐的营养三剑客&#34;&gt;专治心律不齐的营养“三剑客”&lt;/h4&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;前言-1&#34;&gt;前言&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我不禁问自己，为什么这个奇迹会发生？营养素到底在我体内起了什么作用？肾炎的种类很多，我的疾病的治愈是运气使然还是有什么规律可循？  ^6733360-7NCGIr2Pj
- 💭 营养学也能治疗疾病
- ⏱ 2023-12-21 13:43:18&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;我们活在快餐当道的世界身体却困在了石器时代-1&#34;&gt;我们活在快餐当道的世界，身体却困在了石器时代&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这些营养，从临床医学角度准确地描述，叫作七大营养素，包括：
碳水化合物（又称为糖类，包括葡萄糖、果糖、麦芽糖、淀粉等）
蛋白质（分为必需氨基酸和非必需氨基酸）
脂类（分为脂肪和类脂，脂肪又叫甘油三酯，分为必需脂肪酸和非必需脂肪酸；类脂包括磷脂、胆固醇、胆固醇脂、糖脂）
维生素（分为脂溶性维生素和水溶性维生素）
矿物质（分为常量元素和微量元素）
膳食纤维（分为可溶性膳食纤维和不可溶性膳食纤维）
水  ^6733360-7ND22RDjS
- 💭 此处需要画脑图
- ⏱ 2023-12-21 19:08:58&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 细胞核里有DNA，是细胞的司令部，记载着所有细胞应该执行的程序。细胞核的膜叫核膜，和上面说的细胞膜结构一样，由磷脂、蛋白质、胆固醇等成分组成。这个膜上有很多孔，细胞质中的营养物质可以通过核孔进入细胞核里。核膜上有大量的多种酶，可进行各种生命活动。  ^6733360-7ND2ZHVjo
- 💭 要是能画图就好了
- ⏱ 2023-12-21 19:23:28&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;防治慢病吃什么35动物类食物65植物类食物-1&#34;&gt;防治慢病吃什么：35%动物类食物+65%植物类食物&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 正如恩格斯所说：“从只吃植物过渡到同时也吃肉，是古猿转变成人的重要一步。”在生存环境和饮食方式改变的过程中，我们的老祖宗逐渐开始直立行走。  ^6733360-7ND3tkiug
- 💭 吃肉是多么重要
- ⏱ 2023-12-21 19:30:45&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 农业的发展大大改变了人类的饮食结构，肉类食物比例减少，植物类食物所占比例明显增多，定居生活带来的是人类大脑增容和体质增强的戛然而止。  ^6733360-7ND3yWYDL
- 💭 农业发展对人类本身的物种进化来说是倒退
- ⏱ 2023-12-21 19:32:09&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;防治慢病怎么吃注重结构型营养素和营养密度-1&#34;&gt;防治慢病怎么吃：注重结构型营养素和营养密度&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 人饿的时候，碳水化合物先被用光，之后才是皮下脂肪和蛋白质。
一般来讲，人在饥饿时，以脂肪分解为主，占80%左右，蛋白质的分解约占20%，脂肪和蛋白质的分解比例约为4∶1。比如一个房间里没有电，是靠烧煤来取暖做饭，现在煤也没了，怎么办？把门、窗都拆了，扔到炉子里燃烧。  ^6733360-7NFDoWDJl
- 💭 所以在饥饿条件下减肥岂不是最有效
- ⏱ 2023-12-23 12:12:42&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;能量平衡比例合理更重要-1&#34;&gt;能量平衡：比例合理更重要&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 讲到这里，相信大家都很想知道每个人所需要的能量是多少？  ^6733360-7NH5B5ScF
- 💭 最核心部分的内容
- ⏱ 2023-12-24 11:09:53&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;世上最好的药早餐午餐和晚餐-1&#34;&gt;世上最好的药：早餐、午餐和晚餐&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 近两年，一些人开始做五谷杂粮早餐，有的人是把各种豆类、粮食、坚果煮成粥；有的人是打成汁；有的人去买五谷杂粮粉，用开水冲。这些五谷杂粮肯定比喝白米粥、吃馒头营养价值高，但是要注意，不管怎样，五谷杂粮的主要成分还是碳水化合物，还是要同时吃鸡蛋、牛奶、蔬菜、肉类，才算是真正的满分营养早餐。  ^6733360-7NSuHkrpe
- 💭 早餐五谷杂粮还是碳水为主
- ⏱ 2023-12-31 23:06:32&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;血脂体脂和食物脂肪一一分清楚-1&#34;&gt;血脂、体脂和食物脂肪，一一分清楚&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 乳糜微粒：代表着摄入的脂类，其中甘油三酯、胆固醇、蛋白质来自食物，磷脂是在小肠壁合成的。甘油三酯比例比较高，这是真正食物中的脂肪。如果正常人在吃完饭后立即抽血化验，可以查到明显的乳糜血，这里面包含的甘油三酯代表刚刚吃进去的脂肪，比如，肉类中的油、炒菜时的油、坚果或奶制品中的油等等。乳糜微粒的胆固醇代表你吃进去的胆固醇。
极低密度脂蛋白：是由肝脏合成，运输肝脏合成的内源性甘油三酯、胆固醇和磷脂，其中甘油三酯的比例很大。来到血液中之后，极低密度脂蛋白中的甘油三酯很快被细胞接受利用，极低密度脂蛋白的体积开始变小，成了低密度脂蛋白。
低密度脂蛋白：由极低密度脂蛋白转化而来，船还是载脂蛋白B，货物中的甘油三酯减少，胆固醇比例相对增高。
高密度脂蛋白：合成有两个来源，主要由肝脏合成，其次是小肠合成，因此，与进食和肝脏合成能力均有关系。其中胆固醇占15%～20%，磷脂占25%～32%，蛋白质占50%。这里面蛋白质占了一半，这点特别重要。  ^6733360-7NLuRfEuB
- 💭 终于有人讲清楚了
- ⏱ 2023-12-27 08:42:17&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;胆固醇系统运行法则两个和尚挑水吃-1&#34;&gt;胆固醇系统运行法则：两个和尚挑水吃&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 第二，看白天从食物中摄入胆固醇的量。白天摄入多，晚上肝脏自我合成的就少；白天摄入少，晚上肝脏合成的就多。因此，吃素的人或者不敢吃胆固醇的人低密度脂蛋白胆固醇往往很高，而每天吃很多鸡蛋的人，低密度脂蛋白胆固醇反而正常。  ^6733360-7NLy6U4ui
- 💭 原来如此
- ⏱ 2023-12-27 09:31:56&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;降低胆固醇想3步做3步-1&#34;&gt;降低胆固醇，想3步做3步&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-10&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 维生素A和维生素E都是脂溶性的维生素，必须溶解在油脂中才能被人体吸收，如胡萝卜，只有用油炒着吃或者和肉类一起炖着吃才能成为可以吸收的胡萝卜素。  ^6733360-7NLFydJOP
- 💭 胡萝卜炖肉
- ⏱ 2023-12-27 11:25:33&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;高脂血症人群饮食建议-1&#34;&gt;高脂血症人群饮食建议&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-11&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 最后，一定不要吃含反式脂肪酸的食物。含反式脂肪酸的食物有奶油蛋糕、咖啡伴侣、起酥面包、冰淇淋、雪糕、棒冰、巧克力、带酥皮的点心或零食、薯条、薯片、蛋黄派或草莓派、大部分饼干、奶茶、泡芙、薄脆饼等等。  ^6733360-7NLHX0T2f
- 💭 面包饼干要无缘了
- ⏱ 2023-12-27 12:02:11&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%85%89%E5%88%BB%E5%B7%A8%E4%BA%BAasml%E5%B4%9B%E8%B5%B7%E4%B9%8B%E8%B7%AF/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%85%89%E5%88%BB%E5%B7%A8%E4%BA%BAasml%E5%B4%9B%E8%B5%B7%E4%B9%8B%E8%B7%AF/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 光刻巨人：ASML崛起之路&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/315/34232315/t7_34232315.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 光刻巨人：ASML崛起之路|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 光刻巨人：ASML崛起之路&lt;/li&gt;
&lt;li&gt;作者： 瑞尼·雷吉梅克&lt;/li&gt;
&lt;li&gt;简介： 如何将一项毫无希望的研究和商业活动转变为价值数十亿美元的机器和世界领先的公司？荷兰企业ASML（阿斯麦）成功了，知名科技作家瑞尼·雷吉梅克（RenéRaaijmakers）在书中揭示了ASML是如何做到的。20世纪80年代，美国光刻机巨头Perkin-Elmer和GCA在芯片光刻市场上遭到了日本竞争对手佳能和尼康的猛烈攻击。结果，美国失去了对这项关键技术长达20年的垄断地位，而这正是摩尔定律背后的驱动力。与此同时，一家默默无闻、无足轻重的光刻机小公司在荷兰刚刚起步。这家公司就是ASML，它在今天获得了无与伦比的成功。作为世界上很大和很赚钱的光刻机制造商，ASML取得了70%~80%的光刻市场份额，并多年来在光刻技术上一骑绝尘，将佳能和尼康远远甩在后面。在《光刻巨人：ASML崛起之路》中，作者瑞尼·雷吉梅克带我们重返了晶圆步进光刻机的诞生地，和我们一起探索了ASML在全球获得令人瞩目的成功之根源所在。&lt;/li&gt;
&lt;li&gt;出版时间 2020-10-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115545183&lt;/li&gt;
&lt;li&gt;分类： 经济理财-财经&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/a2f32b70720a57fba2f8358&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权页&#34;&gt;版权页&lt;/h2&gt;
&lt;h2 id=&#34;献言&#34;&gt;献言&lt;/h2&gt;
&lt;h2 id=&#34;光刻巨人asml崛起之路&#34;&gt;光刻巨人：ASML崛起之路&lt;/h2&gt;
&lt;h2 id=&#34;致中国读者的信&#34;&gt;致中国读者的信&lt;/h2&gt;
&lt;h2 id=&#34;推荐序&#34;&gt;推荐序&lt;/h2&gt;
&lt;h2 id=&#34;诚意推荐&#34;&gt;诚意推荐&lt;/h2&gt;
&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;本书简介&#34;&gt;本书简介&lt;/h2&gt;
&lt;h2 id=&#34;01-光刻机的前历史&#34;&gt;01 光刻机的前历史&lt;/h2&gt;
&lt;h3 id=&#34;一只奇怪的昆虫&#34;&gt;一只奇怪的昆虫&lt;/h3&gt;
&lt;h3 id=&#34;飞利浦半导体和材料部&#34;&gt;飞利浦半导体和材料部&lt;/h3&gt;
&lt;h3 id=&#34;david-mann公司&#34;&gt;David Mann公司&lt;/h3&gt;
&lt;h3 id=&#34;爱德鲍尔&#34;&gt;爱德·鲍尔&lt;/h3&gt;
&lt;h3 id=&#34;小提琴制作师&#34;&gt;小提琴制作师&lt;/h3&gt;
&lt;h2 id=&#34;02-合法的印钞机&#34;&gt;02 合法的印钞机&lt;/h2&gt;
&lt;h3 id=&#34;天生的工程师&#34;&gt;天生的工程师&lt;/h3&gt;
&lt;h3 id=&#34;旅行伙伴&#34;&gt;旅行伙伴&lt;/h3&gt;
&lt;h3 id=&#34;技术文档&#34;&gt;技术文档&lt;/h3&gt;
&lt;h3 id=&#34;晶圆重复曝光光刻机&#34;&gt;晶圆重复曝光光刻机&lt;/h3&gt;
&lt;h3 id=&#34;美国风格&#34;&gt;美国风格&lt;/h3&gt;
&lt;h2 id=&#34;03-垂死挣扎&#34;&gt;03 垂死挣扎&lt;/h2&gt;
&lt;h3 id=&#34;维姆特罗斯特&#34;&gt;维姆·特罗斯特&lt;/h3&gt;
&lt;h3 id=&#34;特罗斯特的信&#34;&gt;特罗斯特的信&lt;/h3&gt;
&lt;h3 id=&#34;gca打出制胜牌&#34;&gt;GCA打出制胜牌&lt;/h3&gt;
&lt;h3 id=&#34;敲响政府的门&#34;&gt;敲响政府的门&lt;/h3&gt;
&lt;h3 id=&#34;电动晶圆台&#34;&gt;电动晶圆台&lt;/h3&gt;
&lt;h3 id=&#34;拯救计划&#34;&gt;拯救计划&lt;/h3&gt;
&lt;h3 id=&#34;金砖做的茅房&#34;&gt;金砖做的茅房&lt;/h3&gt;
&lt;h2 id=&#34;04-达成协议&#34;&gt;04 达成协议&lt;/h2&gt;
&lt;h3 id=&#34;阿瑟德尔普拉多&#34;&gt;阿瑟·德尔·普拉多&lt;/h3&gt;
&lt;h3 id=&#34;五十对五十&#34;&gt;五十对五十&lt;/h3&gt;
&lt;h3 id=&#34;可怕的协议&#34;&gt;可怕的协议&lt;/h3&gt;
&lt;h2 id=&#34;05-杠杆剥离&#34;&gt;05 杠杆剥离&lt;/h2&gt;
&lt;h3 id=&#34;贾特斯密特&#34;&gt;贾特·斯密特&lt;/h3&gt;
&lt;h3 id=&#34;欺骗&#34;&gt;欺骗&lt;/h3&gt;
&lt;h3 id=&#34;重聚&#34;&gt;重聚&lt;/h3&gt;
&lt;h3 id=&#34;交付期限&#34;&gt;交付期限&lt;/h3&gt;
&lt;h3 id=&#34;一亿美元&#34;&gt;一亿美元&lt;/h3&gt;
&lt;h3 id=&#34;从巴黎到奥伯科亨&#34;&gt;从巴黎到奥伯科亨&lt;/h3&gt;
&lt;h3 id=&#34;来自地狱的公司&#34;&gt;来自地狱的公司&lt;/h3&gt;
&lt;h3 id=&#34;日本人&#34;&gt;日本人&lt;/h3&gt;
&lt;h3 id=&#34;最初的蓝图&#34;&gt;最初的蓝图&lt;/h3&gt;
&lt;h3 id=&#34;卡通演示&#34;&gt;卡通演示&lt;/h3&gt;
&lt;h3 id=&#34;第一条招聘广告&#34;&gt;第一条招聘广告&lt;/h3&gt;
&lt;h2 id=&#34;06-截止期限&#34;&gt;06 截止期限&lt;/h2&gt;
&lt;h3 id=&#34;商业计划&#34;&gt;商业计划&lt;/h3&gt;
&lt;h3 id=&#34;地标&#34;&gt;地标&lt;/h3&gt;
&lt;h3 id=&#34;回到elcoma&#34;&gt;回到Elcoma&lt;/h3&gt;
&lt;h3 id=&#34;维多利亚韦斯特旅馆&#34;&gt;维多利亚韦斯特旅馆&lt;/h3&gt;
&lt;h3 id=&#34;蚁冢&#34;&gt;蚁冢&lt;/h3&gt;
&lt;h3 id=&#34;维多利亚酒店&#34;&gt;维多利亚酒店&lt;/h3&gt;
&lt;h3 id=&#34;美国市场&#34;&gt;美国市场&lt;/h3&gt;
&lt;h3 id=&#34;如果说它周五来那它就不会来&#34;&gt;如果说它周五来，那它就不会来&lt;/h3&gt;
&lt;h3 id=&#34;快快快赶上了&#34;&gt;快！快！快赶上了&lt;/h3&gt;
&lt;h3 id=&#34;我们可以赢的&#34;&gt;我们可以赢的&lt;/h3&gt;
&lt;h3 id=&#34;我们听见了你的话杰瑞&#34;&gt;我们听见了你的话，杰瑞&lt;/h3&gt;
&lt;h3 id=&#34;amd公司&#34;&gt;AMD公司&lt;/h3&gt;
&lt;h3 id=&#34;斯密特的发声板&#34;&gt;斯密特的发声板&lt;/h3&gt;
&lt;h3 id=&#34;紧急会议&#34;&gt;紧急会议&lt;/h3&gt;
&lt;h3 id=&#34;不再狂野的怀尔德&#34;&gt;不再狂野的怀尔德&lt;/h3&gt;
&lt;h2 id=&#34;07-花钱大王&#34;&gt;07 花钱大王&lt;/h2&gt;
&lt;h3 id=&#34;幸福感&#34;&gt;幸福感&lt;/h3&gt;
&lt;h3 id=&#34;美国最强硬的老板&#34;&gt;美国最强硬的老板&lt;/h3&gt;
&lt;h3 id=&#34;德尔普拉多又被诱惑了&#34;&gt;德尔·普拉多又被诱惑了&lt;/h3&gt;
&lt;h3 id=&#34;gca的黄昏&#34;&gt;GCA的黄昏&lt;/h3&gt;
&lt;h3 id=&#34;日本设备的可靠性&#34;&gt;日本设备的可靠性&lt;/h3&gt;
&lt;h3 id=&#34;碎梦大道&#34;&gt;碎梦大道&lt;/h3&gt;
&lt;h3 id=&#34;接受不接受随你&#34;&gt;接受不接受随你&lt;/h3&gt;
&lt;h3 id=&#34;80美元和再见&#34;&gt;80美元和再见&lt;/h3&gt;
&lt;h2 id=&#34;08-走上正轨&#34;&gt;08 走上正轨&lt;/h2&gt;
&lt;h3 id=&#34;胖胖的人&#34;&gt;胖胖的人&lt;/h3&gt;
&lt;h3 id=&#34;一贫如洗&#34;&gt;一贫如洗&lt;/h3&gt;
&lt;h3 id=&#34;有希望的客户&#34;&gt;有希望的客户&lt;/h3&gt;
&lt;h3 id=&#34;尼康的阿喀琉斯之踵&#34;&gt;尼康的阿喀琉斯之踵&lt;/h3&gt;
&lt;h3 id=&#34;现金流变正&#34;&gt;现金流变正&lt;/h3&gt;
&lt;h3 id=&#34;开启加速模式&#34;&gt;开启加速模式&lt;/h3&gt;
&lt;h3 id=&#34;ibm公司&#34;&gt;IBM公司&lt;/h3&gt;
&lt;h2 id=&#34;09-你追我赶&#34;&gt;09 你追我赶&lt;/h2&gt;
&lt;h3 id=&#34;圆桌会议新老板&#34;&gt;圆桌会议新老板&lt;/h3&gt;
&lt;h3 id=&#34;德国人的垄断&#34;&gt;德国人的垄断&lt;/h3&gt;
&lt;h3 id=&#34;给ibm的录像片&#34;&gt;给IBM的录像片&lt;/h3&gt;
&lt;h3 id=&#34;有金手指的工匠&#34;&gt;有“金手指”的工匠&lt;/h3&gt;
&lt;h3 id=&#34;日本玻璃&#34;&gt;日本玻璃&lt;/h3&gt;
&lt;h3 id=&#34;蔡司o-lab&#34;&gt;蔡司O-Lab&lt;/h3&gt;
&lt;h3 id=&#34;靠信誉经营&#34;&gt;靠信誉经营&lt;/h3&gt;
&lt;h3 id=&#34;想都不用想的事&#34;&gt;想都不用想的事&lt;/h3&gt;
&lt;h2 id=&#34;10-增长&#34;&gt;10 增长&lt;/h2&gt;
&lt;h3 id=&#34;完美的团队&#34;&gt;完美的团队&lt;/h3&gt;
&lt;h3 id=&#34;主人翁的价值&#34;&gt;主人翁的价值&lt;/h3&gt;
&lt;h3 id=&#34;扫描光刻机&#34;&gt;扫描光刻机&lt;/h3&gt;
&lt;h3 id=&#34;韩国巨头&#34;&gt;韩国巨头&lt;/h3&gt;
&lt;h3 id=&#34;四十大盗&#34;&gt;四十大盗&lt;/h3&gt;
&lt;h3 id=&#34;拯救公司的医生&#34;&gt;拯救公司的医生&lt;/h3&gt;
&lt;h3 id=&#34;开坦克的参会者&#34;&gt;开坦克的参会者&lt;/h3&gt;
&lt;h3 id=&#34;格拉斯曼的严峻挑战&#34;&gt;格拉斯曼的严峻挑战&lt;/h3&gt;
&lt;h3 id=&#34;独立自主&#34;&gt;独立自主&lt;/h3&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;h3 id=&#34;附录2-david-mann公司&#34;&gt;附录2 David Mann公司&lt;/h3&gt;
&lt;h3 id=&#34;附录3-20世纪60年代初飞利浦natlab的技术微型化&#34;&gt;附录3 20世纪60年代初，飞利浦Natlab的技术微型化&lt;/h3&gt;
&lt;h3 id=&#34;附录4-光图机&#34;&gt;附录4 光图机&lt;/h3&gt;
&lt;h3 id=&#34;附录5-电子束掩模制作机&#34;&gt;附录5 电子束掩模制作机&lt;/h3&gt;
&lt;h3 id=&#34;附录6-摩尔定律与芯片设备游戏规则&#34;&gt;附录6 摩尔定律与芯片设备游戏规则&lt;/h3&gt;
&lt;h3 id=&#34;附录7-合资协议估值&#34;&gt;附录7 合资协议：估值&lt;/h3&gt;
&lt;h3 id=&#34;附录8-合资协议最开始的计算&#34;&gt;附录8 合资协议：最开始的计算&lt;/h3&gt;
&lt;h3 id=&#34;附录9-对准全局对准裸片对准和双对准&#34;&gt;附录9 对准：全局对准、裸片对准和双对准&lt;/h3&gt;
&lt;h3 id=&#34;附录10-电动晶圆台之谜&#34;&gt;附录10 电动晶圆台之谜&lt;/h3&gt;
&lt;h3 id=&#34;附录11-合资协议asm退出时的最后声明&#34;&gt;附录11 合资协议：ASM退出时的最后声明&lt;/h3&gt;
&lt;h3 id=&#34;附录12-长冲程短冲程电机&#34;&gt;附录12 长冲程、短冲程电机&lt;/h3&gt;
&lt;h2 id=&#34;人物表按字母排序&#34;&gt;人物表（按字母排序）&lt;/h2&gt;
&lt;h2 id=&#34;术语表&#34;&gt;术语表&lt;/h2&gt;
&lt;h2 id=&#34;作者采访人物2011年2017年&#34;&gt;作者采访人物（2011年—2017年）&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;作者后记&#34;&gt;作者后记&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;前言-1&#34;&gt;前言&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ASML能做成今天这个样子，是在成立之初就计划好的。”坦率地说，这家公司现在的文化是很有攻击性的：不顾一切地成为赢者直到垄断市场。这种颠覆性的思想在ASML成立时就根植于其文化中，并孕育了后来的一切。  ^6733360-7oQmmD0tx
- 💭 文化基因
- ⏱ 2021-03-16 13:46:31&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%88%AB%E5%AE%B3%E6%80%95%E5%86%B2%E7%AA%81/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%88%AB%E5%AE%B3%E6%80%95%E5%86%B2%E7%AA%81/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 别害怕冲突&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/5/cpplatform_jpzk4mcrk7wjant9wpwvjp/t7_cpplatform_jpzk4mcrk7wjant9wpwvjp1687321903.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 别害怕冲突|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 别害怕冲突&lt;/li&gt;
&lt;li&gt;作者： 彼得·博格西昂 詹姆斯·林赛&lt;/li&gt;
&lt;li&gt;简介： 如果你
害怕面对冲突场景，甚至可能会因此产生生理不适
容易对事情的发展后果过度想象，产生畏惧心理
习惯性妥协，信奉“算了吧，忍一时分平浪静”&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果对方
容易在激动中“上头”，丧失理智甚至输出指责
总是把问题扩大、升级，无法真正做到就事论事
势必要和你分出胜负，甚至罔顾逻辑、强词夺理&lt;/p&gt;
&lt;p&gt;醒醒吧
一遇到“冲突”就“宕机”
“逃避”“装死”“不服就干”都不能解决问题&lt;/p&gt;
&lt;p&gt;正确的解决方式可以让冲突成为新的转机&lt;/p&gt;
&lt;p&gt;面对冲突，你是习惯隐藏自己的想法对他人进行妥协，还是勇于面对挑衅，大胆主张自己的权益？宜人性和攻击性并不对立，你可以在更融洽的氛围中，以一种对方也能接受的方式捍卫自己的权益。本书作者结合自己多年的理论研究和实践经验，总结出一套可复制的冲突应对方法——让我们被攻击或者正在冲突的沼泽中泥足深陷时，能够尽快自救，并与对方成为朋友、达成共识，让我们能更自信、更健康地生活下去。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;出版时间 2023-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787313285652&lt;/li&gt;
&lt;li&gt;分类： 心理-积极心理学&lt;/li&gt;
&lt;li&gt;出版社： 上海交通大学出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/a8f32880813ab7ed8g015f62&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;第一章-当冲突一触即发你该怎么办-在冲突开始前找到达成共识的可能&#34;&gt;第一章 当冲突一触即发，你该怎么办？ 在冲突开始前，找到达成共识的可能&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一个人的信念可以被改变，沟通是一种改变信念的好方式，强迫则是一种糟糕的方式。比如，一个人绝不会因为自己讨厌的人打了自己一拳而改变自己的信念。我们提倡通过沟通来交流信念，这是因为沟通本质上是一种合作。沟通为双方提供了机会，让彼此能重新思考他们所相信的，从而重新评估他们的行动和决策
⏱ 2024-03-13 22:12:24 ^3300062325-3-2855-2994&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在当今社会，学会在分歧中抓住机会，正确处理分歧是一项至关重要的技能。学习倾听与被倾听，明确地表达自己的观点，正是我们想要解决的问题。
⏱ 2024-03-13 22:14:20 ^3300062325-3-3466-3532&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第二章-建立良好关系的七个基本要素-无论对方是陌生人还是囚犯-不要逼你的谈话伙伴走出舒适圈&#34;&gt;第二章 建立良好关系的七个基本要素 无论对方是陌生人还是囚犯 不要逼你的谈话伙伴走出舒适圈&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 人们的分歧越大，建立并维护融洽关系就越重要。当你和谈话对象之间的关系升温，他的戒心很可能会降低，他会更欢迎你的建议。
⏱ 2024-03-16 09:08:25 ^3300062325-4-5633-5691&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第三章-如何干预他人的认知-初始级别开始改变他人思维的九个方法&#34;&gt;第三章 如何干预他人的认知 初始级别：开始改变他人思维的九个方法&lt;/h2&gt;
&lt;h2 id=&#34;第四章-提升干预手段的七个方法-改变思维包括你自己的思维的有效技巧&#34;&gt;第四章 提升干预手段的七个方法 改变思维（包括你自己的思维）的有效技巧&lt;/h2&gt;
&lt;h2 id=&#34;第五章-处理冲突的五个技巧-如何重新思考你的谈话习惯&#34;&gt;第五章 处理冲突的五个技巧 如何重新思考你的谈话习惯&lt;/h2&gt;
&lt;h2 id=&#34;第六章-像谈判专家一样打破僵局的六个技巧-打破沟通障碍&#34;&gt;第六章 像谈判专家一样打破僵局的六个技巧 打破沟通障碍&lt;/h2&gt;
&lt;h2 id=&#34;第七章-两个关键因素帮你改变难以改变的人-如何改变难以改变的人&#34;&gt;第七章 两个关键因素，帮你改变难以改变的人 如何改变难以改变的人&lt;/h2&gt;
&lt;h2 id=&#34;第八章-迎接挑战-在实践中学以致用&#34;&gt;第八章 迎接挑战 在实践中学以致用&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第二章-建立良好关系的七个基本要素-无论对方是陌生人还是囚犯-不要逼你的谈话伙伴走出舒适圈-1&#34;&gt;第二章 建立良好关系的七个基本要素 无论对方是陌生人还是囚犯 不要逼你的谈话伙伴走出舒适圈&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 为了建立融洽关系，你应该真诚地提问（问那些你真的想了解答案的问题，而不是把问问题当成战术）。对陌生人来说，电影、音乐、共同好友、爱好等都是建立融洽关系的上佳话题。如果你已经与某人很熟，那不妨花点时间闲聊一下他们的子女、父母或者是新住所。通常情况下，几分钟的闲聊就能建立融洽关系。  ^6733360-7PJdnjXHo
- 💭 谈话前简历融洽关系很重要
- ⏱ 2024-03-16 09:09:09&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E5%A6%82%E4%BD%95%E4%BB%8E%E6%96%B0%E6%89%8B%E5%88%B0%E5%A4%A7%E5%B8%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E5%A6%82%E4%BD%95%E4%BB%8E%E6%96%B0%E6%89%8B%E5%88%B0%E5%A4%A7%E5%B8%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 刻意练习：如何从新手到大师&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/95/YueWen_843464/t7_YueWen_843464.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 刻意练习：如何从新手到大师|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 刻意练习：如何从新手到大师&lt;/li&gt;
&lt;li&gt;作者： 安德斯·艾利克森 罗伯特·普尔&lt;/li&gt;
&lt;li&gt;简介： 本书是两位作者合作撰写的，一位是心理学家，另一位是科学作家。10多年前，我们开始经常探讨杰出人物和“刻意练习”这个主题，并在5年前开始认真地围绕这个主题写书。在那段时间，本书在我们两人的思想碰撞中慢慢成形，以至于我们现在都难以分辨，书中的哪一部分观点由谁提出。我们只知道，本书由我们两人合写，比由我们单独去写要好得多，也完全不同。&lt;/li&gt;
&lt;li&gt;出版时间 2016-11-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111551287&lt;/li&gt;
&lt;li&gt;分类： 个人成长-认知思维&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/2e932c005cdec82e9a0e3e8&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;致读者&#34;&gt;致读者&lt;/h2&gt;
&lt;h2 id=&#34;赞誉&#34;&gt;赞誉&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 1万小时定律是有帮助的，但真正实现，还需要坚持不懈，并练习上很多个周期。
——比尔·盖茨（微软创始人）
 
杰出不是一种天赋，而是一种技巧；这种技巧，你我都可以掌握。
——姬十三（分答&amp;amp;在行、果壳网创始人）
 
比1万小时理论更合理！想要成为任何一个行业的专家，你都需要刻意练习！
——樊登（樊登读书会创办人）
⏱ 2018-07-06 10:49:29 ^843464-4-862&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;推荐序&#34;&gt;推荐序&lt;/h2&gt;
&lt;h2 id=&#34;作者声明&#34;&gt;作者声明&lt;/h2&gt;
&lt;h2 id=&#34;引言-天才存在吗&#34;&gt;引言 天才存在吗&lt;/h2&gt;
&lt;h2 id=&#34;第1章-有目的的练习&#34;&gt;第1章 有目的的练习&lt;/h2&gt;
&lt;h2 id=&#34;第2章-大脑的适应能力&#34;&gt;第2章 大脑的适应能力&lt;/h2&gt;
&lt;h2 id=&#34;第3章-心理表征&#34;&gt;第3章 心理表征&lt;/h2&gt;
&lt;h2 id=&#34;第4章-黄金标准&#34;&gt;第4章 黄金标准&lt;/h2&gt;
&lt;h2 id=&#34;第5章-在工作中运用刻意练习原则&#34;&gt;第5章 在工作中运用刻意练习原则&lt;/h2&gt;
&lt;h2 id=&#34;第6章-在生活中运用刻意练习原则&#34;&gt;第6章 在生活中运用刻意练习原则&lt;/h2&gt;
&lt;h2 id=&#34;第7章-成为杰出人物的路线图&#34;&gt;第7章 成为杰出人物的路线图&lt;/h2&gt;
&lt;h2 id=&#34;第8章-怎样解释天生才华&#34;&gt;第8章 怎样解释天生才华&lt;/h2&gt;
&lt;h2 id=&#34;第9章-用刻意练习创造全新的世界&#34;&gt;第9章 用刻意练习创造全新的世界&lt;/h2&gt;
&lt;h2 id=&#34;参考文献和注释&#34;&gt;参考文献和注释&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%8E%9F%E5%88%99/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%8E%9F%E5%88%99/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/23/YueWen_921568/t7_YueWen_921568.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 原则|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 原则&lt;/li&gt;
&lt;li&gt;作者： 瑞·达利欧&lt;/li&gt;
&lt;li&gt;简介： 华尔街投资大神雷·达里奥白手起家40多年的生活与工作原则，比尔·盖茨、罗辑思维、吴晓波、张瑞敏、潘石屹、万维钢、傅盛等人力荐。瑞·达利欧是全世界顶尖投资家、企业家之一，对冲基金公司桥水创始人。桥水创立至今为客户赚取的收益远远超过历史上任何一家对冲基金。达利欧认为桥水的成功源自他所奉行的一套原则，而这些原则也是他一生中学到的最重要的东西。达利欧认为，我们可以像看待机器一样看待生活、管理、经商和投资，并将其系统化为一系列原则。这本书阐述了他的原则的两大基石——极度求真、极度透明，并介绍了以此为基础的创意择优，以及基于可信度评价的决策机制。书中500多条原则将帮助我们保持开放心态，看清现实，正确评价自己和他人，从容面对做决策、打造强大团队等问题，更进一步深入认识自我，实现不断成长。达利欧相信，自己的成功并非因为个人的特质，而是因为他从失败中学会了做人、做事的原则，而大多数人和公司都可以运用他的这些原则更好地实现自己的目标。&lt;/li&gt;
&lt;li&gt;出版时间 2018-01-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787508684031&lt;/li&gt;
&lt;li&gt;分类： 经济理财-管理&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/848324405e0fe08483ab6a4&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;h2 id=&#34;献词&#34;&gt;献词&lt;/h2&gt;
&lt;h2 id=&#34;中文版序&#34;&gt;中文版序&lt;/h2&gt;
&lt;h2 id=&#34;导言&#34;&gt;导言&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-我的历程&#34;&gt;第一部分 我的历程&lt;/h2&gt;
&lt;h3 id=&#34;1-我的探险召唤-19491967年&#34;&gt;1 我的探险召唤 （1949—1967年）&lt;/h3&gt;
&lt;h3 id=&#34;2-跨越门槛-19671979年&#34;&gt;2 跨越门槛 （1967—1979年）&lt;/h3&gt;
&lt;h3 id=&#34;3-我的低谷-19791982年&#34;&gt;3 我的低谷 （1979—1982年）&lt;/h3&gt;
&lt;h3 id=&#34;4-我的试炼之路-19831994年&#34;&gt;4 我的试炼之路 （1983—1994年）&lt;/h3&gt;
&lt;h3 id=&#34;5-终极恩惠-19952010年&#34;&gt;5 终极恩惠 （1995—2010年）&lt;/h3&gt;
&lt;h3 id=&#34;6-回报恩惠-20112015年&#34;&gt;6 回报恩惠 （2011—2015年）&lt;/h3&gt;
&lt;h3 id=&#34;7-最后的一年和最大的挑战-20162017年&#34;&gt;7 最后的一年和最大的挑战 （2016—2017年）&lt;/h3&gt;
&lt;h3 id=&#34;8-从更高的层面回顾&#34;&gt;8 从更高的层面回顾&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-生活原则&#34;&gt;第二部分 生活原则&lt;/h2&gt;
&lt;h3 id=&#34;2-用五步流程实现-你的人生愿望&#34;&gt;2 用五步流程实现 你的人生愿望&lt;/h3&gt;
&lt;h3 id=&#34;3-做到头脑极度开放&#34;&gt;3 做到头脑极度开放&lt;/h3&gt;
&lt;h3 id=&#34;4-理解人与人大不相同&#34;&gt;4 理解人与人大不相同&lt;/h3&gt;
&lt;h3 id=&#34;5-学习如何有效决策&#34;&gt;5 学习如何有效决策&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 完美主义者花太多时间关注边缘性的微小因素，影响对重大因素的考虑。做出一个决定时通常只有5—10个需要考虑的重要因素。重要的是深入了解这些因素，而过了一定的临界点后，即使研究重要因素，所产生的边际收益也是有限的。
⏱ 2019-10-09 12:38:11 ^921568-17-6072-6177&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;生活原则总结&#34;&gt;生活原则总结&lt;/h3&gt;
&lt;h3 id=&#34;生活原则概要与列表&#34;&gt;生活原则概要与列表&lt;/h3&gt;
&lt;h2 id=&#34;第三部分-工作原则&#34;&gt;第三部分 工作原则&lt;/h2&gt;
&lt;h3 id=&#34;打造良好的文化&#34;&gt;打造良好的文化……&lt;/h3&gt;
&lt;h4 id=&#34;1-相信极度求真和极度透明&#34;&gt;1 相信极度求真和极度透明&lt;/h4&gt;
&lt;h4 id=&#34;2-做有意义的工作发展有意义的人际关系&#34;&gt;2 做有意义的工作，发展有意义的人际关系&lt;/h4&gt;
&lt;h4 id=&#34;3-打造允许犯错但不容忍罔顾教训-一错再错的文化&#34;&gt;3 打造允许犯错，但不容忍罔顾教训、 一错再错的文化&lt;/h4&gt;
&lt;h4 id=&#34;4-求取共识并坚持&#34;&gt;4 求取共识并坚持&lt;/h4&gt;
&lt;h4 id=&#34;5-做决策时要从-观点的可信度出发&#34;&gt;5 做决策时要从 观点的可信度出发&lt;/h4&gt;
&lt;h4 id=&#34;6-知道如何超越分歧&#34;&gt;6 知道如何超越分歧&lt;/h4&gt;
&lt;h3 id=&#34;用对人&#34;&gt;用对人……&lt;/h3&gt;
&lt;h4 id=&#34;7-比做什么事更重要的是-找对做事的人&#34;&gt;7 比做什么事更重要的是 找对做事的人&lt;/h4&gt;
&lt;h4 id=&#34;8-要用对人-因为用人不当的代价高昂&#34;&gt;8 要用对人， 因为用人不当的代价高昂&lt;/h4&gt;
&lt;h4 id=&#34;9-持续培训测试-评估和调配员工&#34;&gt;9 持续培训、测试、 评估和调配员工&lt;/h4&gt;
&lt;h3 id=&#34;建造并进化你的机器&#34;&gt;建造并进化你的机器……&lt;/h3&gt;
&lt;h4 id=&#34;10-像操作一部机器那样-进行管理以实现目标&#34;&gt;10 像操作一部机器那样 进行管理以实现目标&lt;/h4&gt;
&lt;h4 id=&#34;11-发现问题不容忍问题&#34;&gt;11 发现问题，不容忍问题&lt;/h4&gt;
&lt;h4 id=&#34;12-诊断问题探究根源&#34;&gt;12 诊断问题，探究根源&lt;/h4&gt;
&lt;h4 id=&#34;13-改进机器解决问题&#34;&gt;13 改进机器，解决问题&lt;/h4&gt;
&lt;h4 id=&#34;14-按既定计划行事&#34;&gt;14 按既定计划行事&lt;/h4&gt;
&lt;h4 id=&#34;15-运用工具和行为准则-指导工作&#34;&gt;15 运用工具和行为准则 指导工作&lt;/h4&gt;
&lt;h4 id=&#34;16-千万别忽视了公司治理&#34;&gt;16 千万别忽视了公司治理&lt;/h4&gt;
&lt;h3 id=&#34;将工作原则融会贯通&#34;&gt;将工作原则融会贯通&lt;/h3&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;h2 id=&#34;附录-桥水为创意择优所用的工具和行为准则&#34;&gt;附录 桥水为创意择优所用的工具和行为准则&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;审校后记&#34;&gt;审校后记&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%90%91%E4%B8%8A%E7%AE%A1%E7%90%86%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E6%B1%87%E6%8A%A5%E5%B7%A5%E4%BD%9C/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%90%91%E4%B8%8A%E7%AE%A1%E7%90%86%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E6%B1%87%E6%8A%A5%E5%B7%A5%E4%BD%9C/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 向上管理：如何正确汇报工作？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/305/858305/t7_858305.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 向上管理：如何正确汇报工作？|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 向上管理：如何正确汇报工作？&lt;/li&gt;
&lt;li&gt;作者： 蒋巍巍&lt;/li&gt;
&lt;li&gt;简介： 高级企业管理顾问，北京大学国家软实力课题组成员，清华大学领导力培训中心、上海财经大学商学院EDP讲师，中国民营企业“团队建设与管理”领域实战顾问，常年专注于“中国式团队建设”与“企业执行力”提升研究。&lt;/li&gt;
&lt;li&gt;出版时间 2015-08-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115396730&lt;/li&gt;
&lt;li&gt;分类： 经济理财-管理&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/3ad32b605d18c13ad3c25fa&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;内容提要&#34;&gt;内容提要&lt;/h2&gt;
&lt;h2 id=&#34;序言-不会汇报工作你的工作就是零&#34;&gt;序言 不会汇报工作，你的工作就是零&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在工作中，不是所有的努力都会被看到。如果不会汇报工作，那你只能默默无闻地干到死！
⏱ 2024-02-28 06:25:20 ^858305-16-795-835&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 之所以会有这种想法，是因为他们对自己的工作内容搞不清楚。事实上，汇报工作不是一种形式，汇报本身就是工作，汇报工作本身就是你职责的一部分。
⏱ 2024-02-28 06:25:37 ^858305-16-956-1024&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 学会汇报工作，能够全面提升你的“职场可见度”。学会正确汇报工作，能助你完成从“透明人”到“不可替代者”的过渡，成为上司信任和依赖的对象。
⏱ 2024-02-28 06:26:52 ^858305-16-1473-1541&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;part-1-正确认识上下级关系&#34;&gt;PART 1 正确认识上下级关系&lt;/h2&gt;
&lt;h3 id=&#34;认识1-认识你的公司公司为了什么而存在&#34;&gt;认识1 认识你的公司：公司为了什么而存在？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当你进人一家企业后，要做的第一件事，就是搞清楚这家企业的组织架构。
⏱ 2024-02-28 06:28:56 ^858305-18-1377-1410&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 企业的组织架构和核心部门，决定了这家企业的运营模式，决定了这家企业的商业模式。
⏱ 2024-02-28 06:30:07 ^858305-18-2664-2703&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一家企业最无可代替的核心，就是它的组织能力。要融入一家企业，成为组织内不可替代的一员，你需要完成4个步骤——清楚组织能力的来源、模仿组织能力的行为、加强组织能力的训练、成为造就组织能力的一部分。
⏱ 2024-02-28 06:31:39 ^858305-18-3672-3788&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 伟大的事业都是凭借团队的力量来完成的。一个人的力量杯水车薪，一个团队的力量却可以无坚不摧，可以建立一个王朝，也能够推翻一个政权，可以开创一项事业，也能成就一篇史诗。
⏱ 2024-02-28 06:35:13 ^858305-18-4848-4930&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 团队成员要彼此倾听，尊重对方的想法和声音。彼此倾听意味着允许并鼓励每一个成员发出自己的声音，每一项提议都能得到充分的讨论和分析，倾听是最能够证明一个人在团队中拥有一席之地的方法。
⏱ 2024-02-28 16:24:20 ^858305-18-9135-9224&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你要想在一家企业立足生根，就要了解企业文化。企业文化决定了你生存的环境和你上司的工作方式。一流的企业靠文化。
⏱ 2024-02-28 16:31:27 ^858305-18-11430-11513&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 能力越强，职业前景就越好，但是能力并不能完全决定你在职场中的位置，它只占了一个人职业素养的40%。
⏱ 2024-02-28 16:37:02 ^858305-18-16214-16263&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 什么是最好的性格？最好的性格要能够像水一样，以天下至柔驰骋天下至刚。“水利万物而不争”，“上善若水”，要能够根据环境的需要改变自己的形态。
⏱ 2024-02-28 16:37:58 ^858305-18-16981-17050&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;认识2-认识你的上司解读上司的能力性格和职业态度&#34;&gt;认识2 认识你的上司：解读上司的能力、性格和职业态度&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 有人喜欢用文字方式沟通，如通过书面报告、电子邮件或者即时聊天工具等方式；而有些人喜欢面对面的方式沟通，如在会议上或者在办公室中进行一对一的讨论。尽快掌握上司喜欢的沟通方式对我们的工作有很大帮助。如果你不断地用他不喜欢的沟通方式沟通，那你的提议不被采纳也就很容易理解了。
⏱ 2024-02-28 21:22:26 ^858305-19-6282-6416&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你的上司可以给你提供工作必需的资源，可以帮助你完成工作，当然也可以孤立你，让你得不到任何支持，否定你的工作成绩。所以处理好和上司之间的关系是十分重要的。
⏱ 2024-03-01 22:06:06 ^858305-19-23627-23703&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 首先，你要了解你上司对你的期望。其次，你要在达到他对你期望的同时稍稍超出他的期望，这样他就一定会赏识你。
⏱ 2024-03-01 22:06:45 ^858305-19-23782-23834&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 观察并询问上司他的工作标准；观察并询问上司对你的工作标准；观察并询问上司的沟通标准、频率和偏好的方式；发电邮询问他对你的期望是什么，并且告诉上司你希望达到他的期望。
⏱ 2024-03-01 22:09:42 ^858305-19-25422-25504&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;part-2-建立和谐的上下级关系&#34;&gt;PART 2 建立和谐的上下级关系&lt;/h2&gt;
&lt;h3 id=&#34;步骤1-有原则地去工作与上司合作共赢的六大原则&#34;&gt;步骤1 有原则地去工作：与上司合作共赢的六大原则&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 敬业不是口头说说就可以的，不仅是你的态度，更是你表现出的行动。当你把自己的事情做到位时，你是敬业的；当你愿意做不是你分内的工作时，你是敬业的；当你愿意为了完成一项工作、为了一个团队，牺牲你个人的一些利益时，你就是敬业的。
⏱ 2024-03-02 18:05:03 ^858305-21-3762-3872&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这个事情让我意识到：如果你在职场中有一件事情做错了，你的上司未必会告诉你，但是他的心里会有疙瘩。他心里有疙瘩，你的工作还能做好？
⏱ 2024-03-02 18:09:02 ^858305-21-6992-7056&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;步骤2-做好自己的工作工作五位法让你做正确的事&#34;&gt;步骤2 做好自己的工作：工作“五位法”让你做正确的事&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 从这里我们可以看出，目标并不只是你的压力，通过正确的方法，可以将它转换为你的动力。目标的难度不是关键，关键的问题是你是否想去完成和通过什么方法去完成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从“我要什么”到“我需要什么来交换”&lt;/p&gt;
&lt;p&gt;一些刚从学校毕业、进入社会的新人，通常会认为前景是一片光明的。“一年时间我要收入××万，三年之内我就自己成立公司”。类似这样的豪言壮语屡见不鲜。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⏱ 2024-03-02 21:00:40 ^858305-22-8902&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;步骤3-做好上司的工作使你获得上司信任的5个关键&#34;&gt;步骤3 做好上司的工作：使你获得上司信任的5个关键&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在现实工作当中，你稍微用心观察一下就会发现，那些平时受到上司喜欢的员工都有一个共同特点：他们都很善于汇报工作，知道什么时间用什么方式去汇报。同样一件事情不同人去汇报，获得的结果肯定是不相同的。
⏱ 2024-03-02 21:16:30 ^858305-23-1700-1796&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 没有比汇报工作更容易接近上司的方法了。如果你不懂得向上司汇报工作，只知道自己埋头苦干，那么即使你自己十分辛苦努力，上司也未必知道，你的成绩也就被埋没了。很多人都不注意去汇报工作，觉得自己将工作做完就可以了，其他事情就不需要去考虑。确实，这样做你不会给上司留下很差的印象，但同时你的上司也不会觉得你是一个优秀的员工
⏱ 2024-03-02 21:23:09 ^858305-23-2790-2946&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 汇报应该成为你和上司相处的一种常态。如果时常被上司追问工作情况，你的感觉也不会好，因为主动权在他的手里；但是你主动汇报给上司，性质就不一样了，因为主动权在你的手里。
⏱ 2024-03-02 21:24:19 ^858305-23-3190-3272&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;part-3-如何正确汇报工作&#34;&gt;PART 3 如何正确汇报工作？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不是你所有的努力都会被看到，在汇报工作时，要么展示自己的能力，要么展示自己的愚蠢，要么赢得上司的赞赏，要么换得上司的鄙夷
⏱ 2024-03-02 21:53:15 ^858305-24-1162-1222&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;问题1-你该如何正确地汇报工作&#34;&gt;问题1 你该如何正确地汇报工作？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果工作进展顺利，可以按照既定的节奏去汇报；如果工作进展不顺利，则需要及时反馈和汇报；如果需要申请延期，更应提前申请，并说明延期的原因和延迟时间。一般来说，申请延期都需要提前汇报。
⏱ 2024-03-03 06:10:38 ^858305-25-3365-3455&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在与他人沟通当中，如果经常使用准确的数据，将能够给对方留下良好的印象，让对方感觉你是一个严谨认真的人。
⏱ 2024-03-03 10:04:37 ^858305-25-19518-19569&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 最能获得他人内心肯定的人，绝不是那些否定他人意见的人，而是肯定他人的人，这是破坏者和建设者之间的区别。聪明的肯定者，能够在双方的不同意见中找出小小的共同点，然后肯定那一点、强调那一点，使对方充分感受到自己是受重视的。这样之后，他才会把自己的观点说出来。
⏱ 2024-03-03 12:44:39 ^858305-25-21381-21536&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 汇报工作是非常考验能力的，如果你能做出好的工作汇报，就能让上司肯定你的能力，进而对你刮目相看；如果你在汇报中表现得不够好，上司就会把你归为“无能之人”的行列。
⏱ 2024-03-03 12:57:39 ^858305-25-28537-28616&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 打消疑虑可以通过平时的出色表现来积累印象，也可以像小红一样，通过言语让上司对你放心。不要夸赞自己，那样会显得轻浮、不可信；而要用自己“愿意做、同时愿意承担责任”的表态让上司相信你。
⏱ 2024-03-03 17:16:02 ^858305-25-30937-31027&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;问题2-上司希望你如何汇报工作&#34;&gt;问题2 上司希望你如何汇报工作？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因此，不管你是企业的基层还是中层工作人员，汇报都是你工作中非常重要的一部分，都是你不能推卸的重要职责。
⏱ 2024-03-03 17:22:07 ^858305-26-1692-1743&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当你认为自己了解一切时，危险往往就产生了。一些人因为自大，往往会忽视坏事情。要养成工作中随时确认问题的习惯，因为有时坏事情就隐藏在你习以为常的事物中。
⏱ 2024-03-03 19:07:16 ^858305-26-17729-17804&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 坏事情是绝对需要完整汇报的，完整地汇报事情的前因后果很重要。
⏱ 2024-03-03 19:07:41 ^858305-26-18423-18453&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;问题3-汇报中如何实现有效沟通&#34;&gt;问题3 汇报中如何实现有效沟通？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 工作总结要展示成绩，同时阐明问题，并从以往的工作中得出经验教训，为未来工作找出可以遵循的规律。工作总结是你开展工作的重要环节，通过工作总结，可以全面系统地分析你过去一段时间的工作情况。
⏱ 2024-03-03 22:07:21 ^858305-27-16371-16463&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;问题4-如何通过汇报工作实现真正的向上管理&#34;&gt;问题4 如何通过汇报工作，实现真正的“向上管理”？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但是到了社会上，进入职场中，你就是成年人，上司不仅是你的管理者，同时也是你的同事、你的工作伙伴，你们既是领导和被领导的关系，同时也是共同协作前进的关系——仅仅是被动地接受管理，并不能把你们的合作效用发挥到最大。
⏱ 2024-03-03 22:21:32 ^858305-28-2044-2149&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 实行向上管理之前，首先你要改变仰视上司的态度。从理解你的上司开始，把眼光从仰视改成平视。不要轻易地对你的上司下完定论就不再关心他，你需要支持他、理解他。在必要的时候，也许你的上司还需要你的原谅——记住，他只是普通人。
⏱ 2024-03-03 22:22:49 ^858305-28-2985-3148&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果他的决定是错误的，那么就要指出来，对于错误的指令要敢于拒绝；如果上司对于你合理的意见不能够接受，那么最好尽早离开这个团队。
⏱ 2024-03-03 22:23:12 ^858305-28-3470-3533&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;认识1-认识你的公司公司为了什么而存在-1&#34;&gt;认识1 认识你的公司：公司为了什么而存在？&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 之所以要研究老板文化，是因为老板文化就是企业文化的雏形，老板文化最能体现和反映企业文化。一家企业的老板文化，几乎决定了整个企业的行为模式。  ^6733360-7PjPfPnvs
- 💭 非常对，老板决定企业的风格，重视什么资源投在哪里，基本就是老板决定的
- ⏱ 2024-02-28 16:34:05&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果一家企业是靠大力营销起家的，那么即使它有意转型，重营销也是它无法抹去的烙印。  ^6733360-7PjPl45oV
- 💭 联想
- ⏱ 2024-02-28 16:35:22&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 要了解你自己的职业态度。有的人性格很好，能踏实地完成交待的任务，但是有些人太内向，在自己汇报工作的时候，很不善于表达，明明可以做到9分，但是只能表达到5分。这样的职场人士就要锻炼自己的表达能力。  ^6733360-7PjPyqD4j
- 💭 哈哈哈
- ⏱ 2024-02-28 16:38:40&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;认识2-认识你的上司解读上司的能力性格和职业态度-1&#34;&gt;认识2 认识你的上司：解读上司的能力、性格和职业态度&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当工作的事态显示出不好的趋势时，你首先就要汇报给自己的上司知道。千万不要把事情压着，压着往往会使事情变得更糟。当上司被动地知道这件事时，你一定会后悔自己为什么没有早点说。不要等事情无法控制和隐瞒时再上报。  ^6733360-7Pk8gMZJf
- 💭 非常重要
- ⏱ 2024-02-28 21:24:26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你是否真正了解上司对你的期望？你是否和上司沟通过，询问过他对你的期望？请找个恰当的时机，和上司讨论他对你的期望。  ^6733360-7PndHsnAT
- 💭 这很重要
- ⏱ 2024-03-01 22:07:21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一般情况下，上司总是希望下属能够做到：定期汇报所有项目的进展状态，最好是口头汇报和定期电子邮件汇报的结合，同时电邮中应该有明确的表格；定期汇报预算控制的情况和时间掌握的情况；定期汇报客户的动态；定期汇报自身的心态；定期汇报自己在工作中遇到的问题，最好这个问题是他已经想出完好的解决方案了的，最好还要有备选方案。  ^6733360-7PndNngd9
- 💭 汇报
- ⏱ 2024-03-01 22:08:48&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;步骤1-有原则地去工作与上司合作共赢的六大原则-1&#34;&gt;步骤1 有原则地去工作：与上司合作共赢的六大原则&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 上司对下属的职场道路有着至关重要的影响，所以每个下属都应该将自己的上司当作自己的重要客户来对待，去分析、了解他。就如同一个出色的业务员，当他面对一个客户时，不会被动地等待客户自己提供信息，而是会分析推测客户，搜集客户的相关信息，找到客户真正的目的或者所需求的东西，然后主动出击。出色的下属同样也会这样做，他不会如同木头人一般等上司吩咐才去做事。  ^6733360-7Pov2xXUd
- 💭 主动出击
- ⏱ 2024-03-02 18:18:47&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;步骤3-做好上司的工作使你获得上司信任的5个关键-1&#34;&gt;步骤3 做好上司的工作：使你获得上司信任的5个关键&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 A的做法不但让自己一年的工作没有得到认可，也连累他的下属没能获得好的绩效。
所以想要得到上司好的评价，就要学会主动去汇报工作。一个聪明的员工，想要向上晋升，首先工作必须要做好，同时还要善于向上司汇报工作。汇报工作能直接和上司进行正面接触，这样可以加深上司对自己的印象。同时经常汇报工作也会让上司觉得你对他十分尊重，能够知道你的工作状况、有什么成绩，让他看到你的努力。  ^6733360-7PoGKAnfa
- 💭 非常受益
- ⏱ 2024-03-02 21:17:35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对于不好的消息，越早汇报就越有价值。如果因为你没有及时汇报延误了战机，那么你将会承担更大的责任。  ^6733360-7PoHfJ3nv
- 💭 坏事情不要捂盖子，提早提出困难要资源
- ⏱ 2024-03-02 21:25:15&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 其他人都不愿意去做的事情不一定都是坏事，做事不挑剔的人往往能够取得最后的成功。  ^6733360-7PoHZwVb3
- 💭 说实话做事不挑剔的人也可能成背锅侠
- ⏱ 2024-03-02 21:36:32&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-10&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一个典型的错误想法就是：“上司既然是我的上司，那么他在任何方面（包括专业）都应该比我强。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有的人发现上司不如自己专业、在工作技能上不如自己时，就产生了轻慢之心，想：这都不会，还当我的上司？这都做不好，还当上司？&lt;/p&gt;
&lt;p&gt;上司之所以能够成为上司，是因为组织的认可、信任和授权，而不是专业的认可和授权。上司的职责要求并不包括“要在专业上强于所有的下属”。  ^6733360-7PoI86IOX
- 💭 试试
- ⏱ 2024-03-02 21:38:39&lt;/p&gt;
&lt;h2 id=&#34;问题1-你该如何正确地汇报工作-1&#34;&gt;问题1 你该如何正确地汇报工作？&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-11&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 多数工作不是你一己之力就可以完成的，你可能需要申请人力或者物力来支持你的工作，这时你就需要向自己的上司汇报你的需求。  ^6733360-7PpfIs7Wp
- 💭 汇报需求是寻求物力人力的起点
- ⏱ 2024-03-03 06:11:29&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-12&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果业绩完成了，直接汇报即可；如果业绩没有完成，就需要说明业绩目标是多少，实际完成了多少、还差多少，没有完成的原因是什么，这个问题是不是能够解决，目标的时间是什么。  ^6733360-7PpfLREp7
- 💭 这里的业绩实际上就是结果
- ⏱ 2024-03-03 06:12:19&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-13&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 遇到困难和问题要及时汇报，遇到意外情况也需要第一时间汇报。任何时候都不要隐瞒你遇到的困难，不要期望你能自己默默解决；即便你可以自己解决，你的上司也有知情权。  ^6733360-7PpfO6b7a
- 💭 自己消化是职场大忌
- ⏱ 2024-03-03 06:12:52&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-14&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在汇报建议和规划时，应该把使你产生建议的原因描述清楚，同时说出你的建议和它能够带来的好处，而不是盲目汇报。  ^6733360-7PpfT57nH
- 💭 如果提议，说出理由，有理有据
- ⏱ 2024-03-03 06:14:06&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-15&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 通常来说，一份工作周期是一个月的工作，你需要至少一个星期汇报两次。在每周一汇报你这周的计划，在每周五汇报这周你工作的完成情况。  ^6733360-7Ppg0ke4B
- 💭 汇报频繁程度比我预想的多
- ⏱ 2024-03-03 06:15:53&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-16&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 某种程度上讲，上司确实是偏心和难以伺候的——你总是汇报，他会嫌你烦；但是你该汇报时不汇报，他又会说你自作主张。因此你要做的，就是学会突出重点地汇报。  ^6733360-7PpiuRt0X
- 💭 适应上司
- ⏱ 2024-03-03 06:53:56&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-17&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当对方表达自己的一个感觉时，你可以补充一个相关的事实。当对方陈述自己经历过的一个事实时，那你就可以将自己对这件事的感觉补充进去。  ^6733360-7PpGhjPMy
- 💭 高手
- ⏱ 2024-03-03 12:57:03&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;问题2-上司希望你如何汇报工作-1&#34;&gt;问题2 上司希望你如何汇报工作？&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-18&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 很多员工在向上汇报和沟通的时候常常表现出自卑和胆怯。领导者常常是很忙的，有时会忽视和下属的沟通，很多下属因此就以为沟通的主动权是掌握在上司手中的，上司不找自己，自己就可以安心地不去主动沟通和汇报。还有的人因为性格内向，害怕和领导者沟通，信奉“多一事不如少一事”。长此以往，不仅会给上司留下一个沉闷、无能的印象，还会影响自己的工作开展。要改变行为，首先要转换心态。  ^6733360-7PpXISYIn
- 💭 说到要害处了
- ⏱ 2024-03-03 17:23:25&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-19&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 所有看起来简单的成功汇报，都是背后精心设计的结果。你要达成拥有超级质量的汇报，就需要做出付出超级精心的准备。  ^6733360-7Pq3uW1ea
- 💭 好的汇报需要精心的准备
- ⏱ 2024-03-03 18:51:35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-20&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 越短的汇报就越难讲，因为每一句都要切入重点。这就要求你在汇报之前考虑清楚：我应该从哪里开始？事情的背景是什么？我说的重点在哪里？方法是什么？核心价值什么？结构如何部署？  ^6733360-7Pq3Byhfw
- 💭 培养意识，以终为始，如果意识到某件事情可以在组内汇报，那么就需要有意识将某件事情的来龙去脉搞清楚
- ⏱ 2024-03-03 18:53:13&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-21&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你没有及时地汇报，而是拖了一段时间后才去汇报，这时你的上司可能已经对你所完成的任务或者所解决的难题失去了兴趣，你的汇报也就显得有些多余。你的及时汇报也会让上司对你产生信任感，以后当你在工作中遇见困难时，相信你的上司也会对你格外关心，帮助你完成工作。  ^6733360-7Pq3RcnFj
- 💭 汇报也要讲究时机
- ⏱ 2024-03-03 18:57:04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-22&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 越是重要的文件，就越要这样做。不一定非要采取签收的形式，QQ、电子邮件和短信等沟通方式都能够达到类似的效果。唯一的关键就是：让你的工作留下痕迹。  ^6733360-7Pq4e8pV8
- 💭 在自己的工作中，实际上也要有留下痕迹的意识
- ⏱ 2024-03-03 19:02:43&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-23&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 把握轻重：坏消息要早点说  ^6733360-7Pq4g7Cm1
- 💭 华为就是不要捂盖子
- ⏱ 2024-03-03 19:03:13&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-24&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 笑笑在这个事情上犯了一个重大的错误，就是把坏消息压着，没有早点说。很多人以为坏消息晚点说也没关系，或者自己能解决，但是最后，事情往往都变得越来越坏。  ^6733360-7Pq4mZX16
- 💭 这个是非常大的错误，之前我工作就有 一件事情，自己没有搞定，但是也没有及时向主管反馈，导致后面主管发现内容不对的时候就发怒没做好，这就很吃亏
- ⏱ 2024-03-03 19:04:54&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-25&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 任何可能导致出问题的事都是重要的事。任何坏消息，即使是非常小的坏消息，也是重要的事。  ^6733360-7Pq4vD2Ld
- 💭 所有的可能导致事态向不好的方向发展的事情都要有警觉意识，优先汇报
- ⏱ 2024-03-03 19:07:02&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-26&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 有的领导者属于“放养派”，他就像牧羊人一样，并不愿把所有羊都拴起来，在他允许的范围内，羊可以随意吃草。相对来说，“放养派”领导者更愿意放权，也更注重员工汇报事情的结果。在“放养派”领导者手下工作，你不用事无巨细地全部汇报，不用每件事都请示，更多时候汇报结果才是重点。但是要注意，作为一只被放养的“羊”，你还是需要偶尔跑到他面前，让他了解你的工作情况，使他放心。对于每个决策，你也要通知他。千万不要因为他是“放养派”，你就认为自己可以随意决策。  ^6733360-7Pq4IhfNW
- 💭 我的领导是放养派
- ⏱ 2024-03-03 19:10:09&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-27&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不要以为越级汇报就能得到赏识。事实上，那些企业的最高层领导，尤其是50岁以上的企业家，他们并不愿意过多跟刚进入职场的员工沟通。在他们眼里，除非你能力强到他无法忽视，否则一般情况下你就是企业这台机器上的一颗螺丝钉，你只需要乖乖待在自己的岗位上，发挥出自己的职能就可以了。基层员工常常受所在位置的限制，眼光并不长远，在高层管理者的眼里，你的很多想法都非常幼稚。  ^6733360-7Pq4Ox8Yf
- 💭 任正非的那篇就很经典，有病看病，没病送医院
- ⏱ 2024-03-03 19:11:41&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-28&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一个选择题往往伴随着很多扩展问题。扩展问题是指当你上交方案给领导时，领导可能还会问的那些问题。  ^6733360-7Pq4Wl2uK
- 💭 说出自己方案的时候，需要对可能遇到的问题也要做充分的准备
- ⏱ 2024-03-03 19:13:36&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;问题3-汇报中如何实现有效沟通-1&#34;&gt;问题3 汇报中如何实现有效沟通？&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-29&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 所以说，完整的沟通过程包含了三个内容：发送、接收和反馈。  ^6733360-7PqdN0nox
- 💭 仅仅发出不够，还要有反馈
- ⏱ 2024-03-03 21:28:44&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-30&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当我夸奖一个人时，我永远不会单纯地只说他的优点，而要建立起完整的认识。比如，夸奖一个人：“你做事真是细致周到。”对方可能感受不深。但是当你强化表达时，你就可以说：“你做事真是细致周到，给我发文件都会发两份，一份Word文档便于阅读和修改，一份PDF文档便于打印，让我觉得很方便。其他人给我发文件时都只发一份。”  ^6733360-7Pqf4zObp
- 💭 夸人可以具体一点
- ⏱ 2024-03-03 21:48:20&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-31&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 道歉的最佳时机是事发当天，因为道歉来晚了就毫无意义，当场、当天的道歉才是最有意义的。比如你和上司起了冲突，你坚持自己的意见，上司坚持他的意见，因而吵了起来。回到座位后你发现原来是你错了，这时你就应该马上起身去道歉。  ^6733360-7PqggrTn4
- 💭 道歉要及时，不要过夜
- ⏱ 2024-03-03 22:06:31&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-32&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 履行承诺要早于承诺的最后期限：当你向别人承诺一件事情时，一定要在承诺的截止时间之前履行，绝不能比自己承诺的截止时间更晚。每一次晚于承诺的履行都会减少对方对你的信任。  ^6733360-7PqgiMUMu
- 💭 承诺宜早不宜迟
- ⏱ 2024-03-03 22:07:06&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;问题4-如何通过汇报工作实现真正的向上管理-1&#34;&gt;问题4 如何通过汇报工作，实现真正的“向上管理”？&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-33&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 于是我把他带到车间，让他看看车间里的合格手机和不合格手机的制作流程和区别，把详细的数据汇报给他。结果他改变了主意，同意减少任务量。因此，用什么形式汇报非常重要。  ^6733360-7Pqhcicze
- 💭 如果确实有困难，秀给领导看
- ⏱ 2024-03-03 22:20:46&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-34&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 上司能够决定你在职场中的未来，如果他是一个没有能力、不能做出正确决定的上司，那就会拖累整个被他带领的团队，所以对于上司的行为也不能听凭他的喜好。如果他的决定是错误的，那么就要指出来，对于错误的指令要敢于拒绝；如果上司对于你合理的意见不能够接受，那么最好尽早离开这个团队。  ^6733360-7PqhohqqN
- 💭 不跟着庸者浪费时间
- ⏱ 2024-03-03 22:23:43&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%9B%BE%E8%A7%A3%E6%95%B0%E7%A0%81%E7%9B%B8%E6%9C%BA%E5%8E%9F%E7%90%86%E5%92%8C%E7%BB%93%E6%9E%84/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%9B%BE%E8%A7%A3%E6%95%B0%E7%A0%81%E7%9B%B8%E6%9C%BA%E5%8E%9F%E7%90%86%E5%92%8C%E7%BB%93%E6%9E%84/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 图解数码相机原理和结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/248/42824248/t7_42824248.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 图解数码相机原理和结构|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 图解数码相机原理和结构&lt;/li&gt;
&lt;li&gt;作者： 神崎洋治等&lt;/li&gt;
&lt;li&gt;简介： 本书图文并茂地介绍了数码相机的工作原理和结构，通过367张图系统讲解了单反相机和微单相机的特点、镜头和图像传感器的机制，以及数码相机的各种功能和技术等。内容涉及索尼、佳能和尼康等主流的产品，涵盖数码相机的发展历史、取景器、自动对焦、CMOS、影像处理器、防抖、图像存储等大量知识点，可以帮助读者在短时间内理解数码相机的各部件是怎样工作的，以及它们是如何影响画质的，进而提高使用数码相机的水平，拍出技术过硬的好照片。本书是一本通俗易懂的摄影器材入门指南，适合所有摄影爱好者和从业人员阅读。&lt;/li&gt;
&lt;li&gt;出版时间 2021-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115562432&lt;/li&gt;
&lt;li&gt;分类： 计算机-计算机综合&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/46432b80728d72384649bec&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;版权声明&#34;&gt;版权声明&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;第-1-章-数码相机概要&#34;&gt;第 1 章 数码相机概要&lt;/h2&gt;
&lt;h3 id=&#34;11-数码相机概要和工作原理&#34;&gt;1.1 数码相机概要和工作原理&lt;/h3&gt;
&lt;h3 id=&#34;12-数码相机的功能和性能相机选购要点&#34;&gt;1.2 数码相机的功能和性能（相机选购要点）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在佳能 EOS 系列的销售说明中，图像传感器被比喻为水桶，光被比喻为水，噪点则被比喻为垃圾。水桶越大，能够储存的水就越多，即使其中混入等量的垃圾，这些垃圾也不会很显眼，所以图像传感器大一些比较好。
⏱ 2023-12-03 21:37:52 ^42824248-7-6711-6809&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;13-数码相机和胶片相机的区别&#34;&gt;1.3 数码相机和胶片相机的区别&lt;/h3&gt;
&lt;h3 id=&#34;14-数码相机的发展史&#34;&gt;1.4 数码相机的发展史&lt;/h3&gt;
&lt;h2 id=&#34;第-2-章-单反相机与微单相机&#34;&gt;第 2 章 单反相机与微单相机&lt;/h2&gt;
&lt;h3 id=&#34;21-单反相机&#34;&gt;2.1 单反相机&lt;/h3&gt;
&lt;h3 id=&#34;22-旁轴取景式相机和卡片数码相机&#34;&gt;2.2 旁轴取景式相机和卡片数码相机&lt;/h3&gt;
&lt;h3 id=&#34;23-取景器和视差&#34;&gt;2.3 取景器和视差&lt;/h3&gt;
&lt;h3 id=&#34;24-取景器的视野率和放大倍率&#34;&gt;2.4 取景器的视野率和放大倍率&lt;/h3&gt;
&lt;h3 id=&#34;25-微单相机&#34;&gt;2.5 微单相机&lt;/h3&gt;
&lt;h3 id=&#34;26-半透明反光镜技术&#34;&gt;2.6 半透明反光镜技术&lt;/h3&gt;
&lt;h3 id=&#34;27-对高速连拍技术的追求&#34;&gt;2.7 对高速连拍技术的追求&lt;/h3&gt;
&lt;h3 id=&#34;28-微单相机的优点静音拍摄&#34;&gt;2.8 微单相机的优点：静音拍摄&lt;/h3&gt;
&lt;h2 id=&#34;第-3-章-镜头&#34;&gt;第 3 章 镜头&lt;/h2&gt;
&lt;h3 id=&#34;31-可换式镜头&#34;&gt;3.1 可换式镜头&lt;/h3&gt;
&lt;h3 id=&#34;32-照片的成像原理和镜头&#34;&gt;3.2 照片的成像原理和镜头&lt;/h3&gt;
&lt;h3 id=&#34;33-像差&#34;&gt;3.3 像差&lt;/h3&gt;
&lt;h3 id=&#34;34-消除像差&#34;&gt;3.4 消除像差&lt;/h3&gt;
&lt;h3 id=&#34;35-f值&#34;&gt;3.5 F值&lt;/h3&gt;
&lt;h3 id=&#34;36-焦距与视角&#34;&gt;3.6 焦距与视角&lt;/h3&gt;
&lt;h3 id=&#34;37-镜头的分类&#34;&gt;3.7 镜头的分类&lt;/h3&gt;
&lt;h3 id=&#34;38-镜头类型&#34;&gt;3.8 镜头类型&lt;/h3&gt;
&lt;h3 id=&#34;39-自动对焦--泛焦&#34;&gt;3.9 自动对焦 / 泛焦&lt;/h3&gt;
&lt;h3 id=&#34;310-转换镜头--附加镜&#34;&gt;3.10 转换镜头 / 附加镜&lt;/h3&gt;
&lt;h3 id=&#34;311-滤镜&#34;&gt;3.11 滤镜&lt;/h3&gt;
&lt;h3 id=&#34;312-可换镜头式相机和镜头卡口&#34;&gt;3.12 可换镜头式相机和镜头卡口&lt;/h3&gt;
&lt;h3 id=&#34;313-数码相机专用镜头&#34;&gt;3.13 数码相机专用镜头&lt;/h3&gt;
&lt;h3 id=&#34;314-微单相机与法兰距&#34;&gt;3.14 微单相机与法兰距&lt;/h3&gt;
&lt;h2 id=&#34;第-4-章-图像传感器感光元件&#34;&gt;第 4 章 图像传感器（感光元件）&lt;/h2&gt;
&lt;h3 id=&#34;41-什么是图像传感器感光元件&#34;&gt;4.1 什么是图像传感器（感光元件）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在感光元件刚诞生的时候，晶体管还没有出现，所以当时使用的是真空管。使用真空管制作的感光元件称为摄像管，它可以在真空环境中控制电子运动。人们使用摄像管制作了摄像机，电视机因而得到了迅速的发展
⏱ 2024-01-05 22:13:22 ^42824248-35-736-864&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在数码相机的产品说明书上，我们经常会看到 100 万像素或 1000 万像素这样的参数，这表示可以把倒立影像分割成 100 万或 1000 万份。但一个光电二极管只能针对照射到分割后的一个区域的光产生电荷，所以光电二极管的数量需要与像素数相同。
⏱ 2024-01-05 22:27:47 ^42824248-35-4586-4708&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 图像传感器的作用就是利用光电效应使各个区域产生大小适合的电荷，并以一定电荷量为单位将电荷转换成电信号。
⏱ 2024-01-05 22:29:07 ^42824248-35-4966-5051&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 最大信号指的是即将产生炫脉的饱和信号量，而最小信号不为零。因为即使在完全隔绝光线的状态下，CCD 也会因待机等产生的热量而产生电荷，这称为暗电流。暗电流产生的信号和 CCD 产生的信号不同，是不能使用的。这种干扰信号称为噪点。小于噪点的信号会被噪点淹没，所以无法确定它是所需的信号还是噪点。因此，最小信号需要大于噪点。由 CCD 的暗电流产生的噪点称为暗电流散粒噪点
⏱ 2024-01-06 07:00:14 ^42824248-35-9828-10053&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;42-决定画质的图像传感器的像素数和尺寸&#34;&gt;4.2 决定画质的图像传感器的像素数和尺寸&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这里需要注意的是，图像传感器的尺寸与摄像管的实际使用尺寸是相吻合的。话虽如此，图像传感器的 1 英寸并不是 25.4 mm。比如，1/2 英寸的图像传感器，其对角线长度应该是 12.7 mm。但是，当摄像管，也就是真空管的直径为 1/2 英寸时，由于还要考虑玻璃厚度等因素，所以真正的像面对角线长度并不一定有 12.7 mm。因此，在 1/2 英寸的摄像管中，像面对角线的长度一般约为 8 mm。而 CCD 或CMOS 等图像传感器也作为一种惯例沿用了这种计算方法，1/2 英寸 CCD 的对角线长度通常约为 8 mm（图 4.8）。
⏱ 2024-01-06 07:11:42 ^42824248-36-1621-1888&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 虽然画质好坏并非只取决于图像传感器的尺寸，但它是影响非常大的一个要素，所以在购买数码相机时，一定要确认图像传感器的尺寸。
⏱ 2024-01-06 07:14:32 ^42824248-36-4251-4311&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 与 100 万像素的数码相机拍出的照片相比，1000 万像素的相机拍出来的照片更加细腻（没有锯齿状噪点）（图 4.11）。假如使用像素密度，即“分辨率”来对比，1000 万像素相机的分辨率是 100 万像素的 10 倍，可以说是相当高了。
⏱ 2024-01-06 07:16:10 ^42824248-36-4755-4874&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果两台相机的图像传感器尺寸相同，那么，像素数较多的那一台，画质反而可能较差。因为当像素数增加时，图像传感器用于生成图像信息的单位受光面积会变小，动态范围也会变小。
⏱ 2024-01-06 07:16:39 ^42824248-36-5339-5421&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但如果每个受光元件都有边框，或需要一定程度的隔离线，那么受边框或隔离线的影响，4 个像素的总受光面积就会变小。所以，如果图像传感器尺寸相同但像素数不同，受光面积是不同的（图 4.12）。
⏱ 2024-01-06 07:17:32 ^42824248-36-5581-5674&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 也就是说，虽然从精细度上来说能够拍摄出精细度高 4 倍的图像，但由于动态范围变小，所以很难有很好的色彩表现，或者图像容易偏暗，在明暗反差较大的地方拍摄时可能出现高光溢出或暗部缺失，甚至可能出现伪色、噪点、眩光等现象。
⏱ 2024-01-06 07:23:16 ^42824248-36-6327-6435&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;43-ccd&#34;&gt;4.3 CCD&lt;/h3&gt;
&lt;h3 id=&#34;44-cmos&#34;&gt;4.4 CMOS&lt;/h3&gt;
&lt;h3 id=&#34;45-原色滤镜和补色滤镜&#34;&gt;4.5 原色滤镜和补色滤镜&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 原色滤镜并不是由相同数量的红色、绿色和蓝色简单排列而成。因为人的眼睛对绿色敏感度高，所以在排列时绿色成分更多。如图 4.31 所示，原色滤镜的排列方式有两种：一种是每隔一个绿色像素（即图中的 G）排列，另一种是整列全是绿色像素。一般的数码相机采用的是每隔一个绿色像素排列的方式，这称为拜耳阵列
⏱ 2024-01-06 23:04:59 ^42824248-39-1216-1370&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 像素混合方式除了导致像素数增多以外，还有其他缺点。那就是容易产生伪色。通常，CCD 的插值处理会混合垂直或水平方向排列的两个相同颜色的像素，但有时候相同颜色的像素并不相邻，所以需要混合的像素之间的距离就变远了，这会导致无法再现原本的正确颜色。比如，在对拜耳阵列的红色进行混合时，中间会加入蓝色，所以红色和红色的间隔将变远，这就会导致不能再现原本的颜色。这种不能再现原本正确颜色的现象就称为伪色。假如在对比度较高的轮廓部分进行插值处理时发生了运算错误，或者有格子图案和被摄体上的图案产生了干扰，就容易产生伪色。前者会导致照片中出现原本没有的蓝色或紫红色，后者则会导致照片中出现摩尔纹。
⏱ 2024-01-06 23:07:22 ^42824248-39-2222-2513&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;46-超级-ccd&#34;&gt;4.6 超级 CCD&lt;/h3&gt;
&lt;h3 id=&#34;47-livemosνmaicovicon&#34;&gt;4.7 LiveMOS（νMaicovicon）&lt;/h3&gt;
&lt;h3 id=&#34;48-foveon&#34;&gt;4.8 FOVEON&lt;/h3&gt;
&lt;h3 id=&#34;49-背照式感光元件背照式cmos图像传感器&#34;&gt;4.9 背照式感光元件（背照式CMOS图像传感器）&lt;/h3&gt;
&lt;h3 id=&#34;410-集成内存的堆栈式-cmos-图像传感器&#34;&gt;4.10 集成内存的堆栈式 CMOS 图像传感器&lt;/h3&gt;
&lt;h3 id=&#34;411-取消光学低通滤镜&#34;&gt;4.11 取消光学低通滤镜&lt;/h3&gt;
&lt;h3 id=&#34;412-图像传感器与可换式镜头的焦距35-mm规格换算&#34;&gt;4.12 图像传感器与可换式镜头的焦距——35 mm规格换算&lt;/h3&gt;
&lt;h3 id=&#34;413-43系统规格&#34;&gt;4.13 4/3系统规格&lt;/h3&gt;
&lt;h2 id=&#34;第-5-章-数码相机的结构和技术&#34;&gt;第 5 章 数码相机的结构和技术&lt;/h2&gt;
&lt;h3 id=&#34;51-影像处理器&#34;&gt;5.1 影像处理器&lt;/h3&gt;
&lt;h3 id=&#34;52-iso-感光度和噪点&#34;&gt;5.2 ISO 感光度和噪点&lt;/h3&gt;
&lt;h3 id=&#34;53-防抖&#34;&gt;5.3 防抖&lt;/h3&gt;
&lt;h3 id=&#34;54-除尘&#34;&gt;5.4 除尘&lt;/h3&gt;
&lt;h3 id=&#34;55-实时取景&#34;&gt;5.5 实时取景&lt;/h3&gt;
&lt;h3 id=&#34;56-数码单反相机的视频拍摄&#34;&gt;5.6 数码单反相机的视频拍摄&lt;/h3&gt;
&lt;h3 id=&#34;57-快门&#34;&gt;5.7 快门&lt;/h3&gt;
&lt;h3 id=&#34;58-数码变焦&#34;&gt;5.8 数码变焦&lt;/h3&gt;
&lt;h3 id=&#34;59-人脸识别和笑脸快门&#34;&gt;5.9 人脸识别和笑脸快门&lt;/h3&gt;
&lt;h2 id=&#34;第-6-章-图像和记录媒体&#34;&gt;第 6 章 图像和记录媒体&lt;/h2&gt;
&lt;h3 id=&#34;61-数字图像的基础知识&#34;&gt;6.1 数字图像的基础知识&lt;/h3&gt;
&lt;h3 id=&#34;62-图像格式&#34;&gt;6.2 图像格式&lt;/h3&gt;
&lt;h3 id=&#34;63-记录媒体&#34;&gt;6.3 记录媒体&lt;/h3&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;h2 id=&#34;看完了&#34;&gt;看完了&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;44-cmos-1&#34;&gt;4.4 CMOS&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 快门和机械快门两种，在应对电荷积蓄的同时性问题时，使用机械快门更加容易且有效。在将 CMOS 用作图像传感器的数码相机上，高性能的机械快门是必不可少的。  ^6733360-7O1CjkAL4
- 💭 电子快门容易产生果冻效应的原因吧
- ⏱ 2024-01-06 23:02:48&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%A6%82%E4%BD%95%E8%BE%BE%E6%88%90%E7%9B%AE%E6%A0%87/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%A6%82%E4%BD%95%E8%BE%BE%E6%88%90%E7%9B%AE%E6%A0%87/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 如何达成目标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/938/26307938/t7_26307938.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 如何达成目标|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 如何达成目标&lt;/li&gt;
&lt;li&gt;作者： 海蒂·格兰特·霍尔沃森&lt;/li&gt;
&lt;li&gt;简介： 我们大多数人都不知道为什么我们未能实现目标。现在，社会心理学领域的后起之秀Heidi Grant Halvorson博士向我们展示了如何克服以前打败过我们的障碍。Grant Halvorson博士提供了很多令人惊讶的见解 ：读者可以立即使用，包括如何：设定一个目标，以便即使面对逆境也能坚持下去；建立意志力，可以像肌肉一样加强；避免那种让人失败的积极思考。本书中概述的策略不仅有助于每个人实现自己的目标，而且对父母，教师，教练和雇主也具有无可估量的价值。Grant Halvorson博士向读者展示了解决问题的新方法，这将改变他们一生的方式。&lt;/li&gt;
&lt;li&gt;出版时间 2019-05-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111622505&lt;/li&gt;
&lt;li&gt;分类： 心理-心理学应用&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/25a3236071916d6225a8b77&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献言&#34;&gt;献言&lt;/h2&gt;
&lt;h2 id=&#34;推荐序一-升级你的行动工具箱&#34;&gt;推荐序一 升级你的行动工具箱&lt;/h2&gt;
&lt;h2 id=&#34;推荐序二-人们可以改变&#34;&gt;推荐序二 人们可以改变&lt;/h2&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;h3 id=&#34;成功者和自制力的悖论&#34;&gt;成功者和自制力的悖论&lt;/h3&gt;
&lt;h3 id=&#34;自制力到底是怎样的&#34;&gt;自制力到底是怎样的&lt;/h3&gt;
&lt;h3 id=&#34;你能做什么&#34;&gt;你能做什么&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 强自制力的方式与增强肌肉性能是一样的，你得定期锻炼。
⏱ 2020-08-07 20:49:09 ^26307938-9-1754-1780&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;本书的主题&#34;&gt;本书的主题&lt;/h3&gt;
&lt;h2 id=&#34;第一部分-准备就绪&#34;&gt;第一部分 准备就绪&lt;/h2&gt;
&lt;h3 id=&#34;第1章-你明白自己去往哪里吗&#34;&gt;第1章 你明白自己去往哪里吗&lt;/h3&gt;
&lt;h4 id=&#34;别说做到最好-&#34;&gt;别说“做到最好 ”&lt;/h4&gt;
&lt;h4 id=&#34;大局与细节&#34;&gt;大局与细节&lt;/h4&gt;
&lt;h4 id=&#34;现在与将来&#34;&gt;现在与将来&lt;/h4&gt;
&lt;h4 id=&#34;积极思考的利与弊&#34;&gt;积极思考的利与弊&lt;/h4&gt;
&lt;h3 id=&#34;第2章-你知道目标来自哪里吗&#34;&gt;第2章 你知道目标来自哪里吗&lt;/h3&gt;
&lt;h4 id=&#34;信念如何塑造成功&#34;&gt;信念如何塑造成功&lt;/h4&gt;
&lt;h4 id=&#34;确实是江山易改本性难移吗&#34;&gt;确实是江山易改、本性难移吗&lt;/h4&gt;
&lt;h4 id=&#34;我们如何摆脱困境&#34;&gt;我们如何摆脱困境&lt;/h4&gt;
&lt;h4 id=&#34;你处在自动导航模式&#34;&gt;你，处在自动导航模式&lt;/h4&gt;
&lt;h4 id=&#34;触发因素的神奇之处&#34;&gt;触发因素的神奇之处&lt;/h4&gt;
&lt;h4 id=&#34;让潜意识思维为你所用&#34;&gt;让潜意识思维为你所用&lt;/h4&gt;
&lt;h2 id=&#34;第二部分-预备开始&#34;&gt;第二部分 预备开始&lt;/h2&gt;
&lt;h3 id=&#34;第3章-使人们不断前进的目标&#34;&gt;第3章 使人们不断前进的目标&lt;/h3&gt;
&lt;h4 id=&#34;当你以展示才华为目标时&#34;&gt;当你以展示才华为目标时&lt;/h4&gt;
&lt;h4 id=&#34;当你以谋求进步为目标时&#34;&gt;当你以谋求进步为目标时&lt;/h4&gt;
&lt;h4 id=&#34;哪种目标对我最有益&#34;&gt;哪种目标对我最有益&lt;/h4&gt;
&lt;h4 id=&#34;解决困难&#34;&gt;解决困难&lt;/h4&gt;
&lt;h4 id=&#34;大学医学预科班学生与毅力&#34;&gt;大学医学预科班学生与毅力&lt;/h4&gt;
&lt;h4 id=&#34;享受过程&#34;&gt;享受过程&lt;/h4&gt;
&lt;h4 id=&#34;寻求帮助&#34;&gt;寻求帮助&lt;/h4&gt;
&lt;h4 id=&#34;情绪低落也能催人奋起&#34;&gt;情绪低落也能催人奋起&lt;/h4&gt;
&lt;h3 id=&#34;第4章-乐观者和悲观者的目标&#34;&gt;第4章 乐观者和悲观者的目标&lt;/h3&gt;
&lt;h4 id=&#34;被爱与保持安全&#34;&gt;被爱与保持安全&lt;/h4&gt;
&lt;h4 id=&#34;积极思考或者也许不必&#34;&gt;积极思考（或者，也许不必）&lt;/h4&gt;
&lt;h4 id=&#34;保持动力&#34;&gt;保持动力&lt;/h4&gt;
&lt;h4 id=&#34;乐观主义者与悲观主义者是如何形成的&#34;&gt;乐观主义者与悲观主义者是如何形成的&lt;/h4&gt;
&lt;h4 id=&#34;进取防御与优先性&#34;&gt;进取、防御与优先性&lt;/h4&gt;
&lt;h4 id=&#34;你的焦点和你的感觉&#34;&gt;你的焦点和你的感觉&lt;/h4&gt;
&lt;h4 id=&#34;适合你目标焦点的策略&#34;&gt;适合你目标焦点的策略&lt;/h4&gt;
&lt;h4 id=&#34;运用合适的策略&#34;&gt;运用合适的策略&lt;/h4&gt;
&lt;h4 id=&#34;一个目标的优势是另一个目标的劣势&#34;&gt;一个目标的优势是另一个目标的劣势&lt;/h4&gt;
&lt;h3 id=&#34;第5章-让你幸福的目标&#34;&gt;第5章 让你幸福的目标&lt;/h3&gt;
&lt;h4 id=&#34;我们真的需要什么&#34;&gt;我们真的需要什么&lt;/h4&gt;
&lt;h4 id=&#34;我们真的不需要的目标&#34;&gt;我们真的不需要的目标&lt;/h4&gt;
&lt;h4 id=&#34;这到底是谁的目标&#34;&gt;这到底是谁的目标&lt;/h4&gt;
&lt;h4 id=&#34;如何营造自主选择的感觉&#34;&gt;如何营造自主选择的感觉&lt;/h4&gt;
&lt;h4 id=&#34;如何把别人规定的目标转化为自己的目标&#34;&gt;如何把别人规定的目标转化为自己的目标&lt;/h4&gt;
&lt;h3 id=&#34;第6章-选择适合自己的目标&#34;&gt;第6章 选择适合自己的目标&lt;/h3&gt;
&lt;h4 id=&#34;当你觉得不费吹灰之力时&#34;&gt;当你觉得不费吹灰之力时&lt;/h4&gt;
&lt;h4 id=&#34;当你需要鞭策时&#34;&gt;当你需要鞭策时&lt;/h4&gt;
&lt;h4 id=&#34;当前路十分坎坷时&#34;&gt;当前路十分坎坷时&lt;/h4&gt;
&lt;h4 id=&#34;当你无法抗拒诱惑时&#34;&gt;当你无法抗拒诱惑时&lt;/h4&gt;
&lt;h4 id=&#34;当你本该昨天做完时&#34;&gt;当你本该昨天做完时&lt;/h4&gt;
&lt;h4 id=&#34;当你需要完美地完成任务时&#34;&gt;当你需要完美地完成任务时&lt;/h4&gt;
&lt;h4 id=&#34;当你需要创意像流水般动起来时&#34;&gt;当你需要创意像流水般动起来时&lt;/h4&gt;
&lt;h4 id=&#34;当你想欣赏沿路景色时&#34;&gt;当你想欣赏沿路景色时&lt;/h4&gt;
&lt;h4 id=&#34;当你想要真正的快乐时&#34;&gt;当你想要真正的快乐时&lt;/h4&gt;
&lt;h3 id=&#34;第7章-帮助他人设立最佳目标&#34;&gt;第7章 帮助他人设立最佳目标&lt;/h3&gt;
&lt;h4 id=&#34;直接方法&#34;&gt;直接方法&lt;/h4&gt;
&lt;h4 id=&#34;运用提示信号&#34;&gt;运用提示信号&lt;/h4&gt;
&lt;h4 id=&#34;图画在这里请选框架&#34;&gt;图画在这里，请选框架&lt;/h4&gt;
&lt;h4 id=&#34;目标感染&#34;&gt;目标感染&lt;/h4&gt;
&lt;h2 id=&#34;第三部分-行动起来&#34;&gt;第三部分 行动起来&lt;/h2&gt;
&lt;h3 id=&#34;第8章-扫除障碍&#34;&gt;第8章 扫除障碍&lt;/h3&gt;
&lt;h4 id=&#34;把握当前时机&#34;&gt;把握当前时机&lt;/h4&gt;
&lt;h4 id=&#34;保护目标&#34;&gt;保护目标&lt;/h4&gt;
&lt;h4 id=&#34;我做得怎么样&#34;&gt;我做得怎么样&lt;/h4&gt;
&lt;h4 id=&#34;你需要的太少了不需要的太多了&#34;&gt;你需要的太少了，不需要的太多了&lt;/h4&gt;
&lt;h3 id=&#34;第9章-制订计划&#34;&gt;第9章 制订计划&lt;/h3&gt;
&lt;h4 id=&#34;圣诞节的文章&#34;&gt;圣诞节的文章&lt;/h4&gt;
&lt;h4 id=&#34;如果那就-计划的力量&#34;&gt;“如果……那就…… ”计划的力量&lt;/h4&gt;
&lt;h4 id=&#34;这还不是全部&#34;&gt;这还不是全部……&lt;/h4&gt;
&lt;h4 id=&#34;为什么简单的计划却能奏效&#34;&gt;为什么简单的计划却能奏效&lt;/h4&gt;
&lt;h3 id=&#34;第10章-增强自制力&#34;&gt;第10章 增强自制力&lt;/h3&gt;
&lt;h4 id=&#34;启动自制力&#34;&gt;启动自制力&lt;/h4&gt;
&lt;h4 id=&#34;恢复自制力&#34;&gt;恢复自制力&lt;/h4&gt;
&lt;h4 id=&#34;面对消耗一空的自制力&#34;&gt;面对消耗一空的自制力&lt;/h4&gt;
&lt;h4 id=&#34;最后的警告别去挑战命运&#34;&gt;最后的警告：别去挑战命运&lt;/h4&gt;
&lt;h3 id=&#34;第11章-切合实际的乐观&#34;&gt;第11章 切合实际的乐观&lt;/h3&gt;
&lt;h4 id=&#34;总看到生活的光明一面&#34;&gt;总看到生活的光明一面&lt;/h4&gt;
&lt;h4 id=&#34;但要警惕黑暗的一面&#34;&gt;但要警惕黑暗的一面……&lt;/h4&gt;
&lt;h4 id=&#34;增强乐观精神&#34;&gt;增强乐观精神&lt;/h4&gt;
&lt;h3 id=&#34;第12章-懂得坚持&#34;&gt;第12章 懂得坚持&lt;/h3&gt;
&lt;h4 id=&#34;怎样才能坚持不懈&#34;&gt;怎样才能坚持不懈&lt;/h4&gt;
&lt;h4 id=&#34;亚洲人不同的地方&#34;&gt;亚洲人不同的地方&lt;/h4&gt;
&lt;h4 id=&#34;懂得何时放手&#34;&gt;懂得何时放手&lt;/h4&gt;
&lt;h3 id=&#34;第13章-给予反馈&#34;&gt;第13章 给予反馈&lt;/h3&gt;
&lt;h4 id=&#34;当表现不尽如人意时&#34;&gt;当表现不尽如人意时&lt;/h4&gt;
&lt;h4 id=&#34;当表现令人满意时&#34;&gt;当表现令人满意时&lt;/h4&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;h2 id=&#34;额外收获&#34;&gt;额外收获&lt;/h2&gt;
&lt;h2 id=&#34;成功人士与众不同的9种做法&#34;&gt;成功人士与众不同的9种做法&lt;/h2&gt;
&lt;h2 id=&#34;目标故障诊断与解决&#34;&gt;目标故障诊断与解决&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A01%E5%B9%B4%E5%AE%8C%E6%88%90%E9%BA%BB%E7%9C%81%E7%90%86%E5%B7%A54%E5%B9%B433%E9%97%A8%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%95%B4%E4%BD%93%E6%80%A7%E5%AD%A6%E4%B9%A0%E6%B3%95/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A01%E5%B9%B4%E5%AE%8C%E6%88%90%E9%BA%BB%E7%9C%81%E7%90%86%E5%B7%A54%E5%B9%B433%E9%97%A8%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%95%B4%E4%BD%93%E6%80%A7%E5%AD%A6%E4%B9%A0%E6%B3%95/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 如何高效学习：1年完成麻省理工4年33门课程的整体性学习法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/926/573926/t7_573926.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 如何高效学习：1年完成麻省理工4年33门课程的整体性学习法|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 如何高效学习：1年完成麻省理工4年33门课程的整体性学习法&lt;/li&gt;
&lt;li&gt;作者： 斯科特·扬&lt;/li&gt;
&lt;li&gt;简介： 一位因为快速学习而成名的神奇小子，他应用自己发明的学习方法，完成了10天搞定线性代数，1年学习4年MIT课程的“不可能任务”。本书就是对他学习方法的全面介绍，其中包括整体性学习策略的核心思想和具体技术，详细介绍了快速阅读法、流笔记法、比喻法、内在化等七大方法，并为高效学习提供了从生活到时间管理的整体解决方案。跟随作者，你也将成为高效学习的超级学霸。&lt;/li&gt;
&lt;li&gt;出版时间 2014-01-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111444008&lt;/li&gt;
&lt;li&gt;分类： 个人成长-认知思维&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/0683235058c1e6068bd239f&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;h2 id=&#34;中文版序&#34;&gt;中文版序&lt;/h2&gt;
&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;h2 id=&#34;导读&#34;&gt;导读&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;我的故事&#34;&gt;我的故事&lt;/h2&gt;
&lt;h2 id=&#34;如何使用本书&#34;&gt;如何使用本书&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不要指望一次读完本书就能成为学习超人，准确地说这是一本学习行动指南，在学习的过程中，需要不时翻阅。第一次阅读，可以大致了解整体性学习的概念，而书上介绍的学习技术则需要反复练习，方可达到熟能生巧、为我所用。指望看一遍书就能熟练运用这些学习技术，就如同从未拿过弓的人一次就想射中靶心。
⏱ 2018-07-06 17:58:16 ^573926-8-375&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第一部分-整体性学习策略&#34;&gt;第一部分 整体性学习策略&lt;/h2&gt;
&lt;h3 id=&#34;结构&#34;&gt;结构&lt;/h3&gt;
&lt;h3 id=&#34;模型&#34;&gt;模型&lt;/h3&gt;
&lt;h3 id=&#34;高速公路&#34;&gt;高速公路&lt;/h3&gt;
&lt;h3 id=&#34;整体性学习的顺序&#34;&gt;整体性学习的顺序&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在这一步中失败的典型例子就是书呆子，即那些读书读得很好但是出了学校大门却茫然不知所措的家伙。
⏱ 2018-07-06 18:18:35 ^573926-13-1658-1704&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 公式是怎么来的？公式中的每个成分代表的真实含义是什么？公式中的什么成分可以做些改变？这种改变会导致结果发生什么样的变化？其他公式与这个公式有什么相同之处，又有什么不同之处？
⏱ 2018-07-06 18:22:33 ^573926-13-4940-5055&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 深度拓展可能是牢牢锁定知识的最佳方法，但是同时也是最花时间的工作。
⏱ 2018-07-06 18:23:34 ^573926-13-5773-5845&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 纵向拓展有相当的难度，也是最有创造性的学习方式。但是，如果运用得当，其速度要比深度拓展中探究知识的背景快得多。纵向拓展是本书中最重要的内容（希望读者仔细体会）。比喻法和内在化是进行纵向拓展的最好方法。
⏱ 2018-07-06 18:24:24 ^573926-13-6318-6447&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;信息结构&#34;&gt;信息结构&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 学习这类信息最重要的是不断练习、反复去做。
⏱ 2018-07-06 18:37:47 ^573926-14-2980-3001&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;为什么你的课程枯燥乏味&#34;&gt;为什么你的课程枯燥乏味&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 整体性学习的一个附加的好处是它强迫你以不同的视角看待学科、课程和问题。任何知识都可以从抽象的原理转化为生动的图像、有趣的故事。
⏱ 2018-07-06 18:42:17 ^573926-15-1348-1412&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;学习的目标&#34;&gt;学习的目标&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 整体性学习中最关键的步骤是将所学的知识运用到实际中去，知识只有获得了在实际生活中的价值才是真正的知识。只要你用心发现，几乎所有的知识都有实际价值，如果能发现知识在你生活中的价值，知识就与你产生了紧密的联系，这可能比第二部分要介绍的所有技术都更加有效。
⏱ 2018-07-06 18:43:32 ^573926-16-1095-1249&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第二部分-整体性学习技术&#34;&gt;第二部分 整体性学习技术&lt;/h2&gt;
&lt;h3 id=&#34;获取知识&#34;&gt;获取知识&lt;/h3&gt;
&lt;h3 id=&#34;联系观点&#34;&gt;联系观点&lt;/h3&gt;
&lt;h3 id=&#34;随意信息的处理&#34;&gt;随意信息的处理&lt;/h3&gt;
&lt;h3 id=&#34;知识的延伸&#34;&gt;知识的延伸&lt;/h3&gt;
&lt;h3 id=&#34;整体性学习技术的实际运用费曼技巧&#34;&gt;整体性学习技术的实际运用——费曼技巧&lt;/h3&gt;
&lt;h3 id=&#34;整体性学习技术的回顾&#34;&gt;整体性学习技术的回顾&lt;/h3&gt;
&lt;h2 id=&#34;第三部分-超越整体性学习&#34;&gt;第三部分 超越整体性学习&lt;/h2&gt;
&lt;h3 id=&#34;高效率的学生&#34;&gt;高效率的学生&lt;/h3&gt;
&lt;h3 id=&#34;自我教育&#34;&gt;自我教育&lt;/h3&gt;
&lt;h2 id=&#34;第四部分-整体性学习的小结&#34;&gt;第四部分 整体性学习的小结&lt;/h2&gt;
&lt;h3 id=&#34;主要概念的小结&#34;&gt;主要概念的小结&lt;/h3&gt;
&lt;h3 id=&#34;特别感谢&#34;&gt;特别感谢&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;模型-1&#34;&gt;模型&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 模型并不一定是一张图，但一定是一种压缩形式，它把多个关键思想压至一处。  ^6733360-70HR3k1KZ
- 💭 浓缩
- ⏱ 2018-07-06 18:09:13&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;整体性学习的顺序-1&#34;&gt;整体性学习的顺序&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 简化表示在获取的信息中将无用的东西尽量删除，只有那些对你形成模型非常有帮助的例子才需要认真学习。如果你觉得不需要掌握，就大胆地跳过它。  ^6733360-70HRLPJoI
- 💭 做得还不够
- ⏱ 2018-07-06 18:20:11&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 公式是怎么来的？公式中的每个成分代表的真实含义是什么？公式中的什么成分可以做些改变？这种改变会导致结果发生什么样的变化？其他公式与这个公式有什么相同之处，又有什么不同之处？  ^6733360-70HRWkWWe
- 💭 变化会如何
- ⏱ 2018-07-06 18:22:46&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 了图书馆里所有的管理学书籍也只是理解了管理学的概念，如果能亲自管理企业，那么对概念就不仅仅是理解，而且是一种感觉。  ^6733360-70HSfLahr
- 💭 理解 vs 感觉
- ⏱ 2018-07-06 18:27:33&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;信息结构-1&#34;&gt;信息结构&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 学习这类信息最重要的是不断练习、反复去做。  ^6733360-70HSWaL2w
- 💭 类似于肌肉记忆
- ⏱ 2018-07-06 18:37:59&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%AD%A9%E5%AD%90%E7%9A%84%E5%A4%A7%E8%84%91/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%AD%A9%E5%AD%90%E7%9A%84%E5%A4%A7%E8%84%91/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 孩子的大脑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/88/YueWen_30182149/t7_YueWen_30182149.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 孩子的大脑|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 孩子的大脑&lt;/li&gt;
&lt;li&gt;作者： 阿尔瓦罗·毕尔巴鄂&lt;/li&gt;
&lt;li&gt;简介： 如何帮助孩子发展智力、注意力、记忆力、语言能力、视觉智力、自控力、创造力？如何培养自信、无畏、笃定、乐观、高情商的孩子？出生后的头六年里，孩子的大脑具有巨大的学习潜能，然而随着年龄的增长，这种潜能将消失。这不是告诉我们应该抓紧时间把孩子培养成小天才，这种想法并不现实，而且，在压力之下发育的大脑反而会失去其一部分本质。这本书旨在帮助我们理解孩子的大脑，告诉我们如何影响孩子的智商和情商发展，并在为人父母这个巨大的挑战上对我们进行指导。书中的所有内容均以脑神经科学研究作为基础，却阐释得通俗易懂和生动有趣。&lt;/li&gt;
&lt;li&gt;出版时间 2018-12-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787530497050&lt;/li&gt;
&lt;li&gt;分类： 教育学习-育儿&lt;/li&gt;
&lt;li&gt;出版社： 北京科学技术出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/264323d071cc8b05264da11&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;书名页&#34;&gt;书名页&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;序一-教养的平衡&#34;&gt;序一 教养的平衡&lt;/h2&gt;
&lt;h2 id=&#34;序二-孩子的大脑与幸福人生&#34;&gt;序二 孩子的大脑与幸福人生&lt;/h2&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 大脑自行其是，它只是按照自己原本的模式继续运行着。
⏱ 2024-01-22 19:16:19 ^30182149-6-2751-2776&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对于注意力问题的过度诊断倾向只是冰山一角。精神药物被滥用的根本原因在于许多家庭中父母角色的长期缺位，而药物本身并不是主要责任方。父母长时间地工作、父母角色的缺失、对孩子缺少耐心和必要的限制，以及我们已经指出的智能手机和平板电脑的渗透，似乎都或多或少地导致了注意力障碍问题和儿童抑郁症的急剧增加。
⏱ 2024-01-22 19:17:52 ^30182149-6-3686-3833&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在压力下发育的大脑，也会为了实现加速而跳过某些阶段，失去它的一部分精华：共情能力、耐心、平静感和爱，这些能力或感受都无法在温室里催熟，而是需要从容不迫的生长，需要父母的耐心等待，在它最恰当的时刻结出那颗最完美的果实。
⏱ 2024-01-22 19:18:24 ^30182149-6-4088-4196&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第一部分-基础知识&#34;&gt;第一部分 基础知识&lt;/h2&gt;
&lt;h3 id=&#34;02-你的孩子就像一棵树&#34;&gt;02 你的孩子就像一棵树&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果将新生儿以一个舒适的姿势放在他母亲的肚子上，他不仅不会安定下来，反而会开始往上爬，一直爬到找到并吮吸到母亲的乳头为止。如果你有幸看到这一幕，你一定会和我有同样的感受，这对于任何一位父亲来说都太难以置信了。然而这个场景其实是非常自然的。每个人都像出生时即被设定好程序一样，会通过自己不懈的努力来获得自主权利和幸福。无论是在心理学界还是教育学界，人类追求充分的自我发展这一天性已经被视为人的基本原则，被广泛地传播和接受。
⏱ 2024-01-22 19:21:16 ^30182149-8-965-1175&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;03-享受此刻&#34;&gt;03 享受此刻&lt;/h3&gt;
&lt;h3 id=&#34;04-父母必学的大脑基础知识abc&#34;&gt;04 父母必学的大脑基础知识ABC&lt;/h3&gt;
&lt;h3 id=&#34;05-平衡&#34;&gt;05 平衡&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-工具&#34;&gt;第二部分 工具&lt;/h2&gt;
&lt;h3 id=&#34;07-激励孩子的行为&#34;&gt;07 激励孩子的行为&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 为了让大脑成功习得这些规范，从而让孩子能够实现自己的目标，父母制定的规则必须满足以下两个条件：首先，必须确保只有当孩子的行为正确时他才能得到适当的奖励；其次，规则只有通过设定限制才能凸显价值。
⏱ 2024-01-24 11:49:12 ^30182149-13-1054-1150&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在我的第一个孩子出生两个星期后，我戒烟了。我曾经是一个重度吸烟者，我身边的所有朋友都认为我不可能把烟戒掉，但是当我思考了自己对孩子即将产生的影响时，我决定不要在他的脑海里留下一个吸烟父亲的形象。我考虑了一天，随后决定立即戒烟，没有使用替代品或任何戒烟药品。这一切的动机只是为了成为我孩子的一个好榜样，仅此而已。
⏱ 2024-01-10 14:46:43 ^30182149-13-2812-2967&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 强化的方法有很多，有的有效，有的无效，另外一些甚至适得其反。当你奖励孩子时，必须以合适的方式来进行。比如，你对孩子说“如果你马上关掉电视，我就买一个星球大战的玩具给你作为奖励”，或者当你想让孩子去洗澡却一句鼓励的话都不说，最多随口说一句“真棒”，这些奖励对于孩子的大脑来说都是毫无用处的。最有效的奖励方法其实是那些与孩子的正面行为一致的奖励。当孩子乖乖地进了浴缸时，那么最好的奖励方法就是给他的浴缸里放上满满的泡沫让他玩耍或者和他一起洗澡；如果孩子关掉了电视机，那么最好的奖励方法是做一些可以代替看电视并且让他转移注意力的事情，比如，玩一次枕头大战，等等。
⏱ 2024-01-24 11:52:15 ^30182149-13-4459-4737&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 类似的事情也发生在食物奖励上。如果你告诉孩子，每当他做得好的时候就可以奖励他小零食、糖果或者薯片，也许你会好心办坏事（也有可能没那么坏）。糖果和高脂肪食品可以使体内的糖分迅速增加，这对于孩子的大脑来说是非常愉快的，因此，大脑的化学物质很难与零食的高糖竞争。而且很有可能在孩子长大以后，每当他想要满足感时，他的大脑就会发出对糖果或其他食品的需求信号，因为只有这些食物才可以满足父母日渐培养起来的孩子对糖分的依赖。如果你不想让你的孩子利用食物来获得自我满足，那么我建议你，不要用它作为奖励。在个别情况下，你可以通过涉及甜食的活动来强化孩子的正向行为。比如说，在夏天的时候，如果孩子表现很好，我们可以奖励他到冰激凌店去吃冰激凌，因为吃冰激凌和与父母一起散步一样重要。
⏱ 2024-01-24 11:59:24 ^30182149-13-5898-6228&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;08-惩罚的替代法&#34;&gt;08 惩罚的替代法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一般来说，当孩子开始哭泣或让他感觉不好的时间足够长的时候，父母对孩子的惩罚就结束了。在孩子哭泣、放下尊严或请求原谅的那个当下，父母往往就会解除惩罚。这样一来，孩子很快就学会了：当他对自己的负面行为感到难过时，父母就会原谅他，并且会像以前那样爱他。这个机制如此简单可怕，是孩子感到内疚的根源，并且这种内疚会伴随很多人的一生。如果你认为以上后果不算什么，那么我要告诉你，惩罚并不能阻止孩子的消极行为，也就是说，孩子会继续从打击别人这个不良行为中获取快感。这就是为什么提前设限比惩罚更有效的原因，限制与规矩所起的作用正是防止不良行为的发生。总而言之，因为孩子行为不当而惩罚他，这可能会逐渐阻碍孩子的发展，就像下图显示的那样。[插图]
⏱ 2024-01-24 16:13:56 ^30182149-14-1358-1726&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 帮助孩子实现目标的另一个好处是它有利于培养“不犯错式学习法”。这种学习方法旨在帮助那些记忆力有困难的人，它是基于以下前提：如果一个人在第一次尝试做一件事时就能做对，那么他将学得更快。如果在你的帮助下，孩子完成了那些他独自做时会失败的事情，那么其实你正在帮助他更快速地学习。
⏱ 2024-01-25 06:47:25 ^30182149-14-5062-5198&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  如果你的孩子也有经常无法完成的任务，你也可以为此设定一个自然的后果，孩子会自然而然地适应，正如你在上文中所看到的那样。设定后果的方法比惩罚更有效，并且会带来更少的负罪感。 ^30182149-14-6396-6481&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 这跟我们方法类似 - ⏱ 2024-01-25 06:50:16&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;09-设定恰当的限制条件&#34;&gt;09 设定恰当的限制条件&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 试着在负面行为发生之前设定限制，或者至少要在它成为孩子的习惯之前设定限制。设定限制时你的态度要像亲吻孩子时那般坚定、冷静和充满爱意。
⏱ 2024-01-28 07:17:50 ^30182149-15-9406-9472&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;10-同理心&#34;&gt;10 同理心&lt;/h3&gt;
&lt;h3 id=&#34;11-沟通&#34;&gt;11 沟通&lt;/h3&gt;
&lt;h2 id=&#34;第三部分-提高情商&#34;&gt;第三部分 提高情商&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 随着情感脑的发育，它会对理性脑产生强大的影响，有时候这种影响甚至是不可抑制的。我们都知道，一个人在生活中做出的重大决定往往是基于个人情绪，只有一小部分是基于理性考虑。从这个意义上讲，情绪就像是宇宙中的暗物质：它们往往不能被看到，却几乎占据了宇宙质量的70％。
⏱ 2024-01-28 14:51:39 ^30182149-18-1199-1328&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;13-联结&#34;&gt;13 联结&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对于许多心理学家来说，父母与子女之间建立联结是自尊的关键。当一个孩子在成长过程中感到安全和无条件的爱时，那么他会觉得自己是一个有价值的人，他值得拥有幸福。帮助你的孩子建立良好的自尊实际上是给了孩子拥有幸福生活的可能性。
⏱ 2024-01-28 14:52:53 ^30182149-19-747-856&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当孩子的大脑知道将会发生什么时，他就会感到安全。规律的环境可以有效地帮助孩子减少焦虑。试着按照一个固定的时间表来给孩子穿衣、喂食、洗澡和哄他睡觉，这会让孩子更加平静、吃得更好和养成更快入睡的好习惯。在孩子出生后的头几个月里，保证孩子居住的空间稳定不变，甚至保证在每次给孩子换尿布、穿衣服或哄他睡觉时所说的话几乎不变，也可以让孩子觉得更安全。
⏱ 2024-01-28 14:56:49 ^30182149-19-3200-3370&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  所以，对于那些想和自己的孩子建立独特而持久的关系的父母来说，最好的方法就是遵守诺言。努力做到遵守自己许下的诺言，并把承诺当作优先要完成的事。要做到这些，你只需要遵循一个简单的原则：不要答应任何你无法完成的事情，而对于那些已经答应要做的事也不要失信于人。 ^30182149-19-6234-6360&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 小孩和大人一样 - ⏱ 2024-01-28 15:00:22&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在一天结束的时候，你给孩子的正面评论数量应该远远超过你向孩子发布命令、指示或给出负面评论的数量。
⏱ 2024-01-28 15:06:14 ^30182149-19-6704-6752&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;14-自信&#34;&gt;14 自信&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 玛丽亚·蒙台梭利曾经说过：“如果孩子觉得这是他自己能完成的事情，就千万不要帮他做。”毫无疑问，最容易损害孩子自信心的事情就是过度的热情和保护。我知道，当我们看到孩子即将犯错或当我们觉得孩子在父母的帮助下可以做得更好时，作为父母的我们很难继续保持冷静、袖手旁观
⏱ 2024-01-28 15:10:25 ^30182149-20-1766-1895&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 从这个意义上来说，不论每个孩子的天性如何，孩子的自信心都直接取决于父母对他的信任。如果孩子的父母整天都在为孩子的健康、安全或幸福而担心，那么孩子的大脑只会理解两件事情：第一，世界是危险的；第二，孩子根本没办法独自面对生活。每当面对挑战或新奇事件时，孩子会在他的杏仁核中接收到一个警告信号，这会让他产生恐惧，使他试图摆脱挑战并且躲在妈妈的裙子后面。反观那些父母给予了更多信任的孩子，即使面对不确定的情况，他们也可以灵活应对并且保持镇定。
⏱ 2024-01-28 15:12:11 ^30182149-20-3250-3467&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 原因很简单，把他们推进教室并不是我的任务，主动进去学习是孩子们自己的责任。举这些例子是为了告诉你们，孩子很小的时候，父母就可以通过一些小举动来向孩子灌输责任意识。当孩子大一些的时候，你可以教他把脏衣服放到洗衣篮里，吃完早餐收拾杯子，或者是清理脏东西—比如当牛奶洒到桌上的时候。如果你用自然的态度来对待这些事情，那么它就不是惩罚，只是在让孩子照料自己的生活，他自己独立完成这些任务的同时也许需要你的小小的帮助。孩子在每个年龄段都有许多可以承担的任务，这些任务有助于他建立自信，同时学会做家务。我可以向你保证，他会喜欢完成自己的任务，并且在这种有能力照顾自己的满足感中慢慢长大。
⏱ 2024-01-28 15:17:39 ^30182149-20-6837-7124&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;15-无畏地成长&#34;&gt;15 无畏地成长&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你真正需要做的，就是帮助你的孩子开口谈论他所看到的和他所感受到的事情。当一个受到惊吓的人谈论并描述发生的一切时，他的大脑左半球（负责语言交流的一侧）就会开始与大脑右半球沟通。用这种简单的方法，你就可以促使孩子大脑内负责语言和逻辑的一侧帮助负责图像和情感的另一侧处理他所遭受的创伤经历。我们把这个过程称为“整合创伤经历”
⏱ 2024-01-28 15:22:15 ^30182149-21-1626-1785&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;16-笃定&#34;&gt;16 笃定&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 高情商者的共同特点是他们非常笃定。“笃定”指的是个人以值得尊敬的方式表达自己的想法的能力。笃定的人可以表达他们不想要或不喜欢的东西，也能够表达他们想要的或者喜欢的东西，并且表达得清晰和值得尊重。
⏱ 2024-01-28 15:30:57 ^30182149-22-498-595&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果孩子观察到他的父亲或母亲以权责清晰和尊重他人的方式处理小小的人际冲突，那么孩子就会模仿父母的行为方式，学习这种笃定的沟通风格。而有些父母对外人则不是很笃定，他们要么具有侵略性，要么处于被动地位。如果你是第一类人，那么你倾向于总是要得到你想要的东西，重视自己的权利，并且将自己的权利凌驾于他人之上，碰到冲突的时候会以有力甚至粗暴的方式进行交流。如果你是第二类人，那么你的个人风格会使你倾向于避免冲突，你会闭上嘴巴或胆怯地表达你的意见，而不会主张自己的权利。
⏱ 2024-01-28 15:34:10 ^30182149-22-1490-1719&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 。正如丹尼尔·西格尔和蒂娜·佩恩·布赖森在他们的著作《全脑教养法》中所说，世界上没有超级父母。我们都会生气，我们都会吵架，我们也都会犯错。如果你教孩子大胆说出自己的想法，你会帮助他成为一个更加笃定自信的人，他将勇敢地表达自己的感受并且敢于提出要求。即使某些情况让孩子感到有些害怕，你也不用担心，因为你知道，他能够保护自己。
⏱ 2024-01-29 13:43:12 ^30182149-22-8543-8704&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;17-播种幸福&#34;&gt;17 播种幸福&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你可以从孩子非常小的时候帮他培养耐心，比如说，当他要吃奶或者因为某些原因感到不舒服的时候，不要急着去满足他的所有要求，你要相信他是有能力等待的。不要因为孩子哭泣就觉得很焦虑，否则你只会让孩子认为经历挫折真的很痛苦。尽管你会尽可能快地去照顾孩子，但要保持冷静和信心，让你的孩子知道他是可以忍受一点挫折的。随着年龄的增长，通过教导孩子尊重限制条件，特别是在时间方面，可以帮助他更好地应对挫折。对于孩子的大脑来说，知道必须等一会儿或者等好几轮才能得到想要的东西是一件好事。从这个意义上来说，你可以教导孩子，在拿出新玩具之前，必须把之前玩过的玩具收好，吃饭之前必须洗手，画画之前必须先收拾好桌子，想要得到梦寐以求的礼物必须等到生日或另一个特定的日期，等等。在等待的过程中，孩子当然需要忍受一些挫折和不耐烦，但他也将学会保持憧憬，这是那些幸福感高的人身上的另一个特点。
⏱ 2024-01-29 13:47:45 ^30182149-23-2376-2755&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 要想成为一个不快乐的人，没有比一直想着我们没有的东西更好的办法。感到不幸的人倾向于把注意力放在令他烦恼或伤心的事情上，而幸福的人则会将注意力集中在那些积极的事情上
⏱ 2024-01-29 13:50:01 ^30182149-23-2847-2928&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第四部分-提高智商&#34;&gt;第四部分 提高智商&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一个视觉智力很发达的孩子将能够以更直观的方式解决问题；记忆力好的孩子可以清楚地记住发生过的事情，以便在下次遇到类似情况时快速地解决；细心的孩子可以注意到表现出差异的细节，并可以长时间地保持专注；语言能力强的孩子则将能够以一种清晰而令人信服的方式表达他们的观点和意见；至于那些有自制力的孩子，能够等待最佳时机的到来，然后把握机会实现自己的目标。习得上述技能并且懂得如何将这些技能融会贯通的人，在生活中一定收获颇丰，过得更加顺风顺水
⏱ 2024-01-30 12:04:38 ^30182149-24-2818-3032&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;19-注意力&#34;&gt;19 注意力&lt;/h3&gt;
&lt;h3 id=&#34;20-记忆力&#34;&gt;20 记忆力&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这种谈话风格的特点是，母亲大量地叙述故事，将事件整理排序并且强调已经发生的细节，让孩子的注意力集中在那些有趣的或积极的时刻。这种谈话风格被称为“积极阐述”。虽然这些科学家也发现不同父母的谈话风格是不一样的，差异与生俱来，但研究同样表明，任何父母都可以通过练习来形成积极阐述的风格，这种谈话风格可以影响孩子记忆力的发展。以下是积极阐述的谈话风格的几个关键点。
⏱ 2024-02-02 18:36:00 ^30182149-26-2526-2704&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;21-语言能力&#34;&gt;21 语言能力&lt;/h3&gt;
&lt;h3 id=&#34;22-视觉智力&#34;&gt;22 视觉智力&lt;/h3&gt;
&lt;h3 id=&#34;23-自控力&#34;&gt;23 自控力&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 从孩子很小的时候开始，你就可以帮助他一点一点克服挫折感。要做到这一点，除了让孩子感受到一定程度的挫折之外，别无他法。你可以满足他的需求，但不要即时满足。相信你的孩子，他可以忍受轻微的不适感。当孩子需要更换尿布、想要吃奶或者因为累了想要睡觉的时候，满足他的需求，但不要表现得很烦躁，因为如果你这样做，孩子只会有样学样，把感受到不舒服和痛苦烦躁的情绪画上等号。
⏱ 2024-02-03 07:06:34 ^30182149-29-2332-2510&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;24-创造力&#34;&gt;24 创造力&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 己的理论来进行解释。目前的教育制度是在工业革命时期设计成型的，因此，它对应的方法是像工厂组装汽车那样教育我们的孩子。不同的老师采取不同的方法，但他们都有着同一个目标—让孩子在完成任务时提高能力或效率。因此，在这种模式下，社会关注的焦点就在于如何让成人适应规则并且更加高产，却不一定要求我们更有创造力
⏱ 2024-02-03 10:56:40 ^30182149-30-1323-1472&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 孩子的想法是如此独特，以至于有时候成人都不知道该如何去欣赏它们的真正价值。我鼓励你不仅要享受孩子的世界，还要帮助他联想那些乍一看毫不相干的事物。如果你的女儿穿了一件条纹雨衣，那么你可以问她还有什么其他东西也是有条纹的。她会告诉你一匹斑马、一条人行道或者一个犯人的睡衣。你可以用小小的咆哮声提醒她想到老虎，然后与老虎身上的条纹联系起来。这看起来可能像是一个愚蠢的游戏，但从条纹雨衣跳到斑马或水手衫的能力是最有创意和最聪明的人的主要特征之一。
⏱ 2024-02-03 16:02:15 ^30182149-30-6796-7015&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;25-适合6岁以下孩子使用的应用程序&#34;&gt;25 适合6岁以下孩子使用的应用程序&lt;/h3&gt;
&lt;h3 id=&#34;26-告别&#34;&gt;26 告别&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 成功教育的秘诀要简单得多，虽然可能需要投入更多的精力并且保持坚定，不能只是三分钟热度。这些父母表现出他们对孩子的爱并且与他们的孩子建立了一条安全的纽带。他们鼓励自主，帮助孩子克服害怕和恐惧。他们建立明确的规范，并经常强化积极的行为。他们也在孩子的学习和智力发展中提供支持。孩子会观察我们所做的一切，因此，父母与他人交往的能力也会影响孩子的成长。所以说，与伴侣有良好的关系并且互相尊重、互相支持和相互欣赏的父母，以及那些表现出良好能力来掌控自己的挫折和压力的父母，似乎对孩子的情感和智力发展有更好的影响。
⏱ 2024-02-03 16:03:56 ^30182149-32-1438-1689&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 正如你所看到的，这些观点都很简单，每一位父母都可以使用，只需要表现出对孩子、对其他成人以及对自己的尊重和理解，并且花必要的时间与孩子在一起即可。毫无疑问，对于你的孩子和他的大脑来说，最重要的是你的陪伴。
⏱ 2024-02-03 16:04:11 ^30182149-32-1689-1790&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 结束之前，我想再一次邀请你和你心里的那个孩子进行联系。请记住，孩子的大脑不像电脑那样以设定好的程序来感知世界，也不是按照成人的方式来学习。因此，最好的教养方式就是进入孩子的世界，与他交谈、阅读、感受和玩耍。尽情享受吧！
⏱ 2024-02-03 16:06:12 ^30182149-32-2662-2771&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;07-激励孩子的行为-1&#34;&gt;07 激励孩子的行为&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你觉得孩子应该享受生活并且保持快乐，那么请开始享受生活给你带来的或大或小的美好时刻。因此，我建议你把为人父母当成一次机会，借此成为更好的自己。每位父亲、每位母亲和每位老师都有责任做好孩子学习的榜样，在做好榜样的同时也可以利用这个机会提升自己  ^6733360-7OshQJxCX
- 💭 孩子是提升自己的途径
- ⏱ 2024-01-24 11:50:29&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因此，强化正向行为的效果更加明显。从下面的图中我们也可以看出，在第二种情况下神经元连接的数量—即将在神经元之间创建的连接—比第一种情况要多。  ^6733360-7OsigXwv7
- 💭 这里有点意思
- ⏱ 2024-01-24 11:56:57&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 使用物质奖励的风险不仅仅是效率低下这么简单，每当你激励孩子的时候，你都在向他传递一个信息：一切都是可以用金钱来衡量的。这种行为就等于告诉孩子，世间的一切都是明码标价的。如果孩子遵守要求或者提供了帮助，你就会和他一起玩耍或者向他表示感谢，这时他就会明白，合作将自己与他人联系在一起，合作是极为重要的品质。如果孩子表现良好，你给他买了一个玩具作为奖励，他就会认为拥有物质才是生活中真正的价值，这样当他更大一些的时候，就需要拥有更多的东西才能感到满足。如果你认为你的儿子或女儿将来不太可能成为百万富翁，并且无法做到随心所欲地购买任何让他感觉特别或开心的东西，那么你现在的做法很有可能正一步步把你的孩子推向低价值感和不快乐的人生角色中去。即使你确定你的孩子长大后一定会生活优裕，使用物质奖励仍然不是一个好的策略，因为这种奖励会使孩子学习正向行为的速度更慢一些，并且使他无法理解亲情或互助的价值。从我的角度来看，毫无疑问，物质奖励越少越好。  ^6733360-7Osil3ksk
- 💭 有道理
- ⏱ 2024-01-24 11:57:57&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 尽管如此，你仍然需要记住，奖励不应该成为孩子的动力，而应该是愉悦的感受让孩子自发地重复那些积极的行为。把和母亲一起玩填色游戏作为让孩子收拾餐盘的奖励是没什么用的，因为孩子并不会意识到履行责任的重要性，反而只学会了如何利用它达到目的。因此，我们需要时刻牢记，奖励一定是在孩子做了一些有价值的事情之后（“你把餐盘收拾得这么好，那么我们今天晚上一起读两个故事吧”），而不是把它当成等价交换的条件（“如果你收拾餐盘，那就给你读故事书来奖励你”）。虽然看起来二者差别不大，对孩子的大脑发育来说却有着不同的意义，因为孩子正在学习两种不同的东西。在第一种情况下，孩子可以获得信心和满足感；在第二种情况下，孩子可能会觉得父母不信任他，他更像是一头需要胡萝卜作为奖励才能好好表现的驴子。  ^6733360-7Osj7fmMj
- 💭 非常有道理
- ⏱ 2024-01-24 12:09:49&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;08-惩罚的替代法-1&#34;&gt;08 惩罚的替代法&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你的孩子也有经常无法完成的任务，你也可以为此设定一个自然的后果，孩子会自然而然地适应，正如你在上文中所看到的那样。设定后果的方法比惩罚更有效，并且会带来更少的负罪感。  ^6733360-7Otuwia1s
- 💭 这跟我们方法类似
- ⏱ 2024-01-25 06:50:37&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;10-同理心-1&#34;&gt;10 同理心&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你会发现我没有像大部分人那样把情绪按“正面情绪”和“负面情绪”进行分类，原因很简单，所有的情绪本身都是积极的，因此，重要的是接纳这些情绪，在孩子的世界里给这些情绪一个容身之所。我们不应该贬低任何感受，因为它们都很重要。愤怒可以帮助我们在某些特定情况下为生活而奋斗，受挫让我们下次做得更好，悲伤可以帮助我们认识事物的美好、了解自己的需求、理解他人的感受。  ^6733360-7OyhzF0LW
- 💭 每种情绪都是好的
- ⏱ 2024-01-28 10:26:18&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;13-联结-1&#34;&gt;13 联结&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 所以，对于那些想和自己的孩子建立独特而持久的关系的父母来说，最好的方法就是遵守诺言。努力做到遵守自己许下的诺言，并把承诺当作优先要完成的事。要做到这些，你只需要遵循一个简单的原则：不要答应任何你无法完成的事情，而对于那些已经答应要做的事也不要失信于人。  ^6733360-7Oyzxvi4M
- 💭 小孩和大人一样
- ⏱ 2024-01-28 15:00:37&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 要做到这一点，我遵循了一个非常简单的原则—把孩子们看作真正的宝藏。我对孩子们微笑，尽可能多花时间和他们在一起，我把陪伴他们列入我的日程计划之内，让他们知道，对于我来说，和他们在一起是一种荣幸。我让他们看见并且亲口告诉他们我对他们的喜爱。我还有一个秘密武器：每当我回到家时，我会把我的外套扔在地上，蹲下来热情洋溢地呼喊他们的名字。这时候，孩子们会跑过来迎接我，他们会以同样的热情回应我。如果你不能让孩子在生命中的每一天都感到自己很特别，那么别指望孩子会来崇拜你。和孩子建立你梦想中的亲密关系的秘诀就是，和孩子一起努力，一天一天地让这个梦想实现。  ^6733360-7OyzZtBUJ
- 💭 陪小孩玩耍
- ⏱ 2024-01-28 15:07:30&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;14-自信-1&#34;&gt;14 自信&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 许多人在做决定时感到不安全。他们不知道应该穿什么衣服，在餐厅里点菜时犹豫不决，他们不知道应该这么说还是那么说，最终他们被困在了自己一手建造起来的充满疑虑、困惑和进退两难的尴尬局面中。你的大脑的一部分总是很清楚你想要什么，还有另一部分总是让你产生怀疑。  ^6733360-7OyAMWs2b
- 💭 我之前就是这样的
- ⏱ 2024-01-28 15:19:41&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;16-笃定-1&#34;&gt;16 笃定&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你是第二类人，那么你的个人风格会使你倾向于避免冲突，你会闭上嘴巴或胆怯地表达你的意见，而不会主张自己的权利。  ^6733360-7OyBX2imJ
- 💭 自己的态度也很重要
- ⏱ 2024-01-28 15:37:26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-10&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 帮助孩子变得笃定自信的第三个关键，就是在他需要说话却无法做到的时候帮助他说出来  ^6733360-7OA0BVGTT
- 💭 将他说不出来的感受给说出来
- ⏱ 2024-01-29 13:40:38&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;17-播种幸福-1&#34;&gt;17 播种幸福&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-11&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 针对彩票赢家进行的研究表明，在成为百万富翁的几个月后，他们会恢复到像以前一样的开心或不开心的状态中。避免满足孩子的所有愿望可以教给孩子3个道理，这将帮助他过上更幸福的生活：首先，金钱买不来幸福；其次，在生活中我们不可能拥有所有我们想要的东西；最后，人们是在与其他人的交往和互动过程中感到幸福的。  ^6733360-7OA125OHp
- 💭 箴言
- ⏱ 2024-01-29 13:47:05&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-12&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 尊重和鼓励你的孩子通过绘画、整理娃娃、做手工或看故事书来娱乐，因为从幸福的角度来看，集中精力以至失去时间概念的能力是非常有价值的。  ^6733360-7OBqni8nz
- 💭 这不就心流吗
- ⏱ 2024-01-30 12:00:42&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;21-语言能力-1&#34;&gt;21 语言能力&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-13&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一句简单的“把小玩具车放到大箱子里去”，需要一个2岁孩子的全部努力。但还有一些更复杂的事情，比如，“把牛奶倒在杯子里，把两个勺子放在桌子上，然后从第二个抽屉里拿两张纸巾”，这对于5岁的孩子来说将是一个极大的挑战。  ^6733360-7OHbrNIZG
- 💭 很多早教机构就拿这个说事
- ⏱ 2024-02-03 06:52:48&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;22-视觉智力-1&#34;&gt;22 视觉智力&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-14&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 拼图、乐高或者经典的积木游戏，所有孩子都喜欢。除此之外，还有许多其他有趣的游戏和方法，同样可以帮助孩子更好地理解形状与空间。  ^6733360-7OHbNpjmL
- 💭 现在帮小孩拼乐高，确实锻炼空间想象能力
- ⏱ 2024-02-03 06:58:07&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-15&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 。一点一点地进阶，直到画出你们全家所有房间的平面图以及你们到学校的路线图。如果你们每天需要乘坐公共交通工具，那么路线图就是一种很好的方式，可以让孩子明白，用笔画下来的就是他每天用眼睛看到的东西。你们也可以用世界地图来进行娱乐。你们可以谈论不同的国家以及跟这些国家相关的人物。比如伦敦的彼得·潘、巴黎的料理鼠王、阿拉伯的阿拉丁和美国的宝嘉康蒂。有无穷无尽的人物、动物、树木或者自然环境可以让你的孩子与世界上的每个地方产生联系。  ^6733360-7OHc27SbK
- 💭 确实不错
- ⏱ 2024-02-03 07:01:44&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;23-自控力-1&#34;&gt;23 自控力&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-16&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你曾经试过减肥或戒烟，你就会知道我在说什么。实际情况是，无论完成的是什么任务，自我控制对大脑来说都是非常困难的。这是一项高水平的技能，需要用毕生的时间去锻炼。  ^6733360-7OHcev9Jh
- 💭 还好我不错
- ⏱ 2024-02-03 07:04:47&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-17&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 作为父母，你一定要保持平静，平静地对孩子说话或唱歌，语气平和。冷静和自信地告诉孩子，他的期望以后会实现，帮助他忽略引起不适的事情，转移他的注意力，尽量站在他的角度，不要表现出痛苦或内疚，而要充满信任和同理心。  ^6733360-7OHcoVuPy
- 💭 大人平静小孩才能平静
- ⏱ 2024-02-03 07:07:21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-18&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 让孩子接触不同的人、不同的环境和情境，并在不同场景下向他解释对应的规则或要求是什么，这样做可以帮助他理解在不同时刻应该表现出不同程度的自我控制。你也可以教他在合适的时候适当释放自己。释放并不意味着向孩子解释他能做什么和不能做什么，只是单纯地让他随心所欲地放松自己，就当你不存在，也不需要得到你的允许。当你发现孩子有些拘谨时，你可以鼓励他模仿“傻瓜”或者“野蛮人”逗乐，或者是想吃多少糖果就吃多少，也可以让他自由地发发脾气。  ^6733360-7OHgFXFPO
- 💭 中国也讲抒情，发乎于情止乎于礼
- ⏱ 2024-02-03 08:12:37&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;24-创造力-1&#34;&gt;24 创造力&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-19&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 儿童的大脑比成人的大脑更有创意，是因为儿童的大脑还没有进入社会规则这个巨大的过滤器中。一个孩子可以在北极画一条龙，下一秒钟又可以不假思索地跳转到猫咪宇航员或者豪猪兄弟上去。他的想象力就像脱离牢笼的小鸟，在天空中自由翱翔。然而长大成人之后，大脑额叶就会吸收一系列的标准、规则、纪律、大纲、典范、标准和模型，继而关闭或埋葬了小时候所拥有的这种创造天性。  ^6733360-7OHrtU9nX
- 💭 很有道理
- ⏱ 2024-02-03 10:57:37&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-20&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 无聊是创造力之母。所有伟大的创意天才都是从感到无聊之后才开始思考的。当孩子没有事情可做，时间空闲的时候，他的大脑就会开始感到无聊，试图通过想象来寻找新的娱乐方式。如果孩子从不感到无聊，如果他长时间坐在电视机前，或者所有时间都被课外辅导班填满，那么他的创造力就会因为缺乏表达自己的机会而被淹没。拥有一切、没有时间感到无聊的孩子很难成为一个有创造力的人。  ^6733360-7OHLjBLfC
- 💭 孩子的课余时间不应该被塞满
- ⏱ 2024-02-03 16:00:27&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%AE%9E%E6%88%98ai%E5%A4%A7%E6%A8%A1%E5%9E%8B/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%AE%9E%E6%88%98ai%E5%A4%A7%E6%A8%A1%E5%9E%8B/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 实战AI大模型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/12/cpplatform_f2ycapw1h8dry5gsurzztk/t7_cpplatform_f2ycapw1h8dry5gsurzztk1710313514.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 实战AI大模型|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 实战AI大模型&lt;/li&gt;
&lt;li&gt;作者： 尤洋&lt;/li&gt;
&lt;li&gt;简介： 《实战AI大模型》是一本旨在填补人工智能（AI）领域（特别是AI大模型）理论与实践之间鸿沟的实用手册。书中介绍了AI大模型的基础知识和关键技术，如Transformer、BERT、ALBERT、T5、GPT系列、InstructGPT、ChatGPT、GPT 4、PaLM和视觉模型等，并详细解释了这些模型的技术原理、实际应用以及高性能计算（HPC）技术的使用，如并行计算和内存优化。
同时，《实战AI大模型》还提供了实践案例，详细介绍了如何使用Colossal AI训练各种模型。无论是人工智能初学者还是经验丰富的实践者，都能从本书学到实用的知识和技能，从而在迅速发展的AI领域中找到适合自己的方向。&lt;/li&gt;
&lt;li&gt;出版时间 2023-11-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111738787&lt;/li&gt;
&lt;li&gt;分类： 计算机-人工智能&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/50b32330813ab89edg018f29&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;第1章-深度学习中的ai大模型&#34;&gt;第1章 深度学习中的AI大模型&lt;/h2&gt;
&lt;h3 id=&#34;11-ai大模型在人工智能领域的兴起&#34;&gt;1.1 AI大模型在人工智能领域的兴起&lt;/h3&gt;
&lt;h3 id=&#34;12-深度学习框架入门&#34;&gt;1.2 深度学习框架入门&lt;/h3&gt;
&lt;h2 id=&#34;第2章-分布式系统ai大模型的诞生之所&#34;&gt;第2章 分布式系统：AI大模型的诞生之所&lt;/h2&gt;
&lt;h3 id=&#34;21-深度学习与分布式系统&#34;&gt;2.1 深度学习与分布式系统&lt;/h3&gt;
&lt;h3 id=&#34;22-ai大模型训练方法&#34;&gt;2.2 AI大模型训练方法&lt;/h3&gt;
&lt;h3 id=&#34;23-异构训练&#34;&gt;2.3 异构训练&lt;/h3&gt;
&lt;h3 id=&#34;24-实战分布式训练&#34;&gt;2.4 实战分布式训练&lt;/h3&gt;
&lt;h2 id=&#34;第3章-分布式训练上千台机器如何共同起舞&#34;&gt;第3章 分布式训练：上千台机器如何共同起舞&lt;/h2&gt;
&lt;h3 id=&#34;31-并行策略基础原理&#34;&gt;3.1 并行策略基础原理&lt;/h3&gt;
&lt;h3 id=&#34;32-高级并行策略基础原理&#34;&gt;3.2 高级并行策略基础原理&lt;/h3&gt;
&lt;h3 id=&#34;33-实战分布式训练&#34;&gt;3.3 实战分布式训练&lt;/h3&gt;
&lt;h2 id=&#34;第4章-ai大模型时代的奠基石-transformer模型&#34;&gt;第4章 AI大模型时代的奠基石 Transformer模型&lt;/h2&gt;
&lt;h3 id=&#34;41-自然语言处理基础&#34;&gt;4.1 自然语言处理基础&lt;/h3&gt;
&lt;h3 id=&#34;42-transformer详解&#34;&gt;4.2 Transformer详解&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但第二个自注意力子层是用来将解码器的输入（也就是目标序列）和编码器的输出（也就是源序列的表示）联系起来的。在这个子层中，查询来自于前一个自注意力子层的输出，而键和值来自于编码器的输出。
⏱ 2024-04-20 17:32:27 ^3300090698-19-1969-2061&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 而Transformer模型使用了注意力机制的一种变体：自注意力机制
⏱ 2024-04-20 17:35:55 ^3300090698-19-4608-4642&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 自注意力机制是Transformer中的核心组成部分。它能够让模型在生成每个位置的输出时都能考虑到输入序列中所有位置的信息。
⏱ 2024-04-20 17:36:06 ^3300090698-19-4672-4734&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;43-transformer的变体与扩展&#34;&gt;4.3 Transformer的变体与扩展&lt;/h3&gt;
&lt;h2 id=&#34;第5章-ai大幅度提升google搜索质量bert模型&#34;&gt;第5章 AI大幅度提升Google搜索质量：BERT模型&lt;/h2&gt;
&lt;h3 id=&#34;51-bert模型详解&#34;&gt;5.1 BERT模型详解&lt;/h3&gt;
&lt;h3 id=&#34;52-高效降低内存使用的albert模型&#34;&gt;5.2 高效降低内存使用的ALBERT模型&lt;/h3&gt;
&lt;h3 id=&#34;53-bert模型实战训练&#34;&gt;5.3 BERT模型实战训练&lt;/h3&gt;
&lt;h2 id=&#34;第6章-统一自然语言处理范式的t5模型&#34;&gt;第6章 统一自然语言处理范式的T5模型&lt;/h2&gt;
&lt;h3 id=&#34;61-t5模型详解&#34;&gt;6.1 T5模型详解&lt;/h3&gt;
&lt;h3 id=&#34;62-统一bert和gpt的bart模型&#34;&gt;6.2 统一BERT和GPT的BART模型&lt;/h3&gt;
&lt;h3 id=&#34;63-统一语言学习范式的ul2框架&#34;&gt;6.3 统一语言学习范式的UL2框架&lt;/h3&gt;
&lt;h3 id=&#34;64-t5模型预训练方法和关键技术&#34;&gt;6.4 T5模型预训练方法和关键技术&lt;/h3&gt;
&lt;h2 id=&#34;第7章-作为通用人工智能起点的gpt系列模型&#34;&gt;第7章 作为通用人工智能起点的GPT系列模型&lt;/h2&gt;
&lt;h3 id=&#34;71-gpt系列模型的起源&#34;&gt;7.1 GPT系列模型的起源&lt;/h3&gt;
&lt;h3 id=&#34;72-gpt-2模型详解&#34;&gt;7.2 GPT-2模型详解&lt;/h3&gt;
&lt;h3 id=&#34;73-gpt-3模型详解&#34;&gt;7.3 GPT-3模型详解&lt;/h3&gt;
&lt;h3 id=&#34;74-gpt-3模型构建与训练实战&#34;&gt;7.4 GPT-3模型构建与训练实战&lt;/h3&gt;
&lt;h2 id=&#34;第8章-兴起新一代人工智能浪潮chatgpt模型&#34;&gt;第8章 兴起新一代人工智能浪潮：ChatGPT模型&lt;/h2&gt;
&lt;h3 id=&#34;81-能与互联网交互的webgpt&#34;&gt;8.1 能与互联网交互的WebGPT&lt;/h3&gt;
&lt;h3 id=&#34;82-能与人类交互的instructgpt模型&#34;&gt;8.2 能与人类交互的InstructGPT模型&lt;/h3&gt;
&lt;h3 id=&#34;83-chatgpt和gpt-4&#34;&gt;8.3 ChatGPT和GPT-4&lt;/h3&gt;
&lt;h3 id=&#34;84-构建会话系统模型&#34;&gt;8.4 构建会话系统模型&lt;/h3&gt;
&lt;h2 id=&#34;第9章-百花齐放的自然语言模型switch-transfomer和palm&#34;&gt;第9章 百花齐放的自然语言模型：Switch Transfomer和PaLM&lt;/h2&gt;
&lt;h3 id=&#34;91-万亿参数稀疏大模型switch-transformer&#34;&gt;9.1 万亿参数稀疏大模型Switch Transformer&lt;/h3&gt;
&lt;h3 id=&#34;92-palm模型优化语言模型性能&#34;&gt;9.2 PaLM模型：优化语言模型性能&lt;/h3&gt;
&lt;h3 id=&#34;93-palm实战训练&#34;&gt;9.3 PaLM实战训练&lt;/h3&gt;
&lt;h2 id=&#34;第10章-实现transformer向计算机视觉进军的vit模型&#34;&gt;第10章 实现Transformer向计算机视觉进军的ViT模型&lt;/h2&gt;
&lt;h3 id=&#34;101-transformer在计算机视觉中的应用&#34;&gt;10.1 Transformer在计算机视觉中的应用&lt;/h3&gt;
&lt;h3 id=&#34;102-视觉大模型的进一步发展transformer与卷积的融合&#34;&gt;10.2 视觉大模型的进一步发展：Transformer与卷积的融合&lt;/h3&gt;
&lt;h3 id=&#34;103-vit模型构建与训练实战&#34;&gt;10.3 ViT模型构建与训练实战&lt;/h3&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h2 id=&#34;文后&#34;&gt;文后&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;作者简介-1&#34;&gt;作者简介&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 尤洋，清华大学硕士，加州伯克利大学博士，新加坡国立大学计算机系校长青年教授(Presidential Young Professor)。曾创造ImageNet、BEKT、AlphuFold、ViT训练速度的世界纪录，相关技术被广泛应用于谷歌、微软、英特尔、英伟达等科技公司。  ^6733360-7PWbheS5J
- 💭 牛
- ⏱ 2024-03-24 21:43:49&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;42-transformer详解-1&#34;&gt;4.2 Transformer详解&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 rmer模  ^6733360-7QAZ4rvi9
- 💭 这个仅作了解
- ⏱ 2024-04-20 17:30:57&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这种机制的基本想法是将自注意力机制应用多次，每次使用不同的查询、键和值的权重矩阵，然后将所有的输出拼接起来，再通过一个线性变换得到最终的输出。这样做的好处是可以让模型从不同的表示空间中学习输入序列的信息。  ^6733360-7QAZCAeeO
- 💭 不同的权重矩阵，可以获取不同空间的信息，然后进行拼接，可以将信息杂糅在一起
- ⏱ 2024-04-20 17:39:21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%AF%8C%E5%A3%AB%E5%BE%AE%E5%8D%95%E6%91%84%E5%BD%B1%E5%85%A5%E9%97%A8/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%AF%8C%E5%A3%AB%E5%BE%AE%E5%8D%95%E6%91%84%E5%BD%B1%E5%85%A5%E9%97%A8/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 富士微单摄影入门&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/13/YueWen_29976277/t7_YueWen_29976277.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 富士微单摄影入门|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 富士微单摄影入门&lt;/li&gt;
&lt;li&gt;作者： 雷波编著&lt;/li&gt;
&lt;li&gt;简介： 本书重点讲解了索尼微单相机的使用方法与技巧，包括相机按钮和常用菜单功能，各类常用镜头、滤镜、三脚架等附件的推荐和使用方法，以及摄影构图、用光等基础知识。同时对常见摄影题材，如人像、儿童、风光、微距、动物等的实拍流程与技巧进行了讲解。本书特别适合初次接触富士微单的摄影爱好者阅读，也可作为富士微单用户的速查手册。&lt;/li&gt;
&lt;li&gt;出版时间 2019-05-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787122339669&lt;/li&gt;
&lt;li&gt;分类： 科学技术-工业技术&lt;/li&gt;
&lt;li&gt;出版社： 化学工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/666329c071c966d566692e8&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权页&#34;&gt;版权页&lt;/h2&gt;
&lt;h2 id=&#34;内容概述&#34;&gt;内容概述&lt;/h2&gt;
&lt;h2 id=&#34;前-言&#34;&gt;前 言&lt;/h2&gt;
&lt;h2 id=&#34;第1章-学会使用机身按钮&#34;&gt;第1章 学会使用机身按钮&lt;/h2&gt;
&lt;h3 id=&#34;熟练使用相机的重要性&#34;&gt;熟练使用相机的重要性&lt;/h3&gt;
&lt;h3 id=&#34;相机上的按钮功能如何学习&#34;&gt;相机上的按钮功能如何学习&lt;/h3&gt;
&lt;h3 id=&#34;使用镜头释放按钮更换镜头&#34;&gt;使用镜头释放按钮更换镜头&lt;/h3&gt;
&lt;h3 id=&#34;使用q按钮快速设置拍摄参数&#34;&gt;使用Q按钮快速设置拍摄参数&lt;/h3&gt;
&lt;h3 id=&#34;使用menuok按钮调控相机菜单&#34;&gt;使用MENU/OK按钮调控相机菜单&lt;/h3&gt;
&lt;h3 id=&#34;使用dispback按钮切换屏幕显示信息&#34;&gt;使用DISP/BACK按钮切换屏幕显示信息&lt;/h3&gt;
&lt;h3 id=&#34;使用播放按钮检视照片&#34;&gt;使用播放按钮检视照片&lt;/h3&gt;
&lt;h3 id=&#34;使用删除按钮删除照片&#34;&gt;使用删除按钮删除照片&lt;/h3&gt;
&lt;h3 id=&#34;利用富士相机录制视频&#34;&gt;利用富士相机录制视频&lt;/h3&gt;
&lt;h3 id=&#34;使用前指令拨盘快速设定光圈与曝光补偿&#34;&gt;使用前指令拨盘快速设定光圈与曝光补偿&lt;/h3&gt;
&lt;h3 id=&#34;使用后指令拨盘调节快门速度与快速菜单中的设定&#34;&gt;使用后指令拨盘调节快门速度与快速菜单中的设定&lt;/h3&gt;
&lt;h3 id=&#34;按快门按钮前的思考流程&#34;&gt;按快门按钮前的思考流程&lt;/h3&gt;
&lt;h2 id=&#34;第2章-决定摄影成败的细节&#34;&gt;第2章 决定摄影成败的细节&lt;/h2&gt;
&lt;h3 id=&#34;摄影与射击的共性稳定&#34;&gt;摄影与射击的共性——稳定&lt;/h3&gt;
&lt;h3 id=&#34;按快门的正确方法&#34;&gt;按快门的正确方法&lt;/h3&gt;
&lt;h3 id=&#34;必须重视的拍前检查&#34;&gt;必须重视的拍前检查&lt;/h3&gt;
&lt;h3 id=&#34;辩证使用raw格式保存照片&#34;&gt;辩证使用RAW格式保存照片&lt;/h3&gt;
&lt;h3 id=&#34;保证足够的电量与存储空间&#34;&gt;保证足够的电量与存储空间&lt;/h3&gt;
&lt;h2 id=&#34;第3章-合理使用不同的拍摄模式&#34;&gt;第3章 合理使用不同的拍摄模式&lt;/h2&gt;
&lt;h3 id=&#34;从自动挡开始也无妨&#34;&gt;从自动挡开始也无妨&lt;/h3&gt;
&lt;h3 id=&#34;根据拍摄题材选择特定模式快速出片&#34;&gt;根据拍摄题材选择特定模式快速“出片”&lt;/h3&gt;
&lt;h3 id=&#34;控制背景虚化用光圈优先模式a&#34;&gt;控制背景虚化用光圈优先模式（A）&lt;/h3&gt;
&lt;h3 id=&#34;定格瞬间动作用快门优先模式s&#34;&gt;定格瞬间动作用快门优先模式（S）&lt;/h3&gt;
&lt;h3 id=&#34;匆忙抓拍用程序自动模式p&#34;&gt;匆忙抓拍用程序自动模式（P）&lt;/h3&gt;
&lt;h3 id=&#34;自由控制曝光用m挡&#34;&gt;自由控制曝光用M挡&lt;/h3&gt;
&lt;h3 id=&#34;用b门拍烟花车轨银河星轨&#34;&gt;用B门拍烟花、车轨、银河、星轨&lt;/h3&gt;
&lt;h2 id=&#34;第4章-富士镜头详解&#34;&gt;第4章 富士镜头详解&lt;/h2&gt;
&lt;h3 id=&#34;镜头标识名称解读&#34;&gt;镜头标识名称解读&lt;/h3&gt;
&lt;h3 id=&#34;学会换算等效焦距&#34;&gt;学会换算等效焦距&lt;/h3&gt;
&lt;h3 id=&#34;了解焦距对视角画面效果的影响&#34;&gt;了解焦距对视角、画面效果的影响&lt;/h3&gt;
&lt;h3 id=&#34;明白定焦镜头与变焦镜头的优劣&#34;&gt;明白定焦镜头与变焦镜头的优劣&lt;/h3&gt;
&lt;h3 id=&#34;大倍率变焦镜头的优势&#34;&gt;大倍率变焦镜头的优势&lt;/h3&gt;
&lt;h3 id=&#34;大倍率变焦镜头的劣势&#34;&gt;大倍率变焦镜头的劣势&lt;/h3&gt;
&lt;h3 id=&#34;小倍率变焦镜头的优势&#34;&gt;小倍率变焦镜头的优势&lt;/h3&gt;
&lt;h3 id=&#34;小倍率变焦镜头的劣势&#34;&gt;小倍率变焦镜头的劣势&lt;/h3&gt;
&lt;h3 id=&#34;恒定光圈镜头与浮动光圈镜头&#34;&gt;恒定光圈镜头与浮动光圈镜头&lt;/h3&gt;
&lt;h3 id=&#34;不同焦段镜头的特点&#34;&gt;不同焦段镜头的特点&lt;/h3&gt;
&lt;h3 id=&#34;常用镜头推荐&#34;&gt;常用镜头推荐&lt;/h3&gt;
&lt;h2 id=&#34;第5章-就这几招让你的相机更稳定&#34;&gt;第5章 就这几招让你的相机更稳定&lt;/h2&gt;
&lt;h3 id=&#34;拍前深呼吸保持稳定&#34;&gt;拍前深呼吸保持稳定&lt;/h3&gt;
&lt;h3 id=&#34;用三脚架与独脚架保持拍摄稳定性&#34;&gt;用三脚架与独脚架保持拍摄稳定性&lt;/h3&gt;
&lt;h3 id=&#34;用快门线与无线快门遥控拍摄&#34;&gt;用快门线与无线快门遥控拍摄&lt;/h3&gt;
&lt;h3 id=&#34;使用定时自拍避免机震&#34;&gt;使用定时自拍避免机震&lt;/h3&gt;
&lt;h2 id=&#34;第6章-滤镜配置与使用详解&#34;&gt;第6章 滤镜配置与使用详解&lt;/h2&gt;
&lt;h3 id=&#34;滤镜的方圆之争&#34;&gt;滤镜的“方圆”之争&lt;/h3&gt;
&lt;h3 id=&#34;选择滤镜要对口&#34;&gt;选择滤镜要对口&lt;/h3&gt;
&lt;h3 id=&#34;uv镜&#34;&gt;UV镜&lt;/h3&gt;
&lt;h3 id=&#34;保护镜&#34;&gt;保护镜&lt;/h3&gt;
&lt;h3 id=&#34;偏振镜&#34;&gt;偏振镜&lt;/h3&gt;
&lt;h3 id=&#34;中灰镜&#34;&gt;中灰镜&lt;/h3&gt;
&lt;h3 id=&#34;中灰渐变镜&#34;&gt;中灰渐变镜&lt;/h3&gt;
&lt;h2 id=&#34;第7章-色温与白平衡运用技巧&#34;&gt;第7章 色温与白平衡运用技巧&lt;/h2&gt;
&lt;h3 id=&#34;白平衡与色温的概念&#34;&gt;白平衡与色温的概念&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 通常，当自定义设置的色温值和光源色温一致时，能获得准确的色彩还原效果；如果设置的色温值高于拍摄时现场光源的色温，则照片的颜色会向暖色偏移；如果设置的色温值低于拍摄时现场光源的色温，则照片的颜色会向冷色偏移。
⏱ 2023-12-15 18:41:21 ^29976277-58-2359-2462&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;富士白平衡的含义与典型应用&#34;&gt;富士白平衡的含义与典型应用&lt;/h3&gt;
&lt;h3 id=&#34;手调色温自定义画面色调&#34;&gt;手调色温——自定义画面色调&lt;/h3&gt;
&lt;h3 id=&#34;巧妙使用白平衡为画面增彩&#34;&gt;巧妙使用白平衡为画面增彩&lt;/h3&gt;
&lt;h2 id=&#34;第8章-决定照片品质的3个因素之一曝光&#34;&gt;第8章 决定照片品质的3个因素之一——曝光&lt;/h2&gt;
&lt;h3 id=&#34;曝光三要素之光圈控制光线进入量&#34;&gt;曝光三要素之光圈——控制光线进入量&lt;/h3&gt;
&lt;h3 id=&#34;曝光三要素之快门速度控制相机感光时间&#34;&gt;曝光三要素之快门速度——控制相机感光时间&lt;/h3&gt;
&lt;h3 id=&#34;曝光三要素之感光度调整相机对光的敏感度&#34;&gt;曝光三要素之感光度——调整相机对光的敏感度&lt;/h3&gt;
&lt;h3 id=&#34;曝光补偿实现个性化画面的撒手锏&#34;&gt;曝光补偿——实现个性化画面的撒手锏&lt;/h3&gt;
&lt;h3 id=&#34;测光模式曝光的总控制台&#34;&gt;测光模式——曝光的总控制台&lt;/h3&gt;
&lt;h3 id=&#34;利用曝光锁定功能锁定曝光参数&#34;&gt;利用曝光锁定功能锁定曝光参数&lt;/h3&gt;
&lt;h2 id=&#34;第9章-决定照片品质的3个因素之二对焦&#34;&gt;第9章 决定照片品质的3个因素之二——对焦&lt;/h2&gt;
&lt;h3 id=&#34;对焦的概念&#34;&gt;对焦的概念&lt;/h3&gt;
&lt;h3 id=&#34;对焦点的概念&#34;&gt;对焦点的概念&lt;/h3&gt;
&lt;h3 id=&#34;根据拍摄题材选用自动对焦模式&#34;&gt;根据拍摄题材选用自动对焦模式&lt;/h3&gt;
&lt;h3 id=&#34;设置不同的连续自动对焦模式&#34;&gt;设置不同的连续自动对焦模式&lt;/h3&gt;
&lt;h3 id=&#34;设置拍摄时释放优先还是对焦优先&#34;&gt;设置拍摄时释放优先还是对焦优先&lt;/h3&gt;
&lt;h3 id=&#34;设置脸部识别眼睛识别设置功能拍摄人像&#34;&gt;设置“脸部识别/眼睛识别设置”功能拍摄人像&lt;/h3&gt;
&lt;h3 id=&#34;8种情况下手动对焦比自动更好&#34;&gt;8种情况下手动对焦比自动更好&lt;/h3&gt;
&lt;h3 id=&#34;使用对焦确认辅助手动对焦&#34;&gt;使用“对焦确认”辅助手动对焦&lt;/h3&gt;
&lt;h3 id=&#34;4招选好对焦位置&#34;&gt;4招选好对焦位置&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 要想拍出好照片，选择对焦位置是关键。拍摄不同的场景、不同的景深，或者营造不同的意境，都需要选择不同的对焦位置。
⏱ 2023-12-09 21:03:35 ^29976277-78-393-448&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;驱动模式与对焦功能的搭配使用&#34;&gt;驱动模式与对焦功能的搭配使用&lt;/h3&gt;
&lt;h2 id=&#34;第10章-决定照片品质的3个因素之三景深&#34;&gt;第10章 决定照片品质的3个因素之三——景深&lt;/h2&gt;
&lt;h3 id=&#34;什么是大景深与小景深&#34;&gt;什么是大景深与小景深？&lt;/h3&gt;
&lt;h3 id=&#34;影响景深的因素光圈&#34;&gt;影响景深的因素——光圈&lt;/h3&gt;
&lt;h3 id=&#34;影响景深的因素焦距&#34;&gt;影响景深的因素——焦距&lt;/h3&gt;
&lt;h3 id=&#34;影响景深的因素物距&#34;&gt;影响景深的因素——物距&lt;/h3&gt;
&lt;h2 id=&#34;第11章-掌握构图与用光技巧&#34;&gt;第11章 掌握构图与用光技巧&lt;/h2&gt;
&lt;h3 id=&#34;画面的主要构成&#34;&gt;画面的主要构成&lt;/h3&gt;
&lt;h3 id=&#34;景别&#34;&gt;景别&lt;/h3&gt;
&lt;h3 id=&#34;经典构图样式&#34;&gt;经典构图样式&lt;/h3&gt;
&lt;h3 id=&#34;光的属性&#34;&gt;光的属性&lt;/h3&gt;
&lt;h3 id=&#34;光的方向&#34;&gt;光的方向&lt;/h3&gt;
&lt;h2 id=&#34;第12章-美女儿童摄影技巧&#34;&gt;第12章 美女、儿童摄影技巧&lt;/h2&gt;
&lt;h3 id=&#34;逆光小清新人像&#34;&gt;逆光小清新人像&lt;/h3&gt;
&lt;h3 id=&#34;阴天环境下的拍摄技巧&#34;&gt;阴天环境下的拍摄技巧&lt;/h3&gt;
&lt;h3 id=&#34;如何拍摄跳跃照&#34;&gt;如何拍摄跳跃照&lt;/h3&gt;
&lt;h3 id=&#34;日落时拍摄人像的技巧&#34;&gt;日落时拍摄人像的技巧&lt;/h3&gt;
&lt;h3 id=&#34;夜景人像的拍摄技巧&#34;&gt;夜景人像的拍摄技巧&lt;/h3&gt;
&lt;h3 id=&#34;趣味创意照&#34;&gt;趣味创意照&lt;/h3&gt;
&lt;h3 id=&#34;拍摄儿童宝贝&#34;&gt;拍摄儿童宝贝&lt;/h3&gt;
&lt;h2 id=&#34;第13章-风光摄影技巧&#34;&gt;第13章 风光摄影技巧&lt;/h2&gt;
&lt;h3 id=&#34;山景的拍摄技巧&#34;&gt;山景的拍摄技巧&lt;/h3&gt;
&lt;h3 id=&#34;水景的拍摄技巧&#34;&gt;水景的拍摄技巧&lt;/h3&gt;
&lt;h3 id=&#34;雪景的拍摄技巧&#34;&gt;雪景的拍摄技巧&lt;/h3&gt;
&lt;h3 id=&#34;太阳的拍摄技巧&#34;&gt;太阳的拍摄技巧&lt;/h3&gt;
&lt;h3 id=&#34;迷离的雾景&#34;&gt;迷离的雾景&lt;/h3&gt;
&lt;h3 id=&#34;花卉的拍摄技巧&#34;&gt;花卉的拍摄技巧&lt;/h3&gt;
&lt;h2 id=&#34;第14章-昆虫鸟类等动物摄影技巧&#34;&gt;第14章 昆虫、鸟类等动物摄影技巧&lt;/h2&gt;
&lt;h3 id=&#34;拍摄昆虫的技巧&#34;&gt;拍摄昆虫的技巧&lt;/h3&gt;
&lt;h3 id=&#34;拍摄鸟类的技巧&#34;&gt;拍摄鸟类的技巧&lt;/h3&gt;
&lt;h3 id=&#34;拍摄其他动物的技巧&#34;&gt;拍摄其他动物的技巧&lt;/h3&gt;
&lt;h2 id=&#34;第15章-城市建筑与夜景摄影技巧&#34;&gt;第15章 城市建筑与夜景摄影技巧&lt;/h2&gt;
&lt;h3 id=&#34;拍摄建筑的技巧&#34;&gt;拍摄建筑的技巧&lt;/h3&gt;
&lt;h3 id=&#34;拍摄夜景的技巧&#34;&gt;拍摄夜景的技巧&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%B9%B6%E8%A1%8C%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%B9%B6%E8%A1%8C%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 并行算法设计与性能优化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/73/622073/t7_622073.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 并行算法设计与性能优化|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 并行算法设计与性能优化&lt;/li&gt;
&lt;li&gt;作者： 刘文志 著&lt;/li&gt;
&lt;li&gt;简介： 并行计算领域著名专家撰写，百度深度学习研究院“杰出科学家”吴韧鼎力推荐。结合大量示例和伪代码，全面讲解通过并行算法设计实现单核/多核代码、GPU和处理器的性能优化与并行化秘技，并首次提出实现复杂度的全新度量标准。&lt;/li&gt;
&lt;li&gt;出版时间 2015-05-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111501022&lt;/li&gt;
&lt;li&gt;分类： 计算机-编程设计&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/b4d329c0597df9b4d745d2a&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  第5章简单介绍了指令级依赖和循环级依赖，并给出许多如何去除依赖的示例，最后以简单介绍处理器硬件支持的寄存器重命名结束。 ^622073-3-5140-5206&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 比较重要 - ⏱ 2024-03-24 13:33:10&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第1章-绪论&#34;&gt;第1章 绪论&lt;/h2&gt;
&lt;h3 id=&#34;11-并行和向量化的作用&#34;&gt;1.1 并行和向量化的作用&lt;/h3&gt;
&lt;h3 id=&#34;12-为什么要并行或向量化&#34;&gt;1.2 为什么要并行或向量化&lt;/h3&gt;
&lt;h3 id=&#34;13-为什么向量化或并行难&#34;&gt;1.3 为什么向量化或并行难&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 任务/数据划分：并行意味着多个控制流同时执行，而向量化意味着同时操作多个数据，并行需要在各个控制流之间划分任务和数据并去除依赖，向量化则需要处理向量内要处理的数据的依赖关系。数据/任务的划分方式不但决定了编程时的难易程度，而且划分带来的负载均衡和通信问题往往也会对程序的最终性能产生决定性的影响。
⏱ 2024-03-24 13:38:38 ^622073-7-1370-1518&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 可扩展性的问题基本上没有解决办法，因为开发人员不能完全正确地预测在目前还不存在的硬件上发生的事情。通常的缓解方法是要求在开发项目时，留下足够的设计文档，使源码有足够的、准确的注释。这样在核心数增多可扩展性出现问题时，开发人员能够尽快定位问题，找到可能的解决办法。
⏱ 2024-03-24 13:44:00 ^622073-7-3508-3639&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 只能自动向量化一些简单的代码，即使能自动向量化代码，通常也不是最优的；·只能自动并行化简单代码，编译器在自动并行化方面做得通常比自动向量化还要差；·不能找出并行冲突的地方；·不能协调资源访问。
⏱ 2024-03-24 13:46:13 ^622073-7-6501-6690&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;14-并行的替代方法&#34;&gt;1.4 并行的替代方法&lt;/h3&gt;
&lt;h3 id=&#34;15-进程线程与处理器&#34;&gt;1.5 进程、线程与处理器&lt;/h3&gt;
&lt;h3 id=&#34;16-并行硬件平台&#34;&gt;1.6 并行硬件平台&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 GPU是为了渲染大量像素而设计的，并不关心某个像素的处理时间，而关注单位时间内能够处理的像素数量，因此带宽比延迟更重要。考虑到渲染的大量像素之间通常并不相关，因此GPU将大量的晶体管用于并行计算，故在同样数目的晶体管上，具有比CPU更高的计算能力。
⏱ 2024-03-24 17:25:33 ^622073-10-4538-4662&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于GPU将更大比例的晶体管用于计算，相对来说用于缓存的比例就比CPU小，因此通常局部性满足CPU要求而不满足GPU要求的应用不适合GPU。由于GPU通过大量线程的并行来隐藏访存延迟，一些数据局部性非常差的应用反而能够在GPU上获得很好的收益。另外一些计算访存比低的应用在GPU上很难获得非常高的性能收益，但是这并不意味着在GPU实现会比在CPU上实现差。CPU+GPU异构计算需要在GPU和CPU之间传输数据，而这个带宽比内存的访问带宽还要小，因此那种需要在GPU和CPU之间进行大量、频繁数据交互的解决方案可能不适合在GPU上实现。
⏱ 2024-03-24 17:27:35 ^622073-10-4872-5140&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ARM支持的向量指令集称为NEON。NEON具有16个长度为128位的向量寄存器（这些寄存器以q开头，也可表示为32个64位寄存器，以d开头），可同时操作向量寄存器的16个字节，因此使用向量指令可获得更高的性能和带宽。
⏱ 2024-03-24 17:28:17 ^622073-10-5473-5582&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;17-向量化和多核技术不是万能的&#34;&gt;1.7 向量化和多核技术不是万能的&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  对于软件开发人员来说，一些问题很容易向量化和并行，但是也有一些不行；有些问题适合向量化和并行，但是程序却不容易编写。很难将算法划分为几百、几千个控制流，因为人脑很难维护这些控制流的状态空间。实际上自动向量化和自动并行化是解决这些问题的首选（软件开发人员编写串行代码，编译器或硬件给多个处理器有效地分发指令），但是现在的自动向量化和自动并行化工具仍旧非常弱。 ^622073-11-942-1120&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 编译器是未来 - ⏱ 2024-03-24 17:29:37&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;18-本章小结&#34;&gt;1.8 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第2章-现代处理器特性&#34;&gt;第2章 现代处理器特性&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 处理器的处理速度远快于内存读写速度，为了减少访问数据时的延迟，现代主流处理器主要采用了两种方式：·利用程序的局部性特点，采用了一系列小而快的缓存以保存正在访问和将要被访问的数据，以近似于内存的价格获得近似于缓存的速度；·利用并行性，在一个控制流由于高延迟的操作而阻塞时，执行另一个控制流。
⏱ 2024-03-24 17:31:03 ^622073-13-790-996&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;21-指令级并行&#34;&gt;2.1 指令级并行&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 乱序执行会重排指令的执行顺序，这要求处理器的发射能力大于其执行能力。如果处理器的发射能力和指令的执行能力一致，那么ROB中就不会有指令等待重新排列执行顺序。由于处理器执行不同指令的速度并不相同，因此其发射能力并不一定比执行最快的指令的吞吐量大，比如主流X86 CPU一个周期能够处理4条整数加法指令，但是其指令发射能力也是一个周期4条。
⏱ 2024-03-24 18:07:07 ^622073-14-2407-2575&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;22-向量化并行&#34;&gt;2.2 向量化并行&lt;/h3&gt;
&lt;h3 id=&#34;23-线程级并行&#34;&gt;2.3 线程级并行&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ·锁：在单核上，多个线程执行锁或者临界区时，实际上只有一个线程在执行临界区代码，而核心也只支持一个线程执行，因此不存在冲突。如果某个线程持有锁，那么只是其他线程不会被调度到CPU上执行，影响的只是持有和释放锁的时间，处理器时刻在运行着。但是在多核上运行时，锁或临界区会导致其余处理器空闲而只允许一个处理器执行持有锁的那个线程，这是一个串行的过程，会影响性能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;·负载均衡：在单核上不用考虑负载均衡，因为各个线程轮流执行，当一个线程执行完时，便会执行另一个线程，不存在线程等待问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⏱ 2024-03-24 18:26:06 ^622073-16-3486&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;24-缓存&#34;&gt;2.4 缓存&lt;/h3&gt;
&lt;h3 id=&#34;25-虚拟存储器和tlb&#34;&gt;2.5 虚拟存储器和TLB&lt;/h3&gt;
&lt;h3 id=&#34;26-numa技术&#34;&gt;2.6 NUMA技术&lt;/h3&gt;
&lt;h3 id=&#34;27-本章小结&#34;&gt;2.7 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第3章-算法性能和程序性能的度量与分析&#34;&gt;第3章 算法性能和程序性能的度量与分析&lt;/h2&gt;
&lt;h3 id=&#34;31-算法分析的性能度量标准&#34;&gt;3.1 算法分析的性能度量标准&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ；从计算机架构的进展来说，目前数据读写越来越成为多核向量处理器性能的瓶颈（内存墙）。这意味着大部分时间花费在访问存储器上面的算法都不适合使用时间复杂度来估计性能，比如上面提到的矩阵加法
⏱ 2024-03-24 20:33:30 ^622073-22-2729-2821&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;32-程序和指令的性能度量标准&#34;&gt;3.2 程序和指令的性能度量标准&lt;/h3&gt;
&lt;h3 id=&#34;33-程序性能优化的度量标准&#34;&gt;3.3 程序性能优化的度量标准&lt;/h3&gt;
&lt;h3 id=&#34;34-程序性能分析实用工具&#34;&gt;3.4 程序性能分析实用工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 需要注意的是：gprof通过在编译时插入代码来分析程序，因此在一些情况下，其给出的结果会有不准确的地方。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了简便起见，本节只简单展示了一下gprof的使用和功能，想了解更多功能的读者可参考gprof手册。&lt;/p&gt;
&lt;p&gt;在大多数情况下，gprof适合粗略分析代码的性能瓶颈。程序在硬件平台上实际执行时的详细硬件计数器数据可以通过perf或Intel Vtune获得。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⏱ 2024-03-25 04:59:17 ^622073-25-2604&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;35-本章小结&#34;&gt;3.5 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第4章-串行代码性能优化&#34;&gt;第4章 串行代码性能优化&lt;/h2&gt;
&lt;h3 id=&#34;41-系统级别&#34;&gt;4.1 系统级别&lt;/h3&gt;
&lt;h3 id=&#34;42-应用级别&#34;&gt;4.2 应用级别&lt;/h3&gt;
&lt;h3 id=&#34;43-算法级别&#34;&gt;4.3 算法级别&lt;/h3&gt;
&lt;h3 id=&#34;44-函数级别&#34;&gt;4.4 函数级别&lt;/h3&gt;
&lt;h3 id=&#34;45-循环级别&#34;&gt;4.5 循环级别&lt;/h3&gt;
&lt;h3 id=&#34;46-语句级别&#34;&gt;4.6 语句级别&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 声明结构体时，尽量大数据类型在前，小数据类型在后，一方面这样会节省一些空间，另一方面可以更好地满足处理器的对齐要求。
⏱ 2024-03-25 15:37:40 ^622073-33-3063-3121&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;47-指令级别&#34;&gt;4.7 指令级别&lt;/h3&gt;
&lt;h3 id=&#34;48-本章小结&#34;&gt;4.8 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第5章-依赖分析&#34;&gt;第5章 依赖分析&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 指令级依赖分析是优化流水线性能的基础，而循环级依赖分析则是向量化和数据并行的基础。如果能够确定循环中不存在依赖，那么该循环便可由多个控制流同时执行。细粒度的循环依赖分析可以确定代码是否能够被向量化。
⏱ 2024-03-25 20:33:13 ^622073-36-760-859&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;51-指令级依赖&#34;&gt;5.1 指令级依赖&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 假设某个处理器上多条L1访问映射到同一条缓存线，那么即使这多个访问没有依赖，也需要串行处理，这就是由缓存的结构导致的依赖。
⏱ 2024-03-26 11:41:44 ^622073-37-1563-1624&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;52-循环级依赖&#34;&gt;5.2 循环级依赖&lt;/h3&gt;
&lt;h3 id=&#34;53-寄存器重命名&#34;&gt;5.3 寄存器重命名&lt;/h3&gt;
&lt;h3 id=&#34;54-本章小结&#34;&gt;5.4 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第6章-并行编程模型及环境&#34;&gt;第6章 并行编程模型及环境&lt;/h2&gt;
&lt;h3 id=&#34;61-并行编程模型&#34;&gt;6.1 并行编程模型&lt;/h3&gt;
&lt;h3 id=&#34;62-常见并行编程环境&#34;&gt;6.2 常见并行编程环境&lt;/h3&gt;
&lt;h3 id=&#34;63-本章小结&#34;&gt;6.3 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第7章-并行算法设计方法&#34;&gt;第7章 并行算法设计方法&lt;/h2&gt;
&lt;h3 id=&#34;71-划分&#34;&gt;7.1 划分&lt;/h3&gt;
&lt;h3 id=&#34;72-通信&#34;&gt;7.2 通信&lt;/h3&gt;
&lt;h3 id=&#34;73-结果归并&#34;&gt;7.3 结果归并&lt;/h3&gt;
&lt;h3 id=&#34;74-负载均衡&#34;&gt;7.4 负载均衡&lt;/h3&gt;
&lt;h3 id=&#34;75-本章小结&#34;&gt;7.5 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第8章-并行算法缺陷&#34;&gt;第8章 并行算法缺陷&lt;/h2&gt;
&lt;h3 id=&#34;81-启动结束时间&#34;&gt;8.1 启动结束时间&lt;/h3&gt;
&lt;h3 id=&#34;82-负载均衡&#34;&gt;8.2 负载均衡&lt;/h3&gt;
&lt;h3 id=&#34;83-竞写&#34;&gt;8.3 竞写&lt;/h3&gt;
&lt;h3 id=&#34;84-锁&#34;&gt;8.4 锁&lt;/h3&gt;
&lt;h3 id=&#34;85-饿死&#34;&gt;8.5 饿死&lt;/h3&gt;
&lt;h3 id=&#34;86-伪共享&#34;&gt;8.6 伪共享&lt;/h3&gt;
&lt;h3 id=&#34;87-原子操作&#34;&gt;8.7 原子操作&lt;/h3&gt;
&lt;h3 id=&#34;88-存储器栅栏&#34;&gt;8.8 存储器栅栏&lt;/h3&gt;
&lt;h3 id=&#34;89-缓存一致性&#34;&gt;8.9 缓存一致性&lt;/h3&gt;
&lt;h3 id=&#34;810-顺序一致性&#34;&gt;8.10 顺序一致性&lt;/h3&gt;
&lt;h3 id=&#34;811-volatile同步错误&#34;&gt;8.11 volatile同步错误&lt;/h3&gt;
&lt;h3 id=&#34;812-本章小结&#34;&gt;8.12 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第9章-并行编程模式实践&#34;&gt;第9章 并行编程模式实践&lt;/h2&gt;
&lt;h3 id=&#34;91-map模式&#34;&gt;9.1 map模式&lt;/h3&gt;
&lt;h3 id=&#34;92-reduce模式&#34;&gt;9.2 reduce模式&lt;/h3&gt;
&lt;h3 id=&#34;93-结合map和reduce模式&#34;&gt;9.3 结合map和reduce模式&lt;/h3&gt;
&lt;h3 id=&#34;94-scan模式&#34;&gt;9.4 scan模式&lt;/h3&gt;
&lt;h3 id=&#34;95-zipunzip模式&#34;&gt;9.5 zip/unzip模式&lt;/h3&gt;
&lt;h3 id=&#34;96-流水线模式&#34;&gt;9.6 流水线模式&lt;/h3&gt;
&lt;h3 id=&#34;97-本章小结&#34;&gt;9.7 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第10章-如何并行遗留代码&#34;&gt;第10章 如何并行遗留代码&lt;/h2&gt;
&lt;h3 id=&#34;101-找出软件的计算热点&#34;&gt;10.1 找出软件的计算热点&lt;/h3&gt;
&lt;h3 id=&#34;102-判断是否并行化热点&#34;&gt;10.2 判断是否并行化热点&lt;/h3&gt;
&lt;h3 id=&#34;103-设计算法并实现&#34;&gt;10.3 设计算法并实现&lt;/h3&gt;
&lt;h3 id=&#34;104-将实现后的代码嵌入原软件&#34;&gt;10.4 将实现后的代码嵌入原软件&lt;/h3&gt;
&lt;h3 id=&#34;105-示例如何并行化word2vec&#34;&gt;10.5 示例：如何并行化word2vec&lt;/h3&gt;
&lt;h3 id=&#34;106-本章小结&#34;&gt;10.6 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第11章-超级并行&#34;&gt;第11章 超级并行&lt;/h2&gt;
&lt;h3 id=&#34;111-超级并行方式编程&#34;&gt;11.1 超级并行方式编程&lt;/h3&gt;
&lt;h3 id=&#34;112-矩阵乘法&#34;&gt;11.2 矩阵乘法&lt;/h3&gt;
&lt;h3 id=&#34;113-本章小结&#34;&gt;11.3 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第12章-并行算法设计的一般准则&#34;&gt;第12章 并行算法设计的一般准则&lt;/h2&gt;
&lt;h3 id=&#34;121-并行算法设计14准则&#34;&gt;12.1 并行算法设计14准则&lt;/h3&gt;
&lt;h3 id=&#34;122-本章小结&#34;&gt;12.2 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;附录a-整型数据与浮点数据&#34;&gt;附录A 整型数据与浮点数据&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;前言-1&#34;&gt;前言&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 代码性能优化和并行技术被许多顶级开发人员看成“不传之秘”或“只可意会，不可言传”的技术。本书将会把这些“不传之秘”一一展示在开发者面前，并且解释为什么。由于代码性能的具体细节非常难以解释清楚，笔者尽量在高层解释，避免陷入细节里。在写作此书时，我并没有查到世界上有类似的写给普通开发者的书籍，本书可算是第一本  ^6733360-7PVEHFsQJ
- 💭 略牛
- ⏱ 2024-03-24 13:26:28&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 第5章简单介绍了指令级依赖和循环级依赖，并给出许多如何去除依赖的示例，最后以简单介绍处理器硬件支持的寄存器重命名结束。  ^6733360-7PVF9fitA
- 💭 比较重要
- ⏱ 2024-03-24 13:33:15&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;12-为什么要并行或向量化-1&#34;&gt;1.2 为什么要并行或向量化&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 现实世界中人类对计算能力的需求永无止境。  ^6733360-7PVFmQQqk
- 💭 算力需求无止境
- ⏱ 2024-03-24 13:36:36&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 现代的GCC能够向量化和并行一些非常简单的代码，但是对于复杂一些的程序基本上无能为力。实际上，即使是简单的代码，自动向量化或并行的性能也很难做到完美（通常性能比手工编写的要差很多）。  ^6733360-7PVFpyWDH
- 💭 猜测编译器和芯片自动向量化能力不高
- ⏱ 2024-03-24 13:37:16&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;16-并行硬件平台-1&#34;&gt;1.6 并行硬件平台&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 为了减小使用SIMD指令的复杂度，Intel寄希望于编译器，实际上Intel的编译器向量化能力非常不错，但是通常手工编写的向量代码性能会更好。在MIC上编程时，软件开发人员的工作由显式使用向量指令转化为改写C代码和增加编译制导语句以让编译器产生更好的向量指令。  ^6733360-7PVUh7RU0
- 💭 软件的空间
- ⏱ 2024-03-24 17:24:14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;17-向量化和多核技术不是万能的-1&#34;&gt;1.7 向量化和多核技术不是万能的&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对于软件开发人员来说，一些问题很容易向量化和并行，但是也有一些不行；有些问题适合向量化和并行，但是程序却不容易编写。很难将算法划分为几百、几千个控制流，因为人脑很难维护这些控制流的状态空间。实际上自动向量化和自动并行化是解决这些问题的首选（软件开发人员编写串行代码，编译器或硬件给多个处理器有效地分发指令），但是现在的自动向量化和自动并行化工具仍旧非常弱。  ^6733360-7PVUDEGVd
- 💭 编译器是未来
- ⏱ 2024-03-24 17:29:47&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;21-指令级并行-1&#34;&gt;2.1 指令级并行&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 乱序执行需要在执行指令前知道指令之间的依赖关系，如果两条指令之间有依赖，那么这两条指令就不能乱序执行。现代处理器对乱序执行有不同程度的支持，比如大多数的Intel X86桌面处理器和服务器处理器上都具有重排缓冲区（ReOrder Buffer，ROB），并且具有远多于逻辑寄存器数量的物理寄存器以支持寄存器重命名。  ^6733360-7PVX0vRtn
- 💭 有依赖就不能乱序执行
- ⏱ 2024-03-24 18:05:57&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 许多处理器支持一个周期发射2条或多条指令，但是多条指令要满足一条条的条件，比如有些处理器要求没有依赖关系、有些处理器只允许访存指令和计算指令同时发射，而Intel Xeon PHI处理器两个周期可以为一个线程发射两条指令，但是这两条指令要没有背靠背的依赖。  ^6733360-7PVXHfoNZ
- 💭 估计NPU也有要求
- ⏱ 2024-03-24 18:16:28&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;22-向量化并行-1&#34;&gt;2.2 向量化并行&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 使用SIMD指令要求开发人员非常熟悉指令的类型、吞吐量和延迟。因为不同的处理器对SIMD指令的支持程度不同，这不但表现在指令类型很不相同，还表现在同一指令在不同的架构处理器上的延迟和吞吐量可能也不相同，或者某些指令存在某些未公开的性能缺陷。  ^6733360-7PVXV79r5
- 💭 不是每条指令都是高性能的
- ⏱ 2024-03-24 18:19:53&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 SIMT指定了逻辑向量宽度，而隐藏了物理向量宽度，软件开发人员依据逻辑向量宽度来编写代码，这提高了代码性能的可移植性。比如AMD GCN，其逻辑向量宽度为256字节，而物理向量宽度为64字节，如果AMD为了性能将其物理向量宽度改为128字节（不改变其他条件），那么为AMD GCN架构编写的代码不用修改，在物理向量长度增加后的架构上其性能也会得到相应的提升。而在支持AVX指令集的硬件上运行使用SSE指令集编写的程序却不能得到相应的性能提升。  ^6733360-7PVY39OY9
- 💭 抽象更好？
- ⏱ 2024-03-24 18:21:52&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;24-缓存-1&#34;&gt;2.4 缓存&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-10&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 软件开发人员应当意识到：对于性能限制在内存/缓存上的程序来说，缓存能够显著增加程序的实际性能，因此要编写缓存友好的代码，同时在多核的条件下要注意避免伪共享问题导致的性能损失。  ^6733360-7PVYpLgFo
- 💭 编写缓存友好程序
- ⏱ 2024-03-24 18:27:26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-11&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于处理器具有多级缓存，那么如何保证缓存中的数据和内存中的数据是一致的，这由处理器的缓存一致性协议来保证。  ^6733360-7PVYtpN9w
- 💭 Cache一致性概念
- ⏱ 2024-03-24 18:28:20&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-12&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 典型的硬件指令预取会在缓存因失效而从内存载入一个缓存线的同时，请求紧随其后的另一个缓存线  ^6733360-7PW5ybgVf
- 💭 cache line预取
- ⏱ 2024-03-24 20:16:23&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-13&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 缓存以缓存线为基本单位读写，每条缓存线可保存L（现代机器上L一般为64）个字节。数据在缓存间上下移动时以缓存线为单位，即不可能出现只加载半条缓存线的情况。对于软件开发人员来说，缓存的总量和缓存线的大小相当重要，另外缓存的层次结构、缓存映射策略也需要了解。  ^6733360-7PW5DICaQ
- 💭 cache line非常重要
- ⏱ 2024-03-24 20:17:45&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;25-虚拟存储器和tlb-1&#34;&gt;2.5 虚拟存储器和TLB&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-14&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 虚拟存储器使用虚拟地址寻址，而物理存储器使用物理地址寻址，因此硬件执行访存操作时需要将虚拟地址翻译成物理地址，操作系统和存储器管理单元（Memory Management Unit，MMU）硬件配合来完成这一工作。由于从虚拟地址到物理地址的转换非常耗时，处理器和操作系统主要使用了两个优化来减少转换次数。  ^6733360-7PW60O4Xh
- 💭 虚拟地址到物理地址转换非常耗时
- ⏱ 2024-03-24 20:23:26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-15&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ·TLB，TLB用于缓存已经翻译的虚拟地址，通过利用访问页的局部性来减少翻译次数。由于虚拟地址和物理地址之间的转换非常耗时且TLB不命中的代价很大，因此TLB的映射策略通常设计为全相联。实际上，在一些硬件上，缓存层次中也使用多层TLB来减少地址翻译代价。一些需要对多维数据进行访问的程序在大数据量的情况下，通常存在TLB不命中的情况。  ^6733360-7PW6lItnS
- 💭 tlb的具体含义
- ⏱ 2024-03-24 20:28:35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;31-算法分析的性能度量标准-1&#34;&gt;3.1 算法分析的性能度量标准&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-16&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对于具体的代码而言，依据在某种处理器上运行的性能瓶颈不同而采用实现复杂度的不同方面来度量。对于一个计算限制的算法，应当使用计算复杂度和指令复杂度；而对于一个存储器限制的算法，应当使用访存复杂度来分析。  ^6733360-7PW6Xzxkk
- 💭 不同的bound情况使用不同的指标衡量
- ⏱ 2024-03-24 20:37:54&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-17&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于各种现代向量多核处理器具有不同的特点，比如X86CPU是为延迟优化的，在考虑计算复杂度时权重应该以延迟为准；而GPU是为吞吐量优化的，考虑计算复杂度时权重应当以吞吐量倒数为准。但这并不绝对，一些优化良好的X86 CPU代码有很好的指令级并行能力，也应当从吞吐量倒数考虑。  ^6733360-7PW72gXr9
- 💭 借鉴这一思路，比较好的计算复杂度应该以吞吐量为准
- ⏱ 2024-03-24 20:39:04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-18&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 O（2n×α+β×n+γ×n）  ^6733360-7PW7e5Q8m
- 💭 这个没有考虑到加载和计算之间匹配的问题
- ⏱ 2024-03-24 20:41:59&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-19&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 从某种程度上说，指令复杂度的分析是人的大脑对程序指令在具体处理器上执行的分析，因此非常复杂和困难，也更容易出错，笔者通常使用一些编译器工具协助分析。  ^6733360-7PW7QUAmx
- 💭 指令复杂度类似于vf的复杂度，更复杂更容易出错
- ⏱ 2024-03-24 20:51:32&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-20&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 通常使用执行代码关键路径所需要的时钟周期数来表示指令复杂度  ^6733360-7PW7YTZYn
- 💭 找出最长的关键路径非常关键
- ⏱ 2024-03-24 20:53:30&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-21&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但对于顶级代码优化人员来说，指令复杂度是优化的终极法宝。代码优化的过程，就是指令复杂度降低的过程。  ^6733360-7PW83RxH8
- 💭 当前的优化是非常重要技能
- ⏱ 2024-03-24 20:54:44&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-22&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 指令复杂度分析通常关注耗时最长的循环，通常分析此循环内部的指令数量，不同指令是否能够同时发射、执行等，通过这些信息来重构代码，以便生成的指令能够更好地在处理器上执行。  ^6733360-7PW85KzE3
- 💭 指令复杂度分析的有效手段和方法
- ⏱ 2024-03-24 20:55:11&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;32-程序和指令的性能度量标准-1&#34;&gt;3.2 程序和指令的性能度量标准&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-23&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 通常程序中最耗时的部分就是小循环，因此如何表征对循环的优化效果就非常重要  ^6733360-7PW8AsZdn
- 💭 为什么小循环最耗时？因为和大循环相比，启动时间相同，计算时间比较短，没法隐藏启动时间？
- ⏱ 2024-03-24 21:02:45&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-24&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 假设测试发现上面的代码段在某个具体配置下耗时T个时钟周期，那么其CPI为：T/num  ^6733360-7PW8DJVpO
- 💭 这是衡量vf的非常重要的性能指标
- ⏱ 2024-03-24 21:03:34&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-25&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 循环的CPI通常由其依赖链（指整个循环中相互依赖的运算或访存，也称为关键路径）决定，减少循环CPI的过程就是减小或去掉循环内依赖链的过程。  ^6733360-7PW8PcEF7
- 💭 非常重要的想法，也是vf的优化手段
- ⏱ 2024-03-24 21:06:23&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-26&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 循环的CPI通常由其依赖链（指整个循环中相互依赖的运算或访存，也称为关键路径）决定，减少循环CPI的过程就是减小或去掉循环内依赖链的过程。  ^6733360-7PW8NsoU3
- 💭 非常重要的思想
- ⏱ 2024-03-24 21:05:57&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-27&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 相对指令的整体延迟来说，还需要关注指令发射时间，因为在现在的乱序执行的硬件上，发射时间也是指令性能能够达到的一个上限。  ^6733360-7PWa4l9bP
- 💭 发射对应的应该是commit
- ⏱ 2024-03-24 21:25:23&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-28&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于对吞吐量优化的技术不要求尽快得到数据，而要求在单位时间做更多的运算，因此硬件往往采用更多频率更低的计算单元，采用“人海战术”取胜。由于这种小而简单的单元工作频率和电压都较低，因此耗能少，能够在给定的能耗下集成更多的核心，进而在不增加功耗的前提下提高整体的吞吐量。目前无论是X86 CPU还是GPU都采用了这种思路来提高性能。  ^6733360-7PW9JCcF3
- 💭 使用基于寄存器的访问，最大的好处和收益应该是延迟更小，吞吐量更大
- ⏱ 2024-03-24 21:20:17&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-29&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 吞吐量倒数表示在某个架构上，某种指令的吞吐量的倒数。吞吐量倒数表示平均下来某种指令最少需要的时钟周期数，是一种下限，而延迟则是一个上限  ^6733360-7PW9NeLaJ
- 💭 是一个非常不错的视角，吞吐量倒数是上限，延迟是下限
- ⏱ 2024-03-24 21:21:10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-30&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 little定律认为要发挥硬件执行某种指令的计算能力所需要的并行度等于指令的延迟乘以指令的吞吐量。并行度指没有依赖的指令数量，  ^6733360-7PWCIbPDo
- 💭 以带宽为瓶颈锁定实际的计算性能
- ⏱ 2024-03-25 04:42:43&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;42-应用级别-1&#34;&gt;4.2 应用级别&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-31&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 fast-math表示对超越函数使用更快但精度低一些的版本；unroll-all-loops表示使用循环展开；avx表示使用avx指令集向量化；tune=native表示为当前编译的处理器做优化。  ^6733360-7PWS4q1VM
- 💭 vdiv和vrec
- ⏱ 2024-03-25 08:37:14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-32&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果指针a、b指向不同的内存地址，也就是说a、b之间不存在存储器别名，那么函数f可简化为：  ^6733360-7PWSdodxx
- 💭 将要读取的指针取出放在临时变量里面
- ⏱ 2024-03-25 08:39:26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;43-算法级别-1&#34;&gt;4.3 算法级别&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-33&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对优化前代码来说，在内层循环上，相邻循环体内访问a的地址相隔N个元素，在N比较大的情况下，可能会存在满不命中和冲突不命中的情况，故访问a的局部性很差；对优化后的代码来说，在内层循环上，相邻循环体内访问a的地址相隔1个元素，加载到缓存线中的数据会在随后使用，从这一点来说，访问a的局部性非常好  ^6733360-7PWSmJS96
- 💭 读取地址连续
- ⏱ 2024-03-25 08:41:45&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-34&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于计算机图像学中需要对大量的像素做插值运算，故GPU的纹理设计时就支持硬件插值运算，  ^6733360-7PWT3gasr
- 💭 gpu纹理计算有专门的双线性插值
- ⏱ 2024-03-25 08:52:13&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;44-函数级别-1&#34;&gt;4.4 函数级别&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-35&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果内联后的函数比较长，就可能会增加寄存器的压力。如果函数内有分支，内联后会对指令流水线产生不利的影响，因此通常对少于10行且其中代码没有分支的函数内联。  ^6733360-7PWTQICUl
- 💭 为什么内联不宜过长
- ⏱ 2024-03-25 09:04:24&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;45-循环级别-1&#34;&gt;4.5 循环级别&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-36&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 展开循环不但减少了每次的判断数量和循环变量改变的计算次数，更能够增加处理器流水线执行的性能。通常展开小循环且内部没有判断的会获益，展开大循环则可能会因为导致寄存器溢出而导致性能下降，而展开内部有判断的循环会增加分支预测的开销也可能会导致性能下降。  ^6733360-7PWTVQbk3
- 💭 循环展开的门道，小循环 + 内部没有判断分支最佳
- ⏱ 2024-03-25 09:05:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-37&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 循环合并不但可以减少判断次数，还能够增加指令级并行能力（能够合并的两个循环内代码通常没有依赖）  ^6733360-7PWU2PHTU
- 💭 指令集并行的前提是循环没有依赖
- ⏱ 2024-03-25 09:07:23&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-38&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果大循环（循环体内代码比较多、执行时间长）存在寄存器溢出的情况，那么将大循环拆分为几个小循环，就能够提高寄存器的使用，而且能够为循环展开等技术的使用提供条件。  ^6733360-7PWU9tSEA
- 💭 循环内部的代码不宜过大也不宜过小，一般与芯片的中的寄存器的数量相关
- ⏱ 2024-03-25 09:09:01&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;46-语句级别-1&#34;&gt;4.6 语句级别&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-39&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在不考虑编译器优化的前提下，代码清单4-21只需要计算一次分支，而代码清单4-20要计算len次。  ^6733360-7PXjPuCcN
- 💭 分支判断越少越好
- ⏱ 2024-03-25 15:41:05&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;47-指令级别-1&#34;&gt;4.7 指令级别&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-40&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 整数乘以一个整数可以转变成左移操作，如果乘数是常量，编译器会自动执行这种转换。整数除法和模余是非常耗时的，要少使用，如果是除以或模2的幂，则可转变为右移或位与运算。  ^6733360-7PXtWAjUz
- 💭 整数除法时延差看来是有名的
- ⏱ 2024-03-25 18:15:31&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;51-指令级依赖-1&#34;&gt;5.1 指令级依赖&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-41&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 为了既提高硬件利用效率又保证提供必需的带宽，许多处理器的缓存层次（从寄存器到内存）都采用了存储体（Bank）的方式组织，其中每个存储体可同时、独立地提供带宽  ^6733360-7PYAw8bfC
- 💭 类似于ub中的bank
- ⏱ 2024-03-26 11:42:33&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-42&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在ARM A15处理器上，其NEON指令集支持的32位浮点乘加向量指令延迟大约为8个周期，吞吐量为每核心每周期1个，故需要的并行度为8；如果处理器不能提供足够的寄存器，那么就需要从一级缓存中读取，此时寄存器的数量和一级缓存的带宽就有可能成为结构化的依赖。  ^6733360-7PYAAKvQQ
- 💭 并行度为8是一次最多发射8条指令？
- ⏱ 2024-03-26 11:43:42&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-43&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 解决写后写依赖的方法非常简单：如上例只需要将S5中的AREA变量重新命名为ar，同时将S4的r变量重新命名为p即可。现在的编译器能够自动进行这种优化，而且一些处理器（如Intel X86）硬件上提供了寄存器重命名机制来帮助处理器在运行时处理这种依赖关系。  ^6733360-7PYAL1hOY
- 💭 写后写和读后写都是寄存器重命名
- ⏱ 2024-03-26 11:46:14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;53-寄存器重命名-1&#34;&gt;5.3 寄存器重命名&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-44&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 只是受限于处理器指令集体系结构规定的逻辑寄存器数量的限制，汇编程序能够使用的寄存器是非常有限的，因此编译器很多时候只能是无能为力。  ^6733360-7PWUg8Xzu
- 💭 编译器受限于指令集体系中的逻辑寄存器的数量，所以对于OOO无能为力
- ⏱ 2024-03-25 09:10:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-45&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于不能直接在汇编指令中看到物理寄存器，因此代码优化人员无法确定他的优化的确能够帮助处理器更好地进行寄存器重命名工作。  ^6733360-7PWUlmFsr
- 💭 如何更好的利用OoO，芯片需要提供给软件开发人员必要的编程指导
- ⏱ 2024-03-25 09:11:57&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-46&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于不能直接在汇编指令中看到物理寄存器，因此代码优化人员无法确定他的优化的确能够帮助处理器更好地进行寄存器重命名工作。  ^6733360-7PWUj2CFX
- 💭 也是一个原因
- ⏱ 2024-03-25 09:11:22&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%B9%B6%E8%A1%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E6%B3%95%E4%B8%8E%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%B9%B6%E8%A1%8C%E7%BC%96%E7%A8%8B%E6%96%B9%E6%B3%95%E4%B8%8E%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 并行编程方法与优化实践&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/91/YueWen_788123/t7_YueWen_788123.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 并行编程方法与优化实践|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 并行编程方法与优化实践&lt;/li&gt;
&lt;li&gt;作者： 刘文志&lt;/li&gt;
&lt;li&gt;简介： 本书关注C程序设计语言的向量化和并行化扩展，以及算法到硬件的映射。本书不但包括如何使用SSE/AVX向量化扩展、如何使用OpenMP编译制导语句优化运行在X86多核处理器上的代码的性能，还包括如何使用NEON向量化扩展、OpenMP编译制导语句优化运行在移动处理器（ARM）上的代码性能优化，以及使用CUDA和OpenCL优化运行在图形处理器（GPU）上的代码性能优化及并行。不但有实际的各个扩展解析或语言的介绍说明，还有丰富的算法优化实例。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;出版时间 2015-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111501947&lt;/li&gt;
&lt;li&gt;分类： 计算机-编程设计&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/9a4324105c069b9a4849836&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 10年前，并行计算还是大实验室里教授们的研究对象，而今天，多核处理器和GPU的普及已经使得普通人就可以研究它们。对于软件开发人员来说，如果不掌握并行计算和代码性能优化技术，在不久的将来就会被淘汰。
⏱ 2024-03-24 13:24:26 ^788123-3-2569-2667&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第1章-x86-sseavx指令集&#34;&gt;第1章 X86 SSE/AVX指令集&lt;/h2&gt;
&lt;h3 id=&#34;11-sse内置函数&#34;&gt;1.1 SSE内置函数&lt;/h3&gt;
&lt;h4 id=&#34;111-算术运算&#34;&gt;1.1.1 算术运算&lt;/h4&gt;
&lt;h4 id=&#34;112-逻辑运算&#34;&gt;1.1.2 逻辑运算&lt;/h4&gt;
&lt;h4 id=&#34;113-比较&#34;&gt;1.1.3 比较&lt;/h4&gt;
&lt;h4 id=&#34;114-加载和存储&#34;&gt;1.1.4 加载和存储&lt;/h4&gt;
&lt;h3 id=&#34;12-avx内置函数&#34;&gt;1.2 AVX内置函数&lt;/h3&gt;
&lt;h4 id=&#34;121-算术运算&#34;&gt;1.2.1 算术运算&lt;/h4&gt;
&lt;h4 id=&#34;122-逻辑运算&#34;&gt;1.2.2 逻辑运算&lt;/h4&gt;
&lt;h4 id=&#34;123-比较&#34;&gt;1.2.3 比较&lt;/h4&gt;
&lt;h4 id=&#34;124-加载和存储&#34;&gt;1.2.4 加载和存储&lt;/h4&gt;
&lt;h3 id=&#34;13-优化实例及分析&#34;&gt;1.3 优化实例及分析&lt;/h3&gt;
&lt;h4 id=&#34;131-如何测得cpu的浮点峰值性能&#34;&gt;1.3.1 如何测得CPU的浮点峰值性能&lt;/h4&gt;
&lt;h4 id=&#34;132-积分计算圆周率π&#34;&gt;1.3.2 积分计算圆周率π&lt;/h4&gt;
&lt;h4 id=&#34;133-稀疏矩阵向量乘法&#34;&gt;1.3.3 稀疏矩阵向量乘法&lt;/h4&gt;
&lt;h4 id=&#34;134-二维单通道图像离散卷积&#34;&gt;1.3.4 二维单通道图像离散卷积&lt;/h4&gt;
&lt;h3 id=&#34;14-本章小结&#34;&gt;1.4 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第2章-arm-neon-simd指令优化&#34;&gt;第2章 ARM NEON SIMD指令优化&lt;/h2&gt;
&lt;h3 id=&#34;21-neon指令集综述&#34;&gt;2.1 NEON指令集综述&lt;/h3&gt;
&lt;h3 id=&#34;22-arm-a15处理器性能&#34;&gt;2.2 ARM A15处理器性能&lt;/h3&gt;
&lt;h3 id=&#34;23-neon支持的操作&#34;&gt;2.3 NEON支持的操作&lt;/h3&gt;
&lt;h4 id=&#34;231-基本算术运算&#34;&gt;2.3.1 基本算术运算&lt;/h4&gt;
&lt;h4 id=&#34;232-基本比较运算&#34;&gt;2.3.2 基本比较运算&lt;/h4&gt;
&lt;h4 id=&#34;233-基本数据类型转换及舍入运算&#34;&gt;2.3.3 基本数据类型转换及舍入运算&lt;/h4&gt;
&lt;h4 id=&#34;234-基本位运算&#34;&gt;2.3.4 基本位运算&lt;/h4&gt;
&lt;h4 id=&#34;235-基本逻辑运算&#34;&gt;2.3.5 基本逻辑运算&lt;/h4&gt;
&lt;h4 id=&#34;236-基本设置加载存储操作&#34;&gt;2.3.6 基本设置加载存储操作&lt;/h4&gt;
&lt;h4 id=&#34;237-特殊操作&#34;&gt;2.3.7 特殊操作&lt;/h4&gt;
&lt;h3 id=&#34;24-应用实例&#34;&gt;2.4 应用实例&lt;/h3&gt;
&lt;h4 id=&#34;241-彩色图像转灰度图像&#34;&gt;2.4.1 彩色图像转灰度图像&lt;/h4&gt;
&lt;h4 id=&#34;242-矩阵转置&#34;&gt;2.4.2 矩阵转置&lt;/h4&gt;
&lt;h4 id=&#34;243-矩阵乘&#34;&gt;2.4.3 矩阵乘&lt;/h4&gt;
&lt;h3 id=&#34;25-本章小结&#34;&gt;2.5 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第3章-openmp程序设计&#34;&gt;第3章 OpenMP程序设计&lt;/h2&gt;
&lt;h3 id=&#34;31-openmp编程模型&#34;&gt;3.1 OpenMP编程模型&lt;/h3&gt;
&lt;h4 id=&#34;311-openmp执行模型&#34;&gt;3.1.1 OpenMP执行模型&lt;/h4&gt;
&lt;h4 id=&#34;312-openmp存储器模型&#34;&gt;3.1.2 OpenMP存储器模型&lt;/h4&gt;
&lt;h3 id=&#34;32-环境变量&#34;&gt;3.2 环境变量&lt;/h3&gt;
&lt;h3 id=&#34;33-函数&#34;&gt;3.3 函数&lt;/h3&gt;
&lt;h4 id=&#34;331-普通函数&#34;&gt;3.3.1 普通函数&lt;/h4&gt;
&lt;h4 id=&#34;332-锁函数&#34;&gt;3.3.2 锁函数&lt;/h4&gt;
&lt;h3 id=&#34;34-openmp编译制导语句&#34;&gt;3.4 OpenMP编译制导语句&lt;/h3&gt;
&lt;h4 id=&#34;341-常用的openmp构造&#34;&gt;3.4.1 常用的OpenMP构造&lt;/h4&gt;
&lt;h4 id=&#34;342-常用的openmp子句&#34;&gt;3.4.2 常用的OpenMP子句&lt;/h4&gt;
&lt;h3 id=&#34;35-openmp异构并行计算&#34;&gt;3.5 OpenMP异构并行计算&lt;/h3&gt;
&lt;h3 id=&#34;36-openmp程序优化&#34;&gt;3.6 OpenMP程序优化&lt;/h3&gt;
&lt;h4 id=&#34;361-openmp程序优化准则&#34;&gt;3.6.1 OpenMP程序优化准则&lt;/h4&gt;
&lt;h4 id=&#34;362-openmp并行优化实例&#34;&gt;3.6.2 OpenMP并行优化实例&lt;/h4&gt;
&lt;h3 id=&#34;37-本章小结&#34;&gt;3.7 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第4章-基于gpu的异构并行计算环境cuda与opencl&#34;&gt;第4章 基于GPU的异构并行计算环境：CUDA与OpenCL&lt;/h2&gt;
&lt;h3 id=&#34;41-gpu计算概述&#34;&gt;4.1 GPU计算概述&lt;/h3&gt;
&lt;h4 id=&#34;411-gpu计算历史&#34;&gt;4.1.1 GPU计算历史&lt;/h4&gt;
&lt;h4 id=&#34;412-cuda概述&#34;&gt;4.1.2 CUDA概述&lt;/h4&gt;
&lt;h4 id=&#34;413-opencl概述&#34;&gt;4.1.3 OpenCL概述&lt;/h4&gt;
&lt;h3 id=&#34;42-异构并行计算模型&#34;&gt;4.2 异构并行计算模型&lt;/h3&gt;
&lt;h4 id=&#34;421-平台模型&#34;&gt;4.2.1 平台模型&lt;/h4&gt;
&lt;h4 id=&#34;422-执行模型&#34;&gt;4.2.2 执行模型&lt;/h4&gt;
&lt;h4 id=&#34;423-存储器模型&#34;&gt;4.2.3 存储器模型&lt;/h4&gt;
&lt;h4 id=&#34;424-编程模型&#34;&gt;4.2.4 编程模型&lt;/h4&gt;
&lt;h3 id=&#34;43-c语言接口&#34;&gt;4.3 C语言接口&lt;/h3&gt;
&lt;h4 id=&#34;431-opencl-c语言&#34;&gt;4.3.1 OpenCL C语言&lt;/h4&gt;
&lt;h4 id=&#34;432-cuda-c语言&#34;&gt;4.3.2 CUDA C语言&lt;/h4&gt;
&lt;h3 id=&#34;44-基于gpu的异构并行计算性能优化&#34;&gt;4.4 基于GPU的异构并行计算性能优化&lt;/h3&gt;
&lt;h4 id=&#34;441-总体优化准则&#34;&gt;4.4.1 总体优化准则&lt;/h4&gt;
&lt;h4 id=&#34;442-全局存储器优化&#34;&gt;4.4.2 全局存储器优化&lt;/h4&gt;
&lt;h4 id=&#34;443-合并访问&#34;&gt;4.4.3 合并访问&lt;/h4&gt;
&lt;h4 id=&#34;444-局部存储器&#34;&gt;4.4.4 局部存储器&lt;/h4&gt;
&lt;h4 id=&#34;445-存储体冲突&#34;&gt;4.4.5 存储体冲突&lt;/h4&gt;
&lt;h4 id=&#34;446-常量存储器优化&#34;&gt;4.4.6 常量存储器优化&lt;/h4&gt;
&lt;h4 id=&#34;447-cuda纹理存储器优化&#34;&gt;4.4.7 CUDA纹理存储器优化&lt;/h4&gt;
&lt;h4 id=&#34;448-寄存器及私有存储器优化&#34;&gt;4.4.8 寄存器及私有存储器优化&lt;/h4&gt;
&lt;h4 id=&#34;449-工作组数目及大小&#34;&gt;4.4.9 工作组数目及大小&lt;/h4&gt;
&lt;h4 id=&#34;4410-占用率&#34;&gt;4.4.10 占用率&lt;/h4&gt;
&lt;h4 id=&#34;4411-指令优化&#34;&gt;4.4.11 指令优化&lt;/h4&gt;
&lt;h4 id=&#34;4412-分支优化&#34;&gt;4.4.12 分支优化&lt;/h4&gt;
&lt;h4 id=&#34;4413-数据传输优化&#34;&gt;4.4.13 数据传输优化&lt;/h4&gt;
&lt;h3 id=&#34;45-gpu与cpu精度差别&#34;&gt;4.5 GPU与CPU精度差别&lt;/h3&gt;
&lt;h3 id=&#34;46-矩阵转置&#34;&gt;4.6 矩阵转置&lt;/h3&gt;
&lt;h4 id=&#34;461-初次实现&#34;&gt;4.6.1 初次实现&lt;/h4&gt;
&lt;h4 id=&#34;462-满足合并访问的实现&#34;&gt;4.6.2 满足合并访问的实现&lt;/h4&gt;
&lt;h4 id=&#34;463-没有存储体冲突的实现&#34;&gt;4.6.3 没有存储体冲突的实现&lt;/h4&gt;
&lt;h3 id=&#34;47-矩阵乘法&#34;&gt;4.7 矩阵乘法&lt;/h3&gt;
&lt;h4 id=&#34;471-初次实现&#34;&gt;4.7.1 初次实现&lt;/h4&gt;
&lt;h4 id=&#34;472-矩阵分块实现&#34;&gt;4.7.2 矩阵分块实现&lt;/h4&gt;
&lt;h3 id=&#34;48-本章小结&#34;&gt;4.8 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第5章-openacc&#34;&gt;第5章 OpenACC&lt;/h2&gt;
&lt;h3 id=&#34;51-openacc编程模型&#34;&gt;5.1 OpenACC编程模型&lt;/h3&gt;
&lt;h4 id=&#34;511-执行模型&#34;&gt;5.1.1 执行模型&lt;/h4&gt;
&lt;h4 id=&#34;512-存储器模型&#34;&gt;5.1.2 存储器模型&lt;/h4&gt;
&lt;h3 id=&#34;52-编译制导语句&#34;&gt;5.2 编译制导语句&lt;/h3&gt;
&lt;h4 id=&#34;521-kernels构造&#34;&gt;5.2.1 kernels构造&lt;/h4&gt;
&lt;h4 id=&#34;522-parallel构造&#34;&gt;5.2.2 parallel构造&lt;/h4&gt;
&lt;h4 id=&#34;523-线程配置相关子句&#34;&gt;5.2.3 线程配置相关子句&lt;/h4&gt;
&lt;h4 id=&#34;524-data构造&#34;&gt;5.2.4 data构造&lt;/h4&gt;
&lt;h4 id=&#34;525-loop构造&#34;&gt;5.2.5 loop构造&lt;/h4&gt;
&lt;h4 id=&#34;526-atomic构造&#34;&gt;5.2.6 atomic构造&lt;/h4&gt;
&lt;h4 id=&#34;527-dtype子句&#34;&gt;5.2.7 dtype子句&lt;/h4&gt;
&lt;h4 id=&#34;528-reduction子句&#34;&gt;5.2.8 reduction子句&lt;/h4&gt;
&lt;h4 id=&#34;529-变量可见性子句&#34;&gt;5.2.9 变量可见性子句&lt;/h4&gt;
&lt;h4 id=&#34;5210-if子句&#34;&gt;5.2.10 if子句&lt;/h4&gt;
&lt;h4 id=&#34;5211-async和wait&#34;&gt;5.2.11 async和wait&lt;/h4&gt;
&lt;h3 id=&#34;53-openacc和cuda协作&#34;&gt;5.3 OpenACC和CUDA协作&lt;/h3&gt;
&lt;h4 id=&#34;531-cuda使用openacc生产的数据&#34;&gt;5.3.1 CUDA使用OpenACC生产的数据&lt;/h4&gt;
&lt;h4 id=&#34;532-openacc使用cuda生产的数据&#34;&gt;5.3.2 OpenACC使用CUDA生产的数据&lt;/h4&gt;
&lt;h3 id=&#34;54-两小时性能提升10倍&#34;&gt;5.4 两小时性能提升10倍&lt;/h3&gt;
&lt;h3 id=&#34;55-本章小结&#34;&gt;5.5 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第6章-多核向量处理器架构及opencl程序映射&#34;&gt;第6章 多核向量处理器架构及OpenCL程序映射&lt;/h2&gt;
&lt;h3 id=&#34;61-多核向量处理器架构&#34;&gt;6.1 多核向量处理器架构&lt;/h3&gt;
&lt;h4 id=&#34;611-intel-haswell-cpu架构&#34;&gt;6.1.1 Intel Haswell CPU架构&lt;/h4&gt;
&lt;h4 id=&#34;612-arm-a15多核向量处理器架构&#34;&gt;6.1.2 ARM A15多核向量处理器架构&lt;/h4&gt;
&lt;h4 id=&#34;613-amd-gcn-gpu架构&#34;&gt;6.1.3 AMD GCN GPU架构&lt;/h4&gt;
&lt;h4 id=&#34;614-nvidia-kepler和maxwell-gpu架构&#34;&gt;6.1.4 NVIDIA Kepler和Maxwell GPU架构&lt;/h4&gt;
&lt;h3 id=&#34;62-opencl程序在多核向量处理器上的映射&#34;&gt;6.2 OpenCL程序在多核向量处理器上的映射&lt;/h3&gt;
&lt;h4 id=&#34;621-opencl程序在多核向量cpu上的映射&#34;&gt;6.2.1 OpenCL程序在多核向量CPU上的映射&lt;/h4&gt;
&lt;h4 id=&#34;622-opencl程序在nvidia-gpu上的映射&#34;&gt;6.2.2 OpenCL程序在NVIDIA GPU上的映射&lt;/h4&gt;
&lt;h4 id=&#34;623-opencl程序在amd-gcn上的映射&#34;&gt;6.2.3 OpenCL程序在AMD GCN上的映射&lt;/h4&gt;
&lt;h3 id=&#34;63-本章小结&#34;&gt;6.3 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第7章-利用多种技术优化图像处理中的算法性能&#34;&gt;第7章 利用多种技术优化图像处理中的算法性能&lt;/h2&gt;
&lt;h3 id=&#34;71-图像滤波&#34;&gt;7.1 图像滤波&lt;/h3&gt;
&lt;h4 id=&#34;711-均值滤波&#34;&gt;7.1.1 均值滤波&lt;/h4&gt;
&lt;h4 id=&#34;712-中值滤波&#34;&gt;7.1.2 中值滤波&lt;/h4&gt;
&lt;h3 id=&#34;72-图像直方图&#34;&gt;7.2 图像直方图&lt;/h3&gt;
&lt;h4 id=&#34;721-openmp实现&#34;&gt;7.2.1 OpenMP实现&lt;/h4&gt;
&lt;h4 id=&#34;722-cuda实现&#34;&gt;7.2.2 CUDA实现&lt;/h4&gt;
&lt;h3 id=&#34;73-曼德勃罗集&#34;&gt;7.3 曼德勃罗集&lt;/h3&gt;
&lt;h4 id=&#34;731-串行算法&#34;&gt;7.3.1 串行算法&lt;/h4&gt;
&lt;h4 id=&#34;732-不适合进行向量化&#34;&gt;7.3.2 不适合进行向量化&lt;/h4&gt;
&lt;h4 id=&#34;733-openmp实现&#34;&gt;7.3.3 OpenMP实现&lt;/h4&gt;
&lt;h4 id=&#34;734-cuda实现&#34;&gt;7.3.4 CUDA实现&lt;/h4&gt;
&lt;h3 id=&#34;74-本章小结&#34;&gt;7.4 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第8章-利用多种技术优化线性代数中的算法性能&#34;&gt;第8章 利用多种技术优化线性代数中的算法性能&lt;/h2&gt;
&lt;h3 id=&#34;81-两向量距离&#34;&gt;8.1 两向量距离&lt;/h3&gt;
&lt;h4 id=&#34;811-串行代码&#34;&gt;8.1.1 串行代码&lt;/h4&gt;
&lt;h4 id=&#34;812-循环展开代码&#34;&gt;8.1.2 循环展开代码&lt;/h4&gt;
&lt;h4 id=&#34;813-avx指令加速&#34;&gt;8.1.3 AVX指令加速&lt;/h4&gt;
&lt;h4 id=&#34;814-neon实现&#34;&gt;8.1.4 NEON实现&lt;/h4&gt;
&lt;h4 id=&#34;815-cuda实现&#34;&gt;8.1.5 CUDA实现&lt;/h4&gt;
&lt;h3 id=&#34;82-稠密矩阵与向量乘法&#34;&gt;8.2 稠密矩阵与向量乘法&lt;/h3&gt;
&lt;h4 id=&#34;821-串行算法&#34;&gt;8.2.1 串行算法&lt;/h4&gt;
&lt;h4 id=&#34;822-avx指令加速&#34;&gt;8.2.2 AVX指令加速&lt;/h4&gt;
&lt;h4 id=&#34;823-neon实现&#34;&gt;8.2.3 NEON实现&lt;/h4&gt;
&lt;h4 id=&#34;824-cuda实现&#34;&gt;8.2.4 CUDA实现&lt;/h4&gt;
&lt;h4 id=&#34;825-openmp实现&#34;&gt;8.2.5 OpenMP实现&lt;/h4&gt;
&lt;h3 id=&#34;83-本章小结&#34;&gt;8.3 本章小结&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%B9%B8%E7%A6%8F%E4%B9%8B%E8%B7%AF/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%B9%B8%E7%A6%8F%E4%B9%8B%E8%B7%AF/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 幸福之路&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/73/YueWen_910669/t7_YueWen_910669.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 幸福之路|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 幸福之路&lt;/li&gt;
&lt;li&gt;作者： 罗素&lt;/li&gt;
&lt;li&gt;简介： 《幸福之路》中，罗素不依任何高深的学说，而是把一些经由他自己的经验和观察证实过的通情达理的意见归纳起来，制作出一张献给读者的方子，希望无数感到郁闷的男男女女，能够在此找到他们的病案和逃避之法，能够凭着适当的努力变得幸福。该书晓畅明白，历来为广大读者所喜爱，国内也曾有多个译本刊行。傅雷先生的精湛翻译更是为这本书增添了光彩。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;出版时间 2017-04-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787559400116&lt;/li&gt;
&lt;li&gt;分类： 哲学宗教-哲学著作&lt;/li&gt;
&lt;li&gt;出版社： 江苏凤凰文艺出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/e1b32ad05de54de1bcb2dab&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;译者弁言&#34;&gt;译者弁言&lt;/h2&gt;
&lt;h2 id=&#34;卷首诗&#34;&gt;卷首诗&lt;/h2&gt;
&lt;h2 id=&#34;序&#34;&gt;序&lt;/h2&gt;
&lt;h2 id=&#34;上编-不幸福的原因&#34;&gt;上编 不幸福的原因&lt;/h2&gt;
&lt;h3 id=&#34;一-什么使人不快乐&#34;&gt;一 什么使人不快乐？&lt;/h3&gt;
&lt;h3 id=&#34;二-浪漫底克的忧郁&#34;&gt;二 浪漫底克的忧郁&lt;/h3&gt;
&lt;h3 id=&#34;三-竞争&#34;&gt;三 竞争&lt;/h3&gt;
&lt;h3 id=&#34;四-烦闷与兴奋&#34;&gt;四 烦闷与兴奋&lt;/h3&gt;
&lt;h3 id=&#34;五-疲劳&#34;&gt;五 疲劳&lt;/h3&gt;
&lt;h3 id=&#34;六-嫉妒&#34;&gt;六 嫉妒&lt;/h3&gt;
&lt;h3 id=&#34;七-犯罪意识&#34;&gt;七 犯罪意识&lt;/h3&gt;
&lt;h3 id=&#34;八-被虐狂&#34;&gt;八 被虐狂&lt;/h3&gt;
&lt;h3 id=&#34;九-畏惧舆论&#34;&gt;九 畏惧舆论&lt;/h3&gt;
&lt;h2 id=&#34;下编-幸福的原因&#34;&gt;下编 幸福的原因&lt;/h2&gt;
&lt;h3 id=&#34;一-快乐还可能么&#34;&gt;一〇 快乐还可能么？&lt;/h3&gt;
&lt;h3 id=&#34;一一-兴致&#34;&gt;一一 兴致&lt;/h3&gt;
&lt;h3 id=&#34;一二-情爱&#34;&gt;一二 情爱&lt;/h3&gt;
&lt;h3 id=&#34;一三-家庭&#34;&gt;一三 家庭&lt;/h3&gt;
&lt;h3 id=&#34;一四-工作&#34;&gt;一四 工作&lt;/h3&gt;
&lt;h3 id=&#34;一五-闲情&#34;&gt;一五 闲情&lt;/h3&gt;
&lt;h3 id=&#34;一六-努力与舍弃&#34;&gt;一六 努力与舍弃&lt;/h3&gt;
&lt;h3 id=&#34;一七-幸福的人&#34;&gt;一七 幸福的人&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
&lt;h2 id=&#34;书评-no1&#34;&gt;书评 No.1&lt;/h2&gt;
&lt;p&gt;^6733360-7bTF723Kb
⏱ 2019-10-05 20:56:18&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E5%BD%B1%E5%93%8D%E5%8A%9B%E5%85%A8%E6%96%B0%E5%8D%87%E7%BA%A7%E7%89%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E5%BD%B1%E5%93%8D%E5%8A%9B%E5%85%A8%E6%96%B0%E5%8D%87%E7%BA%A7%E7%89%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 影响力（全新升级版）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/41/YueWen_41504771/t7_YueWen_41504771.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 影响力（全新升级版）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 影响力（全新升级版）&lt;/li&gt;
&lt;li&gt;作者： 罗伯特·西奥迪尼&lt;/li&gt;
&lt;li&gt;简介： 自出版以来，《影响力》就一直是畅销佳作。由于它的影响，说服得以成为一门科学。无论你是普通人还是为某一产品或事业观点游说的人，这都是一本基本的必读书，是你理解他人心理的基石。心理学家罗伯特·西奥迪尼为我们解释了为什么有些人具有说服力，而我们总是容易上当受骗。隐藏在冲动地顺从他人行为背后的6大心理武器，正是这一切的根源。那些劝说高手们，总是熟练地运用它们，让我们就范。经过近7年的潜心研究，西奥迪尼发现了第7种心理武器——联盟，将6种心理武器扩展为7种；书中更新内容多达10万字，包括近10年行为心理学新研究与新发现，近5年上百个商业、管理、科技、个人成长、家庭教育等方面的全新案例。本书被引述率高居社会心理学之冠，曾获得美国心理学会、美国心理学基金会年度大奖提名。是《财富》杂志推荐的75本商业必读书；在中国，《影响力》系列书系常年位居各大网络、地面书店管理畅销榜单前10名。&lt;/li&gt;
&lt;li&gt;出版时间 2021-10-30 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787559656438&lt;/li&gt;
&lt;li&gt;分类： 心理-社会心理学&lt;/li&gt;
&lt;li&gt;出版社： 北京联合出版公司&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/9ad32d40727950039add092&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;h2 id=&#34;序&#34;&gt;序&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;测一测-你的影响力水平有多高&#34;&gt;测一测 你的影响力水平有多高？&lt;/h2&gt;
&lt;h2 id=&#34;第1章-影响力的武器&#34;&gt;第1章 影响力的武器&lt;/h2&gt;
&lt;h3 id=&#34;按一下就播放&#34;&gt;按一下就播放&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 人类和低等动物的这种自动行为有重要的相似之处与区别。人类的自动行为模式往往是后天习得的，并不是天生的，它比低等动物固定步骤的模式更灵活，并可对大量的触发事件做出反应。
⏱ 2024-02-17 11:28:44 ^41504771-68-2681-2764&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;把赌注押在抄捷径上&#34;&gt;把赌注押在抄捷径上&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 就拿“专家说的话肯定是对的”这一条捷径来说吧，在第5章我们会看到，我们的社会出现了一种令人不安的发展趋势，人们往往会轻率地接受权威人士的说辞，照着他们的指点去做事。这也就是说，我们不是先思考专家的论点，看看值不值得相信，而是直接忽视论点，仅仅因为专家是“专业人士”，就选择相信他们。
⏱ 2024-02-19 16:24:21 ^41504771-69-2414-2607&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;渔利的奸商&#34;&gt;渔利的奸商&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 然而，点评网站也存在许多虚假评价。2019年，美国联邦贸易委员会投诉了一家化妆品公司，指控其评价造假
⏱ 2024-05-16 14:42:36 ^41504771-70-1859-1909&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;以柔克刚&#34;&gt;以柔克刚&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 人类在认知方面有个原理，叫“对比原理”。当两样东西一前一后地展示在你面前时，我们要怎样看待其间的区别，对比原理又会对我们产生怎样的影响。简单地说，要是第二样东西跟第一样东西相当不同，那么，我们往往会认为两者的区别比实际上要大。这样一来，如果先搬一种轻的东西，再拿一件重的东西，我们会觉得第二件东西比实际上更沉；而要是我们一开始直接就搬这件重东西，反倒不会觉得它有这么沉。对比原理是心理物理学领域确立的，它不仅适用于重量，还适用于其他各种感官知觉。
⏱ 2024-05-16 14:47:05 ^41504771-71-669-892&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;本章小结&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第2章-互惠&#34;&gt;第2章 互惠&lt;/h2&gt;
&lt;h3 id=&#34;互惠原则怎样起作用&#34;&gt;互惠原则怎样起作用&lt;/h3&gt;
&lt;h3 id=&#34;互惠式让步&#34;&gt;互惠式让步&lt;/h3&gt;
&lt;h3 id=&#34;如何防范&#34;&gt;如何防范&lt;/h3&gt;
&lt;h3 id=&#34;本章小结-1&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第3章-喜好&#34;&gt;第3章 喜好&lt;/h2&gt;
&lt;h3 id=&#34;通过喜好赚钱&#34;&gt;通过喜好赚钱&lt;/h3&gt;
&lt;h3 id=&#34;我喜欢你的理由&#34;&gt;我喜欢你的理由&lt;/h3&gt;
&lt;h3 id=&#34;如何防范-1&#34;&gt;如何防范&lt;/h3&gt;
&lt;h3 id=&#34;本章小结-2&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第4章-社会认同&#34;&gt;第4章 社会认同&lt;/h2&gt;
&lt;h3 id=&#34;社会认同原则&#34;&gt;社会认同原则&lt;/h3&gt;
&lt;h3 id=&#34;最佳条件&#34;&gt;最佳条件&lt;/h3&gt;
&lt;h3 id=&#34;负面事件效应&#34;&gt;负面事件效应&lt;/h3&gt;
&lt;h3 id=&#34;如何防范-2&#34;&gt;如何防范&lt;/h3&gt;
&lt;h3 id=&#34;本章小结-3&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第5章-权威&#34;&gt;第5章 权威&lt;/h2&gt;
&lt;h3 id=&#34;权威高压的力量&#34;&gt;权威高压的力量&lt;/h3&gt;
&lt;h3 id=&#34;盲目服从的诱惑和危险&#34;&gt;盲目服从的诱惑和危险&lt;/h3&gt;
&lt;h3 id=&#34;内涵不是内容&#34;&gt;内涵不是内容&lt;/h3&gt;
&lt;h3 id=&#34;让权威更加可信&#34;&gt;让权威更加可信&lt;/h3&gt;
&lt;h3 id=&#34;如何防范-3&#34;&gt;如何防范&lt;/h3&gt;
&lt;h3 id=&#34;本章小结-4&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第6章-稀缺&#34;&gt;第6章 稀缺&lt;/h2&gt;
&lt;h3 id=&#34;物以稀为贵&#34;&gt;物以稀为贵&lt;/h3&gt;
&lt;h3 id=&#34;逆反心理&#34;&gt;逆反心理&lt;/h3&gt;
&lt;h3 id=&#34;最佳条件-1&#34;&gt;最佳条件&lt;/h3&gt;
&lt;h3 id=&#34;如何防范-4&#34;&gt;如何防范&lt;/h3&gt;
&lt;h3 id=&#34;本章小结-5&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第7章-承诺与一致&#34;&gt;第7章 承诺与一致&lt;/h2&gt;
&lt;h3 id=&#34;言出必行&#34;&gt;言出必行&lt;/h3&gt;
&lt;h3 id=&#34;承诺是关键&#34;&gt;承诺是关键&lt;/h3&gt;
&lt;h3 id=&#34;发自内心地认同&#34;&gt;发自内心地认同&lt;/h3&gt;
&lt;h3 id=&#34;如何防范-5&#34;&gt;如何防范&lt;/h3&gt;
&lt;h3 id=&#34;本章小结-6&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第8章-联盟&#34;&gt;第8章 联盟&lt;/h2&gt;
&lt;h3 id=&#34;我们的力量&#34;&gt;“我们”的力量&lt;/h3&gt;
&lt;h3 id=&#34;联盟1身心合一&#34;&gt;联盟1：身心合一&lt;/h3&gt;
&lt;h3 id=&#34;联盟2行动合一&#34;&gt;联盟2：行动合一&lt;/h3&gt;
&lt;h3 id=&#34;跨群体大联盟&#34;&gt;跨群体大联盟&lt;/h3&gt;
&lt;h3 id=&#34;如何防范-6&#34;&gt;如何防范&lt;/h3&gt;
&lt;h3 id=&#34;本章小结-7&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第9章-即时的影响力&#34;&gt;第9章 即时的影响力&lt;/h2&gt;
&lt;h3 id=&#34;原始的自动反应&#34;&gt;原始的自动反应&lt;/h3&gt;
&lt;h3 id=&#34;现代的自动反应&#34;&gt;现代的自动反应&lt;/h3&gt;
&lt;h3 id=&#34;捷径应受到尊重&#34;&gt;捷径应受到尊重&lt;/h3&gt;
&lt;h3 id=&#34;本章小结-8&#34;&gt;本章小结&lt;/h3&gt;
&lt;h2 id=&#34;参考文献1&#34;&gt;参考文献1&lt;/h2&gt;
&lt;h2 id=&#34;参考文献2&#34;&gt;参考文献2&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%80%9D%E8%80%83%E5%BF%AB%E4%B8%8E%E6%85%A2/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%80%9D%E8%80%83%E5%BF%AB%E4%B8%8E%E6%85%A2/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 思考，快与慢&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/86/YueWen_573975/t7_YueWen_573975.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 思考，快与慢|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 思考，快与慢&lt;/li&gt;
&lt;li&gt;作者： 丹尼尔·卡尼曼&lt;/li&gt;
&lt;li&gt;简介： 诺贝尔经济学奖得主丹尼尔·卡尼曼经典之作，彻底颠覆你对思考的看法！横扫全球各大畅销书排行榜，《经济学人》年度十佳图书，巴曙松、何帆、王福重等知名经济学家高度评价。卡尼曼认为，我们的大脑有快与慢两种作决定的方式，常用的无意识的“系统1”和有意识的“系统2”。他还介绍了很多经典有趣的行为实验，指出我们在什么情况下可以相信自己的直觉，什么时候不能相信；指导我们如何在商场、职场和个人生活中作出更好的选择，以及如何运用不同技巧来避免那些常使我们陷入麻烦的思维失误。&lt;/li&gt;
&lt;li&gt;出版时间 2012-07-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787508633558&lt;/li&gt;
&lt;li&gt;分类： 个人成长-认知思维&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/af83263058c217af81f8979&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;本书所获赞誉&#34;&gt;本书所获赞誉&lt;/h2&gt;
&lt;h2 id=&#34;序言&#34;&gt;序言&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-系统1系统2&#34;&gt;第一部分 系统1，系统2&lt;/h2&gt;
&lt;h3 id=&#34;第1章-一张愤怒的脸和一道乘法题&#34;&gt;第1章 一张愤怒的脸和一道乘法题&lt;/h3&gt;
&lt;h3 id=&#34;第2章-电影的主角与配角&#34;&gt;第2章 电影的主角与配角&lt;/h3&gt;
&lt;h3 id=&#34;第3章-惰性思维与延迟满足的矛盾&#34;&gt;第3章 惰性思维与延迟满足的矛盾&lt;/h3&gt;
&lt;h3 id=&#34;第4章-联想的神奇力量&#34;&gt;第4章 联想的神奇力量&lt;/h3&gt;
&lt;h3 id=&#34;第5章-你的直觉有可能只是错觉&#34;&gt;第5章 你的直觉有可能只是错觉&lt;/h3&gt;
&lt;h3 id=&#34;第6章-意料之外与情理之中&#34;&gt;第6章 意料之外与情理之中&lt;/h3&gt;
&lt;h3 id=&#34;第7章-字母b与数字13&#34;&gt;第7章 字母“B”与数字“13”&lt;/h3&gt;
&lt;h3 id=&#34;第8章-我们究竟是如何作出判断的&#34;&gt;第8章 我们究竟是如何作出判断的？&lt;/h3&gt;
&lt;h3 id=&#34;第9章-目标问题与启发性问题形影不离&#34;&gt;第9章 目标问题与启发性问题形影不离&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-启发法与偏见&#34;&gt;第二部分 启发法与偏见&lt;/h2&gt;
&lt;h3 id=&#34;第10章-大数法则与小数定律&#34;&gt;第10章 大数法则与小数定律&lt;/h3&gt;
&lt;h3 id=&#34;第11章-锚定效应在生活中随处可见&#34;&gt;第11章 锚定效应在生活中随处可见&lt;/h3&gt;
&lt;h3 id=&#34;第12章-科学地利用可得性启发法&#34;&gt;第12章 科学地利用可得性启发法&lt;/h3&gt;
&lt;h3 id=&#34;第13章-焦虑情绪与风险政策的设计&#34;&gt;第13章 焦虑情绪与风险政策的设计&lt;/h3&gt;
&lt;h3 id=&#34;第14章-猜一下汤姆的专业是什么&#34;&gt;第14章 猜一下，汤姆的专业是什么？&lt;/h3&gt;
&lt;h3 id=&#34;第15章-琳达问题的社会效应&#34;&gt;第15章 琳达问题的社会效应&lt;/h3&gt;
&lt;h3 id=&#34;第16章-因果关系比统计学信息更具说服力&#34;&gt;第16章 因果关系比统计学信息更具说服力&lt;/h3&gt;
&lt;h3 id=&#34;第17章-所有表现都会回归平均值&#34;&gt;第17章 所有表现都会回归平均值&lt;/h3&gt;
&lt;h3 id=&#34;第18章-如何让直觉性预测更恰当有效&#34;&gt;第18章 如何让直觉性预测更恰当有效？&lt;/h3&gt;
&lt;h2 id=&#34;第三部分-过度自信与决策错误&#34;&gt;第三部分 过度自信与决策错误&lt;/h2&gt;
&lt;h3 id=&#34;第19章-知道的错觉&#34;&gt;第19章 “知道”的错觉&lt;/h3&gt;
&lt;h3 id=&#34;第20章-未来是不可预测的&#34;&gt;第20章 未来是不可预测的&lt;/h3&gt;
&lt;h3 id=&#34;第21章-直觉判断与公式运算孰优孰劣&#34;&gt;第21章 直觉判断与公式运算，孰优孰劣？&lt;/h3&gt;
&lt;h3 id=&#34;第22章-什么时候可以相信专家的直觉&#34;&gt;第22章 什么时候可以相信专家的直觉？&lt;/h3&gt;
&lt;h3 id=&#34;第23章-努力养成采纳外部意见的决策习惯&#34;&gt;第23章 努力养成采纳外部意见的决策习惯&lt;/h3&gt;
&lt;h3 id=&#34;第24章-乐观主义是一柄双刃剑&#34;&gt;第24章 乐观主义是一柄双刃剑&lt;/h3&gt;
&lt;h2 id=&#34;第四部分-选择与风险&#34;&gt;第四部分 选择与风险&lt;/h2&gt;
&lt;h3 id=&#34;第25章-事关风险与财富的抉择&#34;&gt;第25章 事关风险与财富的抉择&lt;/h3&gt;
&lt;h3 id=&#34;第26章-更人性化的前景理论&#34;&gt;第26章 更人性化的前景理论&lt;/h3&gt;
&lt;h3 id=&#34;第27章-禀赋效应与市场交易&#34;&gt;第27章 禀赋效应与市场交易&lt;/h3&gt;
&lt;h3 id=&#34;第28章-公平性经济交易的参照点&#34;&gt;第28章 公平性——经济交易的参照点&lt;/h3&gt;
&lt;h3 id=&#34;第29章-对结果可能性的权衡&#34;&gt;第29章 对结果可能性的权衡&lt;/h3&gt;
&lt;h3 id=&#34;第30章-被过分关注的罕见事件&#34;&gt;第30章 被过分关注的罕见事件&lt;/h3&gt;
&lt;h3 id=&#34;第31章-能带来长远收益的风险政策&#34;&gt;第31章 能带来长远收益的风险政策&lt;/h3&gt;
&lt;h3 id=&#34;第32章-心理账户是如何影响我们的选择的&#34;&gt;第32章 心理账户是如何影响我们的选择的？&lt;/h3&gt;
&lt;h3 id=&#34;第33章-评估结果的逆转&#34;&gt;第33章 评估结果的逆转&lt;/h3&gt;
&lt;h3 id=&#34;第34章-善用框架效应让生活更美好&#34;&gt;第34章 善用框架效应，让生活更美好&lt;/h3&gt;
&lt;h2 id=&#34;第五部分-两个自我&#34;&gt;第五部分 两个自我&lt;/h2&gt;
&lt;h3 id=&#34;第35章-体验效用与决策效用的不一致&#34;&gt;第35章 体验效用与决策效用的不一致&lt;/h3&gt;
&lt;h3 id=&#34;第36章-人生如戏&#34;&gt;第36章 人生如戏&lt;/h3&gt;
&lt;h3 id=&#34;第37章-你有多幸福&#34;&gt;第37章 你有多幸福？&lt;/h3&gt;
&lt;h3 id=&#34;第38章-思考生活&#34;&gt;第38章 思考生活&lt;/h3&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;h2 id=&#34;附录a-不确定性下的判断启发法和偏见&#34;&gt;附录A 不确定性下的判断：启发法和偏见&lt;/h2&gt;
&lt;h2 id=&#34;附录b-选择价值以及框架&#34;&gt;附录B 选择、价值以及框架&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第2章-电影的主角与配角-1&#34;&gt;第2章 电影的主角与配角&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 要完成加3任务，你必须同时在工作记忆中储存好几个数字，并且每个数字都要与一个特定的运行过程相联系：得记住转换完的数字以便稍后说出来，一个数字正在转换中，还有一些数字正等着被转换。当前关于工作记忆的测试要求个人在两个高要求的任务间不停地转换，在记住其中一个结果的同时，还要执行另一个任务。能够很好完成这些测试的人大都能在一般智力测试中取得好成绩。然而，是否能够控制自己的注意力并不是一般智力的衡量标准。要想预测空中交通指挥员和以色列空军飞行员的表现，衡量他们控制注意力的能力比让他们作智力测试更为有效。  ^6733360-7Nzve0BrG
- 💭 计算机很擅长啊
- ⏱ 2023-12-19 11:27:50&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%83%85%E7%BB%AA%E5%BD%B1%E5%93%8D%E6%AD%A3%E7%A1%AE%E5%86%B3%E7%AD%96%E7%9A%84%E5%8F%98%E9%87%8F/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%83%85%E7%BB%AA%E5%BD%B1%E5%93%8D%E6%AD%A3%E7%A1%AE%E5%86%B3%E7%AD%96%E7%9A%84%E5%8F%98%E9%87%8F/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 情绪：影响正确决策的变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/54/cpPlatform_j4U9zDNDQhkLqntL8L1dAJ/t7_cpPlatform_j4U9zDNDQhkLqntL8L1dAJ.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 情绪：影响正确决策的变量|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 情绪：影响正确决策的变量&lt;/li&gt;
&lt;li&gt;作者： 【美】列纳德·蒙洛迪诺&lt;/li&gt;
&lt;li&gt;简介： 当你在职场中遭遇不公平对待时，你的选择是退缩还是正面反击？选择本身无关对错，只与情绪相关。你的选择不仅取决于触发事件本身，还取决于大脑权衡反应时要考虑的各种其他因素，比如：你最近的工作表现如何？老板今天的心情如何？你们的关系如何？
我们每时每刻都要面对诸多选择，做出决策，从重复性的小事到攸关生死的大事，这些决策的背后都脱离不了情绪的幕后操控。情绪是影响我们正确决策的变量，能使我们快速、有效地理解当前处境，调整大脑的思考模式，权衡各种行为的潜在成本和收益，做出最符合现实情境需求的决定。
畅销书作家列纳德·蒙洛迪诺以自身经历和现实生活中令人信服的案例，结合脑科学、情感神经科学的新近研究成果，带领读者踏上体验各类情绪价值的旅程。从柏拉图、达尔文形成的传统情绪观，再到今天的情感神经科学对情绪的新认知，情绪一直伴随着人们成长，人们也在不断加深对情绪力量的理解。书中详述了核心情绪为何导致某些事情的必然发生，大脑中的动机与决心系统如何左右我们的行为，情绪感受为何存在个体差异，调查问卷怎么帮助我们制作专属情绪画像，如何通过具体可行的方法进行情绪管理，最终实现由屈从情绪到驾驭情绪的飞跃。
人类的韧性源于精神的灵活性，而精神的灵活性源自复杂的情绪。&lt;/li&gt;
&lt;li&gt;出版时间 2022-07-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787500170778&lt;/li&gt;
&lt;li&gt;分类： 个人成长-情绪心灵&lt;/li&gt;
&lt;li&gt;出版社： 中译出版社有限公司&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/41532e40813ab7574g016045&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;序一-沉浸再次发现情绪的积极作用&#34;&gt;序一 沉浸：再次发现情绪的积极作用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  魏格纳教授以此为基础通过一系列后续实验证明，用逃避、压抑的方式去控制疼痛、创伤和困扰都会导致这些症状以更负面的方式回归。那么该如何忘掉这只白色北极熊呢？积极心理学给出了一个方法：我不去想它，我去想什么？我可以去想孩子的笑脸，春天的鲜花。灿烂的阳光。用积极的一些体验来转移、替代和升华我们的消极体验。 ^3300038286-3-1792-1941&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 替代想想 - ⏱ 2024-02-24 15:25:57&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你不需要改变你玩的游戏，你只需要专注游戏让你进步的方式。任何人只要开始思考，游戏让他们变得更好的方式，就能够学会在面对艰难挑战的时候，在精神上和情绪上变得更有适应力
⏱ 2024-02-25 14:56:52 ^3300038286-3-2576-2658&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;序二-现代人应该如何修身养性&#34;&gt;序二 现代人应该如何修身养性&lt;/h2&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;h2 id=&#34;part-i-情绪的来源&#34;&gt;PART I 情绪的来源&lt;/h2&gt;
&lt;h4 id=&#34;11-被误解的情绪&#34;&gt;1.1 被误解的情绪&lt;/h4&gt;
&lt;h4 id=&#34;12-情绪的探索之旅&#34;&gt;1.2 情绪的探索之旅&lt;/h4&gt;
&lt;h4 id=&#34;13-情绪与生物进化&#34;&gt;1.3 情绪与生物进化&lt;/h4&gt;
&lt;h4 id=&#34;14-传统的情绪观&#34;&gt;1.4 传统的情绪观&lt;/h4&gt;
&lt;h4 id=&#34;15-拯救世界的情绪&#34;&gt;1.5 拯救世界的情绪&lt;/h4&gt;
&lt;h3 id=&#34;第2章-情绪的目的&#34;&gt;第2章 情绪的目的&lt;/h3&gt;
&lt;h4 id=&#34;21-情绪的灵活性&#34;&gt;2.1 情绪的灵活性&lt;/h4&gt;
&lt;h4 id=&#34;22-失恋的果蝇&#34;&gt;2.2 失恋的果蝇&lt;/h4&gt;
&lt;h4 id=&#34;23-情绪的五大特性&#34;&gt;2.3 情绪的五大特性&lt;/h4&gt;
&lt;h4 id=&#34;24-生不逢时的情绪&#34;&gt;2.4 生不逢时的情绪&lt;/h4&gt;
&lt;h3 id=&#34;第3章-核心情绪&#34;&gt;第3章 核心情绪&lt;/h3&gt;
&lt;h4 id=&#34;31-什么是核心情绪&#34;&gt;3.1 什么是核心情绪&lt;/h4&gt;
&lt;h4 id=&#34;32-激进还是保守&#34;&gt;3.2 激进还是保守&lt;/h4&gt;
&lt;h4 id=&#34;33-第二大脑肠脑轴&#34;&gt;3.3 第二大脑：肠脑轴&lt;/h4&gt;
&lt;h4 id=&#34;34-身心联系&#34;&gt;3.4 身心联系&lt;/h4&gt;
&lt;h4 id=&#34;35-核心情绪与大脑&#34;&gt;3.5 核心情绪与大脑&lt;/h4&gt;
&lt;h4 id=&#34;36-核心情绪的暗藏影响&#34;&gt;3.6 核心情绪的暗藏影响&lt;/h4&gt;
&lt;h2 id=&#34;part-ii-情绪的作用&#34;&gt;PART II 情绪的作用&lt;/h2&gt;
&lt;h4 id=&#34;41-被情绪左右的思维&#34;&gt;4.1 被情绪左右的思维&lt;/h4&gt;
&lt;h4 id=&#34;42-情绪化的行为&#34;&gt;4.2 情绪化的行为&lt;/h4&gt;
&lt;h4 id=&#34;43-社会情绪复杂新变量&#34;&gt;4.3 社会情绪：复杂新变量&lt;/h4&gt;
&lt;h4 id=&#34;44-情绪的驱动力&#34;&gt;4.4 情绪的驱动力&lt;/h4&gt;
&lt;h4 id=&#34;45-积极情绪&#34;&gt;4.5 积极情绪&lt;/h4&gt;
&lt;h4 id=&#34;46-消极情绪不消极&#34;&gt;4.6 消极情绪不消极&lt;/h4&gt;
&lt;h3 id=&#34;第5章-脑中的情绪之谜&#34;&gt;第5章 脑中的情绪之谜&lt;/h3&gt;
&lt;h4 id=&#34;51-情绪开关&#34;&gt;5.1 情绪开关&lt;/h4&gt;
&lt;h4 id=&#34;52-情绪错觉&#34;&gt;5.2 情绪错觉&lt;/h4&gt;
&lt;h4 id=&#34;53-情绪图谱&#34;&gt;5.3 情绪图谱&lt;/h4&gt;
&lt;h4 id=&#34;54-情商研究&#34;&gt;5.4 情商研究&lt;/h4&gt;
&lt;h3 id=&#34;第6章-动机想要还是喜欢&#34;&gt;第6章 动机：想要还是喜欢&lt;/h3&gt;
&lt;h4 id=&#34;61-探索快乐之旅&#34;&gt;6.1 探索快乐之旅&lt;/h4&gt;
&lt;h4 id=&#34;62-快乐之源&#34;&gt;6.2 快乐之源&lt;/h4&gt;
&lt;h4 id=&#34;63-奖励系统&#34;&gt;6.3 奖励系统&lt;/h4&gt;
&lt;h4 id=&#34;64-想要还是喜欢&#34;&gt;6.4 想要还是喜欢&lt;/h4&gt;
&lt;h4 id=&#34;65-想要系统与喜欢系统&#34;&gt;6.5 想要系统与喜欢系统&lt;/h4&gt;
&lt;h4 id=&#34;66-被误导的奖励系统&#34;&gt;6.6 被误导的奖励系统&lt;/h4&gt;
&lt;h4 id=&#34;67-被操控的奖励系统&#34;&gt;6.7 被操控的奖励系统&lt;/h4&gt;
&lt;h3 id=&#34;第7章-决心无坚不摧的意志&#34;&gt;第7章 决心：无坚不摧的意志&lt;/h3&gt;
&lt;h4 id=&#34;71-探索决心的科学之旅&#34;&gt;7.1 探索决心的科学之旅&lt;/h4&gt;
&lt;h4 id=&#34;72-提升决心的方法&#34;&gt;7.2 提升决心的方法&lt;/h4&gt;
&lt;h4 id=&#34;73-机器人的冷漠&#34;&gt;7.3 机器人的冷漠&lt;/h4&gt;
&lt;h4 id=&#34;74-决心调查问卷&#34;&gt;7.4 决心调查问卷&lt;/h4&gt;
&lt;h4 id=&#34;75-决心的天敌&#34;&gt;7.5 决心的天敌&lt;/h4&gt;
&lt;h2 id=&#34;part-iii-情绪侧写与情绪管理&#34;&gt;PART III 情绪侧写与情绪管理&lt;/h2&gt;
&lt;h4 id=&#34;81-先天还是后天&#34;&gt;8.1 先天还是后天&lt;/h4&gt;
&lt;h4 id=&#34;82-行为表观遗传学&#34;&gt;8.2 行为表观遗传学&lt;/h4&gt;
&lt;h4 id=&#34;83-你的情绪侧写&#34;&gt;8.3 你的情绪侧写&lt;/h4&gt;
&lt;h4 id=&#34;84-羞耻感和愧疚感调查问卷&#34;&gt;8.4 羞耻感和愧疚感调查问卷&lt;/h4&gt;
&lt;h4 id=&#34;85-焦虑调查问卷&#34;&gt;8.5 焦虑调查问卷&lt;/h4&gt;
&lt;h4 id=&#34;86-愤怒和攻击性调查问卷&#34;&gt;8.6 愤怒和攻击性调查问卷&lt;/h4&gt;
&lt;h4 id=&#34;87-牛津幸福感调查问卷&#34;&gt;8.7 牛津幸福感调查问卷&lt;/h4&gt;
&lt;h4 id=&#34;88-爱情和依恋调查问卷&#34;&gt;8.8 爱情和依恋调查问卷&lt;/h4&gt;
&lt;h4 id=&#34;89-重新认识自己&#34;&gt;8.9 重新认识自己&lt;/h4&gt;
&lt;h3 id=&#34;第9章-情绪管理&#34;&gt;第9章 情绪管理&lt;/h3&gt;
&lt;h4 id=&#34;91-情绪管理的重要性&#34;&gt;9.1 情绪管理的重要性&lt;/h4&gt;
&lt;h4 id=&#34;92-情绪管理方法一接受&#34;&gt;9.2 情绪管理方法一：接受&lt;/h4&gt;
&lt;h4 id=&#34;93-情绪管理方法二重新评估&#34;&gt;9.3 情绪管理方法二：重新评估&lt;/h4&gt;
&lt;h4 id=&#34;94-情绪管理方法三表达&#34;&gt;9.4 情绪管理方法三：表达&lt;/h4&gt;
&lt;h4 id=&#34;95-致敬情绪&#34;&gt;9.5 致敬情绪&lt;/h4&gt;
&lt;h2 id=&#34;临别寄语&#34;&gt;临别寄语&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;序一-沉浸再次发现情绪的积极作用-1&#34;&gt;序一 沉浸：再次发现情绪的积极作用&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 魏格纳教授以此为基础通过一系列后续实验证明，用逃避、压抑的方式去控制疼痛、创伤和困扰都会导致这些症状以更负面的方式回归。那么该如何忘掉这只白色北极熊呢？积极心理学给出了一个方法：我不去想它，我去想什么？我可以去想孩子的笑脸，春天的鲜花。灿烂的阳光。用积极的一些体验来转移、替代和升华我们的消极体验。  ^6733360-7PdFyVWmx
- 💭 替代想想
- ⏱ 2024-02-24 15:26:04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E5%8F%98%E8%80%81%E5%86%99%E7%BB%99%E5%A4%A7%E5%AE%B6%E7%9A%84%E7%A7%91%E5%AD%A6%E6%8A%97%E8%A1%B0%E8%80%81%E6%8C%87%E5%8D%97/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E5%8F%98%E8%80%81%E5%86%99%E7%BB%99%E5%A4%A7%E5%AE%B6%E7%9A%84%E7%A7%91%E5%AD%A6%E6%8A%97%E8%A1%B0%E8%80%81%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 我们为什么会变老：写给大家的科学抗衰老指南&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/12/cpplatform_irabcb4jd1yqcyo4iqjnxv/t7_cpplatform_irabcb4jd1yqcyo4iqjnxv1702523086.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 我们为什么会变老：写给大家的科学抗衰老指南|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 我们为什么会变老：写给大家的科学抗衰老指南&lt;/li&gt;
&lt;li&gt;作者： 贝丝·贝内特&lt;/li&gt;
&lt;li&gt;简介： 皱纹、白发和放错地方的钥匙，这些都是明显的变老迹象。难以置信的是，人体细胞和器官中所有导致衰老的微小事件从我们二十多岁起就开始恶化。
在《我们为什么会变老》一书中，资深生物学教授、遗传学家贝丝·贝内特对衰老科学进行了深入浅出的讲解：我们的身体为何以及如何衰老。她使用现实世界的类比解释身体中发生的各种化学变化和细胞衰老过程，以及基础研究实验室最新发现的抗衰老解决方案。本书带领读者了解我们的身体内部和外部随着年龄的增长会发生哪些变化，这些与衰老相关的变化是如何发生的，以及减轻这些不良影响的干预措施如何发挥作用。
除了解释衰老的成因和机制，作者还细致地探究了衰老对我们每个人都极为重要的身体器官和系统（皮肤、肌肉、骨骼、心血管和大脑）的影响。在每一对应的章节，她都为读者提供了诸多基于科学的实证有效的干预措施。这些措施的作用和意义不仅在于延缓衰老和延长寿命，更在于提升每个人都渴求的健康生活品质。&lt;/li&gt;
&lt;li&gt;出版时间 2023-12-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787571432430&lt;/li&gt;
&lt;li&gt;分类： 医学健康-医学&lt;/li&gt;
&lt;li&gt;出版社： 北京科学技术出版社有限公司&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/2a232860813ab864fg016d60&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;文前&#34;&gt;文前&lt;/h2&gt;
&lt;h2 id=&#34;第一章-什么是衰老我们为什么会变老&#34;&gt;第一章 什么是衰老？我们为什么会变老？&lt;/h2&gt;
&lt;h2 id=&#34;第二章-衰老的原因或进化学解释&#34;&gt;第二章 衰老的原因或进化学解释&lt;/h2&gt;
&lt;h2 id=&#34;第三章-衰老的机制&#34;&gt;第三章 衰老的机制&lt;/h2&gt;
&lt;h2 id=&#34;第四章-皮肤&#34;&gt;第四章 皮肤&lt;/h2&gt;
&lt;h2 id=&#34;第五章-肌肉&#34;&gt;第五章 肌肉&lt;/h2&gt;
&lt;h2 id=&#34;第六章-骨骼&#34;&gt;第六章 骨骼&lt;/h2&gt;
&lt;h2 id=&#34;第七章-心血管系统&#34;&gt;第七章 心血管系统&lt;/h2&gt;
&lt;h2 id=&#34;第八章-大脑与认知能力衰退&#34;&gt;第八章 大脑与认知能力衰退&lt;/h2&gt;
&lt;h2 id=&#34;第九章-干预措施一可采取的行动&#34;&gt;第九章 干预措施一：可采取的行动&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这类干预措施中最著名的两种就是热量限制（或者更广义地说，饮食限制）和运动。这两种措施实施成本相对廉价，而且已被证明在影响健康寿命，甚至实际寿命方面可能都极其有效
⏱ 2024-04-12 11:21:01 ^3300081436-12-1446-1526&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一种可能的解释是，热量限制改善了机体对胰岛素（insulin，控制血糖和脂肪储存的激素）的敏感性。这种敏感性可衡量机体对碳水化合物的反应有多快多好。换句话说，对胰岛素敏感性的提升意味着机体对摄入热量的利用率更高了，这就像拥有一辆更省油的汽车：你可以用更少的汽油开更远的路。另一种可能的解释与线粒体活动有关，下面将简短回顾这个问题。
⏱ 2024-04-12 14:49:36 ^3300081436-12-3595-3786&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 既然你已相信热量限制是有益的，我就可以多说一些了。当研究人员只限制小鼠从脂质中摄入的热量，而不减少其总热量摄入时，它们的寿命没有显示出任何改善。而当蛋白质被限制摄入，同时允许动物尽情享用其他食物时，它们获得的寿命增长相当于热量限制时的一半。
⏱ 2024-04-12 14:52:08 ^3300081436-12-7438-7558&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 重要事实：在任何年龄段进行负重训练都能带来巨大的回报。
⏱ 2024-04-12 11:12:57 ^3300081436-12-18712-18739&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 研究人员对芬兰一些经常蒸桑拿的中年男性进行了研究，以探究蒸桑拿的效果。研究人员将每周蒸一次桑拿的男性与经常蒸桑拿的男性进行比较后发现，蒸桑拿爱好者患上几种心脏病的风险以及全因死亡率大大降低了（每周蒸2～3次桑拿的对照组降低了78%，每周蒸4～7次桑拿的对照组降低了39%）
⏱ 2024-04-13 19:36:52 ^3300081436-12-19462-19598&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第十章-干预措施二可使用的药物和补充剂&#34;&gt;第十章 干预措施二：可使用的药物和补充剂&lt;/h2&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第九章-干预措施一可采取的行动-1&#34;&gt;第九章 干预措施一：可采取的行动&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 记得吗？当机体摄入碳水化合物时，胰腺会释放胰岛素，胰岛素通常会激活全身的细胞，特别是肌肉和肝脏的细胞，来捕获血液中的糖（因为碳水化合物会快速分解为葡萄糖）。然而，含大量碳水化合物的食物，尤其是精加工食品中的单糖，会导致机体不断释放胰岛素。而且，血液中的糖如果没有及时被需要它的细胞获取，就会迅速被储存在脂肪细胞中。  ^6733360-7QqrXa2bM
- 💭 为啥吃碳水会变胖
- ⏱ 2024-04-13 19:18:34&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%9D%A1%E8%A7%89/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%9D%A1%E8%A7%89/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 我们为什么要睡觉？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/98/YueWen_43697528/t7_YueWen_43697528.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 我们为什么要睡觉？|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 我们为什么要睡觉？&lt;/li&gt;
&lt;li&gt;作者： 马修·沃克&lt;/li&gt;
&lt;li&gt;简介： 你认为自己最近睡眠充足吗？你还记得上一次自然醒后神清气爽的感觉吗？不用怀疑，我们正在进入一个失眠已经成为流行病的时代。作为一名杰出的神经科学家，沃克对生物的睡眠行为充满好奇，这促使他成了睡眠研究方面的专家。本书中，他总结了人类有史以来的睡眠研究成果，以及前沿的科学突破，告诉我们睡眠的运行机制、睡眠不足的坏处、睡眠与做梦的有益功能，以及睡眠对专业人士个人能力提升的惊人影响。我们的身体健康、心理健康、情商智商、记忆力、运动力、学习力、生产力、创造力、吸引力，甚至食欲，这些让日间生活丰富多彩的能力，原来都与夜间那场睡眠有着密不可分的关系。现在，你知道我们为什么需要充足的睡眠了吧。打开这本书，看平凡的睡眠如何带来非凡的生命能量，顶尖科学对于睡眠的所有了解及如何睡好觉的诀窍都将在这部关于睡眠的“百科全书”中逐一揭晓。&lt;/li&gt;
&lt;li&gt;出版时间 2021-03-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787559648600&lt;/li&gt;
&lt;li&gt;分类： 科学技术-科学科普&lt;/li&gt;
&lt;li&gt;出版社： 北京联合出版公司&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/121323f0729ac578121ce6f&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;免责声明&#34;&gt;免责声明&lt;/h2&gt;
&lt;h2 id=&#34;中文版序&#34;&gt;中文版序&lt;/h2&gt;
&lt;h2 id=&#34;文前&#34;&gt;文前&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-睡眠这件事&#34;&gt;第一部分 睡眠这件事&lt;/h2&gt;
&lt;h3 id=&#34;01-睡吧&#34;&gt;01 睡吧……&lt;/h3&gt;
&lt;h3 id=&#34;02-咖啡因时差和褪黑激素-怎样控制你的睡眠节奏&#34;&gt;02 咖啡因、时差和褪黑激素 怎样控制你的睡眠节奏&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 褪黑激素的作用是提供正式的指令开始睡眠，但不参与睡眠竞赛本身。
⏱ 2023-12-10 11:58:53 ^43697528-8-9010-9041&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 然而，你可以通过使用一种让你感觉更加警觉和清醒的化学物质来人为地降低腺苷的睡眠信号：咖啡因。咖啡因不是一种保健品。相反，它是世界上使用最广泛的（被滥用的）精神兴奋剂。它是全球第二大贸易商品，仅次于石油。咖啡因的摄入代表了有史以来针对人类进行的历时最久、规模最大的无监管药物研究之一，也许只有酒精能与之匹敌，而且现在仍是如此。
⏱ 2023-12-10 12:10:58 ^43697528-8-12745-12907&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;03-睡眠的定义和形成-时间膨胀与1952年一个关于婴儿的发现&#34;&gt;03 睡眠的定义和形成 时间膨胀与1952年一个关于婴儿的发现&lt;/h3&gt;
&lt;h3 id=&#34;04-猿类的床恐龙与半脑睡眠-哪些物种会睡觉我们怎样睡觉及睡多少&#34;&gt;04 猿类的床、恐龙与半脑睡眠 哪些物种会睡觉，我们怎样睡觉及睡多少&lt;/h3&gt;
&lt;h3 id=&#34;05-一生中的睡眠变化&#34;&gt;05 一生中的睡眠变化&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-你为什么需要睡眠&#34;&gt;第二部分 你为什么需要睡眠？&lt;/h2&gt;
&lt;h3 id=&#34;06-你的母亲和莎士比亚都知道-睡眠对大脑的益处&#34;&gt;06 你的母亲和莎士比亚都知道 睡眠对大脑的益处&lt;/h3&gt;
&lt;h3 id=&#34;07-比吉尼斯世界纪录更夸张-睡眠剥夺与大脑&#34;&gt;07 比《吉尼斯世界纪录》更夸张 睡眠剥夺与大脑&lt;/h3&gt;
&lt;h3 id=&#34;08-癌症心脏病和更短的寿命-睡眠剥夺与身体&#34;&gt;08 癌症、心脏病和更短的寿命 睡眠剥夺与身体&lt;/h3&gt;
&lt;h2 id=&#34;第三部分-梦的产生和原因&#34;&gt;第三部分 梦的产生和原因&lt;/h2&gt;
&lt;h3 id=&#34;09-日常精神错乱-快速眼动睡眠时的梦&#34;&gt;09 日常精神错乱 快速眼动睡眠时的梦&lt;/h3&gt;
&lt;h3 id=&#34;10-作为夜间疗法的梦&#34;&gt;10 作为夜间疗法的梦&lt;/h3&gt;
&lt;h3 id=&#34;11-梦的创造性和对梦的控制&#34;&gt;11 梦的创造性和对梦的控制&lt;/h3&gt;
&lt;h2 id=&#34;第四部分-从安眠药到社会变革&#34;&gt;第四部分 从安眠药到社会变革&lt;/h2&gt;
&lt;h3 id=&#34;12-夜间作怪的事物-睡眠障碍和睡眠缺失导致的死亡&#34;&gt;12 夜间作怪的事物 睡眠障碍和睡眠缺失导致的死亡&lt;/h3&gt;
&lt;h3 id=&#34;13-ipad工厂的汽笛与睡前饮酒-是什么让你睡不着&#34;&gt;13 iPad、工厂的汽笛与睡前饮酒 是什么让你睡不着？&lt;/h3&gt;
&lt;h3 id=&#34;14-伤害你的同时帮你入睡-安眠药与非药物治疗&#34;&gt;14 伤害你的同时帮你入睡 安眠药与非药物治疗&lt;/h3&gt;
&lt;h3 id=&#34;15-睡眠与社会-医学界和教育界的错误做法谷歌和美国国家航空航天局的正确做法&#34;&gt;15 睡眠与社会 医学界和教育界的错误做法，谷歌和美国国家航空航天局的正确做法&lt;/h3&gt;
&lt;h3 id=&#34;16-21世纪的睡眠新观念&#34;&gt;16 21世纪的睡眠新观念&lt;/h3&gt;
&lt;h2 id=&#34;结语-睡觉还是不睡觉&#34;&gt;结语 睡觉还是不睡觉&lt;/h2&gt;
&lt;h2 id=&#34;附录-12条健康睡眠小贴士&#34;&gt;附录 12条健康睡眠小贴士&lt;/h2&gt;
&lt;h2 id=&#34;插图权限&#34;&gt;插图权限&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;出版后记&#34;&gt;出版后记&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%88%91%E7%9A%84%E5%87%A0%E4%BD%95%E4%BA%BA%E7%94%9F%E4%B8%98%E6%88%90%E6%A1%90%E8%87%AA%E4%BC%A0/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%88%91%E7%9A%84%E5%87%A0%E4%BD%95%E4%BA%BA%E7%94%9F%E4%B8%98%E6%88%90%E6%A1%90%E8%87%AA%E4%BC%A0/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 我的几何人生：丘成桐自传&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/1/YueWen_36610124/t7_YueWen_36610124.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 我的几何人生：丘成桐自传|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 我的几何人生：丘成桐自传&lt;/li&gt;
&lt;li&gt;作者： 丘成桐 史蒂夫·纳迪斯&lt;/li&gt;
&lt;li&gt;简介： 本书讲述了丘成桐从中国乡村的贫穷少年成长为举世闻名的世界级数学家的励志故事。困顿清苦的童年，艰苦卓绝的异国求学路，初入数学界的一鸣惊人，名声大噪后的风起云涌，对中国基础科学建设的拳拳之心……攀登科学高峰，拨开浮华迷雾，丘成桐直面盛誉、无惧挑战，讲述触动人心的传奇人生。书中特别收录丘成桐原创诗词赋文，学贯中西、融通文理，尽显大家风范。他的故事就是展示中国的一个窗口。通过他，我们可以看到一个有着五千年文明历史的国家，正努力与现代科学结合在一起，并终将重塑世界科技的秩序。&lt;/li&gt;
&lt;li&gt;出版时间 2021-01-03 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787544785327&lt;/li&gt;
&lt;li&gt;分类： 人物传记-传记综合&lt;/li&gt;
&lt;li&gt;出版社： 译林出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/7ab32ec0722ea04c7ab8097&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献辞&#34;&gt;献辞&lt;/h2&gt;
&lt;h2 id=&#34;献言&#34;&gt;献言&lt;/h2&gt;
&lt;h2 id=&#34;序一&#34;&gt;序一&lt;/h2&gt;
&lt;h2 id=&#34;序二&#34;&gt;序二&lt;/h2&gt;
&lt;h2 id=&#34;序三&#34;&gt;序三&lt;/h2&gt;
&lt;h2 id=&#34;第一章-童年颠沛&#34;&gt;第一章 童年颠沛&lt;/h2&gt;
&lt;h2 id=&#34;第二章-何去何从&#34;&gt;第二章 何去何从&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 事实上，我并不喜欢“天才”这名词，差不多从来不用它。恐怕很多人都把“天才”浪漫化了，以为那些人能无中生有，创造奇迹，提出凡人想不出的方法，或者完成惊人的数学证明。世人相信，他们的智慧是如此地高超，不费吹灰之力就能成就一切。如在电影《心灵捕手》（Good Will Hunting）中，主角在麻省理工把清洁工作丢下几分钟，就破解了数学中的老大难题。这些情况虽说并非完全不可能，但至今我未见过。我的经验是，解决数学难题需要艰辛的努力，没有快捷方式可走，除非问题本身其实颇易。而另一方面，经过漫长时间的努力，终于完成了前人没有完成的工作，又或者没有人认为能成功的工作，那么这算不算是天才？还是个有成就的苦工？我不知道，花时间去想这些问题也没意思。
⏱ 2021-03-10 13:15:09 ^36610124-9-9477-9797&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第三章-初履北美&#34;&gt;第三章 初履北美&lt;/h2&gt;
&lt;h2 id=&#34;第四章-仰望卡峰&#34;&gt;第四章 仰望卡峰&lt;/h2&gt;
&lt;h2 id=&#34;第五章-高峰挺进&#34;&gt;第五章 高峰挺进&lt;/h2&gt;
&lt;h2 id=&#34;第六章-故里难通&#34;&gt;第六章 故里难通&lt;/h2&gt;
&lt;h2 id=&#34;第七章-斯年堪纪&#34;&gt;第七章 斯年堪纪&lt;/h2&gt;
&lt;h2 id=&#34;第八章-弦筹共融&#34;&gt;第八章 弦筹共融&lt;/h2&gt;
&lt;h2 id=&#34;第九章-适彼乐土&#34;&gt;第九章 适彼乐土&lt;/h2&gt;
&lt;h2 id=&#34;第十章-矢志兴中&#34;&gt;第十章 矢志兴中&lt;/h2&gt;
&lt;h2 id=&#34;第十一章-庞氏余波&#34;&gt;第十一章 庞氏余波&lt;/h2&gt;
&lt;h2 id=&#34;第十二章-东风西风&#34;&gt;第十二章 东风西风&lt;/h2&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;h3 id=&#34;在清华大学2020届数学科学系毕业典礼上的讲话&#34;&gt;在清华大学2020届数学科学系毕业典礼上的讲话&lt;/h3&gt;
&lt;h3 id=&#34;贺北京雁栖湖应用数学研究院成立&#34;&gt;贺北京雁栖湖应用数学研究院成立&lt;/h3&gt;
&lt;h3 id=&#34;杭州会议序&#34;&gt;杭州会议序&lt;/h3&gt;
&lt;h3 id=&#34;中华赋6&#34;&gt;中华赋[6]&lt;/h3&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第四章-仰望卡峰-1&#34;&gt;第四章 仰望卡峰&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 根据钟开莱讲的故事，华罗庚是别人眼中的天才。他生长在贫穷的家庭，没受过什么教育，光靠自学，竟破解了数学上好些难题。陈省身终究成就更大，但这是后来的事了。陈并没有经济上的困难，他父亲是个法官，但华的父亲只是个店员，家境并不富裕。1941年，中国政府成立了国家科学大奖，第一届的得主是郭沫若和华罗庚。这个奖类似于美国的国家科学奖，由国家领导人亲自颁发。当时两人住在一起，可以想象这是对陈的打击。随着岁月的推移，陈的愤愤不平也许愈来愈盛，因他从未得过这荣誉，而说故事的钟开莱，其贡献当然未堪与陈比肩，但也得了个银奖。  ^6733360-7oIHtJe1m
- 💭 还有这事情
- ⏱ 2021-03-11 12:55:33&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第六章-故里难通-1&#34;&gt;第六章 故里难通&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我在为这巨著的爱情主线感动的同时，也对它描写的阶级冲突有切肤之感。当时家道中落，但自命书香世家，当居贫而志坚。当时意想不到的，却是这小说的结构，后来竟然影响了我对数学的看法。书中情节千丝万缕，角色层出不穷，要花时间和眼力，始能把情节和人物联系起来，形成纷沓而又浑成的整体。  ^6733360-7oIXLgIfE
- 💭 红楼梦和数学居然有这个关系
- ⏱ 2021-03-11 17:04:10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 米克斯热爱数学，我也见过其他热爱数学的美国人。他们研究数学，只为其中的快乐，对其他东西懒得一顾。然而，很多中国人不过视数学为一份好工作。  ^6733360-7oIY9iSZu
- 💭 热情很可贵,勇气也很重要
- ⏱ 2021-03-11 17:10:05&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第七章-斯年堪纪-1&#34;&gt;第七章 斯年堪纪&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一天晚上，陈先生在晚饭后，请了十位受邀来华的重要客人参加茶会。他先请各人坐下来，听取大家对中国数学现状的看法。他批评华罗庚领导的数学所，尽管那是中国数学主要活动之处，并敦促把它关掉。他提议在座十人联名上书，吁请中国政府把数学所永远关闭，话毕全场鸦雀无声，于是他又重复说了一遍。  ^6733360-7oJkSBqaI
- 💭 这个有点过分
- ⏱ 2021-03-11 22:57:10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第十二章-东风西风-1&#34;&gt;第十二章 东风西风&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一个多月后，我在香港中文大学访问。杨振宁先生把我召到他的办公室，他说：“你得罪了你的老师。”我的意见逆了陈先生的意愿。我回答说我一直闭口不言，直至别人问我才开口，而且也是清心直说，并无虚言啊。“你只需要说证明是对的便好了！”听他说完后，我只有无言地离开了他的办公室。  ^6733360-7oMREylNj
- 💭 学术和人心那
- ⏱ 2021-03-14 06:37:35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;附录-1&#34;&gt;附录&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 中学时的训练对同学有很大的好处，培正中学出了不少数学名家。我们中学的老师在代数和数论方面的涉猎比较少，  ^6733360-7oN5BQGWL
- 💭 要由一所好中学
- ⏱ 2021-03-14 10:10:41&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%8A%91%E9%83%81%E7%97%87%E8%87%AA%E6%95%91%E6%89%8B%E5%86%8C/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%8A%91%E9%83%81%E7%97%87%E8%87%AA%E6%95%91%E6%89%8B%E5%86%8C/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 抑郁症自救手册&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/891/43914891/t7_43914891.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 抑郁症自救手册|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 抑郁症自救手册&lt;/li&gt;
&lt;li&gt;作者： 莫妮克·汤普森&lt;/li&gt;
&lt;li&gt;简介： 如何评估和跟踪自己的抑郁症表现与发展？如何识别抑郁时的消极思维错误？如何平衡自己内心的恐惧和消极预测？如何利用积极情绪影响生活？抑郁时我们很容易对自我产生消极认知，沉浸于内疚、无价值感、疲劳、不堪重负之中，问责于己，以至于很容易忽视了一个关键问题：积极行动，尝试改变。抑郁症是一种心境障碍，是生物、心理和环境因素共同作用的结果，是大脑中一场突如其来的“精神感冒”，是我们可以努力去战胜的疾病。我们常说抑郁症是我们“感受”到的或“拥有”的东西，无法摆脱，但本书强调一个更为准确和有力的观点：抑郁症也是我们的所作所为。所以我们能努力做一些不同的事来改变它，例如学会识别强化和维持抑郁症的常见行为与思维错误。认知行为疗法是目前广泛采用的用于治疗抑郁症的有效方法，被公认为临床心理治疗的黄金标准，主要通过帮助患者识别抑郁期间的错误、消极的想法、感受与行为，专注当下，树立目标，在有限时间内实现认知逆转。本书作者莫妮克·汤普森作为一名资深执业临床心理学家，拥有丰富的临床经验和专业背景，为读者总结了23种实用策略与技巧，用以打破消极认知与行为恶性循环，让生活再次充满活力，恢复色彩。&lt;/li&gt;
&lt;li&gt;出版时间 2022-04-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787521740912&lt;/li&gt;
&lt;li&gt;分类： 心理-心理学应用&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/000329a0729e168b0003a85&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献给&#34;&gt;献给&lt;/h2&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-理解抑郁症&#34;&gt;第一部分 理解抑郁症&lt;/h2&gt;
&lt;h3 id=&#34;第一章-治疗抑郁症&#34;&gt;第一章 治疗抑郁症&lt;/h3&gt;
&lt;h4 id=&#34;乌云密布的生活&#34;&gt;乌云密布的生活&lt;/h4&gt;
&lt;h4 id=&#34;面对抑郁症你可以做什么&#34;&gt;面对抑郁症你可以做什么&lt;/h4&gt;
&lt;h4 id=&#34;如何使用本书&#34;&gt;如何使用本书&lt;/h4&gt;
&lt;h3 id=&#34;第二章-抑郁症的自我评估&#34;&gt;第二章 抑郁症的自我评估&lt;/h3&gt;
&lt;h4 id=&#34;抑郁问卷&#34;&gt;抑郁问卷&lt;/h4&gt;
&lt;h2 id=&#34;第二部分-识别你的想法&#34;&gt;第二部分 识别你的想法&lt;/h2&gt;
&lt;h3 id=&#34;第三章-换个角度思考&#34;&gt;第三章 换个角度思考&lt;/h3&gt;
&lt;h4 id=&#34;你的想法并非完全可信&#34;&gt;你的想法并非完全可信&lt;/h4&gt;
&lt;h4 id=&#34;认知歪曲&#34;&gt;认知歪曲&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我们的大脑是一台高效的消极思维生产机器，但值得庆幸的是，我们已经开始了解这台机器是如何运作的了。我们知道，消极思维是抑郁症的标志性症状，学会留意和识别消极思维是让我们感觉更好的第一步。情绪反应与想法直接相关，因此，如果我们能开始更多地意识到自身的想法，我们就能改变情绪反应。首先，我们只需要在想法出现后意识到它们。想法是我们的大脑不断生成的一闪而过的陈述、评价、图像、故事和记忆。你的大脑现在就在产生想法，此时此刻，你头脑里自动产生的想法是什么？
⏱ 2024-02-18 13:32:28 ^43914891-15-1287-1510&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;策略识别你的消极自动思维&#34;&gt;策略：识别你的消极自动思维&lt;/h4&gt;
&lt;h4 id=&#34;打破消极思维&#34;&gt;打破消极思维&lt;/h4&gt;
&lt;h4 id=&#34;策略识别你的思维错误&#34;&gt;策略：识别你的思维错误&lt;/h4&gt;
&lt;h4 id=&#34;策略检视消极思维&#34;&gt;策略：检视消极思维&lt;/h4&gt;
&lt;h4 id=&#34;策略平衡恐惧和预测&#34;&gt;策略：平衡恐惧和预测&lt;/h4&gt;
&lt;h3 id=&#34;第四章-改变内在信念&#34;&gt;第四章 改变内在信念&lt;/h3&gt;
&lt;h4 id=&#34;你的内在信念是什么&#34;&gt;你的内在信念是什么&lt;/h4&gt;
&lt;h4 id=&#34;策略识别你的信念&#34;&gt;策略：识别你的信念&lt;/h4&gt;
&lt;h4 id=&#34;策略走出如果那么陷阱&#34;&gt;策略：走出“如果/那么”陷阱&lt;/h4&gt;
&lt;h4 id=&#34;改变你的信念&#34;&gt;改变你的信念&lt;/h4&gt;
&lt;h4 id=&#34;策略用证据挑战内在信念&#34;&gt;策略：用证据挑战内在信念&lt;/h4&gt;
&lt;h4 id=&#34;策略用实验挑战内在信念和规则&#34;&gt;策略：用实验挑战内在信念和规则&lt;/h4&gt;
&lt;h2 id=&#34;第三部分-与感受建立联系&#34;&gt;第三部分 与感受建立联系&lt;/h2&gt;
&lt;h3 id=&#34;第五章-处理情绪&#34;&gt;第五章 处理情绪&lt;/h3&gt;
&lt;h4 id=&#34;认识情绪&#34;&gt;认识情绪&lt;/h4&gt;
&lt;h4 id=&#34;如何调节情绪&#34;&gt;如何调节情绪&lt;/h4&gt;
&lt;h4 id=&#34;策略标记情绪&#34;&gt;策略：标记情绪&lt;/h4&gt;
&lt;h4 id=&#34;策略情绪如何影响生活&#34;&gt;策略：情绪如何影响生活&lt;/h4&gt;
&lt;h4 id=&#34;策略停止让情绪反应驱动行为&#34;&gt;策略：停止让情绪反应驱动行为&lt;/h4&gt;
&lt;h3 id=&#34;第六章-正念&#34;&gt;第六章 正念&lt;/h3&gt;
&lt;h4 id=&#34;活在当下&#34;&gt;活在当下&lt;/h4&gt;
&lt;h4 id=&#34;策略短暂冥想正念呼吸&#34;&gt;策略：短暂冥想，正念呼吸&lt;/h4&gt;
&lt;h4 id=&#34;策略日常生活中的正念&#34;&gt;策略：日常生活中的正念&lt;/h4&gt;
&lt;h4 id=&#34;管理情绪&#34;&gt;管理情绪&lt;/h4&gt;
&lt;h4 id=&#34;策略4-7-8呼吸法&#34;&gt;策略：4-7-8呼吸法&lt;/h4&gt;
&lt;h4 id=&#34;策略身体扫描&#34;&gt;策略：身体扫描&lt;/h4&gt;
&lt;h2 id=&#34;第四部分-改变行为&#34;&gt;第四部分 改变行为&lt;/h2&gt;
&lt;h3 id=&#34;第七章-以目标为导向&#34;&gt;第七章 以目标为导向&lt;/h3&gt;
&lt;h4 id=&#34;设定目标&#34;&gt;设定目标&lt;/h4&gt;
&lt;h4 id=&#34;策略对你而言什么最重要&#34;&gt;策略：对你而言什么最重要&lt;/h4&gt;
&lt;h4 id=&#34;策略创建smart目标&#34;&gt;策略：创建SMART目标&lt;/h4&gt;
&lt;h4 id=&#34;摆脱困境&#34;&gt;摆脱困境&lt;/h4&gt;
&lt;h4 id=&#34;策略克服目标障碍&#34;&gt;策略：克服目标障碍&lt;/h4&gt;
&lt;h3 id=&#34;第八章-从现在开始行动&#34;&gt;第八章 从现在开始行动&lt;/h3&gt;
&lt;h4 id=&#34;激活你的生活&#34;&gt;激活你的生活&lt;/h4&gt;
&lt;h4 id=&#34;策略制订令自己愉悦的活动计划&#34;&gt;策略：制订令自己愉悦的活动计划&lt;/h4&gt;
&lt;h4 id=&#34;策略减少或取消让你感觉更糟的活动&#34;&gt;策略：减少或取消让你感觉更糟的活动&lt;/h4&gt;
&lt;h4 id=&#34;策略任务分解&#34;&gt;策略：任务分解&lt;/h4&gt;
&lt;h4 id=&#34;战胜拖延&#34;&gt;战胜拖延&lt;/h4&gt;
&lt;h4 id=&#34;策略拖延应对策略检查&#34;&gt;策略：拖延应对策略检查&lt;/h4&gt;
&lt;h4 id=&#34;策略为高效工作做准备&#34;&gt;策略：为高效工作做准备&lt;/h4&gt;
&lt;h2 id=&#34;第五部分-继续前行&#34;&gt;第五部分 继续前行&lt;/h2&gt;
&lt;h3 id=&#34;第九章-善待自己&#34;&gt;第九章 善待自己&lt;/h3&gt;
&lt;h4 id=&#34;自我照顾&#34;&gt;自我照顾&lt;/h4&gt;
&lt;h4 id=&#34;自我关怀&#34;&gt;自我关怀&lt;/h4&gt;
&lt;h3 id=&#34;第十章-持之以恒&#34;&gt;第十章 持之以恒&lt;/h3&gt;
&lt;h4 id=&#34;勇往直前&#34;&gt;勇往直前&lt;/h4&gt;
&lt;h4 id=&#34;坚持到底&#34;&gt;坚持到底&lt;/h4&gt;
&lt;h4 id=&#34;我还能去哪里寻求帮助&#34;&gt;我还能去哪里寻求帮助&lt;/h4&gt;
&lt;h2 id=&#34;附录-思维记录&#34;&gt;附录 思维记录&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%90%9E%E5%AE%9A%E6%97%A0%E5%8E%8B%E5%B7%A5%E4%BD%9C%E7%9A%84%E8%89%BA%E6%9C%AF/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%90%9E%E5%AE%9A%E6%97%A0%E5%8E%8B%E5%B7%A5%E4%BD%9C%E7%9A%84%E8%89%BA%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 搞定Ⅰ：无压工作的艺术&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/34/YueWen_848152/t7_YueWen_848152.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 搞定Ⅰ：无压工作的艺术|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 搞定Ⅰ：无压工作的艺术&lt;/li&gt;
&lt;li&gt;作者： 戴维·艾伦&lt;/li&gt;
&lt;li&gt;简介： 戴维·艾伦的《搞定(Ⅰ无压工作的艺术最新版)》(Getting things Done)已经成为时间管理领域最具影响力的著作之一，书中介绍的GTD(Getting Things Done)时间管理方法也成为全球千万读者用来轻松高效完成工作与个人事务的最佳工具。GTD看似简单易行，其背后却有深刻的洞见： 原则：有效地处理内心的承诺。原则一：养成收集待办事项的习惯。原则二：确定下一步行动。原则三：学会关注结果。 目标：解除你精神上的负担，并把事情做好。只有轻松，才能高效。 最重要的技巧：把一切事务赶出大脑。如果一件事情总占据着你的头脑，你的思维就会受阻。 自下而上的方法：先琐事，再理想。当底层的具体事务得到及时处理后，你也就为更高一级的思维活动做好了准备。 时间管理的本质，是管理我们的心智和行动!&lt;/li&gt;
&lt;li&gt;出版时间 2016-05-04 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787508654799&lt;/li&gt;
&lt;li&gt;分类： 个人成长-人在职场&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/c0e328b05cf118c0e998aee&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;序言&#34;&gt;序言&lt;/h2&gt;
&lt;h2 id=&#34;最新版介绍&#34;&gt;最新版介绍&lt;/h2&gt;
&lt;h2 id=&#34;搞定欢迎你&#34;&gt;《搞定》欢迎你&lt;/h2&gt;
&lt;h2 id=&#34;part1-搞定通向从容之道&#34;&gt;PART1 搞定：通向从容之道&lt;/h2&gt;
&lt;h3 id=&#34;第1章-新情况新做法&#34;&gt;第1章 新情况，新做法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我们反省一下，如果你在任何情况下、任何时间内都能够随心所欲地控制自己的一切事务，情况会是怎么样呢？如果你的内心世界非常清澈，感受不到任何压力，情况会是怎么样？如果你能够把100%的精力投入到自己选择的工作中而不受任何外界的干扰，情形又会是怎么样呢？
如
⏱ 2019-08-30 19:34:59 ^848152-7-8138-8320&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不能处理好自己的电子邮件、项目、未读的杂志、关于下一步行动的思考、与孩子或者老板的关系，都可能导致比预期差得多的结果。很多人对于一些事情，要么给予过分的关注，要么不屑一顾，这仅仅是因为他们无法做到“心如止水”地行事。
⏱ 2019-08-30 19:37:58 ^848152-7-9872-10014&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 持续不断且毫无成效地深陷于我们不得不处理的事务当中，是对时间和精力的最大浪费。
⏱ 2019-08-30 20:27:24 ^848152-7-14572-14645&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 许多人的脑子里总在接连不断地放电影，特别是当我们谈到有许多事要处理时，这种现象会更加严重。人们把许许多多悬而未决的问题委托给大脑来处理，但你的大脑却无法有效处理它们。研究现已证明，你的大脑会不由自主地帮你记录所有的未尽事宜，即便大脑记住了所有未尽事宜，它也不会（像最初设想的那样）主动给你准确的提醒，反而会给你希望思考的其他事项带来干扰，继而会降低你的工作效率。
⏱ 2019-08-30 20:29:17 ^848152-7-15626-15841&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 然而，在你达到这个境界之前，你首先需要培养一个习惯：清除大脑中的全部事务。
⏱ 2019-08-30 20:32:52 ^848152-7-17432-17469&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 很多人终日忙忙碌碌，大脑的存储空间早已不堪重负。他们时常感到心神不宁、坐卧不安、执行能力减弱，这是因为在他们内心深处，超负荷的精神负担无时无刻不在侵扰他们的注意力。现在，认知科学方面的最新研究已经证实了这个结论。研究表明，因为缺乏可信赖的任务解决计划或系统，努力跟进我们承诺完成的事务会让精神不堪重负，并使得我们的思维过程受阻。
⏱ 2019-08-30 20:46:40 ^848152-7-22163-22356&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第2章-掌控生活横向管理工作流程的5个步骤&#34;&gt;第2章 掌控生活：横向管理工作流程的5个步骤&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 许多人收集了大量信息，但未能真正理清其中的内涵，也没能对于采取何种针对性行动（如果必要的话）做出决定。随处可见的随机清单，会议记录，以及贴在冰箱上、显示在电脑屏幕上或数字设备“任务”功能项下含糊的项目清单，实际上，这些清单上的待办事项并未付诸行动，并且会使人们变得麻木。这些清单本身制造的压力往往超过它们所能缓解的压力
⏱ 2019-08-30 21:14:58 ^848152-8-1923-2082&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我们在这一阶段所要做的，正是要确保一切必要的事情统统得以收集，并且存储在你大脑之外的某个地方。
⏱ 2019-08-31 05:51:37 ^848152-8-4636-4717&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 千万不要把它丢弃，或者再次放回到工作篮中去！不清理你的工作篮，简直就和不倒垃圾桶和不处理邮箱一样——你只能不断购买新的容器，来盛放那些新产生的垃圾。
⏱ 2019-08-31 05:56:30 ^848152-8-8126-8229&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第3章-控制项目纵向管理项目的5个阶段&#34;&gt;第3章 控制项目：纵向管理项目的5个阶段&lt;/h3&gt;
&lt;h2 id=&#34;part2-远离压力提高效率&#34;&gt;PART2 远离压力，提高效率&lt;/h2&gt;
&lt;h3 id=&#34;第4章-准备工作确定时间空间和工具&#34;&gt;第4章 准备工作：确定时间、空间和工具&lt;/h3&gt;
&lt;h3 id=&#34;第5章-收集阶段归拢材料&#34;&gt;第5章 收集阶段：归拢材料&lt;/h3&gt;
&lt;h3 id=&#34;第6章-理清阶段清空工作篮&#34;&gt;第6章 理清阶段：清空工作篮&lt;/h3&gt;
&lt;h3 id=&#34;第7章-组织整理建立好清单&#34;&gt;第7章 组织整理：建立好清单&lt;/h3&gt;
&lt;h3 id=&#34;第8章-回顾阶段保障系统的有效运行&#34;&gt;第8章 回顾阶段：保障系统的有效运行&lt;/h3&gt;
&lt;h3 id=&#34;第9章-执行阶段选择最合适的行动&#34;&gt;第9章 执行阶段：选择最合适的行动&lt;/h3&gt;
&lt;h3 id=&#34;第10章-学会控制项目&#34;&gt;第10章 学会控制项目&lt;/h3&gt;
&lt;h2 id=&#34;part3-三个关键原则&#34;&gt;PART3 三个关键原则&lt;/h2&gt;
&lt;h3 id=&#34;第11章-原则一养成收集的习惯&#34;&gt;第11章 原则一：养成收集的习惯&lt;/h3&gt;
&lt;h3 id=&#34;第12章-原则二确定下一步行动&#34;&gt;第12章 原则二：确定“下一步行动”&lt;/h3&gt;
&lt;h3 id=&#34;第13章-原则三学会关注结果&#34;&gt;第13章 原则三：学会关注结果&lt;/h3&gt;
&lt;h3 id=&#34;第14章-gtd和认知科学&#34;&gt;第14章 GTD和认知科学&lt;/h3&gt;
&lt;h3 id=&#34;第15章-gtd精进之路&#34;&gt;第15章 GTD精进之路&lt;/h3&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;h2 id=&#34;邀请函&#34;&gt;邀请函&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%91%84%E5%BD%B1%E6%9B%9D%E5%85%89%E4%B8%8E%E7%94%A8%E5%85%89%E8%B6%85%E6%98%93%E4%B8%8A%E6%89%8B%E6%8B%8D%E5%87%BA%E7%BE%8E%E7%85%A7%E7%9A%84180%E4%B8%AA%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%91%84%E5%BD%B1%E6%9B%9D%E5%85%89%E4%B8%8E%E7%94%A8%E5%85%89%E8%B6%85%E6%98%93%E4%B8%8A%E6%89%8B%E6%8B%8D%E5%87%BA%E7%BE%8E%E7%85%A7%E7%9A%84180%E4%B8%AA%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 摄影曝光与用光超易上手：拍出美照的180个实用技巧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/9/YueWen_34355047/t7_YueWen_34355047.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 摄影曝光与用光超易上手：拍出美照的180个实用技巧|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 摄影曝光与用光超易上手：拍出美照的180个实用技巧&lt;/li&gt;
&lt;li&gt;作者： 雷波&lt;/li&gt;
&lt;li&gt;简介： 在学习用光之前，曝光是必修的功课。因为无论光影细节多么唯美的场景，曝光不正确，依然拍不出一张好照片。因此，在书中的基础部分内容和实战技法内容中，均同时包含曝光与用光的相关内容。曝光控制画面亮度，用光则是为了控制画面的明暗分布。而本书最大的亮点，则在于实战技法部分中，从人像、风光、建筑等6 大题材中总结出了180个曝光与用光技巧。通过大量的实例，培养读者对于不同方向、不同时间、不同性质光线的感觉，从而在实际拍摄中，能够通过预期效果，确定合理的曝光以及用光方法。此外，为了拓展图书内容，本书添加了35个视频二维码，总时长达300分钟，这些视频补充讲解了摄影用光理论、实战等方面知识，提高了学习效率。&lt;/li&gt;
&lt;li&gt;出版时间 2020-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787122363442&lt;/li&gt;
&lt;li&gt;分类： 科学技术-工业技术&lt;/li&gt;
&lt;li&gt;出版社： 化学工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/88a32ae0720c376788aa511&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;第1章-曝光对画面的影响&#34;&gt;第1章 曝光对画面的影响&lt;/h2&gt;
&lt;h3 id=&#34;什么是曝光&#34;&gt;什么是曝光&lt;/h3&gt;
&lt;h3 id=&#34;什么是曝光三要素&#34;&gt;什么是曝光三要素&lt;/h3&gt;
&lt;h3 id=&#34;曝光三要素之光圈&#34;&gt;曝光三要素之光圈&lt;/h3&gt;
&lt;h3 id=&#34;曝光三要素之快门&#34;&gt;曝光三要素之快门&lt;/h3&gt;
&lt;h3 id=&#34;曝光三要素之感光度&#34;&gt;曝光三要素之感光度&lt;/h3&gt;
&lt;h3 id=&#34;没有正确的曝光只有合适的曝光&#34;&gt;没有正确的曝光，只有合适的曝光&lt;/h3&gt;
&lt;h2 id=&#34;第2章-掌握控制曝光的方法&#34;&gt;第2章 掌握控制曝光的方法&lt;/h2&gt;
&lt;h3 id=&#34;选择合适的曝光模式控制曝光&#34;&gt;选择合适的曝光模式控制曝光&lt;/h3&gt;
&lt;h3 id=&#34;利用曝光补偿功能调整画面亮度&#34;&gt;利用曝光补偿功能调整画面亮度&lt;/h3&gt;
&lt;h3 id=&#34;选择正确的测光模式&#34;&gt;选择正确的测光模式&lt;/h3&gt;
&lt;h2 id=&#34;第3章-认识光线&#34;&gt;第3章 认识光线&lt;/h2&gt;
&lt;h3 id=&#34;光线的种类&#34;&gt;光线的种类&lt;/h3&gt;
&lt;h3 id=&#34;光线的性质&#34;&gt;光线的性质&lt;/h3&gt;
&lt;h3 id=&#34;光线的方向&#34;&gt;光线的方向&lt;/h3&gt;
&lt;h3 id=&#34;光线与影调&#34;&gt;光线与影调&lt;/h3&gt;
&lt;h2 id=&#34;第4章-光线的基本应用方法&#34;&gt;第4章 光线的基本应用方法&lt;/h2&gt;
&lt;h3 id=&#34;利用自然光&#34;&gt;利用自然光&lt;/h3&gt;
&lt;h3 id=&#34;利用人造光&#34;&gt;利用人造光&lt;/h3&gt;
&lt;h2 id=&#34;第5章-人像曝光与用光实战技巧47招&#34;&gt;第5章 人像曝光与用光实战技巧47招&lt;/h2&gt;
&lt;h3 id=&#34;技巧1-美化人物肌肤的顺光&#34;&gt;技巧1 美化人物肌肤的顺光&lt;/h3&gt;
&lt;h3 id=&#34;技巧2-展现人物轮廓的侧逆光&#34;&gt;技巧2 展现人物轮廓的侧逆光&lt;/h3&gt;
&lt;h3 id=&#34;技巧3-表现人物立体感的前侧光&#34;&gt;技巧3 表现人物立体感的前侧光&lt;/h3&gt;
&lt;h3 id=&#34;技巧4-强调人物形体的逆光&#34;&gt;技巧4 强调人物形体的逆光&lt;/h3&gt;
&lt;h3 id=&#34;技巧5-利用顶光突出表现人物发质&#34;&gt;技巧5 利用顶光突出表现人物发质&lt;/h3&gt;
&lt;h3 id=&#34;技巧6-低调画面表现人物的神秘感&#34;&gt;技巧6 低调画面表现人物的神秘感&lt;/h3&gt;
&lt;h3 id=&#34;技巧7-中间调画面是最具真实感的人像画面&#34;&gt;技巧7 中间调画面是最具真实感的人像画面&lt;/h3&gt;
&lt;h3 id=&#34;技巧8-高调画面表现女性的柔美&#34;&gt;技巧8 高调画面表现女性的柔美&lt;/h3&gt;
&lt;h3 id=&#34;技巧9-清爽的冷调人像画面&#34;&gt;技巧9 清爽的冷调人像画面&lt;/h3&gt;
&lt;h3 id=&#34;技巧10-温馨的暖调人像画面&#34;&gt;技巧10 温馨的暖调人像画面&lt;/h3&gt;
&lt;h3 id=&#34;技巧11-利用反光板对人物暗部进行补光&#34;&gt;技巧11 利用反光板对人物暗部进行补光&lt;/h3&gt;
&lt;h3 id=&#34;技巧12-利用反射光拍摄柔美人像&#34;&gt;技巧12 利用反射光拍摄柔美人像&lt;/h3&gt;
&lt;h3 id=&#34;技巧13-通过对准人脸测光表现精致细腻的面部肌肤&#34;&gt;技巧13 通过对准人脸测光表现精致、细腻的面部肌肤&lt;/h3&gt;
&lt;h3 id=&#34;技巧14-增加曝光补偿让画面更干净&#34;&gt;技巧14 增加曝光补偿让画面更干净&lt;/h3&gt;
&lt;h3 id=&#34;技巧15-水边拍摄人像时避免水面强烈反光&#34;&gt;技巧15 水边拍摄人像时避免水面强烈反光&lt;/h3&gt;
&lt;h3 id=&#34;技巧16-清晨和傍晚的光线更适合拍人像&#34;&gt;技巧16 清晨和傍晚的光线更适合拍人像&lt;/h3&gt;
&lt;h3 id=&#34;技巧17-利用散射光表现人物娇嫩的肤质&#34;&gt;技巧17 利用散射光表现人物娇嫩的肤质&lt;/h3&gt;
&lt;h3 id=&#34;技巧18-避免直射光下拍摄人像&#34;&gt;技巧18 避免直射光下拍摄人像&lt;/h3&gt;
&lt;h3 id=&#34;技巧19-日落时分拍摄层次丰富的人像画面&#34;&gt;技巧19 日落时分拍摄层次丰富的人像画面&lt;/h3&gt;
&lt;h3 id=&#34;技巧20-选择阴天拍摄优雅气质的人像&#34;&gt;技巧20 选择阴天拍摄优雅气质的人像&lt;/h3&gt;
&lt;h3 id=&#34;技巧21-利用光晕营造人像画面浪漫气氛&#34;&gt;技巧21 利用光晕营造人像画面浪漫气氛&lt;/h3&gt;
&lt;h3 id=&#34;技巧22-利用大光圈表现迷幻光斑的夜景人像&#34;&gt;技巧22 利用大光圈表现迷幻光斑的夜景人像&lt;/h3&gt;
&lt;h3 id=&#34;技巧23-利用窗帘改变窗外光线的通光量&#34;&gt;技巧23 利用窗帘改变窗外光线的通光量&lt;/h3&gt;
&lt;h3 id=&#34;技巧24-改变拍摄方向控制窗外光线&#34;&gt;技巧24 改变拍摄方向控制窗外光线&lt;/h3&gt;
&lt;h3 id=&#34;技巧25-利用窗帘为光线做柔化效果&#34;&gt;技巧25 利用窗帘为光线做柔化效果&lt;/h3&gt;
&lt;h3 id=&#34;技巧26-配合辅助光源更好地利用窗光&#34;&gt;技巧26 配合辅助光源更好地利用窗光&lt;/h3&gt;
&lt;h3 id=&#34;技巧27-眼神光表现方法&#34;&gt;技巧27 眼神光表现方法&lt;/h3&gt;
&lt;h3 id=&#34;技巧28-局域光表现方法&#34;&gt;技巧28 局域光表现方法&lt;/h3&gt;
&lt;h3 id=&#34;技巧29-利用斑驳的光影拍摄有年代感的照片&#34;&gt;技巧29 利用斑驳的光影拍摄有年代感的照片&lt;/h3&gt;
&lt;h3 id=&#34;技巧30-利用闪光灯缩小直射光线的反差&#34;&gt;技巧30 利用闪光灯缩小直射光线的反差&lt;/h3&gt;
&lt;h3 id=&#34;技巧31-利用闪光灯突出弱光中的人物&#34;&gt;技巧31 利用闪光灯突出弱光中的人物&lt;/h3&gt;
&lt;h3 id=&#34;技巧32-利用闪光灯提高画面亮度表现白皙的皮肤&#34;&gt;技巧32 利用闪光灯提高画面亮度表现白皙的皮肤&lt;/h3&gt;
&lt;h3 id=&#34;技巧33-利用离机闪光营造不同方向光线&#34;&gt;技巧33 利用离机闪光营造不同方向光线&lt;/h3&gt;
&lt;h3 id=&#34;技巧34-使用自带配件柔化外置闪光灯&#34;&gt;技巧34 使用自带配件柔化外置闪光灯&lt;/h3&gt;
&lt;h3 id=&#34;技巧35-使用柔光罩柔化外置闪光灯&#34;&gt;技巧35 使用柔光罩柔化外置闪光灯&lt;/h3&gt;
&lt;h3 id=&#34;技巧36-利用跳闪方式柔化光线&#34;&gt;技巧36 利用跳闪方式柔化光线&lt;/h3&gt;
&lt;h3 id=&#34;技巧37-利用柔光镜拍摄柔美的人像照片&#34;&gt;技巧37 利用柔光镜拍摄柔美的人像照片&lt;/h3&gt;
&lt;h3 id=&#34;技巧38-利用脚光减弱画面阴影&#34;&gt;技巧38 利用脚光减弱画面阴影&lt;/h3&gt;
&lt;h3 id=&#34;技巧39-利用背景光突出人物&#34;&gt;技巧39 利用背景光突出人物&lt;/h3&gt;
&lt;h3 id=&#34;技巧40-利用背景光消除影子&#34;&gt;技巧40 利用背景光消除影子&lt;/h3&gt;
&lt;h3 id=&#34;技巧41-利用修饰光增添细节美&#34;&gt;技巧41 利用修饰光增添细节美&lt;/h3&gt;
&lt;h3 id=&#34;技巧42-棚拍人像侧位单灯打硬光&#34;&gt;技巧42 棚拍人像——侧位单灯打硬光&lt;/h3&gt;
&lt;h3 id=&#34;技巧43-棚拍人像高位侧灯加反光板&#34;&gt;技巧43 棚拍人像——高位侧灯加反光板&lt;/h3&gt;
&lt;h3 id=&#34;技巧44-棚拍人像双灯加柔光箱打平光&#34;&gt;技巧44 棚拍人像——双灯加柔光箱打平光&lt;/h3&gt;
&lt;h3 id=&#34;技巧45-棚拍人像主光辅光轮廓光&#34;&gt;技巧45 棚拍人像——主光+辅光+轮廓光&lt;/h3&gt;
&lt;h3 id=&#34;技巧46-棚拍人像主光反光板背景光&#34;&gt;技巧46 棚拍人像——主光+反光板+背景光&lt;/h3&gt;
&lt;h3 id=&#34;技巧47-棚拍人像主光辅光双背景光&#34;&gt;技巧47 棚拍人像——主光+辅光+双背景光&lt;/h3&gt;
&lt;h2 id=&#34;第6章-风光曝光与用光实战技巧56招&#34;&gt;第6章 风光曝光与用光实战技巧56招&lt;/h2&gt;
&lt;h3 id=&#34;山景&#34;&gt;山景&lt;/h3&gt;
&lt;h4 id=&#34;技巧49-逆光呈现山体剪影效果&#34;&gt;技巧49 逆光呈现山体剪影效果&lt;/h4&gt;
&lt;h4 id=&#34;技巧50-利用侧逆光表现山体的光线透视感&#34;&gt;技巧50 利用侧逆光表现山体的光线透视感&lt;/h4&gt;
&lt;h4 id=&#34;技巧51-利用夕阳时分的侧光使色彩更丰富&#34;&gt;技巧51 利用夕阳时分的侧光使色彩更丰富&lt;/h4&gt;
&lt;h4 id=&#34;技巧52-在上午或下午拍摄日照银山效果&#34;&gt;技巧52 在上午或下午拍摄日照银山效果&lt;/h4&gt;
&lt;h4 id=&#34;技巧53-运用局部光线拍摄山川&#34;&gt;技巧53 运用局部光线拍摄山川&lt;/h4&gt;
&lt;h4 id=&#34;技巧54-在日出时分拍摄日照金山效果&#34;&gt;技巧54 在日出时分拍摄日照金山效果&lt;/h4&gt;
&lt;h3 id=&#34;水景&#34;&gt;水景&lt;/h3&gt;
&lt;h4 id=&#34;技巧56-利用晨光拍摄冷调水景&#34;&gt;技巧56 利用晨光拍摄冷调水景&lt;/h4&gt;
&lt;h4 id=&#34;技巧57-利用侧光表现沙滩的质感&#34;&gt;技巧57 利用侧光表现沙滩的质感&lt;/h4&gt;
&lt;h4 id=&#34;技巧58-晴朗天气拍摄清澈见底的水景效果&#34;&gt;技巧58 晴朗天气拍摄清澈见底的水景效果&lt;/h4&gt;
&lt;h4 id=&#34;技巧59-延长曝光时间拍摄丝滑水流&#34;&gt;技巧59 延长曝光时间拍摄丝滑水流&lt;/h4&gt;
&lt;h4 id=&#34;技巧60-高速快门抓拍海浪拍打岩石的瞬间&#34;&gt;技巧60 高速快门抓拍海浪拍打岩石的瞬间&lt;/h4&gt;
&lt;h4 id=&#34;技巧61-通过包围曝光拍摄大光比水景&#34;&gt;技巧61 通过包围曝光拍摄大光比水景&lt;/h4&gt;
&lt;h3 id=&#34;日出日落&#34;&gt;日出日落&lt;/h3&gt;
&lt;h4 id=&#34;技巧63-利用剪影使画面简洁明快&#34;&gt;技巧63 利用剪影使画面简洁、明快&lt;/h4&gt;
&lt;h4 id=&#34;技巧64-使用点测光对太阳周围进行测光&#34;&gt;技巧64 使用点测光对太阳周围进行测光&lt;/h4&gt;
&lt;h4 id=&#34;技巧65-随时间的推移调整曝光量&#34;&gt;技巧65 随时间的推移调整曝光量&lt;/h4&gt;
&lt;h3 id=&#34;云雾&#34;&gt;云雾&lt;/h3&gt;
&lt;h4 id=&#34;技巧67-巧用曝光补偿拍摄迷幻的雾景&#34;&gt;技巧67 巧用曝光补偿拍摄迷幻的雾景&lt;/h4&gt;
&lt;h4 id=&#34;技巧68-拍摄云海中日出日落的震撼效果&#34;&gt;技巧68 拍摄云海中日出日落的震撼效果&lt;/h4&gt;
&lt;h4 id=&#34;技巧69-根据云层预估曝光时间&#34;&gt;技巧69 根据云层预估曝光时间&lt;/h4&gt;
&lt;h4 id=&#34;技巧70-用一抹光表现乌云压顶的压迫感&#34;&gt;技巧70 用“一抹光”表现乌云压顶的压迫感&lt;/h4&gt;
&lt;h4 id=&#34;技巧71-适当降低曝光补偿表现云彩&#34;&gt;技巧71 适当降低曝光补偿表现云彩&lt;/h4&gt;
&lt;h4 id=&#34;技巧72-偏振镜增加云彩立体感及饱和度&#34;&gt;技巧72 偏振镜增加云彩立体感及饱和度&lt;/h4&gt;
&lt;h4 id=&#34;技巧73-利用逆光塑造云彩的亮边轮廓&#34;&gt;技巧73 利用逆光塑造云彩的亮边轮廓&lt;/h4&gt;
&lt;h4 id=&#34;技巧74-低速快门拍出云彩的流动感&#34;&gt;技巧74 低速快门拍出云彩的流动感&lt;/h4&gt;
&lt;h3 id=&#34;雪景&#34;&gt;雪景&lt;/h3&gt;
&lt;h4 id=&#34;技巧76-侧逆光表现晶莹的冰雪&#34;&gt;技巧76 侧逆光表现晶莹的冰雪&lt;/h4&gt;
&lt;h4 id=&#34;技巧77-侧光表现雪地层次&#34;&gt;技巧77 侧光表现雪地层次&lt;/h4&gt;
&lt;h4 id=&#34;技巧78-利用阴影表现雪地的质感&#34;&gt;技巧78 利用阴影表现雪地的质感&lt;/h4&gt;
&lt;h4 id=&#34;技巧79-利用偏振镜表现雪景中的蓝天&#34;&gt;技巧79 利用偏振镜表现雪景中的蓝天&lt;/h4&gt;
&lt;h4 id=&#34;技巧80-消除雪地反光的技巧&#34;&gt;技巧80 消除雪地反光的技巧&lt;/h4&gt;
&lt;h4 id=&#34;技巧81-利用日出前的光线拍摄蓝调雪景&#34;&gt;技巧81 利用日出前的光线拍摄蓝调雪景&lt;/h4&gt;
&lt;h4 id=&#34;技巧82-利用日落逆光拍摄金色雪原&#34;&gt;技巧82 利用日落逆光拍摄金色雪原&lt;/h4&gt;
&lt;h4 id=&#34;技巧83-日落后拍出神秘幽静的紫色雪景&#34;&gt;技巧83 日落后拍出神秘幽静的紫色雪景&lt;/h4&gt;
&lt;h4 id=&#34;技巧84-利用散射光拍摄高调雪景&#34;&gt;技巧84 利用散射光拍摄高调雪景&lt;/h4&gt;
&lt;h3 id=&#34;夜景&#34;&gt;夜景&lt;/h3&gt;
&lt;h4 id=&#34;技巧86-慢门表现流光飞舞的车流光轨&#34;&gt;技巧86 慢门表现流光飞舞的车流光轨&lt;/h4&gt;
&lt;h4 id=&#34;技巧87-小光圈表现点点灯光&#34;&gt;技巧87 小光圈表现点点灯光&lt;/h4&gt;
&lt;h4 id=&#34;技巧88-利用低速快门保证足够的进光量&#34;&gt;技巧88 利用低速快门保证足够的进光量&lt;/h4&gt;
&lt;h4 id=&#34;技巧89-拍摄蓝调天空的夜景&#34;&gt;技巧89 拍摄蓝调天空的夜景&lt;/h4&gt;
&lt;h4 id=&#34;技巧90-拍摄奇幻的放射状夜景&#34;&gt;技巧90 拍摄奇幻的放射状夜景&lt;/h4&gt;
&lt;h4 id=&#34;技巧91-使用大光圈展现迷幻的城市光点&#34;&gt;技巧91 使用大光圈展现迷幻的城市光点&lt;/h4&gt;
&lt;h4 id=&#34;技巧92-利用双重曝光拍摄皓月当空&#34;&gt;技巧92 利用双重曝光拍摄皓月当空&lt;/h4&gt;
&lt;h4 id=&#34;技巧93-利用蓝色天空衬托出黄色月亮&#34;&gt;技巧93 利用蓝色天空衬托出黄色月亮&lt;/h4&gt;
&lt;h4 id=&#34;技巧94-星野摄影的500法则&#34;&gt;技巧94 星野摄影的“500法则”&lt;/h4&gt;
&lt;h4 id=&#34;技巧95-慢门拍摄星光轨迹&#34;&gt;技巧95 慢门拍摄星光轨迹&lt;/h4&gt;
&lt;h3 id=&#34;热门景色&#34;&gt;热门景色&lt;/h3&gt;
&lt;h4 id=&#34;技巧97-利用渐变镜拍摄蓝天白云下的草原&#34;&gt;技巧97 利用渐变镜拍摄蓝天白云下的草原&lt;/h4&gt;
&lt;h4 id=&#34;技巧98-黄金时段拍摄唯美梯田&#34;&gt;技巧98 黄金时段拍摄唯美梯田&lt;/h4&gt;
&lt;h4 id=&#34;技巧99-运用光线凸显沙漠线条&#34;&gt;技巧99 运用光线凸显沙漠线条&lt;/h4&gt;
&lt;h4 id=&#34;技巧100-利用逆光拍摄沙漠剪影&#34;&gt;技巧100 利用逆光拍摄沙漠剪影&lt;/h4&gt;
&lt;h4 id=&#34;技巧101-拍摄低调画面表现沙漠的神秘感&#34;&gt;技巧101 拍摄低调画面表现沙漠的神秘感&lt;/h4&gt;
&lt;h4 id=&#34;技巧102-利用低角度光线表现小镇的静谧感&#34;&gt;技巧102 利用低角度光线表现小镇的静谧感&lt;/h4&gt;
&lt;h4 id=&#34;技巧103-降低曝光补偿让彩虹色彩更浓郁&#34;&gt;技巧103 降低曝光补偿让彩虹色彩更浓郁&lt;/h4&gt;
&lt;h2 id=&#34;第7章-建筑曝光与用光实战技巧14招&#34;&gt;第7章 建筑曝光与用光实战技巧14招&lt;/h2&gt;
&lt;h3 id=&#34;技巧104-利用前侧光突出建筑层次感&#34;&gt;技巧104 利用前侧光突出建筑层次感&lt;/h3&gt;
&lt;h3 id=&#34;技巧105-利用逆光拍摄建筑剪影&#34;&gt;技巧105 利用逆光拍摄建筑剪影&lt;/h3&gt;
&lt;h3 id=&#34;技巧106-降低曝光补偿表现建筑的年代感&#34;&gt;技巧106 降低曝光补偿表现建筑的年代感&lt;/h3&gt;
&lt;h3 id=&#34;技巧107-利用黄昏的光晕拍出建筑的气场&#34;&gt;技巧107 利用黄昏的光晕拍出建筑的气场&lt;/h3&gt;
&lt;h3 id=&#34;技巧108-利用斑驳的光影交错拍摄历史遗迹&#34;&gt;技巧108 利用斑驳的光影交错拍摄历史遗迹&lt;/h3&gt;
&lt;h3 id=&#34;技巧109-利用黄昏光线表现建筑的沧桑感&#34;&gt;技巧109 利用黄昏光线表现建筑的沧桑感&lt;/h3&gt;
&lt;h3 id=&#34;技巧110-通过强光比突出建筑的立体造型&#34;&gt;技巧110 通过强光比突出建筑的立体造型&lt;/h3&gt;
&lt;h3 id=&#34;技巧111-小光圈拍摄建筑还可以表现环境&#34;&gt;技巧111 小光圈拍摄建筑还可以表现环境&lt;/h3&gt;
&lt;h3 id=&#34;技巧112-硬光下的建筑层次分明&#34;&gt;技巧112 硬光下的建筑层次分明&lt;/h3&gt;
&lt;h3 id=&#34;技巧113-暖色调光线烘托建筑物的特色&#34;&gt;技巧113 暖色调光线烘托建筑物的特色&lt;/h3&gt;
&lt;h3 id=&#34;技巧114-散射光可突出建筑的厚重感&#34;&gt;技巧114 散射光可突出建筑的厚重感&lt;/h3&gt;
&lt;h3 id=&#34;技巧115-利用室内灯光拍摄建筑内部&#34;&gt;技巧115 利用室内灯光拍摄建筑内部&lt;/h3&gt;
&lt;h3 id=&#34;技巧116-利用反光表现建筑的现代感&#34;&gt;技巧116 利用反光表现建筑的现代感&lt;/h3&gt;
&lt;h3 id=&#34;技巧117-顺光表现建筑色彩&#34;&gt;技巧117 顺光表现建筑色彩&lt;/h3&gt;
&lt;h2 id=&#34;第8章-植物曝光与用光实战技巧26招&#34;&gt;第8章 植物曝光与用光实战技巧26招&lt;/h2&gt;
&lt;h3 id=&#34;树木&#34;&gt;树木&lt;/h3&gt;
&lt;h4 id=&#34;技巧119-利用点测光拍摄低调树叶画面&#34;&gt;技巧119 利用点测光拍摄低调树叶画面&lt;/h4&gt;
&lt;h4 id=&#34;技巧120-拍摄树影展现光影之美&#34;&gt;技巧120 拍摄树影展现光影之美&lt;/h4&gt;
&lt;h4 id=&#34;技巧121-利用散射光拍摄树林中梦幻的雾气&#34;&gt;技巧121 利用散射光拍摄树林中梦幻的雾气&lt;/h4&gt;
&lt;h4 id=&#34;技巧122-利用逆光拍摄树木的剪影效果&#34;&gt;技巧122 利用逆光拍摄树木的剪影效果&lt;/h4&gt;
&lt;h4 id=&#34;技巧123-拍摄穿射林间的光线&#34;&gt;技巧123 拍摄穿射林间的光线&lt;/h4&gt;
&lt;h4 id=&#34;技巧124-增加曝光表现树木和天空&#34;&gt;技巧124 增加曝光表现树木和天空&lt;/h4&gt;
&lt;h3 id=&#34;花卉&#34;&gt;花卉&lt;/h3&gt;
&lt;h4 id=&#34;技巧126-利用暖调表现花卉祥和的一面&#34;&gt;技巧126 利用暖调表现花卉祥和的一面&lt;/h4&gt;
&lt;h4 id=&#34;技巧127-暗色背景拍摄花卉用点测光模式&#34;&gt;技巧127 暗色背景拍摄花卉用点测光模式&lt;/h4&gt;
&lt;h4 id=&#34;技巧128-逆光表现花卉的透明感与轮廓&#34;&gt;技巧128 逆光表现花卉的透明感与轮廓&lt;/h4&gt;
&lt;h4 id=&#34;技巧129-使用反光板为花卉补光&#34;&gt;技巧129 使用反光板为花卉补光&lt;/h4&gt;
&lt;h4 id=&#34;技巧130-利用逆光拍摄花卉上晶莹剔透的露珠&#34;&gt;技巧130 利用逆光拍摄花卉上晶莹剔透的露珠&lt;/h4&gt;
&lt;h4 id=&#34;技巧131-减少曝光使花卉色彩更浓郁&#34;&gt;技巧131 减少曝光使花卉色彩更浓郁&lt;/h4&gt;
&lt;h4 id=&#34;技巧132-用大光圈得到唯美的虚化效果&#34;&gt;技巧132 用大光圈得到唯美的虚化效果&lt;/h4&gt;
&lt;h4 id=&#34;技巧133-利用大光圈突出花朵的细节&#34;&gt;技巧133 利用大光圈突出花朵的细节&lt;/h4&gt;
&lt;h4 id=&#34;技巧134-小光圈拍摄大场面花朵&#34;&gt;技巧134 小光圈拍摄大场面花朵&lt;/h4&gt;
&lt;h4 id=&#34;技巧135-活用快门速度表现风中的花朵&#34;&gt;技巧135 活用快门速度表现风中的花朵&lt;/h4&gt;
&lt;h4 id=&#34;技巧136-顺光下的花卉色彩饱满&#34;&gt;技巧136 顺光下的花卉色彩饱满&lt;/h4&gt;
&lt;h4 id=&#34;技巧137-侧光突出花卉的立体感&#34;&gt;技巧137 侧光突出花卉的立体感&lt;/h4&gt;
&lt;h4 id=&#34;技巧138-拍摄黄色的花卉增加曝光补偿&#34;&gt;技巧138 拍摄黄色的花卉增加曝光补偿&lt;/h4&gt;
&lt;h4 id=&#34;技巧139-拍摄白色花卉增加曝光补偿&#34;&gt;技巧139 拍摄白色花卉增加曝光补偿&lt;/h4&gt;
&lt;h4 id=&#34;技巧140-细腻的影调突出花卉的细节&#34;&gt;技巧140 细腻的影调突出花卉的细节&lt;/h4&gt;
&lt;h4 id=&#34;技巧141-利用偏振镜使花卉色彩更加纯净&#34;&gt;技巧141 利用偏振镜使花卉色彩更加纯净&lt;/h4&gt;
&lt;h4 id=&#34;技巧142-利用眩光得到更梦幻的花卉画面&#34;&gt;技巧142 利用眩光得到更梦幻的花卉画面&lt;/h4&gt;
&lt;h4 id=&#34;技巧143-散射光表现柔和的画面色彩&#34;&gt;技巧143 散射光表现柔和的画面色彩&lt;/h4&gt;
&lt;h2 id=&#34;第9章-动物曝光与用光实战技巧26招&#34;&gt;第9章 动物曝光与用光实战技巧26招&lt;/h2&gt;
&lt;h3 id=&#34;飞鸟&#34;&gt;飞鸟&lt;/h3&gt;
&lt;h4 id=&#34;技巧145-高速快门拍摄空中的飞鸟&#34;&gt;技巧145 高速快门拍摄空中的飞鸟&lt;/h4&gt;
&lt;h4 id=&#34;技巧146-侧光突出鸟类羽翼的层次&#34;&gt;技巧146 侧光突出鸟类羽翼的层次&lt;/h4&gt;
&lt;h4 id=&#34;技巧147-通过明暗对比突出光影中的鸟儿&#34;&gt;技巧147 通过明暗对比突出光影中的鸟儿&lt;/h4&gt;
&lt;h4 id=&#34;技巧148-大光比拍摄剪影的水鸟&#34;&gt;技巧148 大光比拍摄剪影的水鸟&lt;/h4&gt;
&lt;h4 id=&#34;技巧149-低调画面的飞鸟形式感很强&#34;&gt;技巧149 低调画面的飞鸟形式感很强&lt;/h4&gt;
&lt;h4 id=&#34;技巧150-拍摄天鹅的洁白&#34;&gt;技巧150 拍摄天鹅的洁白&lt;/h4&gt;
&lt;h3 id=&#34;走兽&#34;&gt;走兽&lt;/h3&gt;
&lt;h4 id=&#34;技巧152-大光圈突出动物局部&#34;&gt;技巧152 大光圈突出动物局部&lt;/h4&gt;
&lt;h4 id=&#34;技巧153-拍摄雪地中的动物增加曝光补偿&#34;&gt;技巧153 拍摄雪地中的动物增加曝光补偿&lt;/h4&gt;
&lt;h4 id=&#34;技巧154-营造眼神光表现动物的可爱&#34;&gt;技巧154 营造眼神光表现动物的可爱&lt;/h4&gt;
&lt;h4 id=&#34;技巧155-逆光表现动物的毛发&#34;&gt;技巧155 逆光表现动物的毛发&lt;/h4&gt;
&lt;h4 id=&#34;技巧156-拍摄小动物尽量不要开启闪光灯&#34;&gt;技巧156 拍摄小动物尽量不要开启闪光灯&lt;/h4&gt;
&lt;h4 id=&#34;技巧157-夕阳下逆光效果的马匹&#34;&gt;技巧157 夕阳下逆光效果的马匹&lt;/h4&gt;
&lt;h4 id=&#34;技巧158-侧光表现小猫的可爱&#34;&gt;技巧158 侧光表现小猫的可爱&lt;/h4&gt;
&lt;h4 id=&#34;技巧159-冷调拍出动物的艺术感&#34;&gt;技巧159 冷调拍出动物的艺术感&lt;/h4&gt;
&lt;h4 id=&#34;技巧160-暖调表现温馨的动物画面&#34;&gt;技巧160 暖调表现温馨的动物画面&lt;/h4&gt;
&lt;h4 id=&#34;技巧161-高调拍摄白色的小猫&#34;&gt;技巧161 高调拍摄白色的小猫&lt;/h4&gt;
&lt;h4 id=&#34;技巧162-中间调表现宠物的随和&#34;&gt;技巧162 中间调表现宠物的随和&lt;/h4&gt;
&lt;h3 id=&#34;昆虫&#34;&gt;昆虫&lt;/h3&gt;
&lt;h4 id=&#34;技巧164-利用低速快门虚化蝴蝶舞动的翅膀&#34;&gt;技巧164 利用低速快门虚化蝴蝶舞动的翅膀&lt;/h4&gt;
&lt;h4 id=&#34;技巧165-逆光下拍摄毛毛虫的轮廓光&#34;&gt;技巧165 逆光下拍摄毛毛虫的轮廓光&lt;/h4&gt;
&lt;h4 id=&#34;技巧166-逆光拍摄动物的半透明感&#34;&gt;技巧166 逆光拍摄动物的半透明感&lt;/h4&gt;
&lt;h4 id=&#34;技巧167-硬光表现瓢虫光滑的外壳&#34;&gt;技巧167 硬光表现瓢虫光滑的外壳&lt;/h4&gt;
&lt;h4 id=&#34;技巧168-利用高速快门捕捉空中飞舞的蜜蜂&#34;&gt;技巧168 利用高速快门捕捉空中飞舞的蜜蜂&lt;/h4&gt;
&lt;h4 id=&#34;技巧169-使用闪光灯为昆虫补光&#34;&gt;技巧169 使用闪光灯为昆虫补光&lt;/h4&gt;
&lt;h2 id=&#34;第10章-静物曝光与用光实战技巧11招&#34;&gt;第10章 静物曝光与用光实战技巧11招&lt;/h2&gt;
&lt;h3 id=&#34;技巧170-搭建便于布光的简易静物影棚&#34;&gt;技巧170 搭建便于布光的简易静物影棚&lt;/h3&gt;
&lt;h3 id=&#34;技巧171-利用布光制造不一样的画面气氛&#34;&gt;技巧171 利用布光制造不一样的画面气氛&lt;/h3&gt;
&lt;h3 id=&#34;技巧172-利用侧光表现物体质感&#34;&gt;技巧172 利用侧光表现物体质感&lt;/h3&gt;
&lt;h3 id=&#34;技巧173-拍摄发光物体适当减少曝光补偿&#34;&gt;技巧173 拍摄发光物体适当减少曝光补偿&lt;/h3&gt;
&lt;h3 id=&#34;技巧174-利用局部高光让背景富有变化&#34;&gt;技巧174 利用局部高光让背景富有变化&lt;/h3&gt;
&lt;h3 id=&#34;技巧175-逆光表现玻璃的透明感&#34;&gt;技巧175 逆光表现玻璃的透明感&lt;/h3&gt;
&lt;h3 id=&#34;技巧176-利用散射光表现物体颜色&#34;&gt;技巧176 利用散射光表现物体颜色&lt;/h3&gt;
&lt;h3 id=&#34;技巧177-利用不同颜色的光线营造气氛&#34;&gt;技巧177 利用不同颜色的光线营造气氛&lt;/h3&gt;
&lt;h3 id=&#34;技巧178-利用强光表现金属质感&#34;&gt;技巧178 利用强光表现金属质感&lt;/h3&gt;
&lt;h3 id=&#34;技巧179-利用高光表现物体的立体感&#34;&gt;技巧179 利用高光表现物体的立体感&lt;/h3&gt;
&lt;h3 id=&#34;技巧180-利用背景光营造画面氛围&#34;&gt;技巧180 利用背景光营造画面氛围&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;利用曝光补偿功能调整画面亮度-1&#34;&gt;利用曝光补偿功能调整画面亮度&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当增加一挡曝光时，要吸收更多的光线以提亮照片，例如，在光圈优先模式下，快门速度会降低一挡，以增加一倍的进光量；反之，曝光补偿减少一挡，由于照片整体变暗，因此，快门速度会提高一挡，以减少曝光时间，获得更暗的画面效果。  ^6733360-7MAGz8ebY
- 💭 曝光补偿通过变量影响曝光
- ⏱ 2023-11-09 11:54:05&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;技巧64-使用点测光对太阳周围进行测光-1&#34;&gt;技巧64 使用点测光对太阳周围进行测光&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 拍摄日出与日落时，较难掌握的是曝光控制。日出与日落时，天空和地面的亮度反差较大，如果对准太阳进行测光，太阳的层次和色彩虽然会有较好的表现，但会导致云彩、天空和地面上的景物曝光不足，呈现一片漆黑的景象；而对准地面景物进行测光，会导致太阳和周围的天空曝光过度，从而失去色彩和层次。
正确的曝光方法是使用点测光模式，对准太阳附近的天空进行测光，这样不会导致太阳曝光过度，并且天空中的云彩也有较好的表现。  ^6733360-7MAH7YW27
- 💭 大光比下可以取中间点测光
- ⏱ 2023-11-09 12:02:40&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;技巧80-消除雪地反光的技巧-1&#34;&gt;技巧80 消除雪地反光的技巧&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 所以拍摄时，要选择合适的角度，如逆光、侧逆光或侧光下，且太阳的角度又不太大时，雪花的冰晶由于背光无法反射强烈的光线，因此积雪表面才不至于特别耀眼，雪地的晶莹感和立体感才能充分地表现出来。
但逆光或侧光的光位较高，也不利于拍摄积雪景观。只有低位的逆光和侧光，才是拍摄积雪景观的理想光线，此时雪对光的反射角度偏小，光线显得柔和细腻，可使雪的质感增加，能充分表现雪的层次和细部，此时雪地上的景物常常拖着长长的投影，也可以丰富雪地的光影效果。  ^6733360-7MAHulGXB
- 💭 判断不同位置的光线强度，找到合适的质感进行拍摄，非常细腻
- ⏱ 2023-11-09 12:08:11&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%91%84%E5%BD%B1%E6%9B%9D%E5%85%89%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E5%BA%94%E7%94%A8/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%91%84%E5%BD%B1%E6%9B%9D%E5%85%89%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E5%BA%94%E7%94%A8/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 摄影曝光原理与实践应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/37/YueWen_22655171/t7_YueWen_22655171.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 摄影曝光原理与实践应用|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 摄影曝光原理与实践应用&lt;/li&gt;
&lt;li&gt;作者： 陈勤 曲阜贵&lt;/li&gt;
&lt;li&gt;简介： 本书是国内高等学校摄影、摄像、数字影像、动画、多媒体技术等专业课程主导教材，也可作为艺术设计、文秘旅游、建筑装潢、传媒策划、计算机信息等专业基础教材。本教材集中了有关摄影曝光控制的基本原理和实用技法，并结合影像专业教学的实践成果来著写。教材内容主要有摄影曝光概论、测光器材及操作、曝光控制技巧方法、人像、风光和花卉等实用曝光案例等,从基本原理到曝光思路、从测光数据到曝光实拍，从前期拍摄到后期调整等，都有简明精彩的介绍。本书可作为国内本科院校、高职高专院校、成人继续教育院校、职业中专学校的电影摄影、平面摄影、视频摄像、动画、数字影像等专业课程教材，也是影像爱好者用以自学和参考的重要书籍。&lt;/li&gt;
&lt;li&gt;出版时间 2017-09-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115464095&lt;/li&gt;
&lt;li&gt;分类： 科学技术-工业技术&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/a4732d907159b0c3a47e371&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;序&#34;&gt;序&lt;/h2&gt;
&lt;h2 id=&#34;第1章-关于摄影曝光&#34;&gt;第1章 关于摄影曝光&lt;/h2&gt;
&lt;h3 id=&#34;11-经验曝光阶段&#34;&gt;1.1 经验曝光阶段&lt;/h3&gt;
&lt;h3 id=&#34;12-科学曝光阶段&#34;&gt;1.2 科学曝光阶段&lt;/h3&gt;
&lt;h3 id=&#34;13-实时曝光阶段&#34;&gt;1.3 实时曝光阶段&lt;/h3&gt;
&lt;h2 id=&#34;第2章-基础知识&#34;&gt;第2章 基础知识&lt;/h2&gt;
&lt;h3 id=&#34;21-光的吸收反射和透射&#34;&gt;2.1 光的吸收、反射和透射&lt;/h3&gt;
&lt;h3 id=&#34;22-照度与亮度&#34;&gt;2.2 照度与亮度&lt;/h3&gt;
&lt;h3 id=&#34;23-感光成像原理&#34;&gt;2.3 感光成像原理&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  过亮部分雪白一片，过暗部分漆黑一片，两者都缺乏影像的层次和细节。 ^22655171-11-1976-2008&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 就是死黑或者死白 - ⏱ 2023-11-08 16:04:51&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第3章-曝光原理与条件&#34;&gt;第3章 曝光原理与条件&lt;/h2&gt;
&lt;h3 id=&#34;31-曝光原理与目的&#34;&gt;3.1 曝光原理与目的&lt;/h3&gt;
&lt;h3 id=&#34;32-决定曝光的主客观条件&#34;&gt;3.2 决定曝光的主、客观条件&lt;/h3&gt;
&lt;h3 id=&#34;33-感光特性&#34;&gt;3.3 感光特性&lt;/h3&gt;
&lt;h3 id=&#34;34-照相机曝光装置&#34;&gt;3.4 照相机曝光装置&lt;/h3&gt;
&lt;h3 id=&#34;35-曝光&#34;&gt;3.5 曝光&lt;/h3&gt;
&lt;h2 id=&#34;第4章-测光与曝光&#34;&gt;第4章 测光与曝光&lt;/h2&gt;
&lt;h3 id=&#34;41-物体反光率&#34;&gt;4.1 物体反光率&lt;/h3&gt;
&lt;h3 id=&#34;42-测光原理与测光装置&#34;&gt;4.2 测光原理与测光装置&lt;/h3&gt;
&lt;h3 id=&#34;43-曝光方法&#34;&gt;4.3 曝光方法&lt;/h3&gt;
&lt;h2 id=&#34;第5章-曝光要点与案例解析&#34;&gt;第5章 曝光要点与案例解析&lt;/h2&gt;
&lt;h3 id=&#34;51-曝光实操要点&#34;&gt;5.1 曝光实操要点&lt;/h3&gt;
&lt;h3 id=&#34;52-正确曝光与合适曝光&#34;&gt;5.2 正确曝光与合适曝光&lt;/h3&gt;
&lt;h3 id=&#34;53-真实案例解析&#34;&gt;5.3 真实案例解析&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;23-感光成像原理-1&#34;&gt;2.3 感光成像原理&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 过亮部分雪白一片，过暗部分漆黑一片，两者都缺乏影像的层次和细节。  ^6733360-7MzqHGDCD
- 💭 就是死黑或者死白
- ⏱ 2023-11-08 16:05:13&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;33-感光特性-1&#34;&gt;3.3 感光特性&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 宽容度  ^6733360-7MzJIKyiL
- 💭 可能和富士相机的动态范围有关系
- ⏱ 2023-11-08 20:55:35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;42-测光原理与测光装置-1&#34;&gt;4.2 测光原理与测光装置&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 无论是阳光普照的白天还是暗淡无光的夜晚，无论是黑白物体还是彩色物体，无论是用数码相机还是胶片相机，测光表都会将它所面对的被摄景物——无论是黑白灰还是红绿蓝，一律自动看待为灰色的景物，并以反光率为18%的中级灰为恒定标准（见图4-1a～图4-1b）。然后在这个18%灰色基础上，由相机自动推算出相应的曝光量，就使我们得到一幅相机的测光系统认为曝光正常合适的画面。  ^6733360-7MzJSOZHA
- 💭 非常核心的曝光理念，对应光圈优先模式下的ev值
- ⏱ 2023-11-08 20:58:04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 所示，画面中绝大部分是绿色植被，而绿色物体的反光率通常在20%左右，这与测光表追求的反光率数值相差无几。  ^6733360-7MzJY2QgE
- 💭 没写清楚
- ⏱ 2023-11-08 20:59:21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当被摄对象是18%左右的反光率时，如人脸肤色（黄种人为20%左右）、土地和绿树等，就可得到还原正常的漂亮画面；如果被摄物体的反光率与18%灰相差太大时，如白雪（反光率为97%）、黑色齿轮（反光率为5%），就不能获得反映物体真实原貌的画面。  ^6733360-7MzMqnVYg
- 💭 这里有一个方法，如果人眼感受这个画面就应该黑色为主体，比如夜景，那么整个画面的影调就应该是偏暗的，所以此时的基准应该是比18%更低的平均反光率，为了得到更低的反光率就要减少进入镜头的曝光量，所以可以EV减少一档或者两档
- ⏱ 2023-11-08 21:36:52&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;51-曝光实操要点-1&#34;&gt;5.1 曝光实操要点&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 增加2级曝光量  ^6733360-7MzRtIxAZ
- 💭 这里应该指曝光补偿
- ⏱ 2023-11-08 22:54:02&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%91%84%E5%BD%B1%E6%9E%84%E5%9B%BE%E4%B9%A6%E5%85%A8%E5%BD%A9/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%91%84%E5%BD%B1%E6%9E%84%E5%9B%BE%E4%B9%A6%E5%85%A8%E5%BD%A9/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 摄影构图书（全彩）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/245/32375245/t7_32375245.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 摄影构图书（全彩）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 摄影构图书（全彩）&lt;/li&gt;
&lt;li&gt;作者： 于然&lt;/li&gt;
&lt;li&gt;简介： 构图是摄影之本。在摄影院校的教学体系中，曝光、用光、色彩、构图并称摄影&amp;quot;四大核心”。要想学好摄影，构图是第一步。构图决定着你的视角，你呈现给观众的每一张照片，都是你的构图、你的表达。构图就是一种表达，水平线、斜线有着不同的含义，对称、黄金分割表现着不一样的情绪，这都是你将在构图知识里面学到的。本书将为你解释构图中摄影前辈们总结出来的构图方法，以及构图的规则和章法，帮助你更快地掌握构图知识和构图技巧。&lt;/li&gt;
&lt;li&gt;出版时间 2020-04-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787121381577&lt;/li&gt;
&lt;li&gt;分类： 艺术-摄影&lt;/li&gt;
&lt;li&gt;出版社： 电子工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/fd03299071ee01cdfd05d3d&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献辞&#34;&gt;献辞&lt;/h2&gt;
&lt;h2 id=&#34;引文&#34;&gt;引文&lt;/h2&gt;
&lt;h2 id=&#34;插图&#34;&gt;插图&lt;/h2&gt;
&lt;h2 id=&#34;立象牙派宣言&#34;&gt;立：“象牙派”宣言&lt;/h2&gt;
&lt;h2 id=&#34;破逍遥派宣言&#34;&gt;破：“逍遥派”宣言&lt;/h2&gt;
&lt;h2 id=&#34;特色提示&#34;&gt;特色提示&lt;/h2&gt;
&lt;h2 id=&#34;第一章-黄金分割&#34;&gt;第一章 黄金分割&lt;/h2&gt;
&lt;h3 id=&#34;11-第一阶黄金分割的本源科学与艺术的结合&#34;&gt;1.1 第一阶：黄金分割的本源—科学与艺术的结合&lt;/h3&gt;
&lt;h3 id=&#34;12-第二阶艺术史上的著名黄金分割大师&#34;&gt;1.2 第二阶：艺术史上的著名黄金分割大师&lt;/h3&gt;
&lt;h3 id=&#34;13-第三阶黄金分割线与三分法&#34;&gt;1.3 第三阶：黄金分割线与“三分法”&lt;/h3&gt;
&lt;h3 id=&#34;14-第四阶经典黄金分割变体九宫格&#34;&gt;1.4 第四阶：经典黄金分割变体—“九宫格”&lt;/h3&gt;
&lt;h3 id=&#34;15-第五阶黄金交叉点&#34;&gt;1.5 第五阶：黄金交叉点&lt;/h3&gt;
&lt;h3 id=&#34;16-第六阶黄金分割理论的分类应用&#34;&gt;1.6 第六阶：黄金分割理论的分类应用&lt;/h3&gt;
&lt;h3 id=&#34;17-第七阶从老掉牙的九宫格到神奇的渐开线&#34;&gt;1.7 第七阶：从老掉牙的九宫格到神奇的渐开线&lt;/h3&gt;
&lt;h3 id=&#34;18-第八阶甄别优劣渐开线的滥用&#34;&gt;1.8 第八阶：甄别优劣—渐开线的滥用&lt;/h3&gt;
&lt;h3 id=&#34;19-第九阶藏在渐开线后面的秘密功能区&#34;&gt;1.9 第九阶：藏在“渐开线”后面的秘密—“功能区”&lt;/h3&gt;
&lt;h3 id=&#34;110-第十阶关于画面斜向调度与黄金斜线构图法&#34;&gt;1.10 第十阶：关于画面斜向调度与黄金斜线构图法&lt;/h3&gt;
&lt;h3 id=&#34;111-第十一阶黄金三角形构图法&#34;&gt;1.11 第十一阶：黄金三角形构图法&lt;/h3&gt;
&lt;h3 id=&#34;112-第十二阶动态对称黄金分割dynamic-symmetry&#34;&gt;1.12 第十二阶：动态对称黄金分割（Dynamic Symmetry）&lt;/h3&gt;
&lt;h2 id=&#34;第二章-打破黄金分割的自由构图体系&#34;&gt;第二章 打破黄金分割的自由构图体系&lt;/h2&gt;
&lt;h3 id=&#34;21-自由构图体系逍遥派的破阵长车&#34;&gt;2.1 “自由构图体系”—逍遥派的破阵长车&lt;/h3&gt;
&lt;h3 id=&#34;22-黄金分割的致命局限画幅比例局限&#34;&gt;2.2 黄金分割的致命局限：画幅比例局限&lt;/h3&gt;
&lt;h3 id=&#34;23-突破黄金分割的画幅超宽幅画面与散点透视&#34;&gt;2.3 突破黄金分割的画幅：超宽幅画面与散点透视&lt;/h3&gt;
&lt;h3 id=&#34;24-空间的配合&#34;&gt;2.4 空间的配合&lt;/h3&gt;
&lt;h3 id=&#34;25-打破一切黄金分割&#34;&gt;2.5 打破一切黄金分割&lt;/h3&gt;
&lt;h3 id=&#34;26-逍遥派招法&#34;&gt;2.6 逍遥派招法&lt;/h3&gt;
&lt;h2 id=&#34;第三章-平面构成构图体系&#34;&gt;第三章 平面构成构图体系&lt;/h2&gt;
&lt;h3 id=&#34;31-点线面的构成&#34;&gt;3.1 点、线、面的构成&lt;/h3&gt;
&lt;h3 id=&#34;32-构图点中心点黄金分割&#34;&gt;3.2 构图点（中心点、黄金分割）&lt;/h3&gt;
&lt;h3 id=&#34;33-构图线&#34;&gt;3.3 构图线&lt;/h3&gt;
&lt;h3 id=&#34;34-构图面&#34;&gt;3.4 构图面&lt;/h3&gt;
&lt;h2 id=&#34;第四章-逍遥溜须拍马的逍遥世界-情绪化平面构成&#34;&gt;第四章 逍遥溜须拍马的逍遥世界 情绪化平面构成&lt;/h2&gt;
&lt;h3 id=&#34;41-点散点构图&#34;&gt;4.1 点：散点构图&lt;/h3&gt;
&lt;h3 id=&#34;42-颠覆线条体系&#34;&gt;4.2 颠覆线条体系&lt;/h3&gt;
&lt;h3 id=&#34;43-突破画面局限画幅比例&#34;&gt;4.3 突破画面局限：画幅比例&lt;/h3&gt;
&lt;h2 id=&#34;第五章-空间体系&#34;&gt;第五章 空间体系&lt;/h2&gt;
&lt;h3 id=&#34;51-景别&#34;&gt;5.1 景别&lt;/h3&gt;
&lt;h3 id=&#34;52-没有绝对的景别&#34;&gt;5.2 没有绝对的景别&lt;/h3&gt;
&lt;h3 id=&#34;53-透视从二维空间迈入三维空间&#34;&gt;5.3 透视—从二维空间迈入三维空间&lt;/h3&gt;
&lt;h3 id=&#34;54-透视效果与器材选择&#34;&gt;5.4 透视效果与器材选择&lt;/h3&gt;
&lt;h3 id=&#34;55-基于透视线条的空间表现&#34;&gt;5.5 基于透视线条的空间表现&lt;/h3&gt;
&lt;h3 id=&#34;56-消失点数量与透视类型&#34;&gt;5.6 消失点数量与透视类型&lt;/h3&gt;
&lt;h3 id=&#34;57-光学对于构图的影响&#34;&gt;5.7 光学对于构图的影响&lt;/h3&gt;
&lt;h2 id=&#34;第六章-空间的指挥棒-视角&#34;&gt;第六章 空间的指挥棒 视角&lt;/h2&gt;
&lt;h3 id=&#34;61-逍遥派的视角与空间&#34;&gt;6.1 逍遥派的视角与空间&lt;/h3&gt;
&lt;h3 id=&#34;62-层次化空间表现&#34;&gt;6.2 层次化空间表现&lt;/h3&gt;
&lt;h3 id=&#34;63-背景控制与元素调度&#34;&gt;6.3 背景控制与元素调度&lt;/h3&gt;
&lt;h3 id=&#34;64-拍摄角度&#34;&gt;6.4 拍摄角度&lt;/h3&gt;
&lt;h2 id=&#34;第七章-瞬间&#34;&gt;第七章 瞬间&lt;/h2&gt;
&lt;h3 id=&#34;71-瞬间时间的投影&#34;&gt;7.1 瞬间：时间的投影&lt;/h3&gt;
&lt;h3 id=&#34;72-最懂得瞬间的人布列松的决定性瞬间&#34;&gt;7.2 最懂得瞬间的人：布列松的决定性瞬间&lt;/h3&gt;
&lt;h3 id=&#34;73-如何拍摄你的决定性瞬间&#34;&gt;7.3 如何拍摄你的决定性瞬间&lt;/h3&gt;
&lt;h3 id=&#34;74-瞬间的预判&#34;&gt;7.4 瞬间的预判&lt;/h3&gt;
&lt;h2 id=&#34;第八章-突破时空-反决定性瞬间&#34;&gt;第八章 突破时空 反决定性瞬间&lt;/h2&gt;
&lt;h3 id=&#34;81-摄影在于传达&#34;&gt;8.1 摄影在于传达&lt;/h3&gt;
&lt;h3 id=&#34;82-新时代的诞生&#34;&gt;8.2 新时代的诞生&lt;/h3&gt;
&lt;h3 id=&#34;83-反决定性瞬间的捕捉技巧&#34;&gt;8.3 反决定性瞬间的捕捉技巧&lt;/h3&gt;
&lt;h3 id=&#34;84-冲突让你的照片更抢眼&#34;&gt;8.4 冲突：让你的照片更抢眼&lt;/h3&gt;
&lt;h3 id=&#34;85-故事永远别忘了讲故事&#34;&gt;8.5 故事：永远别忘了讲故事&lt;/h3&gt;
&lt;h3 id=&#34;86-运动的创意没有创意的瞬间不是好瞬间&#34;&gt;8.6 运动的创意：没有创意的瞬间不是好瞬间&lt;/h3&gt;
&lt;h2 id=&#34;反侵权盗版声明&#34;&gt;反侵权盗版声明&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;53-透视从二维空间迈入三维空间-1&#34;&gt;5.3 透视—从二维空间迈入三维空间&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当画面中人物越多时，每个人在画面中占据的面积就越小，人脸越难分辨清。如果这时候依然使用广角镜头，那么后排的人物将大大损失占有面积，甚至很难看清。因此人物越多，我们越要站远，使用长焦镜头拍摄，这样前排后排的人物大小比较接近，前后排的人物不仅能同样看清，更重要的是看起来也比较整齐划一，画面构图更加规范。希望大家以后再合影的时候记得这个技巧，合影人数多的时候，一定要选择一个前方空间开阔的位置，给自己留下足够宽敞的拍摄空间，并准备一个中长焦距段的镜头（考虑到我们喊声音量有限，还是不要站在100米外用400毫米镜头拍合影了，虽然那样的效果一定更好）。  ^6733360-7NvqoMxX8
- 💭 合影使用长焦远距离拍摄
- ⏱ 2023-12-16 19:07:27&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%91%84%E5%BD%B1%E7%9A%84%E8%89%BA%E6%9C%AF%E5%BD%A9%E5%8D%B0/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%91%84%E5%BD%B1%E7%9A%84%E8%89%BA%E6%9C%AF%E5%BD%A9%E5%8D%B0/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 摄影的艺术(彩印)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://res.weread.qq.com/wrepub/CB_9aqAG8AIB1yw6i66gX21FDdf_parsecover&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 摄影的艺术(彩印)|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 摄影的艺术(彩印)&lt;/li&gt;
&lt;li&gt;作者： 【美】 Bruce Barnbaum&lt;/li&gt;
&lt;li&gt;简介：&lt;/li&gt;
&lt;li&gt;出版时间&lt;/li&gt;
&lt;li&gt;ISBN：&lt;/li&gt;
&lt;li&gt;分类：&lt;/li&gt;
&lt;li&gt;出版社：&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/7b242123643425f375072377774377962324c64366f48366f6f444754477247aed&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;h2 id=&#34;扉页&#34;&gt;扉页&lt;/h2&gt;
&lt;h2 id=&#34;版权页&#34;&gt;版权页&lt;/h2&gt;
&lt;h2 id=&#34;插页&#34;&gt;插页&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;第1章用摄影交流&#34;&gt;第1章　用摄影交流&lt;/h2&gt;
&lt;h3 id=&#34;激情&#34;&gt;激情&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在决定自己的兴趣时，首先要寻找的是激情。激情的重要性再怎么强调也不为过。我曾经听说，人的三种因素结合起来，就可以在任何领域获得成功，这三种因素是激情、才能和努力，如果只具备其中的两种，则也有可能成功，前提是这二者必须有激情！
⏱ 2024-05-16 11:05:43 ^CB-7Pr7wt7yb2Ld6oH6ooDGTGrG-7-571-683&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;判断自己的个人反应&#34;&gt;判断自己的个人反应&lt;/h3&gt;
&lt;h2 id=&#34;第2章什么是构图&#34;&gt;第2章　什么是构图&lt;/h2&gt;
&lt;h3 id=&#34;眼睛是怎样看到东西的&#34;&gt;眼睛是怎样看到东西的&lt;/h3&gt;
&lt;h3 id=&#34;统一的思想&#34;&gt;统一的思想&lt;/h3&gt;
&lt;h3 id=&#34;简单性&#34;&gt;简单性&lt;/h3&gt;
&lt;h3 id=&#34;表达你自己的观点&#34;&gt;表达你自己的观点&lt;/h3&gt;
&lt;h3 id=&#34;简单性与复杂性&#34;&gt;简单性与复杂性&lt;/h3&gt;
&lt;h2 id=&#34;第3章构图的元素&#34;&gt;第3章　构图的元素&lt;/h2&gt;
&lt;h3 id=&#34;反差和影调&#34;&gt;反差和影调&lt;/h3&gt;
&lt;h3 id=&#34;线条&#34;&gt;线条&lt;/h3&gt;
&lt;h3 id=&#34;形状&#34;&gt;形状&lt;/h3&gt;
&lt;h3 id=&#34;线条形状反差和情感&#34;&gt;线条、形状、反差和情感&lt;/h3&gt;
&lt;h3 id=&#34;图案式样&#34;&gt;图案式样&lt;/h3&gt;
&lt;h3 id=&#34;平衡性&#34;&gt;平衡性&lt;/h3&gt;
&lt;h3 id=&#34;动态&#34;&gt;动态&lt;/h3&gt;
&lt;h3 id=&#34;正负空间&#34;&gt;正／负空间&lt;/h3&gt;
&lt;h3 id=&#34;质感&#34;&gt;质感&lt;/h3&gt;
&lt;h3 id=&#34;相机位置&#34;&gt;相机位置&lt;/h3&gt;
&lt;h3 id=&#34;镜头焦距和裁剪&#34;&gt;镜头焦距和裁剪&lt;/h3&gt;
&lt;h3 id=&#34;景深&#34;&gt;景深&lt;/h3&gt;
&lt;h3 id=&#34;快门速度&#34;&gt;快门速度&lt;/h3&gt;
&lt;h3 id=&#34;联系&#34;&gt;联系&lt;/h3&gt;
&lt;h3 id=&#34;专注于场景&#34;&gt;专注于场景&lt;/h3&gt;
&lt;h3 id=&#34;规则程式化以及其他问题和缺点&#34;&gt;规则、程式化以及其他问题和缺点&lt;/h3&gt;
&lt;h2 id=&#34;第4章视觉化&#34;&gt;第4章　视觉化&lt;/h2&gt;
&lt;h3 id=&#34;第一步以摄影的方式观看和察见&#34;&gt;第一步：以摄影的方式观看和察见&lt;/h3&gt;
&lt;h3 id=&#34;第二步构图&#34;&gt;第二步：构图&lt;/h3&gt;
&lt;h3 id=&#34;第三步构思最终照片的效果&#34;&gt;第三步：构思最终照片的效果&lt;/h3&gt;
&lt;h3 id=&#34;第四步为最终效果设计操作策略&#34;&gt;第四步：为最终效果设计操作策略&lt;/h3&gt;
&lt;h3 id=&#34;你的眼睛和照相机有什么区别&#34;&gt;你的眼睛和照相机有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;其他方法&#34;&gt;其他方法&lt;/h3&gt;
&lt;h2 id=&#34;第5章光线&#34;&gt;第5章　光线&lt;/h2&gt;
&lt;h3 id=&#34;观察光线&#34;&gt;观察光线&lt;/h3&gt;
&lt;h3 id=&#34;练习更精确地观察光线&#34;&gt;练习更精确地观察光线&lt;/h3&gt;
&lt;h3 id=&#34;光线决定形状&#34;&gt;光线决定形状&lt;/h3&gt;
&lt;h3 id=&#34;光照的类型和光的特性&#34;&gt;光照的类型和光的特性&lt;/h3&gt;
&lt;h3 id=&#34;眼睛和胶片传感器所看到的光以及平方反比律&#34;&gt;眼睛和胶片／传感器所看到的光以及平方反比律&lt;/h3&gt;
&lt;h2 id=&#34;第6章色彩&#34;&gt;第6章　色彩&lt;/h2&gt;
&lt;h3 id=&#34;色轮和色球&#34;&gt;色轮和色球&lt;/h3&gt;
&lt;h3 id=&#34;色彩构图&#34;&gt;色彩构图&lt;/h3&gt;
&lt;h3 id=&#34;色彩与情感&#34;&gt;色彩与情感&lt;/h3&gt;
&lt;h3 id=&#34;色彩反差和色调&#34;&gt;色彩反差和色调&lt;/h3&gt;
&lt;h3 id=&#34;选择彩色胶片&#34;&gt;选择彩色胶片&lt;/h3&gt;
&lt;h3 id=&#34;数码色彩处理技术&#34;&gt;数码色彩处理技术&lt;/h3&gt;
&lt;h3 id=&#34;控制光线和色彩&#34;&gt;控制光线和色彩&lt;/h3&gt;
&lt;h3 id=&#34;主观性和色彩情感&#34;&gt;主观性和色彩情感&lt;/h3&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;h2 id=&#34;第7章滤镜&#34;&gt;第7章　滤镜&lt;/h2&gt;
&lt;h3 id=&#34;黑白滤镜&#34;&gt;黑白滤镜&lt;/h3&gt;
&lt;h3 id=&#34;假设的风景示例&#34;&gt;假设的风景示例&lt;/h3&gt;
&lt;h3 id=&#34;用滤镜控制反差&#34;&gt;用滤镜控制反差&lt;/h3&gt;
&lt;h3 id=&#34;黑白摄影的数码滤镜&#34;&gt;黑白摄影的数码滤镜&lt;/h3&gt;
&lt;h3 id=&#34;红外胶片和红外滤镜&#34;&gt;红外胶片和红外滤镜&lt;/h3&gt;
&lt;h3 id=&#34;彩色摄影滤镜&#34;&gt;彩色摄影滤镜&lt;/h3&gt;
&lt;h3 id=&#34;中灰密度镜和偏光镜&#34;&gt;中灰密度镜和偏光镜&lt;/h3&gt;
&lt;h3 id=&#34;与偏光镜有关的问题&#34;&gt;与偏光镜有关的问题&lt;/h3&gt;
&lt;h2 id=&#34;第8章胶片摄影的分区曝光系统&#34;&gt;第8章　胶片摄影的分区曝光系统&lt;/h2&gt;
&lt;h3 id=&#34;胶片对光的反应建立分区系统&#34;&gt;胶片对光的反应：建立分区系统&lt;/h3&gt;
&lt;h3 id=&#34;把底片密度转换为照片影调&#34;&gt;把底片密度转换为照片影调&lt;/h3&gt;
&lt;h3 id=&#34;底片密度与照片的影调等级&#34;&gt;底片密度与照片的影调等级&lt;/h3&gt;
&lt;h3 id=&#34;测光表的工作原理&#34;&gt;测光表的工作原理&lt;/h3&gt;
&lt;h3 id=&#34;复习底片的曝光程序&#34;&gt;复习底片的曝光程序&lt;/h3&gt;
&lt;h3 id=&#34;利用分区系统脱离现实&#34;&gt;利用分区系统脱离现实&lt;/h3&gt;
&lt;h3 id=&#34;彩色摄影的分区系统&#34;&gt;彩色摄影的分区系统&lt;/h3&gt;
&lt;h3 id=&#34;分区系统和平方反比率&#34;&gt;分区系统和平方反比率&lt;/h3&gt;
&lt;h3 id=&#34;总结-1&#34;&gt;总结&lt;/h3&gt;
&lt;h2 id=&#34;第9章黑白底片和反差控制分区系统的扩展&#34;&gt;第9章　黑白底片和反差控制（分区系统的扩展）&lt;/h2&gt;
&lt;h3 id=&#34;概述&#34;&gt;概述&lt;/h3&gt;
&lt;h3 id=&#34;显影中的底片&#34;&gt;显影中的底片&lt;/h3&gt;
&lt;h3 id=&#34;皮腔的类比&#34;&gt;皮腔的类比&lt;/h3&gt;
&lt;h3 id=&#34;让更高分区产生作用&#34;&gt;让更高分区产生作用&lt;/h3&gt;
&lt;h3 id=&#34;倒易律失效&#34;&gt;倒易律失效&lt;/h3&gt;
&lt;h3 id=&#34;加强和降低反差的例子&#34;&gt;加强和降低反差的例子&lt;/h3&gt;
&lt;h3 id=&#34;曝光密度曲线以及设置阴影为4区&#34;&gt;曝光／密度曲线以及设置阴影为4区&lt;/h3&gt;
&lt;h3 id=&#34;摄影学与感光学的区别质感与影调以及4区阴影设置&#34;&gt;摄影学与感光学的区别：质感与影调，以及4区阴影设置&lt;/h3&gt;
&lt;h3 id=&#34;预曝光定义及适用范围&#34;&gt;预曝光——定义及适用范围&lt;/h3&gt;
&lt;h3 id=&#34;对曝光后的底片进行显影&#34;&gt;对曝光后的底片进行显影&lt;/h3&gt;
&lt;h3 id=&#34;补偿显影&#34;&gt;补偿显影&lt;/h3&gt;
&lt;h3 id=&#34;双溶液补偿显影&#34;&gt;双溶液补偿显影&lt;/h3&gt;
&lt;h3 id=&#34;散页片和胶卷的显影程序&#34;&gt;散页片和胶卷的显影程序&lt;/h3&gt;
&lt;h3 id=&#34;分区系统与胶卷&#34;&gt;分区系统与胶卷&lt;/h3&gt;
&lt;h3 id=&#34;底片材料和显影剂&#34;&gt;底片材料和显影剂&lt;/h3&gt;
&lt;h2 id=&#34;第10章扩印&#34;&gt;第10章　扩印&lt;/h2&gt;
&lt;h3 id=&#34;黑白放大相纸&#34;&gt;黑白放大相纸&lt;/h3&gt;
&lt;h3 id=&#34;可变反差相纸与固定反差相纸的比较&#34;&gt;可变反差相纸与固定反差相纸的比较&lt;/h3&gt;
&lt;h3 id=&#34;纤维纸基相纸与树脂涂布相纸的比较&#34;&gt;纤维纸基相纸与树脂涂布相纸的比较&lt;/h3&gt;
&lt;h3 id=&#34;黑白相纸显影剂&#34;&gt;黑白相纸显影剂&lt;/h3&gt;
&lt;h3 id=&#34;制作相版&#34;&gt;制作相版&lt;/h3&gt;
&lt;h3 id=&#34;通向最终照片的准备工作&#34;&gt;通向最终照片的准备工作&lt;/h3&gt;
&lt;h3 id=&#34;制作测试片而不是试条&#34;&gt;制作测试片，而不是试条&lt;/h3&gt;
&lt;h3 id=&#34;固定反差和可变反差相纸的双溶液显影&#34;&gt;固定反差和可变反差相纸的双溶液显影&lt;/h3&gt;
&lt;h3 id=&#34;遮挡和加光&#34;&gt;遮挡和加光&lt;/h3&gt;
&lt;h3 id=&#34;统一整个创作过程视觉化曝光显影和扩印&#34;&gt;统一整个创作过程：视觉化、曝光、显影和扩印&lt;/h3&gt;
&lt;h3 id=&#34;对可变反差相纸进行加光&#34;&gt;对可变反差相纸进行加光&lt;/h3&gt;
&lt;h3 id=&#34;高级暗房技术&#34;&gt;高级暗房技术&lt;/h3&gt;
&lt;h3 id=&#34;检视评价以及干燥变暗效应的神话&#34;&gt;检视、评价，以及“干燥变暗效应”的神话&lt;/h3&gt;
&lt;h3 id=&#34;铁氰化钾还原漂白&#34;&gt;铁氰化钾还原（漂白）&lt;/h3&gt;
&lt;h3 id=&#34;照片的最终定影&#34;&gt;照片的最终定影&lt;/h3&gt;
&lt;h3 id=&#34;局部反差和整体反差的选择&#34;&gt;局部反差和整体反差的选择&lt;/h3&gt;
&lt;h3 id=&#34;照片尺寸&#34;&gt;照片尺寸&lt;/h3&gt;
&lt;h3 id=&#34;硒调色法&#34;&gt;硒调色法&lt;/h3&gt;
&lt;h3 id=&#34;其他调色剂&#34;&gt;其他调色剂&lt;/h3&gt;
&lt;h3 id=&#34;化学染色&#34;&gt;化学染色&lt;/h3&gt;
&lt;h3 id=&#34;完整的存档处理&#34;&gt;完整的存档处理&lt;/h3&gt;
&lt;h3 id=&#34;底片的调色强化和还原&#34;&gt;底片的调色、强化和还原&lt;/h3&gt;
&lt;h3 id=&#34;冷调中性和暖调相纸&#34;&gt;冷调、中性和暖调相纸&lt;/h3&gt;
&lt;h3 id=&#34;回顾反差控制&#34;&gt;回顾反差控制&lt;/h3&gt;
&lt;h3 id=&#34;彩色扩印&#34;&gt;彩色扩印&lt;/h3&gt;
&lt;h3 id=&#34;彩色反差降低蒙版&#34;&gt;彩色反差降低蒙版&lt;/h3&gt;
&lt;h3 id=&#34;用蒙版改变色彩强度&#34;&gt;用蒙版改变色彩强度&lt;/h3&gt;
&lt;h3 id=&#34;阴影蒙版&#34;&gt;阴影蒙版&lt;/h3&gt;
&lt;h3 id=&#34;彩色照片的点修和色彩平衡调整&#34;&gt;彩色照片的点修和色彩平衡调整&lt;/h3&gt;
&lt;h3 id=&#34;冲洗和晾干彩色照片&#34;&gt;冲洗和晾干彩色照片&lt;/h3&gt;
&lt;h3 id=&#34;取得正确的色彩平衡&#34;&gt;取得正确的色彩平衡&lt;/h3&gt;
&lt;h2 id=&#34;第11章数字分区曝光系统&#34;&gt;第11章　数字分区曝光系统&lt;/h2&gt;
&lt;h3 id=&#34;从储存卡到照片的步骤&#34;&gt;从储存卡到照片的步骤&lt;/h3&gt;
&lt;h3 id=&#34;数码拍摄的基础&#34;&gt;数码拍摄的基础&lt;/h3&gt;
&lt;h3 id=&#34;传感器的有效亮度范围&#34;&gt;传感器的有效亮度范围&lt;/h3&gt;
&lt;h3 id=&#34;直方图数码分区系统的核心&#34;&gt;直方图——数码分区系统的核心&lt;/h3&gt;
&lt;h3 id=&#34;raw转换器处理raw照片&#34;&gt;RAW转换器——处理RAW照片&lt;/h3&gt;
&lt;h3 id=&#34;高动态范围影像数码摄影的扩展分区系统&#34;&gt;高动态范围影像——数码摄影的扩展分区系统&lt;/h3&gt;
&lt;h3 id=&#34;实践中的考虑注意和推荐事项&#34;&gt;实践中的考虑、注意和推荐事项&lt;/h3&gt;
&lt;h2 id=&#34;第12章展示&#34;&gt;第12章　展示&lt;/h2&gt;
&lt;h3 id=&#34;干裱&#34;&gt;干裱&lt;/h3&gt;
&lt;h3 id=&#34;为放置照片制作定位标尺&#34;&gt;为放置照片制作定位标尺&lt;/h3&gt;
&lt;h3 id=&#34;瑕疵的点修蚀刻和修正&#34;&gt;瑕疵的点修、蚀刻和修正&lt;/h3&gt;
&lt;h3 id=&#34;照片完工&#34;&gt;照片完工&lt;/h3&gt;
&lt;h2 id=&#34;第13章打破摄影的神话&#34;&gt;第13章　打破摄影的神话&lt;/h2&gt;
&lt;h3 id=&#34;神话1&#34;&gt;神话#1&lt;/h3&gt;
&lt;h3 id=&#34;神话2&#34;&gt;神话#2&lt;/h3&gt;
&lt;h3 id=&#34;神话3&#34;&gt;神话#3&lt;/h3&gt;
&lt;h3 id=&#34;神话4&#34;&gt;神话#4&lt;/h3&gt;
&lt;h3 id=&#34;神话5&#34;&gt;神话#5&lt;/h3&gt;
&lt;h3 id=&#34;神话6&#34;&gt;神话#6&lt;/h3&gt;
&lt;h3 id=&#34;神话7&#34;&gt;神话#7&lt;/h3&gt;
&lt;h3 id=&#34;神话8&#34;&gt;神话#8&lt;/h3&gt;
&lt;h2 id=&#34;第14章摄影技术和艺术忠实性&#34;&gt;第14章　摄影技术和艺术忠实性&lt;/h2&gt;
&lt;h3 id=&#34;艺术交流和个人忠实性&#34;&gt;艺术、交流和个人忠实性&lt;/h3&gt;
&lt;h2 id=&#34;第15章摄影的真实性抽象性和艺术性&#34;&gt;第15章　摄影的真实性、抽象性和艺术性&lt;/h2&gt;
&lt;h3 id=&#34;作为艺术的摄影&#34;&gt;作为艺术的摄影&lt;/h3&gt;
&lt;h3 id=&#34;摄影和绘画它们的相互影响&#34;&gt;摄影和绘画——它们的相互影响&lt;/h3&gt;
&lt;h3 id=&#34;抽象的力量&#34;&gt;抽象的力量&lt;/h3&gt;
&lt;h3 id=&#34;内向性和外向性问题&#34;&gt;内向性和外向性问题&lt;/h3&gt;
&lt;h3 id=&#34;摄影的力量&#34;&gt;摄影的力量&lt;/h3&gt;
&lt;h2 id=&#34;第16章关于创意的思考&#34;&gt;第16章　关于创意的思考&lt;/h2&gt;
&lt;h3 id=&#34;创意的障碍&#34;&gt;创意的障碍&lt;/h3&gt;
&lt;h3 id=&#34;创意的必要条件&#34;&gt;创意的必要条件&lt;/h3&gt;
&lt;h3 id=&#34;创造新的东西这真的很重要&#34;&gt;创造新的东西——这真的很重要&lt;/h3&gt;
&lt;h3 id=&#34;为想象创新和创意做好准备&#34;&gt;为想象、创新和创意做好准备&lt;/h3&gt;
&lt;h2 id=&#34;第17章凭直觉走近创意&#34;&gt;第17章　凭直觉走近创意&lt;/h2&gt;
&lt;h3 id=&#34;科学界的直觉&#34;&gt;科学界的直觉&lt;/h3&gt;
&lt;h3 id=&#34;避免直觉&#34;&gt;避免直觉&lt;/h3&gt;
&lt;h3 id=&#34;对直觉的理解和误解&#34;&gt;对直觉的理解和误解&lt;/h3&gt;
&lt;h3 id=&#34;直觉创作的例子&#34;&gt;直觉创作的例子&lt;/h3&gt;
&lt;h3 id=&#34;把直觉运用到你的摄影创作&#34;&gt;把直觉运用到你的摄影创作&lt;/h3&gt;
&lt;h3 id=&#34;总结-2&#34;&gt;总结&lt;/h3&gt;
&lt;h2 id=&#34;第18章通往个人影像哲学&#34;&gt;第18章　通往个人影像哲学&lt;/h2&gt;
&lt;h3 id=&#34;机动性&#34;&gt;机动性&lt;/h3&gt;
&lt;h3 id=&#34;视觉艺术&#34;&gt;视觉艺术&lt;/h3&gt;
&lt;h3 id=&#34;非视觉艺术&#34;&gt;非视觉艺术&lt;/h3&gt;
&lt;h3 id=&#34;拓展和确定你的兴趣&#34;&gt;拓展和确定你的兴趣&lt;/h3&gt;
&lt;h3 id=&#34;摄影的局限&#34;&gt;摄影的局限&lt;/h3&gt;
&lt;h3 id=&#34;形成个人风格&#34;&gt;形成个人风格&lt;/h3&gt;
&lt;h3 id=&#34;自我批评交流与学习&#34;&gt;自我批评、交流与学习&lt;/h3&gt;
&lt;h2 id=&#34;附录1传统摄影的器材测试&#34;&gt;附录1　传统摄影的器材测试&lt;/h2&gt;
&lt;h3 id=&#34;asaiso测试&#34;&gt;ASA（ISO）测试&lt;/h3&gt;
&lt;h3 id=&#34;显影反差测试&#34;&gt;显影反差测试&lt;/h3&gt;
&lt;h3 id=&#34;镜头锐度和覆盖率测试&#34;&gt;镜头锐度和覆盖率测试&lt;/h3&gt;
&lt;h3 id=&#34;皮腔测试&#34;&gt;皮腔测试&lt;/h3&gt;
&lt;h3 id=&#34;安全灯测试&#34;&gt;安全灯测试&lt;/h3&gt;
&lt;h3 id=&#34;放大机灯光均匀度测试&#34;&gt;放大机灯光均匀度测试&lt;/h3&gt;
&lt;h3 id=&#34;放大机镜头锐度测试&#34;&gt;放大机镜头锐度测试&lt;/h3&gt;
&lt;h2 id=&#34;附录2放大机光源&#34;&gt;附录2　放大机光源&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 操作系统导论&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/71/YueWen_30179184/t7_YueWen_30179184.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 操作系统导论|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 操作系统导论&lt;/li&gt;
&lt;li&gt;作者： 雷姆兹·H.阿帕希杜塞尔 安德莉亚·C.阿帕希杜塞尔&lt;/li&gt;
&lt;li&gt;简介： 这是一本关于现代操作系统的书。全书围绕虚拟化、并发和持久性这3个主要概念展开，介绍了所有现代系统的主要组件（包括调度、虚拟内存管理、磁盘和I/O子系统、文件系统 ）。 本书共50章，分为3个部分，分别讲述虚拟化、并发和持久性的相关内容。本书大部分章节均先提出特定的问题，然后通过书中介绍的技术、算法和思想来解决这些问题。笔者以对话形式引入所介绍的主题概念，行文诙谐幽默却又鞭辟入里，力求帮助读者理解操作系统中虚拟化、并发和持久性的原理。 本书内容全面，并给出了真实可运行的代码（而非伪代码），还提供了相应的练习，适合高等院校相关专业教师教学和高校学生自学。&lt;/li&gt;
&lt;li&gt;出版时间 2019-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115508232&lt;/li&gt;
&lt;li&gt;分类： 计算机-计算机综合&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/db8329d071cc7f70db8a479&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;版权&#34;&gt;版权&lt;/h2&gt;
&lt;h2 id=&#34;版权声明&#34;&gt;版权声明&lt;/h2&gt;
&lt;h2 id=&#34;内容提要&#34;&gt;内容提要&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;资源与支持&#34;&gt;资源与支持&lt;/h2&gt;
&lt;h2 id=&#34;第1章-关于本书的对话&#34;&gt;第1章 关于本书的对话&lt;/h2&gt;
&lt;h2 id=&#34;第2章-操作系统介绍&#34;&gt;第2章 操作系统介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 要做到这一点，操作系统主要利用一种通用的技术，我们称之为虚拟化（virtualization）。也就是说，操作系统将物理（physical）资源（如处理器、内存或磁盘）转换为更通用、更强大且更易于使用的虚拟形式。因此，我们有时将操作系统称为虚拟机（virtual machine）。
⏱ 2024-03-09 21:55:59 ^30179184-9-1524-1665&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 事实证明，在硬件的一些帮助下，操作系统负责提供这种假象（illusion），即系统拥有非常多的虚拟CPU的假象。将单个CPU（或其中一小部分）转换为看似无限数量的CPU，从而让许多程序看似同时运行，这就是所谓的虚拟化CPU（virtualizing the CPU），这是本书第一大部分的关注点。
⏱ 2024-03-09 22:00:51 ^30179184-9-3558-3706&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在每个打印语句中，它还会打印出所谓的正在运行程序的进程标识符（PID）。该PID对每个运行进程是唯一的。
⏱ 2024-03-09 22:07:44 ^30179184-9-5355-5407&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第1部分-虚拟化&#34;&gt;第1部分 虚拟化&lt;/h2&gt;
&lt;h3 id=&#34;第4章-抽象进程&#34;&gt;第4章 抽象：进程&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 请注意，有一些非常特殊的寄存器构成了该机器状态的一部分。例如，程序计数器（Program Counter，PC）（有时称为指令指针，Instruction Pointer或IP）告诉我们程序当前正在执行哪个指令；类似地，栈指针（stack pointer）和相关的帧指针（frame pointer）用于管理函数参数栈、局部变量和返回地址。
⏱ 2024-03-10 11:17:38 ^30179184-11-2122-2292&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 将代码和静态数据加载到内存后，操作系统在运行此进程之前还需要执行其他一些操作。必须为程序的运行时栈（run-time stack或stack）分配一些内存。你可能已经知道，C程序使用栈存放局部变量、函数参数和返回地址。操作系统分配这些内存，并提供给进程。操作系统也可能会用参数初始化栈。具体来说，它会将参数填入main()函数，即argc和argv数组。
⏱ 2024-03-10 11:23:12 ^30179184-11-4234-4411&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一篇关于Multics的早期论文，描述了我们在现代系统中看到的许多基本概念和术语。计算作为实用工具，这背后的一些愿景终于在现代云系统中得以实现。
⏱ 2024-03-11 15:17:22 ^30179184-11-10782-10854&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第5章-插叙进程api&#34;&gt;第5章 插叙：进程API&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于CPU调度程序非常复杂，所以我们不能假设哪个进程会先运行。事实表明，这种不确定性（non-determinism）会导致一些很有趣的问题，特别是在多线程程序（multi-threaded program）中。在本书第2部分中学习并发（concurrency）时，我们会看到许多不确定性。
⏱ 2024-03-10 11:40:47 ^30179184-12-2927-3072&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第6章-机制受限直接执行&#34;&gt;第6章 机制：受限直接执行&lt;/h3&gt;
&lt;h3 id=&#34;第7章-进程调度介绍&#34;&gt;第7章 进程调度：介绍&lt;/h3&gt;
&lt;h3 id=&#34;第8章-调度多级反馈队列&#34;&gt;第8章 调度：多级反馈队列&lt;/h3&gt;
&lt;h3 id=&#34;第9章-调度比例份额&#34;&gt;第9章 调度：比例份额&lt;/h3&gt;
&lt;h3 id=&#34;第10章-多处理器调度高级&#34;&gt;第10章 多处理器调度（高级）&lt;/h3&gt;
&lt;h3 id=&#34;第11章-关于cpu虚拟化的总结对话&#34;&gt;第11章 关于CPU虚拟化的总结对话&lt;/h3&gt;
&lt;h3 id=&#34;第12章-关于内存虚拟化的对话&#34;&gt;第12章 关于内存虚拟化的对话&lt;/h3&gt;
&lt;h3 id=&#34;第13章-抽象地址空间&#34;&gt;第13章 抽象：地址空间&lt;/h3&gt;
&lt;h3 id=&#34;第14章-插叙内存操作api&#34;&gt;第14章 插叙：内存操作API&lt;/h3&gt;
&lt;h3 id=&#34;第15章-机制地址转换&#34;&gt;第15章 机制：地址转换&lt;/h3&gt;
&lt;h3 id=&#34;第16章-分段&#34;&gt;第16章 分段&lt;/h3&gt;
&lt;h3 id=&#34;第17章-空闲空间管理&#34;&gt;第17章 空闲空间管理&lt;/h3&gt;
&lt;h3 id=&#34;第18章-分页介绍&#34;&gt;第18章 分页：介绍&lt;/h3&gt;
&lt;h3 id=&#34;第19章-分页快速地址转换tlb&#34;&gt;第19章 分页：快速地址转换（TLB）&lt;/h3&gt;
&lt;h3 id=&#34;第20章-分页较小的表&#34;&gt;第20章 分页：较小的表&lt;/h3&gt;
&lt;h3 id=&#34;第21章-超越物理内存机制&#34;&gt;第21章 超越物理内存：机制&lt;/h3&gt;
&lt;h3 id=&#34;第22章-超越物理内存策略&#34;&gt;第22章 超越物理内存：策略&lt;/h3&gt;
&lt;h3 id=&#34;第23章-vaxvms虚拟内存系统&#34;&gt;第23章 VAX/VMS虚拟内存系统&lt;/h3&gt;
&lt;h3 id=&#34;第24章-内存虚拟化总结对话&#34;&gt;第24章 内存虚拟化总结对话&lt;/h3&gt;
&lt;h2 id=&#34;第2部分-并发&#34;&gt;第2部分 并发&lt;/h2&gt;
&lt;h3 id=&#34;第26章-并发介绍&#34;&gt;第26章 并发：介绍&lt;/h3&gt;
&lt;h3 id=&#34;第27章-插叙线程api&#34;&gt;第27章 插叙：线程API&lt;/h3&gt;
&lt;h3 id=&#34;第28章-锁&#34;&gt;第28章 锁&lt;/h3&gt;
&lt;h3 id=&#34;第29章-基于锁的并发数据结构&#34;&gt;第29章 基于锁的并发数据结构&lt;/h3&gt;
&lt;h3 id=&#34;第30章-条件变量&#34;&gt;第30章 条件变量&lt;/h3&gt;
&lt;h3 id=&#34;第31章-信号量&#34;&gt;第31章 信号量&lt;/h3&gt;
&lt;h3 id=&#34;第32章-常见并发问题&#34;&gt;第32章 常见并发问题&lt;/h3&gt;
&lt;h3 id=&#34;第33章-基于事件的并发进阶&#34;&gt;第33章 基于事件的并发（进阶）&lt;/h3&gt;
&lt;h3 id=&#34;第34章-并发的总结对话&#34;&gt;第34章 并发的总结对话&lt;/h3&gt;
&lt;h2 id=&#34;第3部分-持久性&#34;&gt;第3部分 持久性&lt;/h2&gt;
&lt;h3 id=&#34;第36章-io设备&#34;&gt;第36章 I/O设备&lt;/h3&gt;
&lt;h3 id=&#34;第37章-磁盘驱动器&#34;&gt;第37章 磁盘驱动器&lt;/h3&gt;
&lt;h3 id=&#34;第38章-廉价冗余磁盘阵列raid&#34;&gt;第38章 廉价冗余磁盘阵列（RAID）&lt;/h3&gt;
&lt;h3 id=&#34;第39章-插叙文件和目录&#34;&gt;第39章 插叙：文件和目录&lt;/h3&gt;
&lt;h3 id=&#34;第40章-文件系统实现&#34;&gt;第40章 文件系统实现&lt;/h3&gt;
&lt;h3 id=&#34;第41章-局部性和快速文件系统&#34;&gt;第41章 局部性和快速文件系统&lt;/h3&gt;
&lt;h3 id=&#34;第42章-崩溃一致性fsck和日志&#34;&gt;第42章 崩溃一致性：FSCK和日志&lt;/h3&gt;
&lt;h3 id=&#34;第43章-日志结构文件系统&#34;&gt;第43章 日志结构文件系统&lt;/h3&gt;
&lt;h3 id=&#34;第44章-数据完整性和保护&#34;&gt;第44章 数据完整性和保护&lt;/h3&gt;
&lt;h3 id=&#34;第45章-关于持久的总结对话&#34;&gt;第45章 关于持久的总结对话&lt;/h3&gt;
&lt;h3 id=&#34;第46章-关于分布式的对话&#34;&gt;第46章 关于分布式的对话&lt;/h3&gt;
&lt;h3 id=&#34;第47章-分布式系统&#34;&gt;第47章 分布式系统&lt;/h3&gt;
&lt;h3 id=&#34;第48章-sun的网络文件系统nfs&#34;&gt;第48章 Sun的网络文件系统（NFS）&lt;/h3&gt;
&lt;h3 id=&#34;第49章-andrew文件系统afs&#34;&gt;第49章 Andrew文件系统（AFS）&lt;/h3&gt;
&lt;h3 id=&#34;第50章-关于分布式的总结对话&#34;&gt;第50章 关于分布式的总结对话&lt;/h3&gt;
&lt;h2 id=&#34;附录a-关于虚拟机监视器的对话&#34;&gt;附录A 关于虚拟机监视器的对话&lt;/h2&gt;
&lt;h2 id=&#34;附录b-虚拟机监视器&#34;&gt;附录B 虚拟机监视器&lt;/h2&gt;
&lt;h2 id=&#34;附录c-关于监视器的对话&#34;&gt;附录C 关于监视器的对话&lt;/h2&gt;
&lt;h2 id=&#34;附录d-关于实验室的对话&#34;&gt;附录D 关于实验室的对话&lt;/h2&gt;
&lt;h2 id=&#34;附录e-实验室指南&#34;&gt;附录E 实验室：指南&lt;/h2&gt;
&lt;h2 id=&#34;附录f-实验室系统项目&#34;&gt;附录F 实验室：系统项目&lt;/h2&gt;
&lt;h2 id=&#34;附录g-实验室xv6项目&#34;&gt;附录G 实验室：xv6项目&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第2章-操作系统介绍-1&#34;&gt;第2章 操作系统介绍&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 保护是操作系统基本原理之一的核心，这就是隔离（isolation）。让进程彼此隔离是保护的关键，因此决定了OS必须执行的大部分任务。  ^6733360-7PAcdQ6RQ
- 💭 进程的很多事情交给OS去做
- ⏱ 2024-03-10 10:51:30&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在发起系统调用时 [通常通过一个称为陷阱（trap）的特殊硬件指令]，硬件将控制转移到预先指定的陷阱处理程序（trap handler）（即预先设置的操作系统），并同时将特权级别提升到内核模式（kernel mode）。  ^6733360-7PAcMTi7s
- 💭 在指令集看到过这个
- ⏱ 2024-03-10 11:00:08&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 更聪明的人接触到计算机，从而让计算机系统做出更有趣和漂亮的事情。  ^6733360-7PAcQ1JgR
- 💭 开源的好处
- ⏱ 2024-03-10 11:00:55&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但是，我们将讨论许多重要的主题，包括CPU和内存虚拟化的基础知识、并发以及通过设备和文件系统的持久性。别担心！虽然有很多内容要介绍，但其中大部分都很酷。这段旅程结束时，你将会对计算机系统的真实工作方式有一个全新的认识。现在开始吧！  ^6733360-7PAd7O75k
- 💭 书籍介绍不错
- ⏱ 2024-03-10 11:05:17&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第4章-抽象进程-1&#34;&gt;第4章 抽象：进程&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 要实现CPU的虚拟化，要实现得好，操作系统就需要一些低级机制以及一些高级智能。我们将低级机制称为机制（mechanism）。机制是一些低级方法或协议，实现了所需的功能。例如，我们稍后将学习如何实现上下文切换（context switch），它让操作系统能够停止运行一个程序，并开始在给定的CPU上运行另一个程序。所有现代操作系统都采用了这种分时机制。  ^6733360-7PAdvtWhX
- 💭 这里也有context switch
- ⏱ 2024-03-10 11:11:07&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 最后，程序也经常访问持久存储设备。此类I/O信息可能包含当前打开的文件列表。  ^6733360-7PAdZjOxf
- 💭 进程特征由三方表征，内存，寄存器和打开的文件
- ⏱ 2024-03-10 11:18:28&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 通过将代码和静态数据加载到内存中，通过创建和初始化栈以及执行与I/O设置相关的其他工作，OS现在（终于）为程序执行搭好了舞台。然后它有最后一项任务：启动程序，在入口处运行，即main()。通过跳转到main()例程（第5章讨论的专门机制），OS将CPU的控制权转移到新创建的进程中，从而程序开始执行。  ^6733360-7PAemFQn2
- 💭 先加载后运行，原来这么来的
- ⏱ 2024-03-10 11:24:13&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 更具体地说，Process0发起I/O并被阻塞，等待I/O完成。例如，当从磁盘读取数据或等待网络数据包时，进程会被阻塞。OS发现Process0不使用CPU并开始运行Process1。当Process1运行时，I/O完成，将Process0移回就绪状态。最后，Process1结束，Process0运行，然后完成。  ^6733360-7PAeHR4vt
- 💭 io速度比CPU慢很多
- ⏱ 2024-03-10 11:29:26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当一个进程停止时，它的寄存器将被保存到这个内存位置。通过恢复这些寄存器（将它们的值放回实际的物理寄存器中），操作系统可以恢复运行该进程。我们将在后面的章节中更多地了解这种技术，它被称为上下文切换（context switch）  ^6733360-7PAeP9FnC
- 💭 寄存器数据存储在内存中然后再恢复寄存器内容的过程就是上下文切换
- ⏱ 2024-03-10 11:31:14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 xv6是世界上颇有魅力的、真实的小型操作系统。请下载并利用它来了解更多关于操作系统实际工作方式的细节。  ^6733360-7PAeVgIqg
- 💭 可以下载玩玩
- ⏱ 2024-03-10 11:32:44&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%95%B0%E7%A0%81%E6%91%84%E5%BD%B1%E6%9E%84%E5%9B%BE%E5%85%89%E5%BD%B1%E8%89%B2%E5%BD%A9%E7%AC%AC2%E7%89%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%95%B0%E7%A0%81%E6%91%84%E5%BD%B1%E6%9E%84%E5%9B%BE%E5%85%89%E5%BD%B1%E8%89%B2%E5%BD%A9%E7%AC%AC2%E7%89%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 数码摄影构图·光影·色彩（第2版）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/51/YueWen_603161/t7_YueWen_603161.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 数码摄影构图·光影·色彩（第2版）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 数码摄影构图·光影·色彩（第2版）&lt;/li&gt;
&lt;li&gt;作者： 张炜 郑志强&lt;/li&gt;
&lt;li&gt;简介： 本书分为3篇，主题分别为构图、光影和色彩。第1篇主要介绍了构图的起源、构图的法则，以及常见的构图形式；第2篇主要介绍了光线的属性及特点、曝光与测光的知识、摄影光影效果拍摄技巧等；第3篇主要介绍了色彩的由来、色彩关系与色系和色彩在摄影中的应用等。&lt;/li&gt;
&lt;li&gt;出版时间 2012-10-31 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111396802&lt;/li&gt;
&lt;li&gt;分类： 艺术-摄影&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/01732400593419017731e90&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;第1篇-构图&#34;&gt;第1篇 构图&lt;/h2&gt;
&lt;h3 id=&#34;第1章-构图基础&#34;&gt;第1章 构图基础&lt;/h3&gt;
&lt;h3 id=&#34;第2章-构图法则&#34;&gt;第2章 构图法则&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 学习摄影构图，黄金分割构图法（以下称为黄金构图法则）是必须掌握的构图知识，因为黄金构图法则是摄影学中最重要的构图法则，并且其他许多构图方法都是由黄金构图演变或简化而来的。而黄金构图法则又是由黄金分割点演化而来的。黄金分割是指在一条直线上，将一个点置于黄金分割点上时给人的视觉感受最佳。详细的分割理论比较复杂，这里只对摄影构图中常用的实例进行讲解。“黄金分割”公式可以从一个正方形来推导，将正方形的一条边分成两等分，取中点X，以X为圆心，线段XY1为半径画圆，圆弧与底边延长线的交点为Z点，这样可将正方形延伸并连接为一个矩形，由图中可知，a∶c=b∶a=5∶8。在摄影学中，35mm胶片幅面的比率正好非常接近这种5∶8的比率（24∶36=5∶7.5），因此在摄影学中可以比较完美地利用黄金分割法构图。[插图]各边线段长度的相互关系a∶c=b∶a=5∶8。通过上述推导可得到一个被认为很完美的矩形，在这一矩形中，连接该矩形左上角和右下角对角线，然后从右上角向Y点作一线段交于对角线，这样就把矩形分成了三个不同的部分。按照这三个区域安排画面中各不同平面的方式，即为比较标准的黄金构图。[插图]应用于摄影领域最完整的黄金构图如左侧手绘图所示，红、白、蓝三色区域代表不同景物的画面比例，按照此比例安排景物，最合乎黄金构图法则。
⏱ 2023-11-10 10:19:16 ^603161-5-1129-2185&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第3章-构图形式&#34;&gt;第3章 构图形式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ● 本画面是单个人物主体的三角形构图，所以必须使用正三角形的构图方式，这样才会表现出稳定、可靠、踏实的感觉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;● 采用偏中间平均测光的方式对主体人物进行测光，并增加一定的曝光补偿，使主体后的舞台人物能有少许的细节表现，用以交代主体所处的环境。&lt;/p&gt;
&lt;p&gt;● 拍摄舞台题材的作品时，善于利用舞台灯光来表现主体是非常重要的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⏱ 2023-11-10 16:53:29 ^603161-6-7410&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第2篇-光与影&#34;&gt;第2篇 光与影&lt;/h2&gt;
&lt;h3 id=&#34;第4章-光的基本概念&#34;&gt;第4章 光的基本概念&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 拍摄散射光下的风光题材时，因为现场无明显的光影层次，所以取景时要注意选取有一定明暗反差的景物。
⏱ 2023-11-10 18:17:27 ^603161-8-3913-3960&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 拍摄剪影效果的技巧：拍摄时，对准画面中的高光部位（亮部）进行测光，这样拍得的照片中高光部分曝光正常，而主体部分曝光不足显示为黑色，黑色的边缘将主体轮廓很好地勾画出来，如同剪刀剪过一样。剪影是摄影中常见的一类拍摄方式。
⏱ 2023-11-10 21:43:07 ^603161-8-11837-11945&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第5章-曝光与测光&#34;&gt;第5章 曝光与测光&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 局部测光模式适合被摄主体位于画面中的某一部分或是区域，并且该区域与周围环境光线相差较大的情况，这样可以获得所需的局部曝光非常准确的照片。局部测光方式可以认为是点测光方式的一个分支，特别能适应一些特殊拍摄环境的需要。这种测光模式比较适合于舞台、人像等摄影题材，另外，在逆光拍摄时也较常用。[插图]
⏱ 2023-11-11 05:58:24 ^603161-9-6058-6231&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 采用点测光模式进行测光时，如果测画面中的亮点，则大部分区域会曝光不足，而如果测暗点，则会出现较多位置曝光过度的情况。一条比较简单的规律就是对画面中要表达的重点或是主体进行测光，例如在光线均匀的室内拍摄人物，许多摄影师就会使用点测光模式对人物的重点部位（如眼睛、面部或具有特点的衣服、肢体）进行测光，以达到形成欣赏者的视觉中心并突出主体的效果。
⏱ 2023-11-11 06:00:13 ^603161-9-8073-8244&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在了解了常见的4种测光模式之后，摄影者会明白，使用评价测光模式拍摄时，画面明暗程度与测光点的位置是没有关系的，因为评价测光是对画面的整体进行曝光后取平均值。而其他三种测光模式，只有测光点或测光区域内的曝光是最准确的，画面内其他区域的曝光则不一定正常。如果要同时保证其他位置的曝光也准确，就要选择能够代表画面整体明暗情况的位置进行测光。其实测光点的选择比较简单，只要寻找环境中反射率接近测光标准的18%反射率的位置即可。一般情况下，在都市内拍摄时，水泥墙体、发灰的路面、绿色植物的叶片反射率均接近18%，可以作为测光点使用；外出拍摄风光时，绿色植物的叶片是很好的测光点，如果环境中没有其他反射率接近18%的景物，可以伸出自己的手臂，对手背测光，这虽然是一种无奈的应急之举，但却会获得较好的结果。
⏱ 2023-11-11 06:01:52 ^603161-9-10154-10529&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 曝光补偿只适用于程序或半程序控制的模式，如光圈优先（Av）、快门优先（Tv）、自动模式（P）等。在手动模式（M）下，没有曝光补偿功能。
⏱ 2023-11-11 06:06:51 ^603161-9-14241-14308&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  应该注意，曝光不足是景物的亮度不够，虽然损失了细节，但如果提高亮度，则能够在一定程度上很好地追回细节和画质；曝光过度则不然，亮度过高造成细节损失，是无法追回细节和画质的。现在摄影者应该知道，拍摄时要尽量使曝光准确，如果无法准确掌握现场的光线情况，那么应该宁愿照片曝光稍有不足，也不要使照片曝光过度，否则画质就会被彻底损坏，无法补救了。 ^603161-9-20982-21149&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 宁欠勿过的原因 - ⏱ 2023-11-11 09:02:40&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;59-曝光锁定-ae-l&#34;&gt;5.9 曝光锁定 AE-L&lt;/h4&gt;
&lt;h3 id=&#34;第6章-一天中各时段的光线特性&#34;&gt;第6章 一天中各时段的光线特性&lt;/h3&gt;
&lt;h3 id=&#34;第7章-光影的艺术&#34;&gt;第7章 光影的艺术&lt;/h3&gt;
&lt;h3 id=&#34;第8章-闪光灯的效果&#34;&gt;第8章 闪光灯的效果&lt;/h3&gt;
&lt;h2 id=&#34;第3篇-色彩&#34;&gt;第3篇 色彩&lt;/h2&gt;
&lt;h3 id=&#34;第9章-认识色彩&#34;&gt;第9章 认识色彩&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 红色光谱是自然界中可见光谱波长最短的一种，也是因为这个原因，一天中的清晨和傍晚只有红色光波长附近的光透过厚厚的云层投射到地面，使得拍摄出的摄影作品整体风格偏红、橙等色彩，给人以非常温暖的感觉。
⏱ 2023-11-09 18:15:44 ^603161-15-8254-8350&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第10章-摄影中的色彩运用技巧&#34;&gt;第10章 摄影中的色彩运用技巧&lt;/h3&gt;
&lt;h3 id=&#34;第11章-相机设定与色彩&#34;&gt;第11章 相机设定与色彩&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第2章-构图法则-1&#34;&gt;第2章 构图法则&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 “黄金分割”公式可以从一个正方形来推导，将正方形的一条边分成两等分，取中点X，以X为圆心，线段XY1为半径画圆，圆弧与底边延长线的交点为Z点，这样可将正方形延伸并连接为一个矩形，由图中可知，a∶c=b∶a=5∶8。在摄影学中，35mm胶片幅面的比率正好非常接近这种5∶8的比率（24∶36=5∶7.5），因此在摄影学中可以比较完美地利用黄金分割法构图。
[插图]  ^6733360-7MBZSR3OK
- 💭 黄金分割由来
- ⏱ 2023-11-10 08:35:43&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 具体地说，动静对比构图主要是利用相机快门速度调节或相机自身移动来实现。动静对比构图有以下3种情况：第一种情况是画面中有运动与静止的对象时，将快门速度调整到合适的快门程度，可以营造出静止景物仍然静止，运动景物运动模糊的效果，动静结合，增加画面的趣味性和艺术性；第二种情况是通过相机自身的运动来实现，镜头对准运动主体，并跟随主体运动轨迹移动视角，这样在按下快门时运动相对于镜头主体是静止的，而原本静止的前后景相对于镜头却是运动的，于是也可以拍摄出动态的画面效果；第三种动静对比构图称为曝光中途变焦法，它也适用于画面中没有运动对象的场景，是指在对焦完成后的曝光过程中旋转镜头上的变焦环，这样会拍摄出画面中央清晰，四周呈现爆炸模糊的效果，具有非常强的视觉冲击力。
[插图]  ^6733360-7MC6X6N3O
- 💭 这个好玩
- ⏱ 2023-11-10 10:23:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 与大小对比构图、远近对比构图等空间实际对象的构图不同，明暗对比构图是一种单反相机光影与曝光的控制和调整。使用明暗对比构图时，需要掌握正确的曝光条件，通过表现主体、陪体、前景与背景的曝光程度（也就是明暗度）来强调主体的位置与重要性。使用明暗对比法构图时，要求画面中亮部区域与暗部区域的明暗对比反差很大，又要保留部分暗部的细节，这会使摄影者在对画面曝光时遇到一定困难，应该慎重选择测光点位置。有时，画面中很难找到合适的测光点，如果对亮处测光，需要增加一定的曝光补偿；如果对暗处测光，则需要降低一定的曝光补偿。
[插图]  ^6733360-7MC76jhvv
- 💭 明暗对比掌握曝光技巧很重要
- ⏱ 2023-11-10 10:25:55&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 太阳光线还比较强时，不要使相机长时间对着太阳。  ^6733360-7MC7lAMPf
- 💭 相机正对强光要小心
- ⏱ 2023-11-10 10:29:41&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第5章-曝光与测光-1&#34;&gt;第5章 曝光与测光&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 应该注意，曝光不足是景物的亮度不够，虽然损失了细节，但如果提高亮度，则能够在一定程度上很好地追回细节和画质；曝光过度则不然，亮度过高造成细节损失，是无法追回细节和画质的。现在摄影者应该知道，拍摄时要尽量使曝光准确，如果无法准确掌握现场的光线情况，那么应该宁愿照片曝光稍有不足，也不要使照片曝光过度，否则画质就会被彻底损坏，无法补救了。  ^6733360-7MDxZ4IAc
- 💭 宁欠勿过的原因
- ⏱ 2023-11-11 09:03:04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第6章-一天中各时段的光线特性-1&#34;&gt;第6章 一天中各时段的光线特性&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 由于早晨地面和太阳之间的夹角很小，相对于摄影者来说，与太阳的距离较远，太阳光线必须通过很厚的大气层才能照射到摄影者所在的位置，因此波长很短的蓝、绿、黄色光线会被大气层阻挡，依次消失，这时只有波长很长的红色和橙色光线能够透过大气层照射到地面（光线一般由红、橙、黄、绿、青、蓝、紫七种光谱组成，波长由长到短排列）。因此早晨的光线色彩呈现出红色或橙色。  ^6733360-7MDycCXh4
- 💭 为什么早晨晚上是红色
- ⏱ 2023-11-11 09:06:24&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在镜头前加装偏振镜后，画面中的雾霭程度明显降低，如果调整偏振镜的角度，效果还能更好。  ^6733360-7MDAlnZlZ
- 💭 偏振镜用于风光摄影
- ⏱ 2023-11-11 09:39:06&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不少初级摄影者无法辨别晨曦与黄昏时的摄影作品，主要是因为这两个时间段的光线色温相差不大，光线与景物夹角也近乎一致。但通过仔细观察，可以总结出以下结论。
虽然色温与光线强度相差不大，但晨曦时的摄影作品相对来说要靓丽一些，而黄昏时分的摄影作品整体则要显得低沉、大气，这就如同人在年轻时候的青春靓丽与暮年时的练达持重。有经验的摄影师在拍摄黄昏时分的摄影作品时会注意这一点，刻意压低照片的整体亮度或是在构图时取更多的深色调景物。另外，水汽的影响会使晨曦时的景物显得更加娇嫩，黄昏时的景物则要暗淡一些。
[插图]  ^6733360-7MDAXj2JN
- 💭 区分早晨和傍晚
- ⏱ 2023-11-11 09:48:26&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第11章-相机设定与色彩-1&#34;&gt;第11章 相机设定与色彩&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 色温，从字面上理解就是色彩的温度，色彩也有温度吗？任何物体受热都会发光，当温度处于绝对零度时，任何物体都是黑色的，随着温度的升高，黑色物体开始发出不同颜色的光线，在升温的不同阶段，物体呈现的颜色不断变化，天体物理学家就是通过观察遥远星系的光线色彩判断他们的温度的。对黑体加热直到发光，在不同温度呈现出的色彩就是色温，单位为K（开尔文）。例如，刚点燃煤炭时，温度相对较低，煤炭呈现红色，燃烧一段时间后，会呈现出黄色，当煤炭燃烧非常旺盛时，则火苗可能会呈现出蓝色的光芒，这就是色温变化的一种表现。  ^6733360-7MEbtFbTh
- 💭 解释很清楚
- ⏱ 2023-11-11 19:06:05&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 相机色温高于实际色温，这样拍得的画面会偏红，相机色温低于实际色温，这样拍得的画面就会偏蓝。  ^6733360-7MDNhOYya
- 💭 没说原因
- ⏱ 2023-11-11 12:56:43&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%96%AF%E5%9D%A6%E7%A6%8F%E9%AB%98%E6%95%88%E7%9D%A1%E7%9C%A0%E6%B3%95/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%96%AF%E5%9D%A6%E7%A6%8F%E9%AB%98%E6%95%88%E7%9D%A1%E7%9C%A0%E6%B3%95/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 斯坦福高效睡眠法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/849/23399849/t7_23399849.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 斯坦福高效睡眠法|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 斯坦福高效睡眠法&lt;/li&gt;
&lt;li&gt;作者： 西野精治&lt;/li&gt;
&lt;li&gt;简介： 我们一生有1/3的时间在睡觉，但对于睡眠是怎么一回事，却浑然不知。熬夜会使女性越来越胖？早晨几点起床身体感觉最舒服？平时熬夜，周末补觉有用吗？午觉怎么睡才管用？为什么睡得越多，感觉越累？睡不好觉，或许正困扰着你与身边的人。翻开本书，三个步骤，带你远离失眠困扰，十大攻略，教你安心睡个好觉！&lt;/li&gt;
&lt;li&gt;出版时间 2018-10-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787514223736&lt;/li&gt;
&lt;li&gt;分类： 心理-心理学应用&lt;/li&gt;
&lt;li&gt;出版社： 文化发展出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/f613282071650da9f61d3db&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;序言&#34;&gt;序言&lt;/h2&gt;
&lt;h3 id=&#34;斯坦福大学睡眠研究所&#34;&gt;斯坦福大学睡眠研究所&lt;/h3&gt;
&lt;h3 id=&#34;睡得久就是睡得好吗&#34;&gt;“睡得久”就是“睡得好”吗？&lt;/h3&gt;
&lt;h3 id=&#34;清醒与睡眠&#34;&gt;清醒与睡眠&lt;/h3&gt;
&lt;h3 id=&#34;斯坦福大学的睡眠法则&#34;&gt;斯坦福大学的睡眠法则&lt;/h3&gt;
&lt;h3 id=&#34;睡眠既是伙伴也是敌人&#34;&gt;睡眠既是伙伴，也是敌人&lt;/h3&gt;
&lt;h2 id=&#34;第1章-睡得多不等于睡得好&#34;&gt;第1章 睡得多不等于睡得好&lt;/h2&gt;
&lt;h3 id=&#34;你陷入睡眠负债地狱了吗&#34;&gt;你陷入“睡眠负债地狱”了吗？&lt;/h3&gt;
&lt;h3 id=&#34;遗传基因决定理想的睡眠时间&#34;&gt;遗传基因决定理想的睡眠时间&lt;/h3&gt;
&lt;h3 id=&#34;充足的睡眠仍无法让大脑满足&#34;&gt;充足的睡眠仍无法让大脑满足&lt;/h3&gt;
&lt;h3 id=&#34;黄金90分钟培养最强大脑和体魄&#34;&gt;黄金90分钟：培养最强大脑和体魄&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在睡眠保养方面的关键，就是如何加深最初的非REM睡眠。
⏱ 2019-04-18 22:29:18 ^23399849-13-2710-2737&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第2章-为什么人生13的时间都在睡觉&#34;&gt;第2章 为什么人生1/3的时间都在睡觉？&lt;/h2&gt;
&lt;h3 id=&#34;不可忽视的睡眠共性&#34;&gt;不可忽视的睡眠共性&lt;/h3&gt;
&lt;h3 id=&#34;睡眠的五大使命&#34;&gt;睡眠的五大使命&lt;/h3&gt;
&lt;h3 id=&#34;不可思议的睡眠终点站梦&#34;&gt;不可思议的睡眠终点站——梦&lt;/h3&gt;
&lt;h3 id=&#34;睡眠质量决定清醒的程度&#34;&gt;睡眠质量决定清醒的程度&lt;/h3&gt;
&lt;h2 id=&#34;第3章-黄金90分钟睡眠法则&#34;&gt;第3章 黄金90分钟睡眠法则&lt;/h2&gt;
&lt;h3 id=&#34;黄金90分钟决定睡眠质量&#34;&gt;黄金90分钟决定睡眠质量&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一定不要忽视最初的困意。明明犯困却坚持不睡，之后就很难再进入到深度睡眠的状态，而且无论睡多久都不会有一个良好的睡眠质量。
⏱ 2019-04-19 08:47:56 ^23399849-20-1296-1356&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;黄金90分钟的三大优点&#34;&gt;黄金90分钟的三大优点&lt;/h3&gt;
&lt;h3 id=&#34;培养精良的睡眠部队&#34;&gt;培养精良的“睡眠部队”&lt;/h3&gt;
&lt;h3 id=&#34;体温和大脑是睡眠的开关&#34;&gt;体温和大脑是睡眠的“开关”&lt;/h3&gt;
&lt;h2 id=&#34;第4章-斯坦福高效睡眠法&#34;&gt;第4章 斯坦福高效睡眠法&lt;/h2&gt;
&lt;h3 id=&#34;用体温和大脑打造最佳睡眠&#34;&gt;用体温和大脑打造最佳睡眠&lt;/h3&gt;
&lt;h3 id=&#34;提升睡眠质量的三大体温开关&#34;&gt;提升睡眠质量的三大体温开关&lt;/h3&gt;
&lt;h3 id=&#34;利用脑部开关让睡眠模式化&#34;&gt;利用脑部开关让睡眠模式化&lt;/h3&gt;
&lt;h3 id=&#34;大脑也有不想睡的时候&#34;&gt;大脑也有不想睡的时候？&lt;/h3&gt;
&lt;h2 id=&#34;第5章-斯坦福终极清醒战略&#34;&gt;第5章 斯坦福终极清醒战略&lt;/h2&gt;
&lt;h3 id=&#34;清醒时的状态也决定了能否睡得香&#34;&gt;清醒时的状态，也决定了能否睡得香&lt;/h3&gt;
&lt;h3 id=&#34;斯坦福清醒战略&#34;&gt;斯坦福清醒战略&lt;/h3&gt;
&lt;h2 id=&#34;第6章-能控制睡意的人也能掌控自己的人生&#34;&gt;第6章 能控制睡意的人，也能掌控自己的人生&lt;/h2&gt;
&lt;h3 id=&#34;睡魔是敌还是友&#34;&gt;“睡魔”是敌还是友？&lt;/h3&gt;
&lt;h3 id=&#34;打败睡魔的抗瞌睡法&#34;&gt;打败“睡魔”的抗瞌睡法&lt;/h3&gt;
&lt;h3 id=&#34;快速恢复能量的小睡方法&#34;&gt;快速恢复能量的小睡方法&lt;/h3&gt;
&lt;h3 id=&#34;改变人生的13也会影响剩下的23&#34;&gt;改变人生的1/3，也会影响剩下的2/3&lt;/h3&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;h3 id=&#34;大家都是潜在的患者&#34;&gt;大家都是潜在的患者&lt;/h3&gt;
&lt;h3 id=&#34;兴奋到会睡着的狗&#34;&gt;兴奋到会睡着的狗&lt;/h3&gt;
&lt;h3 id=&#34;嗜睡症发病的原因&#34;&gt;嗜睡症发病的原因&lt;/h3&gt;
&lt;h3 id=&#34;斯坦福睡眠研究的使命&#34;&gt;斯坦福睡眠研究的使命&lt;/h3&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;睡得久就是睡得好吗-1&#34;&gt;“睡得久”就是“睡得好”吗？&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 比起无尽的加班，甚至休息日都上班，人们更希望的是短时间内高效而集中的工作。  ^6733360-77J5Y274l
- 💭 非常好的方向
- ⏱ 2019-04-18 21:18:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;斯坦福大学的睡眠法则-1&#34;&gt;斯坦福大学的睡眠法则&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 只要“最初90分钟”的睡眠质量得到了保证，剩余时间的睡眠质量也会相应变得更好。  ^6733360-77J680YFL
- 💭 是嘛
- ⏱ 2019-04-18 21:21:07&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%96%B0%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%96%B0%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 新摄影笔记&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/839/40223839/t7_40223839.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 新摄影笔记|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 新摄影笔记&lt;/li&gt;
&lt;li&gt;作者： 宁思潇潇&lt;/li&gt;
&lt;li&gt;简介： 本书是作者在《摄影笔记》的基础上进行悉心编辑整理后的新作。作者结合亲身的拍摄经历，用通俗的语言将摄影技术娓娓道来，使读者真切地感受到学习摄影并不难。本书共分为4章，包含取景、曝光、摄影中的虚实、构图等内容。作者总结了亲身拍摄经验，创造出一套摄影教程体系，以思维导图的形式，引导摄影爱好者进行学习。作者深入浅出的讲解方式，让读者能够快速上手学习摄影技法，并通过实践，不断检验和提高自己的摄影水平。本书适合摄影初学者和摄影爱好者学习参考。&lt;/li&gt;
&lt;li&gt;出版时间 2021-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115564481&lt;/li&gt;
&lt;li&gt;分类： 艺术-摄影&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/3d4322207265c45f3d40a55&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;内容提要&#34;&gt;内容提要&lt;/h2&gt;
&lt;h2 id=&#34;序1&#34;&gt;序1&lt;/h2&gt;
&lt;h2 id=&#34;序2&#34;&gt;序2&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;第1章-取景&#34;&gt;第1章 取景&lt;/h2&gt;
&lt;h3 id=&#34;第1节-焦距&#34;&gt;第1节 焦距&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这个数字越小，我们称之为焦距越短，拍摄的视野就越宽，取景范围就越广，画面中容纳的景物也就越多，但是每个景物在画面中占的面积就越小。这个数字越大，我们称之为焦距越长，拍摄的视野就越窄，取景范围就越窄，画面中容纳的景物也就越少，但是每个景物在画面中占的面积就越大。
⏱ 2023-12-29 12:11:03 ^40223839-35-2012-2171&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  200mm和300mm就是妥妥的长焦镜头了，可用于拍摄鸟类啊，荷花啊，运动物体啊，那种离得不是很远的就可以“打”得到了。所以这种焦距的镜头也被称为望远镜头或者摄远镜头，多用于拍摄远处的景物。 ^40223839-35-6859-6954&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 老法师打鸟 - ⏱ 2023-12-29 12:29:48&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因为两边打孔，所以35mm的宽度不能完全被用上，所以一张35mm的胶片实际的尺寸是36mm×24mm，以3:2为比例。这个尺寸就是通常说的135全画幅或者35mm全画幅。如果大家家里还有曝光后胶片的底片，可以用尺子量一量。
⏱ 2023-12-29 12:42:03 ^40223839-35-11162-11273&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 (1)全画幅相机只能用全画幅镜头。(2)全画幅镜头既可以用在全画幅相机上，也可以用在半画幅相机（APS-C画幅相机的俗称）上。(3)可换镜头上面标注的焦距都是实际焦距。全画幅镜头和半画幅专用镜头都是如此。(4)只要是半画幅机身，不管用什么镜头，就一定要通过焦距转换系数来求得等效焦距。(5)全画幅系数是1，就是不需要计算，等效焦距就是实际焦距。尼康、索尼、宾得、富士半画幅相机的焦距转换系数是1.5。佳能半画幅相机的焦距转换系数是1.6。奥之心和松下的M/43系统是乘2。
⏱ 2023-12-30 17:08:17 ^40223839-35-13828-14180&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第2节-透视&#34;&gt;第2节 透视&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这也说明了焦距与透视的一些间接关系：因为使用广角镜头拍摄往往离得近，所以透视效果明显；因为使用长焦镜头拍摄往往离得远，所以透视效果不明显。
⏱ 2023-12-30 18:27:40 ^40223839-36-3588-3657&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;延伸学习-问题与提高&#34;&gt;延伸学习 问题与提高&lt;/h3&gt;
&lt;h2 id=&#34;第2章-曝光&#34;&gt;第2章 曝光&lt;/h2&gt;
&lt;h3 id=&#34;第1节-白加黑减&#34;&gt;第1节 “白加黑减”&lt;/h3&gt;
&lt;h3 id=&#34;第2节-控制曝光三要素及互易律&#34;&gt;第2节 控制曝光三要素及互易律&lt;/h3&gt;
&lt;h3 id=&#34;第3节-曝光模式&#34;&gt;第3节 曝光模式&lt;/h3&gt;
&lt;h3 id=&#34;第4节-正确的曝光&#34;&gt;第4节 正确的曝光&lt;/h3&gt;
&lt;h3 id=&#34;第5节-光线&#34;&gt;第5节 光线&lt;/h3&gt;
&lt;h3 id=&#34;延伸学习-问题与提高-1&#34;&gt;延伸学习 问题与提高&lt;/h3&gt;
&lt;h2 id=&#34;第3章-虚实&#34;&gt;第3章 虚实&lt;/h2&gt;
&lt;h3 id=&#34;第1节-对焦与景深&#34;&gt;第1节 对焦与景深&lt;/h3&gt;
&lt;h3 id=&#34;第2节-通过景深实现虚化&#34;&gt;第2节 通过景深实现虚化&lt;/h3&gt;
&lt;h3 id=&#34;第3节-快门控制虚实&#34;&gt;第3节 快门控制虚实&lt;/h3&gt;
&lt;h3 id=&#34;延伸学习-问题与提高-2&#34;&gt;延伸学习 问题与提高&lt;/h3&gt;
&lt;h2 id=&#34;第4章-构图&#34;&gt;第4章 构图&lt;/h2&gt;
&lt;h3 id=&#34;第1节-构图法&#34;&gt;第1节 构图法&lt;/h3&gt;
&lt;h3 id=&#34;第2节-摄影构图的一些常识&#34;&gt;第2节 摄影构图的一些常识&lt;/h3&gt;
&lt;h3 id=&#34;延伸学习-问题与提高-3&#34;&gt;延伸学习 问题与提高&lt;/h3&gt;
&lt;h2 id=&#34;最终的总结&#34;&gt;最终的总结&lt;/h2&gt;
&lt;h2 id=&#34;跋&#34;&gt;跋&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第1节-焦距-1&#34;&gt;第1节 焦距&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 超广角焦距一般指的是24mm以下的焦距——就是“mm”前的数字小于24。因为视角大，所以适合拍摄大场景，建筑啊、风景啊，都是可以的。同时也适合在狭小空间内部拍摄，能把小空间拍摄得“很大”。  ^6733360-7NOLX4FHi
- 💭 链家房产照片
- ⏱ 2023-12-29 12:23:17&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 200mm和300mm就是妥妥的长焦镜头了，可用于拍摄鸟类啊，荷花啊，运动物体啊，那种离得不是很远的就可以“打”得到了。所以这种焦距的镜头也被称为望远镜头或者摄远镜头，多用于拍摄远处的景物。  ^6733360-7NOMnVMqE
- 💭 老法师打鸟
- ⏱ 2023-12-29 12:29:54&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%9B%BE%E5%9B%BD%E8%97%A9%E4%BC%A0%E5%BC%A0%E5%AE%8F%E6%9D%B0%E5%85%A8%E6%96%B0%E5%A2%9E%E8%A1%A5%E7%89%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%9B%BE%E5%9B%BD%E8%97%A9%E4%BC%A0%E5%BC%A0%E5%AE%8F%E6%9D%B0%E5%85%A8%E6%96%B0%E5%A2%9E%E8%A1%A5%E7%89%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 曾国藩传（张宏杰全新增补版）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/23/yuewen_23774475/t7_yuewen_237744751687158200.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 曾国藩传（张宏杰全新增补版）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 曾国藩传（张宏杰全新增补版）&lt;/li&gt;
&lt;li&gt;作者： 张宏杰&lt;/li&gt;
&lt;li&gt;简介： &amp;ldquo;曾国藩，没有显赫的家世，天赋堪称晚清同时代大人物当中最差，却官至两江总督、直隶总督、武英殿大学士，在复杂的时代变局中超越众人，成就最大，被誉为大清“中兴第一名臣”，且最后全身而退。他的人生经历，无论是过去还是现在都给人以特别的启示。
他出身平常，家族五六百年没出过秀才，可谓典型的小镇青年。
他智商平常，考了7次才中秀才，却以笨功夫成功打通了科举之路，顺利进入翰林院。他一生崇尚笨拙，以扎实而非机巧取胜。
他踌躇满志进京，面对全国精英，发现自己见识狭隘、观念鄙俗，陷入自卑和焦虑。三十而立，他立志学做圣人，研读经典，广交朋友，提高自我管理能力，在京期间飞速升迁。
他善于把握机会和创造机会，天下大乱之际，一介书生独创湘军，统率群雄。对抗太平天国，屡战屡败，甚至两次投江自尽，多次深陷绝境。47岁时更被皇帝弃用，陷入人生低谷。
蛰居老家两年，他反思自我，最终大悔大悟。重新出山后，为人处世脱胎换骨，不仅清除了政治敌人，而且以“结硬寨、打呆仗”战胜了军事宿敌太平天国，位极人臣。
他眼光长远，审时度势，面对与洋人的差距，率先抛弃落后观念，倡导洋务运动，师夷长技以制夷。
他走过的每一步都成为人生精进的基石，最终从笨人到圣人，成为大清王朝的最后领航者和儒家文化的最后一个偶像。
翻开本书，看曾国藩如何以一种笨拙的精神，诠释一个持续奋斗者的升级之道。
&amp;quot;&lt;/li&gt;
&lt;li&gt;出版时间 2022-10-19 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787513921091&lt;/li&gt;
&lt;li&gt;分类： 历史-中国古代&lt;/li&gt;
&lt;li&gt;出版社： 民主与建设出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/66032040716ac50b660b6c7&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;自序&#34;&gt;自序&lt;/h2&gt;
&lt;h2 id=&#34;第一卷-京官时代&#34;&gt;第一卷 京官时代&lt;/h2&gt;
&lt;h3 id=&#34;第一章-曾国藩的七次科举之痛&#34;&gt;第一章 曾国藩的七次科举之痛&lt;/h3&gt;
&lt;h3 id=&#34;第二章-为什么要学做圣人&#34;&gt;第二章 为什么要“学做圣人”&lt;/h3&gt;
&lt;h3 id=&#34;第三章-惊人的进阶之道&#34;&gt;第三章 惊人的进阶之道&lt;/h3&gt;
&lt;h3 id=&#34;第四章-从前的官场愣头青&#34;&gt;第四章 从前的官场愣头青&lt;/h3&gt;
&lt;h2 id=&#34;第二卷-湘军崛起&#34;&gt;第二卷 湘军崛起&lt;/h2&gt;
&lt;h3 id=&#34;第五章-曾剃头的长沙之辱&#34;&gt;第五章 “曾剃头”的长沙之辱&lt;/h3&gt;
&lt;h3 id=&#34;第六章-湘军为什么牛气&#34;&gt;第六章 湘军为什么牛气&lt;/h3&gt;
&lt;h3 id=&#34;第七章-得而复失的湖北巡抚&#34;&gt;第七章 得而复失的湖北巡抚&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 臣系帮办团练之人，各处之兵勇既不能受调遣，外省之饷项亦恐不愿供应。虽谕旨令抚臣供支，而本省藩库现仅存银五千两，即起程一月之粮尚恐难备。且贼势猖獗如此，岂臣区区所能奏效？￼
 
说明了调兵筹饷之难。现在，皇帝给了他一个巡抚位子，湖北全省都可以听他指挥。他可以以湖北为根据地，从容筹划彻底打败太平天国的大业了。
不过，他还是得上疏辞谢一下。因为在出山之时，曾国藩已经告知天下亲友，自己孝中出山，只为救国，不为当官。不能不有所表示。所以他给皇帝上了一道奏折，恭谢天恩后又说：
 
奉命署理湖北巡抚，于公事毫无所益，于臣心万难自安。母丧未除，遽就官职，得罪名教，何以自立？是以不敢接受关防，仍由督臣收存。￼
 
咸丰皇帝接到这道折子，这才后悔自己拿回巡抚职务的上谕发得太早了。对啊，曾国藩按惯例肯定会辞谢巡抚一职，等他自己主动辞谢，我再顺水推舟，同意他的请求多好！现在倒成了自己出尔反尔，朝令夕改，实在是脸上火辣辣的。所以见了曾国藩这封奏疏，他自作聪明，在上面批了这样一句：
 
朕料汝必辞，又念及整师东下，署抚空有其名，故已降旨，令汝毋庸署湖北巡抚，赏给兵部侍郎衔。￼
 
就是说，我早就知道你肯定辞谢，所以你没辞之时，我就已经降旨不让你当了。
⏱ 2019-10-06 14:16:04 ^23774475-12-12945&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第八章-江西困境与大悔大悟&#34;&gt;第八章 江西困境与“大悔大悟”&lt;/h3&gt;
&lt;h3 id=&#34;第九章-安庆这块难啃的骨头&#34;&gt;第九章 安庆这块难啃的骨头&lt;/h3&gt;
&lt;h3 id=&#34;第十章-与何桂清的恩怨纠葛&#34;&gt;第十章 与何桂清的恩怨纠葛&lt;/h3&gt;
&lt;h3 id=&#34;第十一章-太平天国最后的战役&#34;&gt;第十一章 太平天国最后的战役&lt;/h3&gt;
&lt;h3 id=&#34;第十二章-将权位二字推让少许&#34;&gt;第十二章 “将权位二字，推让少许”&lt;/h3&gt;
&lt;h2 id=&#34;第三卷-总督生涯&#34;&gt;第三卷 总督生涯&lt;/h2&gt;
&lt;h3 id=&#34;第十三章-两江总督的清与浊&#34;&gt;第十三章 两江总督的清与浊&lt;/h3&gt;
&lt;h3 id=&#34;第十四章-洋人也是人&#34;&gt;第十四章 洋人也是人&lt;/h3&gt;
&lt;h3 id=&#34;第十五章-与接班人李鸿章共同剿捻&#34;&gt;第十五章 与接班人李鸿章共同“剿”捻&lt;/h3&gt;
&lt;h3 id=&#34;第十六章-天津教案曾国藩是怎么成为卖国贼的&#34;&gt;第十六章 天津教案：曾国藩是怎么成为“卖国贼”的&lt;/h3&gt;
&lt;h2 id=&#34;第四卷-曾国藩的最后岁月&#34;&gt;第四卷 曾国藩的最后岁月&lt;/h2&gt;
&lt;h3 id=&#34;第十七章-大清王朝最后的领航者&#34;&gt;第十七章 大清王朝最后的领航者&lt;/h3&gt;
&lt;h3 id=&#34;第十八章-曾国藩的遗产&#34;&gt;第十八章 曾国藩的遗产&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%9D%8E%E5%85%89%E8%80%80%E8%AE%BA%E4%B8%AD%E5%9B%BD%E4%B8%8E%E4%B8%96%E7%95%8C/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%9D%8E%E5%85%89%E8%80%80%E8%AE%BA%E4%B8%AD%E5%9B%BD%E4%B8%8E%E4%B8%96%E7%95%8C/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 李光耀论中国与世界&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/49/YueWen_277542/t7_YueWen_277542.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 李光耀论中国与世界|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 李光耀论中国与世界&lt;/li&gt;
&lt;li&gt;作者： 【新加坡】李光耀 【美】格雷厄姆·艾利森 罗伯特·D·布莱克威尔 阿里·温尼&lt;/li&gt;
&lt;li&gt;简介：     李光耀一讲话，各国总统、总理、外交官和企业首席执行官们都会洗耳恭听。他是新加坡的“国父”，在1959年至1990年担任新加坡总理，在50余年的世界舞台生涯中砥砺了智慧。他几乎是独当一面地领导了新加坡的转型，让新加坡的经济取得了西方式的成功。李光耀对东西方的地缘政治问题有自己独到的见解。从尼克松到奥巴马，历届美国总统都非常欢迎他访问白宫；从撒切尔到布莱尔，历任英国首相都肯定他的智慧；从新闻集团创始人默多克到埃克森美孚首席执行官蒂勒森，商业领袖们都对他的成就点头赞许。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;出版时间 2013-09-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787508640143&lt;/li&gt;
&lt;li&gt;分类： 政治军事-政治&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/bd732e20543c26bd747b0c7&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献辞&#34;&gt;献辞&lt;/h2&gt;
&lt;h2 id=&#34;重要人物如何评价&#34;&gt;重要人物如何评价&lt;/h2&gt;
&lt;h2 id=&#34;推荐序&#34;&gt;推荐序&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;第一章-辉煌与梦想中国的未来&#34;&gt;第一章 辉煌与梦想：中国的未来&lt;/h2&gt;
&lt;h3 id=&#34;中国领导人真的准备取代美国成为亚洲乃至世界的第一大国吗&#34;&gt;中国领导人真的准备取代美国，成为亚洲乃至世界的第一大国吗？&lt;/h3&gt;
&lt;h3 id=&#34;中国第一意味着什么如果成为亚洲主导力量中国对其他国家的行为方式将如何改变&#34;&gt;中国第一意味着什么？如果成为亚洲主导力量，中国对其他国家的行为方式将如何改变？&lt;/h3&gt;
&lt;h3 id=&#34;中国成为第一的战略是什么&#34;&gt;中国成为第一的战略是什么？&lt;/h3&gt;
&lt;h3 id=&#34;中国实施民族复兴的主要障碍是什么&#34;&gt;中国实施民族复兴的主要障碍是什么？&lt;/h3&gt;
&lt;h3 id=&#34;中国领导人对实现亚洲乃至更大范围主导权感受到多强的紧迫感&#34;&gt;中国领导人对实现亚洲乃至更大范围主导权感受到多强的紧迫感？&lt;/h3&gt;
&lt;h3 id=&#34;中国成为第一大国后将如何看待美国在亚洲角色的变化&#34;&gt;中国成为第一大国后将如何看待美国在亚洲角色的变化？&lt;/h3&gt;
&lt;h3 id=&#34;未来几十年中国能否保持30多年来的两位数增长&#34;&gt;未来几十年，中国能否保持30多年来的两位数增长？&lt;/h3&gt;
&lt;h3 id=&#34;中国会成为西方式民主国家吗&#34;&gt;中国会成为西方式民主国家吗？&lt;/h3&gt;
&lt;h3 id=&#34;中国真的会成为第一大国吗&#34;&gt;中国真的会成为第一大国吗？&lt;/h3&gt;
&lt;h3 id=&#34;应该如何评价习近平&#34;&gt;应该如何评价习近平？&lt;/h3&gt;
&lt;h2 id=&#34;第二章-霸权下的忧虑美国的未来&#34;&gt;第二章 霸权下的忧虑：美国的未来&lt;/h2&gt;
&lt;h3 id=&#34;美国正处于全面衰落中&#34;&gt;美国正处于全面衰落中？&lt;/h3&gt;
&lt;h3 id=&#34;美国的主要优势是什么&#34;&gt;美国的主要优势是什么？&lt;/h3&gt;
&lt;h3 id=&#34;美国政府的哪些方面最让人感到忧虑&#34;&gt;美国政府的哪些方面最让人感到忧虑？&lt;/h3&gt;
&lt;h3 id=&#34;美国文化最让人感到忧虑之处是什么&#34;&gt;美国文化最让人感到忧虑之处是什么？&lt;/h3&gt;
&lt;h3 id=&#34;有效的政府需要守护者吗&#34;&gt;有效的政府需要“守护者”吗？&lt;/h3&gt;
&lt;h3 id=&#34;美国有欧洲化的风险吗&#34;&gt;美国有欧洲化的风险吗？&lt;/h3&gt;
&lt;h3 id=&#34;要维持全球霸权美国需要做什么&#34;&gt;要维持全球霸权，美国需要做什么？&lt;/h3&gt;
&lt;h2 id=&#34;第三章-对抗的代价美中关系的未来&#34;&gt;第三章 对抗的代价：美中关系的未来&lt;/h2&gt;
&lt;h3 id=&#34;美中两国出现严重对抗的可能性有多大&#34;&gt;美中两国出现严重对抗的可能性有多大？&lt;/h3&gt;
&lt;h3 id=&#34;在美国应对中国崛起的战略中均势政策应该扮演什么角色&#34;&gt;在美国应对中国崛起的战略中，均势政策应该扮演什么角色？&lt;/h3&gt;
&lt;h3 id=&#34;为应对中国崛起美国政策与行动应该如何调整&#34;&gt;为应对中国崛起，美国政策与行动应该如何调整？&lt;/h3&gt;
&lt;h3 id=&#34;在应对中国崛起的过程中美国应该避免采取哪些政策与行动&#34;&gt;在应对中国崛起的过程中，美国应该避免采取哪些政策与行动？&lt;/h3&gt;
&lt;h3 id=&#34;随着中国逐渐崛起为一个大国美国政策与行动会严重影响中国的发展轨道与行为方式吗&#34;&gt;随着中国逐渐崛起为一个大国，美国政策与行动会严重影响中国的发展轨道与行为方式吗？&lt;/h3&gt;
&lt;h3 id=&#34;中国的政策与行动应该如何调整以同美国建立可持续的合作关系&#34;&gt;中国的政策与行动应该如何调整以同美国建立可持续的合作关系？&lt;/h3&gt;
&lt;h2 id=&#34;第四章-令人窒息的国家印度的未来&#34;&gt;第四章 令人窒息的国家：印度的未来&lt;/h2&gt;
&lt;h3 id=&#34;印度会崛起为一个大国吗如果会什么时候&#34;&gt;印度会崛起为一个大国吗？如果会，什么时候？&lt;/h3&gt;
&lt;h3 id=&#34;印度的民主治理体制给其长远发展前景带来了哪些限制&#34;&gt;印度的民主治理体制给其长远发展前景带来了哪些限制？&lt;/h3&gt;
&lt;h3 id=&#34;印度的文化给其长远发展前景带来了哪些限制&#34;&gt;印度的文化给其长远发展前景带来了哪些限制？&lt;/h3&gt;
&lt;h3 id=&#34;当前印度经济有哪些优势&#34;&gt;当前，印度经济有哪些优势？&lt;/h3&gt;
&lt;h3 id=&#34;长远来看印度经济面临哪些挑战其长远发展前景如何&#34;&gt;长远来看，印度经济面临哪些挑战？其长远发展前景如何？&lt;/h3&gt;
&lt;h3 id=&#34;在今后10年中印度经济前景与中国相比如何&#34;&gt;在今后10年中，印度经济前景与中国相比如何？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 然而，为什么中国的和平崛起会引发其他国家的担忧，而印度的发展则不会呢？是因为印度是一个存在多种政治力量的西方式民主国家、形成了一个内部相互制衡的体系吗？很有可能是这样，尤其是印度政府往往是由一二十个政党组成的联合政府……印度有能力以更好的方式在其国境之外更远的地方投射军事力量，但其他国家并不担心印度有侵略意图……当前，印度并不像中国那样对国际秩序构成挑战，而且在其基础设施达到一流国家的标准以及进一步推进经济自由化之前也不会构成这样的挑战。其实，美国、欧盟与日本之所以会支持印度，是因为它们想要一个更加平衡的世界，在这个世界上印度能与中国分庭抗礼……如果印度遥遥领先于中国会出现什么情况呢？到时美国和欧洲会支持中国吗？我对此表示怀疑。美欧对中国的发展依然有恐惧症，且不说它们对中国政府实行出版物审查制度强烈反感，仅仅是对某些政治事件的记忆就加强了它们这种恐惧。
⏱ 2023-12-09 21:10:05 ^277542-39-1151-1532&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;印度的民主模式对亚洲其他国家的意义有多大&#34;&gt;印度的民主模式对亚洲其他国家的意义有多大？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 虽然在早期发展阶段，中国较为迅速地推行改革，占据了一定的优势，但长远来看，印度可能凭借民主与法治体制占有优势。[插图]如果中国的政治架构不进行调整以适应高增长率引发的社会变化，那么印度就会占据优势，因为从长远来看，印度的政治体制更加灵活。[插图]
⏱ 2023-12-09 21:12:54 ^277542-40-1087-1337&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;在亚洲印度会成为中国的战略性对抗力量吗&#34;&gt;在亚洲，印度会成为中国的战略性对抗力量吗？&lt;/h3&gt;
&lt;h3 id=&#34;美印关系前景如何&#34;&gt;美印关系前景如何？&lt;/h3&gt;
&lt;h2 id=&#34;第五章-谁在威胁世界伊斯兰极端主义的未来&#34;&gt;第五章 谁在威胁世界：伊斯兰极端主义的未来&lt;/h2&gt;
&lt;h3 id=&#34;伊斯兰极端主义对西方构成了什么威胁&#34;&gt;伊斯兰极端主义对西方构成了什么威胁？&lt;/h3&gt;
&lt;h3 id=&#34;伊斯兰极端主义的根源是什么&#34;&gt;伊斯兰极端主义的根源是什么？&lt;/h3&gt;
&lt;h3 id=&#34;伊斯兰教本身对伊斯兰极端主义的滋生具有哪些影响&#34;&gt;伊斯兰教本身对伊斯兰极端主义的滋生具有哪些影响？&lt;/h3&gt;
&lt;h3 id=&#34;伊斯兰极端分子的主要目标是什么&#34;&gt;伊斯兰极端分子的主要目标是什么？&lt;/h3&gt;
&lt;h3 id=&#34;伊斯兰极端分子实现其目标的可能性有多大&#34;&gt;伊斯兰极端分子实现其目标的可能性有多大？&lt;/h3&gt;
&lt;h3 id=&#34;哪些因素会影响伊斯兰极端主义的未来&#34;&gt;哪些因素会影响伊斯兰极端主义的未来？&lt;/h3&gt;
&lt;h3 id=&#34;温和的穆斯林在同伊斯兰极端主义抗争的过程中具有什么作用&#34;&gt;温和的穆斯林在同伊斯兰极端主义抗争的过程中具有什么作用？&lt;/h3&gt;
&lt;h3 id=&#34;伊斯兰极端主义对世界安全的威胁会持续多久&#34;&gt;伊斯兰极端主义对世界安全的威胁会持续多久？&lt;/h3&gt;
&lt;h2 id=&#34;第六章-新加坡为什么如此成功经济增长的未来&#34;&gt;第六章 新加坡为什么如此成功：经济增长的未来&lt;/h2&gt;
&lt;h3 id=&#34;新加坡只用一代人的时间就从第三世界跻身第一世界给我们留下哪些启示&#34;&gt;新加坡只用一代人的时间就从第三世界跻身第一世界，给我们留下哪些启示？&lt;/h3&gt;
&lt;h3 id=&#34;国民经济增长与国民竞争力的主要驱动因素有哪些&#34;&gt;国民经济增长与国民竞争力的主要驱动因素有哪些？&lt;/h3&gt;
&lt;h3 id=&#34;价值观等隐性因素在促进增长提升竞争力中发挥了什么作用&#34;&gt;价值观等隐性因素在促进增长、提升竞争力中发挥了什么作用？&lt;/h3&gt;
&lt;h3 id=&#34;新时代的工人应该具备哪些核心竞争力&#34;&gt;新时代的工人应该具备哪些核心竞争力？&lt;/h3&gt;
&lt;h2 id=&#34;第七章-世界大势浩浩荡荡地缘政治与全球化的未来&#34;&gt;第七章 世界大势浩浩荡荡：地缘政治与全球化的未来&lt;/h2&gt;
&lt;h3 id=&#34;在今后10年间世界面临的最大问题将有哪些&#34;&gt;在今后10年间，世界面临的最大问题将有哪些？&lt;/h3&gt;
&lt;h3 id=&#34;俄罗斯的长远前景如何&#34;&gt;俄罗斯的长远前景如何？&lt;/h3&gt;
&lt;h3 id=&#34;巴西俄罗斯印度与中国即金砖四国会组成一个集团并具备极强的影响力吗&#34;&gt;巴西、俄罗斯、印度与中国，即金砖四国，会组成一个集团并具备极强的影响力吗？&lt;/h3&gt;
&lt;h3 id=&#34;东南亚国家联盟今后会作为一个集团获得影响力吗&#34;&gt;东南亚国家联盟今后会作为一个集团获得影响力吗？&lt;/h3&gt;
&lt;h3 id=&#34;可以从全球金融危机中吸取哪些教训&#34;&gt;可以从全球金融危机中吸取哪些教训？&lt;/h3&gt;
&lt;h3 id=&#34;全球化带来了哪些机遇和挑战&#34;&gt;全球化带来了哪些机遇和挑战？&lt;/h3&gt;
&lt;h3 id=&#34;在全球化方兴未艾的世界上个人企业及国家如果想成功应该何去何从&#34;&gt;在全球化方兴未艾的世界上，个人、企业及国家如果想成功，应该何去何从？&lt;/h3&gt;
&lt;h3 id=&#34;全球化可以逆转吗&#34;&gt;全球化可以逆转吗？&lt;/h3&gt;
&lt;h2 id=&#34;第八章-竞争公平与风险民主的未来&#34;&gt;第八章 竞争、公平与风险：民主的未来&lt;/h2&gt;
&lt;h3 id=&#34;政府的作用是什么&#34;&gt;政府的作用是什么？&lt;/h3&gt;
&lt;h3 id=&#34;领导人的作用是什么&#34;&gt;领导人的作用是什么？&lt;/h3&gt;
&lt;h3 id=&#34;领导人应该如何回应民意&#34;&gt;领导人应该如何回应民意？&lt;/h3&gt;
&lt;h3 id=&#34;实行民主有哪些要求&#34;&gt;实行民主有哪些要求？&lt;/h3&gt;
&lt;h3 id=&#34;民主的风险有哪些&#34;&gt;民主的风险有哪些？&lt;/h3&gt;
&lt;h3 id=&#34;法律与秩序之间的适度平衡是什么&#34;&gt;法律与秩序之间的适度平衡是什么？&lt;/h3&gt;
&lt;h3 id=&#34;竞争与公平之间的适度平衡是什么&#34;&gt;竞争与公平之间的适度平衡是什么？&lt;/h3&gt;
&lt;h2 id=&#34;第九章-李光耀我对这个世界的看法&#34;&gt;第九章 李光耀：“我对这个世界的看法”&lt;/h2&gt;
&lt;h3 id=&#34;您最基本的战略原则是什么&#34;&gt;您最基本的战略原则是什么？&lt;/h3&gt;
&lt;h3 id=&#34;您对于战略思维与决策的态度是什么&#34;&gt;您对于战略思维与决策的态度是什么？&lt;/h3&gt;
&lt;h3 id=&#34;是什么样的个人经历和职业经历塑造了您的态度&#34;&gt;是什么样的个人经历和职业经历塑造了您的态度？&lt;/h3&gt;
&lt;h3 id=&#34;什么战略范式塑造了这种态度&#34;&gt;什么战略范式塑造了这种态度？&lt;/h3&gt;
&lt;h3 id=&#34;历史应该在战略思维与决策中扮演什么角色&#34;&gt;历史应该在战略思维与决策中扮演什么角色？&lt;/h3&gt;
&lt;h3 id=&#34;简明清晰的表述应该在战略思维与决策中扮演什么角色&#34;&gt;简明清晰的表述应该在战略思维与决策中扮演什么角色？&lt;/h3&gt;
&lt;h3 id=&#34;您对社会进步之源的看法如何影响了您的战略思维&#34;&gt;您对社会进步之源的看法如何影响了您的战略思维？&lt;/h3&gt;
&lt;h3 id=&#34;您对于社会停滞或倒退的观点如何影响了您的战略思维&#34;&gt;您对于社会停滞或倒退的观点如何影响了您的战略思维？&lt;/h3&gt;
&lt;h3 id=&#34;一个成功的领导人应该具备哪些品质&#34;&gt;一个成功的领导人应该具备哪些品质？&lt;/h3&gt;
&lt;h3 id=&#34;领导人在制定公共政策时最常犯的错误有哪些&#34;&gt;领导人在制定公共政策时最常犯的错误有哪些？&lt;/h3&gt;
&lt;h3 id=&#34;您最崇拜哪些领导人为什么&#34;&gt;您最崇拜哪些领导人？为什么？&lt;/h3&gt;
&lt;h3 id=&#34;您希望自己如何被后人铭记&#34;&gt;您希望自己如何被后人铭记？&lt;/h3&gt;
&lt;h2 id=&#34;第十章-论中国美国与世界&#34;&gt;第十章 论中国、美国与世界&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7%E4%B8%8E%E6%A1%88%E4%BE%8B%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7%E4%B8%8E%E6%A1%88%E4%BE%8B%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 深度学习：核心技术、工具与案例解析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/97/YueWen_22728482/t7_YueWen_22728482.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 深度学习：核心技术、工具与案例解析|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 深度学习：核心技术、工具与案例解析&lt;/li&gt;
&lt;li&gt;作者： 高彦杰 于子叶&lt;/li&gt;
&lt;li&gt;简介： 本书由微软亚洲研究院的资深AI工程师撰写，是一本面向初学者的、以实战为导向的深度学习指南。本书首先详细讲解了深度学习的知识体系、核心概念、模型与算法、工具和库（TensorFlow等）等全栈技术知识，然后以案例的形式讲解了如何将这些知识应用到计算机视觉、自然语言处理、语音识别、对话机器人、人脸识别、自动驾驶领域。&lt;/li&gt;
&lt;li&gt;出版时间 2018-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111603030&lt;/li&gt;
&lt;li&gt;分类： 计算机-人工智能&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/a6b32880715acf22a6bbfa0&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;第1章-了解深度学习&#34;&gt;第1章 了解深度学习&lt;/h2&gt;
&lt;h3 id=&#34;11-什么是深度学习&#34;&gt;1.1 什么是深度学习&lt;/h3&gt;
&lt;h3 id=&#34;12-深度学习的技术发展&#34;&gt;1.2 深度学习的技术发展&lt;/h3&gt;
&lt;h3 id=&#34;13-深度学习的知识点汇总&#34;&gt;1.3 深度学习的知识点汇总&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 以Keras为主的深度学习抽象化平台。Keras本身并不具有底层运算协调的能力，Keras依托于TensorFlow或者Theano进行底层运算，而Keras自身提供了神经网络模块的抽象化和训练中的流程优化。
⏱ 2019-09-24 19:55:07 ^22728482-7-1779-1883&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;14-深度学习工具与平台介绍&#34;&gt;1.4 深度学习工具与平台介绍&lt;/h3&gt;
&lt;h3 id=&#34;15-本章小结&#34;&gt;1.5 本章小结&lt;/h3&gt;
&lt;h3 id=&#34;16-参考资料&#34;&gt;1.6 参考资料&lt;/h3&gt;
&lt;h2 id=&#34;第2章-深度学习技术&#34;&gt;第2章 深度学习技术&lt;/h2&gt;
&lt;h3 id=&#34;21-深度学习基础&#34;&gt;2.1 深度学习基础&lt;/h3&gt;
&lt;h3 id=&#34;22-cnn&#34;&gt;2.2 CNN&lt;/h3&gt;
&lt;h3 id=&#34;23-rnn&#34;&gt;2.3 RNN&lt;/h3&gt;
&lt;h3 id=&#34;24-最优化算法&#34;&gt;2.4 最优化算法&lt;/h3&gt;
&lt;h3 id=&#34;25-本章小结&#34;&gt;2.5 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第3章-tensorflow基础&#34;&gt;第3章 TensorFlow基础&lt;/h2&gt;
&lt;h3 id=&#34;31-tensorflow&#34;&gt;3.1 TensorFlow&lt;/h3&gt;
&lt;h3 id=&#34;32-获取与安装&#34;&gt;3.2 获取与安装&lt;/h3&gt;
&lt;h3 id=&#34;33-变量及作用域&#34;&gt;3.3 变量及作用域&lt;/h3&gt;
&lt;h3 id=&#34;34-构建计算图&#34;&gt;3.4 构建计算图&lt;/h3&gt;
&lt;h3 id=&#34;35-全连接网络构建&#34;&gt;3.5 全连接网络构建&lt;/h3&gt;
&lt;h3 id=&#34;36-cnn构建&#34;&gt;3.6 CNN构建&lt;/h3&gt;
&lt;h3 id=&#34;37-rnn构建&#34;&gt;3.7 RNN构建&lt;/h3&gt;
&lt;h3 id=&#34;38-多架构运行&#34;&gt;3.8 多架构运行&lt;/h3&gt;
&lt;h3 id=&#34;39-队列使用&#34;&gt;3.9 队列使用&lt;/h3&gt;
&lt;h3 id=&#34;310-本章小结&#34;&gt;3.10 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第4章-tensorflow进阶&#34;&gt;第4章 TensorFlow进阶&lt;/h2&gt;
&lt;h3 id=&#34;41-tensorflow架构与原理&#34;&gt;4.1 TensorFlow架构与原理&lt;/h3&gt;
&lt;h3 id=&#34;42-tensorflow扩展&#34;&gt;4.2 TensorFlow扩展&lt;/h3&gt;
&lt;h3 id=&#34;43-tensorboard与问题监控&#34;&gt;4.3 Tensorboard与问题监控&lt;/h3&gt;
&lt;h3 id=&#34;44-改善深度神经网络&#34;&gt;4.4 改善深度神经网络&lt;/h3&gt;
&lt;h3 id=&#34;45-性能优化建议&#34;&gt;4.5 性能优化建议&lt;/h3&gt;
&lt;h3 id=&#34;46-深度神经网络结构&#34;&gt;4.6 深度神经网络结构&lt;/h3&gt;
&lt;h3 id=&#34;47-本章小结&#34;&gt;4.7 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第5章-语音识别器&#34;&gt;第5章 语音识别器&lt;/h2&gt;
&lt;h3 id=&#34;51-任务分析&#34;&gt;5.1 任务分析&lt;/h3&gt;
&lt;h3 id=&#34;52-数据与特征分析&#34;&gt;5.2 数据与特征分析&lt;/h3&gt;
&lt;h3 id=&#34;53-主流语音识别网络结构&#34;&gt;5.3 主流语音识别网络结构&lt;/h3&gt;
&lt;h3 id=&#34;54-ctc-loss&#34;&gt;5.4 CTC Loss&lt;/h3&gt;
&lt;h3 id=&#34;55-文本向量化&#34;&gt;5.5 文本向量化&lt;/h3&gt;
&lt;h3 id=&#34;56-完整构建神经网络&#34;&gt;5.6 完整构建神经网络&lt;/h3&gt;
&lt;h3 id=&#34;57-数据训练&#34;&gt;5.7 数据训练&lt;/h3&gt;
&lt;h3 id=&#34;58-参数调优&#34;&gt;5.8 参数调优&lt;/h3&gt;
&lt;h3 id=&#34;59-实际数据分析&#34;&gt;5.9 实际数据分析&lt;/h3&gt;
&lt;h3 id=&#34;510-本章小结&#34;&gt;5.10 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第6章-对话机器人&#34;&gt;第6章 对话机器人&lt;/h2&gt;
&lt;h3 id=&#34;61-对话机器人概述与应用领域&#34;&gt;6.1 对话机器人概述与应用领域&lt;/h3&gt;
&lt;h3 id=&#34;62-对话机器人主流技术&#34;&gt;6.2 对话机器人主流技术&lt;/h3&gt;
&lt;h3 id=&#34;63-对话机器人的前沿与功能扩展&#34;&gt;6.3 对话机器人的前沿与功能扩展&lt;/h3&gt;
&lt;h3 id=&#34;64-深度学习对话机器人原理&#34;&gt;6.4 深度学习对话机器人原理&lt;/h3&gt;
&lt;h3 id=&#34;65-构建对话机器人&#34;&gt;6.5 构建对话机器人&lt;/h3&gt;
&lt;h3 id=&#34;66-本章小结&#34;&gt;6.6 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第7章-人脸识别器&#34;&gt;第7章 人脸识别器&lt;/h2&gt;
&lt;h3 id=&#34;71-任务分析&#34;&gt;7.1 任务分析&lt;/h3&gt;
&lt;h3 id=&#34;72-detectionaliment与identify&#34;&gt;7.2 Detection、Aliment与Identify&lt;/h3&gt;
&lt;h3 id=&#34;73-数据特征分析&#34;&gt;7.3 数据特征分析&lt;/h3&gt;
&lt;h3 id=&#34;74-haar分类器方式&#34;&gt;7.4 haar分类器方式&lt;/h3&gt;
&lt;h3 id=&#34;75-神经网络方法演进&#34;&gt;7.5 神经网络方法演进&lt;/h3&gt;
&lt;h3 id=&#34;76-人脸识别网络构建&#34;&gt;7.6 人脸识别网络构建&lt;/h3&gt;
&lt;h3 id=&#34;77-主流人脸识别网络差异分析&#34;&gt;7.7 主流人脸识别网络差异分析&lt;/h3&gt;
&lt;h3 id=&#34;78-tensorflow搭建网络&#34;&gt;7.8 TensorFlow搭建网络&lt;/h3&gt;
&lt;h3 id=&#34;79-参数调优&#34;&gt;7.9 参数调优&lt;/h3&gt;
&lt;h3 id=&#34;710-实战分析&#34;&gt;7.10 实战分析&lt;/h3&gt;
&lt;h3 id=&#34;711-本章小结&#34;&gt;7.11 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第8章-自动驾驶&#34;&gt;第8章 自动驾驶&lt;/h2&gt;
&lt;h3 id=&#34;81-自动驾驶的介绍与应用领域&#34;&gt;8.1 自动驾驶的介绍与应用领域&lt;/h3&gt;
&lt;h3 id=&#34;82-自动驾驶技术&#34;&gt;8.2 自动驾驶技术&lt;/h3&gt;
&lt;h3 id=&#34;83-深度增强学习&#34;&gt;8.3 深度增强学习&lt;/h3&gt;
&lt;h3 id=&#34;84-行车检测&#34;&gt;8.4 行车检测&lt;/h3&gt;
&lt;h3 id=&#34;85-端到端自动驾驶&#34;&gt;8.5 端到端自动驾驶&lt;/h3&gt;
&lt;h3 id=&#34;86-本章小结&#34;&gt;8.6 本章小结&lt;/h3&gt;
&lt;h3 id=&#34;87-参考资料&#34;&gt;8.7 参考资料&lt;/h3&gt;
&lt;h2 id=&#34;第9章-可视化实践&#34;&gt;第9章 可视化实践&lt;/h2&gt;
&lt;h3 id=&#34;91-可视化发展&#34;&gt;9.1 可视化发展&lt;/h3&gt;
&lt;h3 id=&#34;92-可视化过程&#34;&gt;9.2 可视化过程&lt;/h3&gt;
&lt;h3 id=&#34;93-matplotlib&#34;&gt;9.3 Matplotlib&lt;/h3&gt;
&lt;h3 id=&#34;94-echarts&#34;&gt;9.4 ECharts&lt;/h3&gt;
&lt;h3 id=&#34;95-可视化实践&#34;&gt;9.5 可视化实践&lt;/h3&gt;
&lt;h3 id=&#34;96-三维可视化&#34;&gt;9.6 三维可视化&lt;/h3&gt;
&lt;h3 id=&#34;97-动态可视化&#34;&gt;9.7 动态可视化&lt;/h3&gt;
&lt;h3 id=&#34;98-本章小结&#34;&gt;9.8 本章小结&lt;/h3&gt;
&lt;h2 id=&#34;第10章-优化实践&#34;&gt;第10章 优化实践&lt;/h2&gt;
&lt;h3 id=&#34;101-通用深度神经网络训练优化建议&#34;&gt;10.1 通用深度神经网络训练优化建议&lt;/h3&gt;
&lt;h3 id=&#34;102-深度学习系统性能优化建议&#34;&gt;10.2 深度学习系统性能优化建议&lt;/h3&gt;
&lt;h3 id=&#34;103-工程实践建议&#34;&gt;10.3 工程实践建议&lt;/h3&gt;
&lt;h3 id=&#34;104-本章小结&#34;&gt;10.4 本章小结&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E6%B8%85%E9%86%92%E6%80%9D%E8%80%83%E7%9A%84%E7%AD%96%E7%95%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E6%B8%85%E9%86%92%E6%80%9D%E8%80%83%E7%9A%84%E7%AD%96%E7%95%A5/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 清醒思考的策略&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/16/YueWen_25802407/t7_YueWen_25802407.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 清醒思考的策略|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 清醒思考的策略&lt;/li&gt;
&lt;li&gt;作者： 罗尔夫·多贝里&lt;/li&gt;
&lt;li&gt;简介： 做正确的事，把事做正确。思维策略的不同，正是高手和普通人的区别。生活中，我们往往凭着直觉决策和行动，而且认为这种直觉和偏好很可靠。但这个世界充满了复杂性和不确定性，有时，我们的大脑无法适应如此多变的环境，并且我们往往对自己熟知的事物确信不疑，可其中存在认知偏误。因此，我们需要《清醒思考的策略》这套在心理学中被称为“策略法”的思维工具。《清醒思考的策略》作者多贝里依据成功价值型投资者的思维策略，以及过去40年的心理学研究和古希腊的哲学思想，总结了52个思维策略，帮助我们逐渐调整、优化我们的大脑，改变我们的认知，提升决策力和行动力。掌握清醒思考的策略，比学识和金钱重要，甚至比智商更重要。&lt;/li&gt;
&lt;li&gt;出版时间 2019-07-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787521706949&lt;/li&gt;
&lt;li&gt;分类： 哲学宗教-逻辑学&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/832322d07189b6a783291eb&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献言&#34;&gt;献言&lt;/h2&gt;
&lt;h2 id=&#34;序言&#34;&gt;序言&lt;/h2&gt;
&lt;h2 id=&#34;1-心理账户-如何将损失转化为收益&#34;&gt;1 心理账户 如何将损失转化为收益&lt;/h2&gt;
&lt;h2 id=&#34;2-修正的巨大作用-为什么完美的预设是不存在的&#34;&gt;2 修正的巨大作用 为什么完美的预设是不存在的&lt;/h2&gt;
&lt;h2 id=&#34;3-誓言-将固执当成一项策略&#34;&gt;3 誓言 将固执当成一项策略&lt;/h2&gt;
&lt;h2 id=&#34;4-黑匣子思维-为什么每次跌倒都会让生活更加美好&#34;&gt;4 黑匣子思维 为什么每次跌倒都会让生活更加美好&lt;/h2&gt;
&lt;h2 id=&#34;5-适得其反-为什么节省时间的因素往往会成为时间的窃贼&#34;&gt;5 适得其反 为什么节省时间的因素往往会成为时间的窃贼&lt;/h2&gt;
&lt;h2 id=&#34;6-美好生活的消极艺术-不要做错事正确的事情就会发生&#34;&gt;6 美好生活的消极艺术 不要做错事，正确的事情就会发生&lt;/h2&gt;
&lt;h2 id=&#34;7-卵巢彩票-为什么你的成功并不是你应得的&#34;&gt;7 卵巢彩票 为什么你的成功并不是你应得的&lt;/h2&gt;
&lt;h2 id=&#34;8-内省错觉-你要把感受当回事但不是自己的感受&#34;&gt;8 内省错觉 你要把感受当回事，但不是自己的感受&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你无法通过探究自我来获得美好的生活。心理学家将这种错误的想法称为“内省错觉”，即相信通过纯粹的自我反省便可以找到自己真正渴望发掘的元素，如生活的目标、生命的意义，以及幸福的核心等。很多作家将我们的感情世界比作一片深邃的森林。事实上，如果你跟着自己的感受踏进这片森林，那你必将迷失方向，最终身陷情绪、思维碎片和躁动感的泥沼。
⏱ 2020-08-05 18:48:48 ^25802407-12-1502-1663&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;9-真诚性陷阱-为什么你需要一位外交部长&#34;&gt;9 真诚性陷阱 为什么你需要一位“外交部长”&lt;/h2&gt;
&lt;h2 id=&#34;10-五秒说不-小恩惠大陷阱&#34;&gt;10 五秒说不 小恩惠，大陷阱&lt;/h2&gt;
&lt;h2 id=&#34;11-专注点幻觉-为什么住在加勒比海不会让你感到更快乐&#34;&gt;11 专注点幻觉 为什么住在加勒比海不会让你感到更快乐&lt;/h2&gt;
&lt;h2 id=&#34;12-蒸发的宝贝-我们为什么要少购物多体验&#34;&gt;12 “蒸发”的宝贝 我们为什么要少购物，多体验&lt;/h2&gt;
&lt;h2 id=&#34;13-滚蛋吧金钱-为自由做存储&#34;&gt;13 滚蛋吧，金钱 为自由做存储&lt;/h2&gt;
&lt;h2 id=&#34;14-能力圈-为什么一定要看到能力圈的边界&#34;&gt;14 能力圈 为什么一定要看到能力圈的边界&lt;/h2&gt;
&lt;h2 id=&#34;15-坚持的秘密-为什么无趣的人会比冒险家更成功&#34;&gt;15 坚持的秘密 为什么无趣的人会比冒险家更成功&lt;/h2&gt;
&lt;h2 id=&#34;16-使命的压迫-做自己能做的而不是自己想做的&#34;&gt;16 使命的压迫 做自己能做的，而不是自己想做的&lt;/h2&gt;
&lt;h2 id=&#34;17-好名声的牢笼-将自己从外部评价模式转换到自我评价模式&#34;&gt;17 好名声的牢笼 将自己从外部评价模式转换到自我评价模式&lt;/h2&gt;
&lt;h2 id=&#34;18-历史终结错觉-你可以改变自己却无法改变他人&#34;&gt;18 “历史终结错觉” 你可以改变自己，却无法改变他人&lt;/h2&gt;
&lt;h2 id=&#34;19-生命的小意义-哪些目标你能完成哪些不能&#34;&gt;19 生命的“小意义” 哪些目标你能完成，哪些不能&lt;/h2&gt;
&lt;h2 id=&#34;20-两个自我-为什么你的生活不是一本相册&#34;&gt;20 两个自我 为什么你的生活不是一本相册&lt;/h2&gt;
&lt;h2 id=&#34;21-记忆账户-经历远胜回忆&#34;&gt;21 记忆账户 经历远胜回忆&lt;/h2&gt;
&lt;h2 id=&#34;22-生活的故事皆为谎言-为什么我们会怀揣着一个错误的自我印象游历世界&#34;&gt;22 生活的故事皆为谎言 为什么我们会怀揣着一个错误的自我印象游历世界&lt;/h2&gt;
&lt;h2 id=&#34;23-美好的人生旅程胜过优雅的死亡-为什么不要去想濒死的那一刻&#34;&gt;23 美好的人生旅程，胜过优雅的死亡 为什么不要去想濒死的那一刻&lt;/h2&gt;
&lt;h2 id=&#34;24-自我怜悯的旋涡-挖掘过去为什么毫无意义&#34;&gt;24 自我怜悯的旋涡 挖掘过去为什么毫无意义&lt;/h2&gt;
&lt;h2 id=&#34;25-快乐论与实现论-如何让乐趣和意义彼此互补&#34;&gt;25 快乐论与实现论 如何让乐趣和意义彼此互补&lt;/h2&gt;
&lt;h2 id=&#34;26-尊严圈上-即或不然&#34;&gt;26 尊严圈（上） 即或不然&lt;/h2&gt;
&lt;h2 id=&#34;27-尊严圈中-一旦你从外部垮掉&#34;&gt;27 尊严圈（中） 一旦你从外部垮掉&lt;/h2&gt;
&lt;h2 id=&#34;28-尊严圈下-与魔鬼的契约&#34;&gt;28 尊严圈（下） 与魔鬼的契约&lt;/h2&gt;
&lt;h2 id=&#34;29-忧虑之书-如何关闭头脑中的扬声器&#34;&gt;29 忧虑之书 如何关闭头脑中的“扬声器”&lt;/h2&gt;
&lt;h2 id=&#34;30-意见的火山-为什么不持观点会让人更加自在&#34;&gt;30 意见的火山 为什么不持观点会让人更加自在&lt;/h2&gt;
&lt;h2 id=&#34;31-精神堡垒-幸运女神的轮盘&#34;&gt;31 精神堡垒 幸运女神的轮盘&lt;/h2&gt;
&lt;h2 id=&#34;32-嫉妒-魔镜魔镜&#34;&gt;32 嫉妒 魔镜，魔镜&lt;/h2&gt;
&lt;h2 id=&#34;33-治病不如防病-避免让问题出现胜过动手解决问题&#34;&gt;33 治病不如防病 避免让问题出现，胜过动手解决问题&lt;/h2&gt;
&lt;h2 id=&#34;34-心中的救济工作-为什么你不应当为世界的现状负责&#34;&gt;34 心中的救济工作 为什么你不应当为世界的现状负责&lt;/h2&gt;
&lt;h2 id=&#34;35-专注力陷阱-如何对待自己最宝贵的资源&#34;&gt;35 专注力陷阱 如何对待自己最宝贵的资源&lt;/h2&gt;
&lt;h2 id=&#34;36-读书要减量加次-我们阅读的方式是错误的&#34;&gt;36 读书要减量加次 我们阅读的方式是错误的&lt;/h2&gt;
&lt;h2 id=&#34;37-教条的陷阱-为什么理论家总会把事情想得太简单&#34;&gt;37 教条的陷阱 为什么理论家总会把事情想得太简单&lt;/h2&gt;
&lt;h2 id=&#34;38-思维减法-如何才能感受到自己的幸福&#34;&gt;38 思维减法 如何才能感受到自己的幸福&lt;/h2&gt;
&lt;h2 id=&#34;39-思考极点-思考好比手电筒行动才是探照灯&#34;&gt;39 思考极点 思考好比手电筒，行动才是探照灯&lt;/h2&gt;
&lt;h2 id=&#34;40-站在对方的立场上思考角色调换&#34;&gt;40 站在对方的立场上思考角色调换&lt;/h2&gt;
&lt;h2 id=&#34;41-改变世界的幻想上-不要痴迷于伟人理论&#34;&gt;41 改变世界的幻想（上） 不要痴迷于“伟人理论”&lt;/h2&gt;
&lt;h2 id=&#34;42-改变世界的幻想下-为什么我们不应将任何人至少不应将自己奉上圣殿&#34;&gt;42 改变世界的幻想（下） 为什么我们不应将任何人（至少不应将自己）奉上圣殿&lt;/h2&gt;
&lt;h2 id=&#34;43-正义世界的谬论-为什么生活看起来不像一部经典的侦探小说&#34;&gt;43 “正义世界”的谬论 为什么生活看起来不像一部经典的侦探小说&lt;/h2&gt;
&lt;h2 id=&#34;44-货物崇拜-不要制造稻草飞机&#34;&gt;44 货物崇拜 不要制造“稻草飞机”&lt;/h2&gt;
&lt;h2 id=&#34;45-参加属于自己的比赛你就是赢家-为什么常识只适合作为业余爱好&#34;&gt;45 参加属于自己的比赛，你就是赢家 为什么常识只适合作为业余爱好&lt;/h2&gt;
&lt;h2 id=&#34;46-军备竞赛-远离战场的理由&#34;&gt;46 军备竞赛 远离战场的理由&lt;/h2&gt;
&lt;h2 id=&#34;47-让偏执狂成为你的朋友-为什么你要认识圈外人但却不要让自己成为他们&#34;&gt;47 让偏执狂成为你的朋友 为什么你要认识“圈外人”，但却不要让自己成为他们&lt;/h2&gt;
&lt;h2 id=&#34;48-秘书问题-为什么我们人生中的样本太少&#34;&gt;48 秘书问题 为什么我们人生中的样本太少&lt;/h2&gt;
&lt;h2 id=&#34;49-期望管理-期望值越低幸福感越强&#34;&gt;49 期望管理 期望值越低，幸福感越强&lt;/h2&gt;
&lt;h2 id=&#34;50-史特金定律-如何调节自己的垃圾探测器&#34;&gt;50 史特金定律 如何调节自己的“垃圾探测器”&lt;/h2&gt;
&lt;h2 id=&#34;51-对谦虚的赞美-将自己看得越轻生活就会越美好&#34;&gt;51 对谦虚的赞美 将自己看得越轻，生活就会越美好&lt;/h2&gt;
&lt;h2 id=&#34;52-内心的成功-为什么输入比输出更重要&#34;&gt;52 内心的成功 为什么输入比输出更重要&lt;/h2&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E7%8E%B0%E4%BB%A3cpu%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E7%8E%B0%E4%BB%A3cpu%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 现代CPU性能分析与优化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/9/cpplatform_ow323sxr5gmhsgtyhcnfco/t7_cpplatform_ow323sxr5gmhsgtyhcnfco1695622516.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 现代CPU性能分析与优化|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 现代CPU性能分析与优化&lt;/li&gt;
&lt;li&gt;作者： 丹尼斯·巴赫瓦洛夫&lt;/li&gt;
&lt;li&gt;简介： 本书旨在指导大家优化运行在现代CPU上的应用程序的性能。具体来说，主要分为两部分内容：
第一部分介绍性能分析，包括对CPU微架构、术语和指标的简要概述，还探讨了分析性能的不同方法和现代平台上可用的硬件监控功能。
第二部分展示如何发现优化机会，以及可以做哪些转换来提高程序的性能。此外，还提供了一份可应用于用户应用程序的优化清单，包括循环优化、向量化、函数内联等，并讨论了有助于消除CPU微架构层面的问题（如缓存未命中、分支预测错误等）的代码转换。
本书对于从事性能关键型应用程序开发和进行系统底层优化的技术人员来说是不可或缺的。对于任何想更好地了解应用程序性能并探索其诊断和改进方法的开发者来说，这本书也很有用。&lt;/li&gt;
&lt;li&gt;出版时间 2023-01-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111719489&lt;/li&gt;
&lt;li&gt;分类： 计算机-计算机综合&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/62a32b80813ab829fg01444b&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;第1章-导读&#34;&gt;第1章 导读&lt;/h2&gt;
&lt;h3 id=&#34;11-为什么需要性能调优&#34;&gt;1.1 为什么需要性能调优&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 典型的通用多线程应用程序的性能并不总是随着分配到任务的CPU核数量的增长而线性增长，了解发生这种情况的原因及可能的解决方案对产品的未来发展至关重要。产品性能若不能被恰当地分析和调优，可能会导致大量的性能和资金浪费，甚至可能导致产品最终失败。
⏱ 2024-03-07 09:59:50 ^3300071994-8-568-688&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;12-谁需要做性能调优&#34;&gt;1.2 谁需要做性能调优&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 性能工程是重要且有回报的工作，但它可能非常耗时。事实上，性能优化是一场无尽的游戏，因为总是存在值得优化的地方。不可避免地，开发者将会到达收益递减、事倍功半的时候，在这种情况下，进一步的改进需要非常高的工程成本，但是优化效果可能不值得花费如此的高成本。从这一点看，何时停下优化步伐也是性能调优工作的一个关键要点[插图]
⏱ 2024-03-07 10:22:42 ^3300071994-9-2156-2311&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 合理的性能调优工作总是要先定义性能目标，论述清楚希望达到的结果以及这么做的原因。此外，还要选择度量目标是否达成的指标。
⏱ 2024-03-07 10:23:06 ^3300071994-9-2577-2636&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;13-什么是性能分析&#34;&gt;1.3 什么是性能分析&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 。此外，有些人会过度使用传统的位处理技巧，其中一个例子是使用基于XOR的变量交换，但实际上，简单的std：：swap就能产生更快的代码。
⏱ 2024-03-07 10:23:57 ^3300071994-10-914-982&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;14-本书的主要内容&#34;&gt;1.4 本书的主要内容&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 TMA是本书的重要概念。
⏱ 2024-03-07 10:28:11 ^3300071994-11-1879-1891&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;15-本书不包含什么内容&#34;&gt;1.5 本书不包含什么内容&lt;/h3&gt;
&lt;h3 id=&#34;16-本章总结&#34;&gt;1.6 本章总结&lt;/h3&gt;
&lt;h2 id=&#34;第一部分-现代cpu性能分析&#34;&gt;第一部分 现代CPU性能分析&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 计时器的选择非常简单，即根据需要测量的时间长短来选择即可。如果需要测量的时间很短暂，则TSC可以提供更好的准确度。相反，如果需要测量的时间长达数小时，用TSC来测量的话毫无意义。
⏱ 2024-03-09 07:49:45 ^3300071994-14-14492-14581&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 定义一个基准测试优劣的依据是，它能否在真实条件下测试将来要使用的功能的性能。如果基准测试使用的合成输入与实际使用的输入不同，那么基准测试可能会误导你，让你得出错误的结论。此外，当基准测试在没有其他重需求进程的系统中运行时，它拥有所有资源，包括DRAM和缓存空间。这样的基准测试表现出的可能是该函数的更快版本，但是会比其他版本消耗更多的内存。如果有其他消耗大量DRAM的相邻进程，会导致属于基准测试的内存被交换到磁盘上，最终导致测试结果与之前的正好相反。
⏱ 2024-03-09 07:51:27 ^3300071994-14-16208-16434&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第3章-cpu微架构&#34;&gt;第3章 CPU微架构&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 流水线运行的时钟周期数通常由流水线最慢的阶段决定。CPU硬件设计人员努力平衡一个阶段可以完成的工作量，因为这直接决定了CPU的运行频率。增加频率可以提高性能，并且通常需要协调和重整流水线以消除由最慢流水线阶段引入的瓶
⏱ 2024-03-09 21:19:55 ^3300071994-15-2442-2550&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 。CPU通过保留大量物理寄存器来支持寄存器重命名功能。由ISA定义的逻辑寄存器只是一组宽泛的寄存器文件的别名。通过对架构状态的解耦，解决WAR冒险问题很简单，只需要在写入操作时使用不同的物理寄存器即可。
⏱ 2024-03-09 21:21:31 ^3300071994-15-4490-4591&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 大多数现代CPU都是超标量的，也就是说，它们可以在一个时钟周期内发射多条指令。发射宽度是在同一个时钟周期内可以发射的最大指令数。目前CPU的典型发射宽度为2～6。为了保证恰当的平衡，这种超标量引擎还支持多个执行单元和流水线执行单元。CPU还将超标量功能与深度流水线和乱序执行功能相结合，以获取软件给定片段的最大ILP。
⏱ 2024-03-10 11:50:05 ^3300071994-15-6985-7144&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第4章-性能分析中的术语和指标&#34;&gt;第4章 性能分析中的术语和指标&lt;/h3&gt;
&lt;h3 id=&#34;第5章-性能分析方法&#34;&gt;第5章 性能分析方法&lt;/h3&gt;
&lt;h3 id=&#34;第6章-性能分析相关的cpu特性&#34;&gt;第6章 性能分析相关的CPU特性&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-基于源代码的cpu调优&#34;&gt;第二部分 基于源代码的CPU调优&lt;/h2&gt;
&lt;h3 id=&#34;第7章-cpu前端优化&#34;&gt;第7章 CPU前端优化&lt;/h3&gt;
&lt;h3 id=&#34;第8章-cpu后端优化&#34;&gt;第8章 CPU后端优化&lt;/h3&gt;
&lt;h3 id=&#34;第9章-优化错误投机&#34;&gt;第9章 优化错误投机&lt;/h3&gt;
&lt;h3 id=&#34;第10章-其他调优&#34;&gt;第10章 其他调优&lt;/h3&gt;
&lt;h3 id=&#34;第11章-优化多线程应用程序&#34;&gt;第11章 优化多线程应用程序&lt;/h3&gt;
&lt;h2 id=&#34;附录a-减少测量噪声&#34;&gt;附录A 减少测量噪声&lt;/h2&gt;
&lt;h2 id=&#34;附录b-llvm向量化程序&#34;&gt;附录B LLVM向量化程序&lt;/h2&gt;
&lt;h2 id=&#34;跋&#34;&gt;跋&lt;/h2&gt;
&lt;h2 id=&#34;术语&#34;&gt;术语&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h2 id=&#34;推荐阅读&#34;&gt;推荐阅读&lt;/h2&gt;
&lt;h2 id=&#34;译者简介&#34;&gt;译者简介&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第1章-导读-1&#34;&gt;第1章 导读&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但Intel派出性能专家并跟客户一起调优应用程序后，应用程序的执行速度提升5倍甚至10倍的案例并不少见。  ^6733360-7PvzPkI7H
- 💭 专家调优也很厉害
- ⏱ 2024-03-07 09:58:34&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;11-为什么需要性能调优-1&#34;&gt;1.1 为什么需要性能调优&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 编译器很擅长消除冗余，但是当需要对诸如函数内联、循环展开等做出更复杂的决定时，编译器也许不能生成最佳的代码  ^6733360-7PvA6tm24
- 💭 不能完全依靠编译器
- ⏱ 2024-03-07 10:02:47&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对编译器开发者来说，要在所有可能情况下让某些优化操作生成正确的机器码是非常困难的，所以他们通常采取保守策略以避免进行某些优化[插图]。  ^6733360-7PvAnO1lU
- 💭 编译器在绝大多数情况下只会做简单的保守的优化，比较复杂情况编译器就放弃任何优化了
- ⏱ 2024-03-07 10:07:04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 不经过对目标负荷的测试而盲目地信任大O度量，会让开发者误入歧途。  ^6733360-7PvAqA83l
- 💭 知名算法未必处处最优
- ⏱ 2024-03-07 10:07:45&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 特别需要指出的是，性能的提升不止来自软件调优。据论文(Leiserson et al.，2020)介绍，未来另外两个主要潜在加速源是算法（尤其对机器学习等新问题领域）和高效的硬件设计  ^6733360-7PvAun9av
- 💭 性能提升三种途径：算法、软件调优和硬件设计
- ⏱ 2024-03-07 10:08:41&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第3章-cpu微架构-1&#34;&gt;第3章 CPU微架构&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因此，除了用于算术运算的传统32位和64位格式外，一些CPU特许经营组织最近还往ISA中添加了对诸如8位整数（int8，如Intel VNNI）、16位浮点数(fp16、bf16)之类低精度数据类型的支持。  ^6733360-7PyMi5FPg
- 💭 为深度学习新增的数据类型
- ⏱ 2024-03-09 12:28:53&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 指令在最终执行时称为退休，其结果在架构状态中是正确和可见的。为了确保正确性，CPU必须按程序顺序让所有指令退休  ^6733360-7PAfNYkIX
- 💭 retire概念
- ⏱ 2024-03-10 11:46:13&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 它的基本原理是要求编译器选择正确的指令组合使得机器被充分利用，从而简化硬件。编译器可以使用软件流水线、循环展开等技术来发掘更多的ILP机会，因为硬件受制于指令窗口长度的限制，而编译器可以获得全局信息。  ^6733360-7PAga4prS
- 💭 编译器有全局视野，可以优化软件
- ⏱ 2024-03-10 11:51:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但实际上，分支指令可能依赖从内存加载的值，这可能需要耗费数百个时钟周期。  ^6733360-7PAgp0feW
- 💭 从内存取指相当耗时
- ⏱ 2024-03-10 11:55:20&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ROB维护所有指令执行状态，并按顺序让指令退休。只有在其顺序与程序流一致且投机正确时，被投机执行的结果才会被写入ROB并提交到架构寄存器。CPU还可以将投机执行与乱序执行结合起来，并使用ROB同时跟踪投机执行和乱序执行。  ^6733360-7PAgs0OSt
- 💭 rob作用有两重
- ⏱ 2024-03-10 11:56:04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E7%94%9F%E9%85%AE%E9%A5%AE%E9%A3%9F%E4%B8%8D%E5%BF%85%E7%A0%B4%E8%B4%B9/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E7%94%9F%E9%85%AE%E9%A5%AE%E9%A3%9F%E4%B8%8D%E5%BF%85%E7%A0%B4%E8%B4%B9/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 生酮饮食不必破费&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/396/37444396/t7_37444396.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 生酮饮食不必破费|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 生酮饮食不必破费&lt;/li&gt;
&lt;li&gt;作者： 米尔萨德·哈西奇&lt;/li&gt;
&lt;li&gt;简介： 当你购买一本生酮饮食预算指南后，你会发现：-如何建立不仅适用于当下，而且适用于未来数月的预算……即使是在最糟糕的情况下！如何轻松对付挑食者——不会错过生酮阶段的任何一步。如何说服一个对你的新饮食计划不太肯定的配偶。如何举办你的客人会喜欢的精彩派对……如果不告诉他们，他们甚至不会知道这是低碳水食物！-如何在听不到餐桌上常见争论的情况下偷偷吃更多蔬菜。把钱花在哪里你就不会把它浪费在昂贵的食用油上了。如何确定哪些罐头食品在预算中容易搞定，哪些罐头食品将极度浪费你的时间。如何在不觉得有必要偏离计划的情况下解决健康问题。&lt;/li&gt;
&lt;li&gt;出版时间 2021-03-09 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN：&lt;/li&gt;
&lt;li&gt;分类： 医学健康-健康&lt;/li&gt;
&lt;li&gt;出版社： 浙江出版集团数字传媒有限公司&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/6af324d0723b5b2c6af3114&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;赠品&#34;&gt;赠品&lt;/h2&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;h2 id=&#34;为何选择生酮饮食&#34;&gt;为何选择生酮饮食&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 植物油不是用蔬菜而是用种子制作而成，所以我将它们称为种子油。大多数工业化的种子油的价值极低。不幸的是，这些油就像糖一样随处可见。更糟糕的是，它们会出现在你根本想不到的地方。所以你了解一些有关植物油的知识会比较好。
⏱ 2024-01-09 13:04:18 ^37444396-5-8392-8498&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 现在，我们以下面所列出的你需要避免摄入的油来结束这一章节：芥菜籽油玉米油棉籽油花生油油菜籽油米糠油红花油芝麻油大豆油葵花籽油读到这里时有些人会对自己吃的东西感到有点震惊。还有一些人不知道1977年膳食指南的变化。对于过去发生的事情，你唯一能做的就是从中吸取教训，然后继续前进。你不能改变自己已经吃下去的东西，但你可以从现在开始改变，选择吃什么。
⏱ 2024-01-09 13:04:51 ^37444396-5-8954-9445&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;预算文化的兴起&#34;&gt;预算文化的兴起&lt;/h2&gt;
&lt;h2 id=&#34;食物不耐受和食物替代品&#34;&gt;食物不耐受和食物替代品&lt;/h2&gt;
&lt;h2 id=&#34;对付挑食的人&#34;&gt;对付挑食的人&lt;/h2&gt;
&lt;h2 id=&#34;备好厨具&#34;&gt;备好厨具&lt;/h2&gt;
&lt;h2 id=&#34;吃肉去&#34;&gt;吃肉去！&lt;/h2&gt;
&lt;h2 id=&#34;椰子的力量&#34;&gt;椰子的力量&lt;/h2&gt;
&lt;h2 id=&#34;学会网购&#34;&gt;学会网购&lt;/h2&gt;
&lt;h2 id=&#34;别忘了鱼&#34;&gt;别忘了鱼&lt;/h2&gt;
&lt;h2 id=&#34;为什么要补充维生素d&#34;&gt;为什么要补充维生素D&lt;/h2&gt;
&lt;h2 id=&#34;为什么要补充镁&#34;&gt;为什么要补充镁？&lt;/h2&gt;
&lt;h2 id=&#34;低碳食物替代品&#34;&gt;低碳食物替代品&lt;/h2&gt;
&lt;h2 id=&#34;令人渴望的甜点&#34;&gt;令人渴望的甜点&lt;/h2&gt;
&lt;h2 id=&#34;认识你所处的生酮饮食阶段&#34;&gt;认识你所处的生酮饮食阶段&lt;/h2&gt;
&lt;h2 id=&#34;调整活动水平&#34;&gt;调整活动水平&lt;/h2&gt;
&lt;h2 id=&#34;慎用生酮产品&#34;&gt;慎用生酮产品&lt;/h2&gt;
&lt;h2 id=&#34;探索农贸市场&#34;&gt;探索农贸市场&lt;/h2&gt;
&lt;h2 id=&#34;解决甲状腺相关问题&#34;&gt;解决甲状腺相关问题&lt;/h2&gt;
&lt;h2 id=&#34;你的生活方式&#34;&gt;你的生活方式&lt;/h2&gt;
&lt;h2 id=&#34;别忘了乳制品&#34;&gt;别忘了乳制品&lt;/h2&gt;
&lt;h2 id=&#34;罐头食品也是食物&#34;&gt;罐头食品也是食物！&lt;/h2&gt;
&lt;h2 id=&#34;了解食用油和脂肪&#34;&gt;了解食用油和脂肪&lt;/h2&gt;
&lt;h2 id=&#34;在社交场合贯彻生酮饮食&#34;&gt;在社交场合贯彻生酮饮食&lt;/h2&gt;
&lt;h2 id=&#34;剩菜尽其用&#34;&gt;剩菜尽其用&lt;/h2&gt;
&lt;h2 id=&#34;优惠券&#34;&gt;优惠券&lt;/h2&gt;
&lt;h2 id=&#34;瘦素荷尔蒙&#34;&gt;瘦素荷尔蒙&lt;/h2&gt;
&lt;h2 id=&#34;为饮食增添风味&#34;&gt;为饮食增添风味&lt;/h2&gt;
&lt;h2 id=&#34;纠正预算错误&#34;&gt;纠正预算错误&lt;/h2&gt;
&lt;h2 id=&#34;日后的计划安排&#34;&gt;日后的计划安排&lt;/h2&gt;
&lt;h2 id=&#34;谢谢&#34;&gt;谢谢！&lt;/h2&gt;
&lt;h2 id=&#34;写在最后的话&#34;&gt;写在最后的话……&lt;/h2&gt;
&lt;h2 id=&#34;我的其他作品&#34;&gt;我的其他作品……&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E7%97%B0%E6%B9%BF%E4%B8%80%E5%8E%BB%E7%99%BE%E7%97%85%E6%B6%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E7%97%B0%E6%B9%BF%E4%B8%80%E5%8E%BB%E7%99%BE%E7%97%85%E6%B6%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 痰湿一去百病消&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/31/3300022531/t7_3300022531.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 痰湿一去百病消|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 痰湿一去百病消&lt;/li&gt;
&lt;li&gt;作者： 范怨武&lt;/li&gt;
&lt;li&gt;简介： 本书作者范怨武结合传统典籍、临床经验，详细地讲述了中医痰湿的概念和治疗方法。全书共有四部分，第一部分介绍了痰湿的基本概念；第二部分介绍了痰湿在人体内产生的机理；第三部分介绍了针对痰湿的调养方法；第四部分讲述了治疗痰湿的常用方法以及药物。该书中结合了大量漫画，把一些难以理解的知识和重点知识通过漫画的形式进行了表达，让读者好接受，好理解。这是一部面向大众读者具有实用价值的中医科普图书，符合现代人的生活习惯，帮助现代人及时发现自身问题，及时就医，具有良好的社会效益。&lt;/li&gt;
&lt;li&gt;出版时间 2022-06-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787571711016&lt;/li&gt;
&lt;li&gt;分类： 医学健康-健康&lt;/li&gt;
&lt;li&gt;出版社： 河北科学技术出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/b6532030813ab6f4dg0117da&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;序言-做自己&#34;&gt;序言 做自己&lt;/h2&gt;
&lt;h2 id=&#34;特别说明&#34;&gt;特别说明&lt;/h2&gt;
&lt;h2 id=&#34;第一章-什么是湿&#34;&gt;第一章 什么是湿&lt;/h2&gt;
&lt;h3 id=&#34;二湿的感受以及它的共同点&#34;&gt;二、湿的感受以及它的共同点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 有的病，在阴雨天会加重，比天气预报还准，像湿疹、关节炎，一到变天就加重——往往湿疹（关节炎）会提前告诉你马上要下雨了。这是受天气的影响
⏱ 2024-05-19 21:54:14 ^3300022531-6-7622-7689&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;三外湿&#34;&gt;三、外湿&lt;/h3&gt;
&lt;h3 id=&#34;四微小六气&#34;&gt;四、微小六气&lt;/h3&gt;
&lt;h3 id=&#34;五内湿&#34;&gt;五、内湿&lt;/h3&gt;
&lt;h3 id=&#34;六津液从哪里来&#34;&gt;六、津液从哪里来&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 假设这个环节出现问题了，比如说脾胃很弱，你吃的东西过量，脾胃运化功能受阻，那它就产生了湿气
⏱ 2024-05-21 18:29:03 ^3300022531-10-808-853&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果食物偏凉伤到了脾，或者是偏燥伤到了胃，津液运化就会在第一个环节出现差池。
⏱ 2024-05-21 18:29:19 ^3300022531-10-990-1028&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 大肠主津，大肠有问题，水分的吸收就不足，会口干。
⏱ 2024-05-24 19:12:57 ^3300022531-10-2552-2576&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;七人体的内湿来自哪里&#34;&gt;七、人体的内湿来自哪里&lt;/h3&gt;
&lt;h3 id=&#34;八痰饮水湿的区别&#34;&gt;八、痰、饮、水、湿的区别&lt;/h3&gt;
&lt;h2 id=&#34;第二章-我对湿的认识&#34;&gt;第二章 我对湿的认识&lt;/h2&gt;
&lt;h3 id=&#34;二湿热在岭南人的生活里&#34;&gt;二、湿热在岭南人的生活里&lt;/h3&gt;
&lt;h3 id=&#34;三热邪&#34;&gt;三、热邪&lt;/h3&gt;
&lt;h3 id=&#34;四湿热和环境&#34;&gt;四、湿热和环境&lt;/h3&gt;
&lt;h3 id=&#34;五湿热常见的特点&#34;&gt;五、湿热常见的特点&lt;/h3&gt;
&lt;h2 id=&#34;第三章-不要见湿治湿&#34;&gt;第三章 不要见湿治湿&lt;/h2&gt;
&lt;h3 id=&#34;二湿热夹杂气虚阴虚的情况较为多见&#34;&gt;二、湿热夹杂气虚、阴虚的情况较为多见&lt;/h3&gt;
&lt;h3 id=&#34;三苦夏气阴两虚的主要表现&#34;&gt;三、苦夏（气阴两虚）的主要表现&lt;/h3&gt;
&lt;h3 id=&#34;四治湿不要盯着湿要养正气&#34;&gt;四、治湿，不要盯着湿，要养正气&lt;/h3&gt;
&lt;h2 id=&#34;第四章-从津液代谢起始环节看湿热&#34;&gt;第四章 从津液代谢起始环节看湿热&lt;/h2&gt;
&lt;h3 id=&#34;二肠道湿热经常被误诊为脾虚所以难治愈&#34;&gt;二、肠道湿热经常被误诊为脾虚，所以难治愈&lt;/h3&gt;
&lt;h3 id=&#34;三甘露消毒丹治疗胃肠湿热&#34;&gt;三、甘露消毒丹治疗胃肠湿热&lt;/h3&gt;
&lt;h3 id=&#34;四用岭南药治湿热效果更好&#34;&gt;四、用岭南药治湿热，效果更好&lt;/h3&gt;
&lt;h3 id=&#34;五肠道湿热可能会伴有脾肾阳虚要用心治疗&#34;&gt;五、肠道湿热可能会伴有脾肾阳虚，要用心治疗&lt;/h3&gt;
&lt;h3 id=&#34;六甘露消毒丹&#34;&gt;六、甘露消毒丹&lt;/h3&gt;
&lt;h2 id=&#34;第五章-从津液代谢中间环节看湿热&#34;&gt;第五章 从津液代谢中间环节看湿热&lt;/h2&gt;
&lt;h3 id=&#34;一三焦通了很多病就好了&#34;&gt;一、三焦通了，很多病就好了&lt;/h3&gt;
&lt;h3 id=&#34;二三焦到底是什么&#34;&gt;二、三焦到底是什么&lt;/h3&gt;
&lt;h3 id=&#34;三深入认识三焦&#34;&gt;三、深入认识三焦&lt;/h3&gt;
&lt;h3 id=&#34;四三焦的气化功能&#34;&gt;四、三焦的气化功能&lt;/h3&gt;
&lt;h3 id=&#34;五三焦出了问题会出现哪些症状&#34;&gt;五、三焦出了问题，会出现哪些症状&lt;/h3&gt;
&lt;h3 id=&#34;六小柴胡汤为什么能治愈很多病&#34;&gt;六、小柴胡汤为什么能治愈很多病&lt;/h3&gt;
&lt;h2 id=&#34;第六章-从津液代谢结尾环节看湿热&#34;&gt;第六章 从津液代谢结尾环节看湿热&lt;/h2&gt;
&lt;h3 id=&#34;二大肠之湿热&#34;&gt;二、大肠之湿热&lt;/h3&gt;
&lt;h3 id=&#34;三膀胱之湿热&#34;&gt;三、膀胱之湿热&lt;/h3&gt;
&lt;h2 id=&#34;第七章-诊治经络湿热的一些体会&#34;&gt;第七章 诊治经络湿热的一些体会&lt;/h2&gt;
&lt;h3 id=&#34;二民间治疗湿热的方法和古籍记载&#34;&gt;二、民间治疗湿热的方法和古籍记载&lt;/h3&gt;
&lt;h3 id=&#34;三湿热侵袭人体后可能会从阴化寒&#34;&gt;三、湿热侵袭人体后，可能会从阴化寒&lt;/h3&gt;
&lt;h3 id=&#34;四经络湿热有的患者也会感觉冷&#34;&gt;四、经络湿热，有的患者也会感觉冷&lt;/h3&gt;
&lt;h3 id=&#34;五经络湿热造成的髋关节疼痛&#34;&gt;五、经络湿热造成的髋关节疼痛&lt;/h3&gt;
&lt;h3 id=&#34;六湿热与痿症&#34;&gt;六、湿热与痿症&lt;/h3&gt;
&lt;h3 id=&#34;七内生的湿热入侵经络&#34;&gt;七、内生的湿热入侵经络&lt;/h3&gt;
&lt;h2 id=&#34;第八章-坐月子落下的一些湿热病症&#34;&gt;第八章 坐月子落下的一些湿热病症&lt;/h2&gt;
&lt;h3 id=&#34;二母亲的湿热会影响到吃奶的孩子&#34;&gt;二、母亲的湿热会影响到吃奶的孩子&lt;/h3&gt;
&lt;h3 id=&#34;三很多产妇人既有湿热又有寒&#34;&gt;三、很多产妇（人）既有湿热又有寒&lt;/h3&gt;
&lt;h3 id=&#34;四产后病的常见治法&#34;&gt;四、产后病的常见治法&lt;/h3&gt;
&lt;h3 id=&#34;五产妇的骨质疏松症&#34;&gt;五、产妇的骨质疏松症&lt;/h3&gt;
&lt;h2 id=&#34;第九章-痰热在心&#34;&gt;第九章 痰热在心&lt;/h2&gt;
&lt;h3 id=&#34;二温胆汤治疗痰湿在心胸胃的心得&#34;&gt;二、温胆汤治疗痰湿在心、胸、胃的心得&lt;/h3&gt;
&lt;h3 id=&#34;三祛心里的痰湿要注意气阴气血亏等情况&#34;&gt;三、祛心里的痰湿，要注意气阴、气血亏等情况&lt;/h3&gt;
&lt;h2 id=&#34;第十章-下焦湿热&#34;&gt;第十章 下焦湿热&lt;/h2&gt;
&lt;h3 id=&#34;二肾和生殖系统的湿热&#34;&gt;二、肾和生殖系统的湿热&lt;/h3&gt;
&lt;h3 id=&#34;三治愈复杂的前列腺炎一例&#34;&gt;三、治愈复杂的前列腺炎一例&lt;/h3&gt;
&lt;h2 id=&#34;第十一章-酒的性情&#34;&gt;第十一章 酒的性情&lt;/h2&gt;
&lt;h3 id=&#34;二酒对人的影响&#34;&gt;二、酒对人的影响&lt;/h3&gt;
&lt;h3 id=&#34;三解酒的方法&#34;&gt;三、解酒的方法&lt;/h3&gt;
&lt;h2 id=&#34;第十二章-结石&#34;&gt;第十二章 结石&lt;/h2&gt;
&lt;h3 id=&#34;二肾结石&#34;&gt;二、肾结石&lt;/h3&gt;
&lt;h3 id=&#34;三肝胆结石&#34;&gt;三、肝胆结石&lt;/h3&gt;
&lt;h2 id=&#34;第十三章-痧症见闻&#34;&gt;第十三章 痧症见闻&lt;/h2&gt;
&lt;h3 id=&#34;二水果与痧&#34;&gt;二、水果与痧&lt;/h3&gt;
&lt;h3 id=&#34;三水果的湿热造成便血&#34;&gt;三、水果的湿热造成便血&lt;/h3&gt;
&lt;h3 id=&#34;四酱油的功效&#34;&gt;四、酱油的功效&lt;/h3&gt;
&lt;h2 id=&#34;第十四章-治四弯风肘窝腘窝处湿疹&#34;&gt;第十四章 治四弯风（肘窝、腘窝处湿疹）&lt;/h2&gt;
&lt;h3 id=&#34;二普通湿疹和特应性皮炎的治法&#34;&gt;二、普通湿疹和特应性皮炎的治法&lt;/h3&gt;
&lt;h3 id=&#34;三当归拈痛汤&#34;&gt;三、当归拈痛汤&lt;/h3&gt;
&lt;h2 id=&#34;第十五章-岭南用药见闻&#34;&gt;第十五章 岭南用药见闻&lt;/h2&gt;
&lt;h3 id=&#34;一巴戟天&#34;&gt;一、巴戟天&lt;/h3&gt;
&lt;h3 id=&#34;二臭茉莉根&#34;&gt;二、臭茉莉根&lt;/h3&gt;
&lt;h3 id=&#34;三臭牡丹&#34;&gt;三、臭牡丹&lt;/h3&gt;
&lt;h3 id=&#34;四桃金娘&#34;&gt;四、桃金娘&lt;/h3&gt;
&lt;h3 id=&#34;五艾纳香&#34;&gt;五、艾纳香&lt;/h3&gt;
&lt;h3 id=&#34;六白牛胆根&#34;&gt;六、白牛胆根&lt;/h3&gt;
&lt;h3 id=&#34;七血风藤&#34;&gt;七、血风藤&lt;/h3&gt;
&lt;h3 id=&#34;八五指毛桃&#34;&gt;八、五指毛桃&lt;/h3&gt;
&lt;h3 id=&#34;九牛大力&#34;&gt;九、牛大力&lt;/h3&gt;
&lt;h3 id=&#34;十千斤拔&#34;&gt;十、千斤拔&lt;/h3&gt;
&lt;h3 id=&#34;十一牡荆&#34;&gt;十一、牡荆&lt;/h3&gt;
&lt;h3 id=&#34;十二黄荆&#34;&gt;十二、黄荆&lt;/h3&gt;
&lt;h3 id=&#34;十三龙脷叶&#34;&gt;十三、龙脷叶&lt;/h3&gt;
&lt;h3 id=&#34;十四黄皮叶&#34;&gt;十四、黄皮叶&lt;/h3&gt;
&lt;h3 id=&#34;十五溪黄草&#34;&gt;十五、溪黄草&lt;/h3&gt;
&lt;h3 id=&#34;十六鸡骨草&#34;&gt;十六、鸡骨草&lt;/h3&gt;
&lt;h3 id=&#34;十七白花蛇舌草&#34;&gt;十七、白花蛇舌草&lt;/h3&gt;
&lt;h3 id=&#34;十八酢浆草&#34;&gt;十八、酢浆草&lt;/h3&gt;
&lt;h3 id=&#34;十九积雪草&#34;&gt;十九、积雪草&lt;/h3&gt;
&lt;h3 id=&#34;二十马齿苋&#34;&gt;二十、马齿苋&lt;/h3&gt;
&lt;h3 id=&#34;二十一布渣叶&#34;&gt;二十一、布渣叶&lt;/h3&gt;
&lt;h3 id=&#34;二十二独脚金&#34;&gt;二十二、独脚金&lt;/h3&gt;
&lt;h3 id=&#34;二十三火炭母&#34;&gt;二十三、火炭母&lt;/h3&gt;
&lt;h3 id=&#34;二十四岗梅根&#34;&gt;二十四、岗梅根&lt;/h3&gt;
&lt;h3 id=&#34;二十五木棉花&#34;&gt;二十五、木棉花&lt;/h3&gt;
&lt;h3 id=&#34;二十六鸡蛋花&#34;&gt;二十六、鸡蛋花&lt;/h3&gt;
&lt;h2 id=&#34;第十六章-凉茶&#34;&gt;第十六章 凉茶&lt;/h2&gt;
&lt;h3 id=&#34;一玳香苏茶&#34;&gt;一、玳香苏茶&lt;/h3&gt;
&lt;h3 id=&#34;二芥子茶&#34;&gt;二、芥子茶&lt;/h3&gt;
&lt;h3 id=&#34;三葆通茶&#34;&gt;三、葆通茶&lt;/h3&gt;
&lt;h3 id=&#34;四培土茶&#34;&gt;四、培土茶&lt;/h3&gt;
&lt;h3 id=&#34;五毓臻静夜司茶&#34;&gt;五、毓臻静夜司茶&lt;/h3&gt;
&lt;h3 id=&#34;六椒梅茶&#34;&gt;六、椒梅茶&lt;/h3&gt;
&lt;h3 id=&#34;七甘消茶&#34;&gt;七、甘消茶&lt;/h3&gt;
&lt;h3 id=&#34;八毓臻芦根茶&#34;&gt;八、毓臻芦根茶&lt;/h3&gt;
&lt;h3 id=&#34;九毓臻多汁茶&#34;&gt;九、毓臻多汁茶&lt;/h3&gt;
&lt;h3 id=&#34;十大口七膏&#34;&gt;十、大口七膏&lt;/h3&gt;
&lt;h3 id=&#34;十一毓臻桃嬿膏&#34;&gt;十一、毓臻桃嬿膏&lt;/h3&gt;
&lt;h3 id=&#34;十二毓臻青果膏&#34;&gt;十二、毓臻青果膏&lt;/h3&gt;
&lt;h3 id=&#34;十三毓臻天禧膏&#34;&gt;十三、毓臻天禧膏&lt;/h3&gt;
&lt;h2 id=&#34;第十七章-湿热感冒的应对及善后处理&#34;&gt;第十七章 湿热感冒的应对及善后处理&lt;/h2&gt;
&lt;h3 id=&#34;一湿热在肺&#34;&gt;一、湿热在肺&lt;/h3&gt;
&lt;h3 id=&#34;二湿热在胃&#34;&gt;二、湿热在胃&lt;/h3&gt;
&lt;h3 id=&#34;三湿热在大肠&#34;&gt;三、湿热在大肠&lt;/h3&gt;
&lt;h3 id=&#34;四湿邪在脾&#34;&gt;四、湿邪在脾&lt;/h3&gt;
&lt;h3 id=&#34;五湿热在心与心包&#34;&gt;五、湿热在心与心包&lt;/h3&gt;
&lt;h3 id=&#34;六湿热在膀胱&#34;&gt;六、湿热在膀胱&lt;/h3&gt;
&lt;h3 id=&#34;七湿热在小肠&#34;&gt;七、湿热在小肠&lt;/h3&gt;
&lt;h3 id=&#34;八湿热在肝&#34;&gt;八、湿热在肝&lt;/h3&gt;
&lt;h3 id=&#34;九湿热在少阳&#34;&gt;九、湿热在少阳&lt;/h3&gt;
&lt;h3 id=&#34;十湿热在肾&#34;&gt;十、湿热在肾&lt;/h3&gt;
&lt;h3 id=&#34;十一治湿不忘理气&#34;&gt;十一、治湿不忘理气&lt;/h3&gt;
&lt;h3 id=&#34;十二湿退热出&#34;&gt;十二、湿退热出&lt;/h3&gt;
&lt;h3 id=&#34;十三善后&#34;&gt;十三、善后&lt;/h3&gt;
&lt;h2 id=&#34;尾声&#34;&gt;尾声&lt;/h2&gt;
&lt;h3 id=&#34;编辑手记我所亲历的痰湿&#34;&gt;编辑手记：我所亲历的痰湿&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E7%BA%B3%E7%93%A6%E5%B0%94%E5%AE%9D%E5%85%B8/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E7%BA%B3%E7%93%A6%E5%B0%94%E5%AE%9D%E5%85%B8/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 纳瓦尔宝典&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/89/YueWen_44026191/t7_YueWen_44026191.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 纳瓦尔宝典|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 纳瓦尔宝典&lt;/li&gt;
&lt;li&gt;作者： 埃里克·乔根森&lt;/li&gt;
&lt;li&gt;简介： 致富不是靠运气，幸福也不是从天而降的。积累财富和幸福生活是我们可以学习的技能。这本书收集整理了硅谷投资人纳瓦尔在过去十年里通过推特、播客和采访等方式分享的人生智慧，向读者分享了纳瓦尔关于财富积累和幸福人生的原则与方法。纳瓦尔不仅告诉读者怎样致富，他还告诉读者怎样看待人生，怎样获得幸福。他对财富、人生的思考将帮助你走自己独特的道路，过上更富有、更幸福的生活。&lt;/li&gt;
&lt;li&gt;出版时间 2022-05-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787521741124&lt;/li&gt;
&lt;li&gt;分类： 经济理财-理财&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/e1e32b00729fc94fe1e824d&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献词&#34;&gt;献词&lt;/h2&gt;
&lt;h2 id=&#34;关于本书的重要说明&#34;&gt;关于本书的重要说明&lt;/h2&gt;
&lt;h2 id=&#34;推荐序一-财富与幸福源自选择&#34;&gt;推荐序一 财富与幸福源自选择&lt;/h2&gt;
&lt;h2 id=&#34;推荐序二-一场反直觉的精神瑜伽&#34;&gt;推荐序二 一场反直觉的精神瑜伽&lt;/h2&gt;
&lt;h2 id=&#34;序&#34;&gt;序&lt;/h2&gt;
&lt;h2 id=&#34;埃里克的笔记关于这本书&#34;&gt;埃里克的笔记（关于这本书）&lt;/h2&gt;
&lt;h2 id=&#34;纳瓦尔拉维坎特经历表&#34;&gt;纳瓦尔·拉维坎特经历表&lt;/h2&gt;
&lt;h2 id=&#34;纳瓦尔亲述&#34;&gt;纳瓦尔亲述&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-财富&#34;&gt;第一部分 财富&lt;/h2&gt;
&lt;h3 id=&#34;第一章-积累财富&#34;&gt;第一章 积累财富&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 累积专长的过程，对你而言就像玩耍，对他人来说则很吃力。
⏱ 2023-12-16 18:56:08 ^44026191-73-2820-2847&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 代码和媒体是不需要许可就能使用的杠杆。这两个杠杆是新富阶层背后的杠杆。你可以创建软件和媒体，让它们在你睡觉时为你工作。
⏱ 2023-12-16 18:57:19 ^44026191-73-3842-3901&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 学习微观经济学、博弈论、心理学、说服术、伦理学、数学和计算机。
⏱ 2023-12-16 18:58:54 ^44026191-73-4476-4507&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果想要实现致富的长期目标，你就应该问问自己：“这是我真正想要的东西吗？我的规划目标是我真正想要的吗？”得到肯定的答案后，再问问自己：“我实现产品化了吗？我实现规模化了吗？我选择规模化的方式是劳动力、资本，还是代码或媒体？”由此可见，“把自己产品化”这个阐述方便简单，便于记忆。[
⏱ 2023-12-16 19:02:55 ^44026191-73-5737-5897&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你真正想要的其实是财富。财富就是在你睡觉时也可以帮你赚钱的资产。财富是可以进行生产的工厂和机器人。财富是不分昼夜为客户服务的计算机程序。财富也可以是银行里被投资于其他资产或业务的钱。
⏱ 2023-12-16 19:03:38 ^44026191-73-6329-6420&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 最好的工作与委任或学位无关。最好的工作是终身学习者在自由市场中的创造性表达。
⏱ 2023-12-16 21:24:25 ^44026191-73-11104-11142&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 无论处于人生的哪个阶段，努力的目标都是不断提高自己的独立性，而不是升职加薪。拥有独立性，为自己独特的产出成果负责（而不是像打工一样为投入的时间负责），这才是最理想的状态。[10]
⏱ 2023-12-17 11:06:31 ^44026191-73-21567-21676&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 人生的一大目标应该是掌控自己的时间。理想的工作是利用杠杆效应的工作。在这种工作模式下，你可以掌控自己的时间，并能对自己的产出成果负责。如果你通过提供绝佳的解决方案给企业带来了神奇的转机，那么你必将得到金钱的回报。特别是，如果别人根本不知道你是如何做到的，他们就必须不断地付钱给你，让你继续提供这种产品或服务。而你之所以能够做到这一点，就是因为你的痴迷、技能或天赋。
⏱ 2023-12-17 11:10:18 ^44026191-73-22345-22527&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在实际操作中展现出色的判断力，拥有可信可靠的判断力，这一点非常关键。巴菲特之所以被称为“股神”，是因为他的可信度极高。他对自己的业务极为负责，一次又一次在公开场合做出正确的判断。他以高度正直著称，赢得了社会的充分信任，加上他判断力出色，所以人们敢在他身上押上不计其数的筹码。没有人问他工作有多努力，没有人问他几点起床、几点睡觉。大家都说：“巴菲特，你只要把业务搞好就行了。”
⏱ 2023-12-17 11:24:05 ^44026191-73-27121-27308&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 艺术就是创造。艺术的目的和关注点在于创作本身，是因为喜好、喜欢而创作，是为了自娱、自赏而创作。试想一下，生活中有哪些事情能像艺术创作那样只是以其本身为目的，而没有任何其他目的？我可以想到三个例子：毫无保留地爱，随心所欲地创造，无忧无虑地玩耍。对我来说，创业就是玩耍。我创业是因为创业本身很有趣，是因为我喜欢某个产品。[77]
⏱ 2023-12-17 11:49:29 ^44026191-73-35167-35349&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 还有一点对我有所裨益：我把自由看得高于一切。我说的自由是多种多样的：想做什么就做什么的自由，不想做什么就不去做的自由，不受自我情绪或外界影响的自由，等等。自由是我最珍视的价值。
⏱ 2023-12-17 11:53:09 ^44026191-73-36798-36886&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我并不是想说“宇宙是平衡的”“世上存在因果报应”这样的话，而是认为我们在内心深处都知道自己是谁。你是瞒不过自己的。你的失德会深刻影响你的心智模式，你的过往对你是清晰可见的。如果你有太多道德缺陷，你就不会尊重自己。人活在这个世界上最糟糕的结果就是没有自尊。如果连你都不爱自己，那么还有谁会爱你呢？
⏱ 2023-12-17 12:00:01 ^44026191-73-41056-41203&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第二章-增强判断力&#34;&gt;第二章 增强判断力&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我认为最聪明的人是可以把事情深入浅出地给孩子讲解清楚的人，否则他自己也没有真正理解。这是一个我们都熟知的观点，确实说得很对。
⏱ 2023-12-17 12:09:28 ^44026191-74-1759-1821&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 事实上，留出空闲时间非常重要。如果每一天都被各种会议占满，都是忙忙碌碌的，你就无法进行思考。没有思考，你就不会有出色的商业创意，也不可能做出正确的判断。我鼓励大家每周至少花一天时间来思考（最好是两天，因为即使预留了两天，最终也可能变成一天）。
⏱ 2023-12-17 16:00:25 ^44026191-74-3827-3977&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你难以抉择，答案就是否定的。原因是，现代社会充满了选择，有成千上万个选择。我们生活在一个有70亿人口的星球上，我们和互联网上的每个人都相互连接，世界上有成千上万的职业供我们选择。大千世界，芸芸众生，选择永远不缺。
⏱ 2023-12-17 19:23:28 ^44026191-74-13143-13251&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第二部分-幸福&#34;&gt;第二部分 幸福&lt;/h2&gt;
&lt;h3 id=&#34;第三章-学习幸福&#34;&gt;第三章 学习幸福&lt;/h3&gt;
&lt;h3 id=&#34;第四章-自我救赎&#34;&gt;第四章 自我救赎&lt;/h3&gt;
&lt;h3 id=&#34;第五章-哲学&#34;&gt;第五章 哲学&lt;/h3&gt;
&lt;h2 id=&#34;额外推荐&#34;&gt;额外推荐&lt;/h2&gt;
&lt;h3 id=&#34;纳瓦尔的推荐读物&#34;&gt;纳瓦尔的推荐读物&lt;/h3&gt;
&lt;h3 id=&#34;纳瓦尔的写作&#34;&gt;纳瓦尔的写作&lt;/h3&gt;
&lt;h3 id=&#34;进一步了解纳瓦尔&#34;&gt;进一步了解纳瓦尔&lt;/h3&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%9A%84%E6%80%9D%E7%BB%B4%E6%96%B9%E5%BC%8F%E7%AC%AC13%E7%89%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%9A%84%E6%80%9D%E7%BB%B4%E6%96%B9%E5%BC%8F%E7%AC%AC13%E7%89%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 经济学的思维方式：第13版&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/80/cpplatform_jhvcsheb8st56x3ztapxy3/t7_cpplatform_jhvcsheb8st56x3ztapxy31686906029.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 经济学的思维方式：第13版|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 经济学的思维方式：第13版&lt;/li&gt;
&lt;li&gt;作者： 【美】保罗·海恩 【美】彼得·勃特克 【美】大卫·普雷契特科&lt;/li&gt;
&lt;li&gt;简介： 《经济学的思维方式》是一本出版50年、迄今已更新13版仍长销不衰的经济学通识经典。全书共16个章节，着重研究人们的理性选择及其货币和商业结果，阐释了经济学规律如何作用于个体选择和社会积累。它颠覆了传统经济学著作名词解释式艰深晦涩的讲述，以接地气、充满逻辑性的方式娓娓道来，帮助普通人建立思维框架，养成边际选择思维、沉没成本归零、结果优于动机等经济学的思维习惯。这本书不设公式、函数，却是凝聚大师级的经济教育学家多年心血的严肃著作；数百个生活化案例，使人切实感受到，经济学不是殿堂学问，而是柴米油盐、日常选择，是让一生过得从容、富足的人生必修课。&lt;/li&gt;
&lt;li&gt;出版时间 2023-05-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787533970567&lt;/li&gt;
&lt;li&gt;分类： 经济理财-财经&lt;/li&gt;
&lt;li&gt;出版社： 浙江文艺出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/8c332830813ab7ebdg013f1c&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;文前&#34;&gt;文前&lt;/h2&gt;
&lt;h2 id=&#34;致敬保罗海恩&#34;&gt;致敬保罗·海恩&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 《经济学的思维方式》体现了保罗在经济学教育和通识教育方面的教育方法。他的方法与当时的其他教科书有根本性的不同。这种方法强调社会面临的问题以及如何用经济学说来解释这些问题。学生因此觉得经济学更加有趣了。不仅如此，这本书还强调了经济学的优势恰恰如本书的题目所言——经济学是一种思维方式。这种思维方式过去是，未来也仍将是经济学对社会科学以及对人们更好地理解周围世界的革命性贡献。
⏱ 2024-01-25 17:05:41 ^3300062053-4-1976-2162&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;经济学的思维方式中文版推荐序&#34;&gt;《经济学的思维方式》中文版推荐序&lt;/h2&gt;
&lt;h2 id=&#34;写在正文之前&#34;&gt;写在正文之前&lt;/h2&gt;
&lt;h3 id=&#34;少即是多&#34;&gt;少即是多&lt;/h3&gt;
&lt;h3 id=&#34;第13版的变化&#34;&gt;第13版的变化&lt;/h3&gt;
&lt;h3 id=&#34;致谢&#34;&gt;致谢&lt;/h3&gt;
&lt;h3 id=&#34;关于作者&#34;&gt;关于作者&lt;/h3&gt;
&lt;h2 id=&#34;第1章-经济学的思维方式&#34;&gt;第1章 经济学的思维方式&lt;/h2&gt;
&lt;h3 id=&#34;学习目标&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;11-认识秩序&#34;&gt;1.1 认识秩序&lt;/h3&gt;
&lt;h3 id=&#34;12-社会协作的重要性&#34;&gt;1.2 社会协作的重要性&lt;/h3&gt;
&lt;h3 id=&#34;13-社会协作如何发生&#34;&gt;1.3 社会协作如何发生&lt;/h3&gt;
&lt;h3 id=&#34;14-思想的工具经济学家有哪些技能&#34;&gt;1.4 思想的工具——经济学家有哪些技能&lt;/h3&gt;
&lt;h3 id=&#34;15-通过相互调整达成协作&#34;&gt;1.5 通过相互调整达成协作&lt;/h3&gt;
&lt;h3 id=&#34;16-信号&#34;&gt;1.6 信号&lt;/h3&gt;
&lt;h3 id=&#34;17-游戏规则&#34;&gt;1.7 游戏规则&lt;/h3&gt;
&lt;h3 id=&#34;18-产权是一种游戏规则&#34;&gt;1.8 产权是一种游戏规则&lt;/h3&gt;
&lt;h3 id=&#34;19-经济理论的偏向性是长处还是弱点&#34;&gt;1.9 经济理论的偏向性：是长处还是弱点&lt;/h3&gt;
&lt;h3 id=&#34;110-是偏见还是结论&#34;&gt;1.10 是偏见还是结论&lt;/h3&gt;
&lt;h3 id=&#34;111-经济学家的技能&#34;&gt;1.11 经济学家的技能&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第2章-效率交换和比较优势&#34;&gt;第2章 效率、交换和比较优势&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-1&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;21-正商品和负商品&#34;&gt;2.1 正商品和负商品&lt;/h3&gt;
&lt;h3 id=&#34;22-物质财富的迷思&#34;&gt;2.2 物质财富的迷思&lt;/h3&gt;
&lt;h3 id=&#34;23-贸易创造财富&#34;&gt;2.3 贸易创造财富&lt;/h3&gt;
&lt;h3 id=&#34;24-值不值效率和价值&#34;&gt;2.4 值不值？效率和价值&lt;/h3&gt;
&lt;h3 id=&#34;25-认识取舍对生产的机会成本进行比较&#34;&gt;2.5 认识取舍：对生产的机会成本进行比较&lt;/h3&gt;
&lt;h3 id=&#34;26-分工和交换带来的效益&#34;&gt;2.6 分工和交换带来的效益&lt;/h3&gt;
&lt;h3 id=&#34;27-为什么要进行专业分工&#34;&gt;2.7 为什么要进行专业分工&lt;/h3&gt;
&lt;h3 id=&#34;28-从个人贸易到国际贸易再从国际贸易回到个人贸易&#34;&gt;2.8 从个人贸易到国际贸易，再从国际贸易回到个人贸易&lt;/h3&gt;
&lt;h3 id=&#34;29-交易成本&#34;&gt;2.9 交易成本&lt;/h3&gt;
&lt;h3 id=&#34;210-降低交易成本的动机中间人&#34;&gt;2.10 降低交易成本的动机：中间人&lt;/h3&gt;
&lt;h3 id=&#34;211-中间人创造信息&#34;&gt;2.11 中间人创造信息&lt;/h3&gt;
&lt;h3 id=&#34;212-市场是一种发现的过程&#34;&gt;2.12 市场是一种发现的过程&lt;/h3&gt;
&lt;h3 id=&#34;213-全景图关于经济增长的初步思考&#34;&gt;2.13 全景图：关于经济增长的初步思考&lt;/h3&gt;
&lt;h3 id=&#34;214-寻找一种解释&#34;&gt;2.14 寻找一种解释&lt;/h3&gt;
&lt;h3 id=&#34;215-鼓励专业分工和交换的规则如何演进&#34;&gt;2.15 鼓励专业分工和交换的规则如何演进&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-1&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-1&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第3章-无处不在的替代品需求的概念&#34;&gt;第3章 无处不在的替代品：需求的概念&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-2&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;31-关于需要这个词&#34;&gt;3.1 关于“需要”这个词&lt;/h3&gt;
&lt;h3 id=&#34;32-边际价值&#34;&gt;3.2 边际价值&lt;/h3&gt;
&lt;h3 id=&#34;33-分岔路口日常选择是边际选择&#34;&gt;3.3 分岔路口：日常选择是边际选择&lt;/h3&gt;
&lt;h3 id=&#34;34-需求曲线&#34;&gt;3.4 需求曲线&lt;/h3&gt;
&lt;h3 id=&#34;35-需求法则&#34;&gt;3.5 需求法则&lt;/h3&gt;
&lt;h3 id=&#34;36-需求和需求量&#34;&gt;3.6 需求和需求量&lt;/h3&gt;
&lt;h3 id=&#34;37-需求本身也可以变化&#34;&gt;3.7 需求本身也可以变化&lt;/h3&gt;
&lt;h3 id=&#34;38-所有东西都取决于其他东西&#34;&gt;3.8 所有东西都取决于其他东西&lt;/h3&gt;
&lt;h3 id=&#34;39-通货膨胀导致的误解&#34;&gt;3.9 通货膨胀导致的误解&lt;/h3&gt;
&lt;h3 id=&#34;310-时间站在我们这边&#34;&gt;3.10 时间站在我们这边&lt;/h3&gt;
&lt;h3 id=&#34;311-需求的价格弹性&#34;&gt;3.11 需求的价格弹性&lt;/h3&gt;
&lt;h3 id=&#34;312-对弹性的思考&#34;&gt;3.12 对弹性的思考&lt;/h3&gt;
&lt;h3 id=&#34;313-弹性和总收入&#34;&gt;3.13 弹性和总收入&lt;/h3&gt;
&lt;h3 id=&#34;314-竖直需求曲线的迷思&#34;&gt;3.14 竖直需求曲线的迷思&lt;/h3&gt;
&lt;h3 id=&#34;315-需求应该扮演怎样的角色&#34;&gt;3.15 需求应该扮演怎样的角色&lt;/h3&gt;
&lt;h3 id=&#34;316-金钱是唯一重要的因素吗货币成本其他成本和经济计算&#34;&gt;3.16 金钱是唯一重要的因素吗？货币成本、其他成本和经济计算&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-2&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-2&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第4章-成本与选择供给的概念&#34;&gt;第4章 成本与选择：供给的概念&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-3&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;41-回顾机会成本的概念&#34;&gt;4.1 回顾机会成本的概念&lt;/h3&gt;
&lt;h3 id=&#34;42-成本是行为的成本而不是东西的成本&#34;&gt;4.2 成本是行为的成本，而不是东西的成本&lt;/h3&gt;
&lt;h3 id=&#34;43-我现在该怎么做沉没成本的无关性&#34;&gt;4.3 我现在该怎么做？“沉没成本”的无关性&lt;/h3&gt;
&lt;h3 id=&#34;44-生产者的成本是机会成本&#34;&gt;4.4 生产者的成本是机会成本&lt;/h3&gt;
&lt;h3 id=&#34;45-边际机会成本&#34;&gt;4.5 边际机会成本&lt;/h3&gt;
&lt;h3 id=&#34;46-成本与供给&#34;&gt;4.6 成本与供给&lt;/h3&gt;
&lt;h3 id=&#34;47-供给曲线&#34;&gt;4.7 供给曲线&lt;/h3&gt;
&lt;h3 id=&#34;48-供给本身也可以变化&#34;&gt;4.8 供给本身也可以变化&lt;/h3&gt;
&lt;h3 id=&#34;49-边际成本与平均成本&#34;&gt;4.9 边际成本与平均成本&lt;/h3&gt;
&lt;h3 id=&#34;410-志愿兵役制度的成本&#34;&gt;4.10 志愿兵役制度的成本&lt;/h3&gt;
&lt;h3 id=&#34;411-供给的价格弹性&#34;&gt;4.11 供给的价格弹性&lt;/h3&gt;
&lt;h3 id=&#34;412-用成本论证正当性&#34;&gt;4.12 用成本论证正当性&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-3&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-3&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第5章-供给与需求一种协调过程&#34;&gt;第5章 供给与需求：一种协调过程&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-4&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;51-市场是计划协调的过程&#34;&gt;5.1 市场是计划协调的过程&lt;/h3&gt;
&lt;h3 id=&#34;52-基本过程&#34;&gt;5.2 基本过程&lt;/h3&gt;
&lt;h3 id=&#34;53-竞争合作与市场出清&#34;&gt;5.3 竞争、合作与市场出清&lt;/h3&gt;
&lt;h3 id=&#34;54-市场情况的变化&#34;&gt;5.4 市场情况的变化&lt;/h3&gt;
&lt;h3 id=&#34;55-从自由市场价格中获取信息&#34;&gt;5.5 从自由市场价格中获取信息&lt;/h3&gt;
&lt;h3 id=&#34;56-计划经济与知识问题&#34;&gt;5.6 计划经济与知识问题&lt;/h3&gt;
&lt;h3 id=&#34;57-产权与制度&#34;&gt;5.7 产权与制度&lt;/h3&gt;
&lt;h3 id=&#34;延伸思考货币和利息的协调角色&#34;&gt;延伸思考：货币和利息的协调角色&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-4&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-4&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第6章-意外之果供给与需求的更多应用&#34;&gt;第6章 意外之果：供给与需求的更多应用&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-5&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;61-灾难中的困惑&#34;&gt;6.1 灾难中的困惑&lt;/h3&gt;
&lt;h3 id=&#34;62-灾难中的协调&#34;&gt;6.2 灾难中的协调&lt;/h3&gt;
&lt;h3 id=&#34;63-解决价格问题的冲动&#34;&gt;6.3 解决价格问题的冲动&lt;/h3&gt;
&lt;h3 id=&#34;64-价格锁定时的竞争&#34;&gt;6.4 价格锁定时的竞争&lt;/h3&gt;
&lt;h3 id=&#34;65-恰当的信号与不恰当的信号&#34;&gt;6.5 恰当的信号与不恰当的信号&lt;/h3&gt;
&lt;h3 id=&#34;66-想在城里找间公寓去看讣告栏吧&#34;&gt;6.6 想在城里找间公寓？去看讣告栏吧&lt;/h3&gt;
&lt;h3 id=&#34;67-烈酒和烈性毒品犯罪的激励机制&#34;&gt;6.7 烈酒和烈性毒品：犯罪的激励机制&lt;/h3&gt;
&lt;h3 id=&#34;68-脱脂奶全脂奶和牛奶黑帮&#34;&gt;6.8 脱脂奶、全脂奶和牛奶黑帮&lt;/h3&gt;
&lt;h3 id=&#34;69-价格下限与商品过剩&#34;&gt;6.9 价格下限与商品过剩&lt;/h3&gt;
&lt;h3 id=&#34;610-供给需求和最低工资&#34;&gt;6.10 供给、需求和最低工资&lt;/h3&gt;
&lt;h3 id=&#34;611-国际奴隶交易死灰复燃&#34;&gt;6.11 国际奴隶交易死灰复燃&lt;/h3&gt;
&lt;h3 id=&#34;612-昂贵的体育廉价的诗歌谁之过&#34;&gt;6.12 昂贵的体育，廉价的诗歌，谁之过&lt;/h3&gt;
&lt;h3 id=&#34;613-成本是否决定价格&#34;&gt;6.13 成本是否决定价格&lt;/h3&gt;
&lt;h3 id=&#34;614-退学者乐队发行了首张专辑&#34;&gt;6.14 “退学者”乐队发行了首张专辑&lt;/h3&gt;
&lt;h3 id=&#34;615-山里有金子那又怎么样&#34;&gt;6.15 “山里有金子！”那又怎么样&lt;/h3&gt;
&lt;h3 id=&#34;616-连肉贩也没这个胆子&#34;&gt;6.16 连肉贩也没这个胆子&lt;/h3&gt;
&lt;h3 id=&#34;617-为什么换个便盆那么贵&#34;&gt;6.17 为什么换个便盆那么贵&lt;/h3&gt;
&lt;h3 id=&#34;延伸思考正确表达经济学问题&#34;&gt;延伸思考：正确表达经济学问题&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-5&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-5&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第7章-利润与亏损&#34;&gt;第7章 利润与亏损&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-6&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;71-工资租金和利息通过合同事先规定的收入&#34;&gt;7.1 工资、租金和利息：通过合同事先规定的收入&lt;/h3&gt;
&lt;h3 id=&#34;72-利润可正可负的收入&#34;&gt;7.2 利润：可正可负的收入&lt;/h3&gt;
&lt;h3 id=&#34;73-利润的计算哪些因素应该纳入成本&#34;&gt;7.3 利润的计算：哪些因素应该纳入成本&lt;/h3&gt;
&lt;h3 id=&#34;74-经济利润与财会利润的比较&#34;&gt;7.4 经济利润与财会利润的比较&lt;/h3&gt;
&lt;h3 id=&#34;75-不确定性利润的必要条件&#34;&gt;7.5 不确定性：利润的必要条件&lt;/h3&gt;
&lt;h3 id=&#34;76-企业家&#34;&gt;7.6 企业家&lt;/h3&gt;
&lt;h3 id=&#34;77-企业家是获得余值的人&#34;&gt;7.7 企业家是获得余值的人&lt;/h3&gt;
&lt;h3 id=&#34;78-非营利机构&#34;&gt;7.8 非营利机构&lt;/h3&gt;
&lt;h3 id=&#34;79-企业经营与市场过程&#34;&gt;7.9 企业经营与市场过程&lt;/h3&gt;
&lt;h3 id=&#34;710-仅靠运气&#34;&gt;7.10 仅靠运气？&lt;/h3&gt;
&lt;h3 id=&#34;711-利润与亏损是协调的信号货币计算扮演的角色&#34;&gt;7.11 利润与亏损是协调的信号：货币计算扮演的角色&lt;/h3&gt;
&lt;h3 id=&#34;712-小心专家&#34;&gt;7.12 小心专家&lt;/h3&gt;
&lt;h3 id=&#34;延伸思考期货市场上的投机行为&#34;&gt;延伸思考：期货市场上的投机行为&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-6&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-6&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第8章-寻价&#34;&gt;第8章 寻价&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-7&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;81-流行的定价理论&#34;&gt;8.1 流行的定价理论&lt;/h3&gt;
&lt;h3 id=&#34;82-有请艾德塞克登场&#34;&gt;8.2 有请艾德·塞克登场&lt;/h3&gt;
&lt;h3 id=&#34;83-最大化净收入的基本法则&#34;&gt;8.3 最大化净收入的基本法则&lt;/h3&gt;
&lt;h3 id=&#34;84-边际收入的概念&#34;&gt;8.4 边际收入的概念&lt;/h3&gt;
&lt;h3 id=&#34;85-为什么边际收入低于价格&#34;&gt;8.5 为什么边际收入低于价格&lt;/h3&gt;
&lt;h3 id=&#34;86-让边际收入等于边际成本&#34;&gt;8.6 让边际收入等于边际成本&lt;/h3&gt;
&lt;h3 id=&#34;87-空座位怎么办&#34;&gt;8.7 空座位怎么办&lt;/h3&gt;
&lt;h3 id=&#34;88-差异化定价者面临的两难境地&#34;&gt;8.8 差异化定价者面临的两难境地&lt;/h3&gt;
&lt;h3 id=&#34;89-大学的寻价问题&#34;&gt;8.9 大学的寻价问题&lt;/h3&gt;
&lt;h3 id=&#34;810-一些差异化定价策略&#34;&gt;8.10 一些差异化定价策略&lt;/h3&gt;
&lt;h3 id=&#34;811-艾德塞克找到了出路&#34;&gt;8.11 艾德·塞克找到了出路&lt;/h3&gt;
&lt;h3 id=&#34;812-消费者的不满情绪和商家对差异化定价策略的合理化解释&#34;&gt;8.12 消费者的不满情绪和商家对差异化定价策略的合理化解释&lt;/h3&gt;
&lt;h3 id=&#34;813-午餐和晚餐的价格&#34;&gt;8.13 午餐和晚餐的价格&lt;/h3&gt;
&lt;h3 id=&#34;814-重新考虑成本加利润的定价模型&#34;&gt;8.14 重新考虑“成本加利润”的定价模型&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-7&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-7&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第9章-竞争与政府政策&#34;&gt;第9章 竞争与政府政策&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-8&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;91-竞争是一个过程&#34;&gt;9.1 竞争是一个过程&lt;/h3&gt;
&lt;h3 id=&#34;92-竞争的压力&#34;&gt;9.2 竞争的压力&lt;/h3&gt;
&lt;h3 id=&#34;93-控制竞争&#34;&gt;9.3 控制竞争&lt;/h3&gt;
&lt;h3 id=&#34;94-对竞争的限制&#34;&gt;9.4 对竞争的限制&lt;/h3&gt;
&lt;h3 id=&#34;95-对关键资源的竞争价值100万美元的出租车牌照&#34;&gt;9.5 对关键资源的竞争：价值100万美元的出租车牌照&lt;/h3&gt;
&lt;h3 id=&#34;96-竞争与产权&#34;&gt;9.6 竞争与产权&lt;/h3&gt;
&lt;h3 id=&#34;97-政府政策的矛盾性&#34;&gt;9.7 政府政策的矛盾性&lt;/h3&gt;
&lt;h3 id=&#34;98-以低于成本的价格销售&#34;&gt;9.8 以低于成本的价格销售&lt;/h3&gt;
&lt;h3 id=&#34;99-什么是合理成本&#34;&gt;9.9 什么是合理成本&lt;/h3&gt;
&lt;h3 id=&#34;910-掠食者与竞争&#34;&gt;9.10 “掠食者”与竞争&lt;/h3&gt;
&lt;h3 id=&#34;911-价格管控&#34;&gt;9.11 价格管控&lt;/h3&gt;
&lt;h3 id=&#34;912-反托拉斯政策&#34;&gt;9.12 “反托拉斯”政策&lt;/h3&gt;
&lt;h3 id=&#34;913-反托拉斯法的解释和应用&#34;&gt;9.13 反托拉斯法的解释和应用&lt;/h3&gt;
&lt;h3 id=&#34;914-纵向兼并促进竞争还是抑制竞争&#34;&gt;9.14 纵向兼并：促进竞争还是抑制竞争&lt;/h3&gt;
&lt;h3 id=&#34;915-各方意见&#34;&gt;9.15 各方意见&lt;/h3&gt;
&lt;h3 id=&#34;916-政策评估&#34;&gt;9.16 政策评估&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-8&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-8&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第10章-外部效应与权利冲突&#34;&gt;第10章 外部效应与权利冲突&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-9&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;101-正的外部效应和负的外部效应&#34;&gt;10.1 正的外部效应和负的外部效应&lt;/h3&gt;
&lt;h3 id=&#34;102-完美的情况不可能达到&#34;&gt;10.2 完美的情况不可能达到&lt;/h3&gt;
&lt;h3 id=&#34;103-协商&#34;&gt;10.3 协商&lt;/h3&gt;
&lt;h3 id=&#34;104-通过裁决adjudication降低外部效应&#34;&gt;10.4 通过裁决(adjudication)降低外部效应&lt;/h3&gt;
&lt;h3 id=&#34;105-房主的抱怨&#34;&gt;10.5 房主的抱怨&lt;/h3&gt;
&lt;h3 id=&#34;106-前例的重要性&#34;&gt;10.6 前例的重要性&lt;/h3&gt;
&lt;h3 id=&#34;107-剧烈变化导致的问题&#34;&gt;10.7 剧烈变化导致的问题&lt;/h3&gt;
&lt;h3 id=&#34;108-通过立法legislation减少外部效应&#34;&gt;10.8 通过立法(legislation)减少外部效应&lt;/h3&gt;
&lt;h3 id=&#34;109-成本最小化&#34;&gt;10.9 成本最小化&lt;/h3&gt;
&lt;h3 id=&#34;1010-另一种解决方案对废气排放征税&#34;&gt;10.10 另一种解决方案：对废气排放征税&lt;/h3&gt;
&lt;h3 id=&#34;1011-污染许可证&#34;&gt;10.11 污染许可证？&lt;/h3&gt;
&lt;h3 id=&#34;1012-效率与公平&#34;&gt;10.12 效率与公平&lt;/h3&gt;
&lt;h3 id=&#34;1013-泡泡法&#34;&gt;10.13 泡泡法&lt;/h3&gt;
&lt;h3 id=&#34;1014-权利与污染造成的社会问题&#34;&gt;10.14 权利与污染造成的社会问题&lt;/h3&gt;
&lt;h3 id=&#34;1015-交通堵塞是一个外部效应问题&#34;&gt;10.15 交通堵塞是一个外部效应问题&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-9&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-9&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第11章-市场与政府&#34;&gt;第11章 市场与政府&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-10&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;111-私有还是公有&#34;&gt;11.1 私有还是公有&lt;/h3&gt;
&lt;h3 id=&#34;112-竞争与个人主义&#34;&gt;11.2 竞争与个人主义&lt;/h3&gt;
&lt;h3 id=&#34;113-经济理论与政府行为&#34;&gt;11.3 经济理论与政府行为&lt;/h3&gt;
&lt;h3 id=&#34;114-强制的权力&#34;&gt;11.4 强制的权力&lt;/h3&gt;
&lt;h3 id=&#34;115-政府究竟有没有必要存在&#34;&gt;11.5 政府究竟有没有必要存在&lt;/h3&gt;
&lt;h3 id=&#34;116-排除不付钱的人&#34;&gt;11.6 排除不付钱的人&lt;/h3&gt;
&lt;h3 id=&#34;117-搭便车问题&#34;&gt;11.7 “搭便车”问题&lt;/h3&gt;
&lt;h3 id=&#34;118-正的外部效应与搭便车的人&#34;&gt;11.8 正的外部效应与“搭便车”的人&lt;/h3&gt;
&lt;h3 id=&#34;119-法律与秩序&#34;&gt;11.9 法律与秩序&lt;/h3&gt;
&lt;h3 id=&#34;1110-国防&#34;&gt;11.10 国防&lt;/h3&gt;
&lt;h3 id=&#34;1111-公路和学校&#34;&gt;11.11 公路和学校&lt;/h3&gt;
&lt;h3 id=&#34;1112-收入的再分配&#34;&gt;11.12 收入的再分配&lt;/h3&gt;
&lt;h3 id=&#34;1113-对自愿交换进行管制&#34;&gt;11.13 对自愿交换进行管制&lt;/h3&gt;
&lt;h3 id=&#34;1114-政府与公共利益&#34;&gt;11.14 政府与公共利益&lt;/h3&gt;
&lt;h3 id=&#34;1115-信息与民主政府&#34;&gt;11.15 信息与民主政府&lt;/h3&gt;
&lt;h3 id=&#34;1116-民选官员的利益&#34;&gt;11.16 民选官员的利益&lt;/h3&gt;
&lt;h3 id=&#34;1117-收益是集中的成本却是分散的&#34;&gt;11.17 收益是集中的，成本却是分散的&lt;/h3&gt;
&lt;h3 id=&#34;1118-正的外部效应与政府政策&#34;&gt;11.18 正的外部效应与政府政策&lt;/h3&gt;
&lt;h3 id=&#34;1119-人们如何界定公共利益&#34;&gt;11.19 人们如何界定公共利益&lt;/h3&gt;
&lt;h3 id=&#34;1120-囚徒困境&#34;&gt;11.20 囚徒困境&lt;/h3&gt;
&lt;h3 id=&#34;1121-政治制度的局限&#34;&gt;11.21 政治制度的局限&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-10&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-10&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第12章-收入分配&#34;&gt;第12章 收入分配&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-11&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;121-供给方和需求方&#34;&gt;12.1 供给方和需求方&lt;/h3&gt;
&lt;h3 id=&#34;122-资本与人力资源&#34;&gt;12.2 资本与人力资源&lt;/h3&gt;
&lt;h3 id=&#34;123-人力资本与投资&#34;&gt;12.3 人力资本与投资&lt;/h3&gt;
&lt;h3 id=&#34;124-产权与收入&#34;&gt;12.4 产权与收入&lt;/h3&gt;
&lt;h3 id=&#34;125-实际权利法律权利和道德权利&#34;&gt;12.5 实际权利、法律权利和道德权利&lt;/h3&gt;
&lt;h3 id=&#34;126-预期与投资&#34;&gt;12.6 预期与投资&lt;/h3&gt;
&lt;h3 id=&#34;127-是人还是机器&#34;&gt;12.7 是人还是机器&lt;/h3&gt;
&lt;h3 id=&#34;128-对生产性服务的派生需求&#34;&gt;12.8 对生产性服务的派生需求&lt;/h3&gt;
&lt;h3 id=&#34;129-谁在与谁竞争&#34;&gt;12.9 谁在与谁竞争&lt;/h3&gt;
&lt;h3 id=&#34;1210-工会与竞争&#34;&gt;12.10 工会与竞争&lt;/h3&gt;
&lt;h3 id=&#34;1211-贫困与收入不平等问题&#34;&gt;12.11 贫困与收入不平等问题&lt;/h3&gt;
&lt;h3 id=&#34;1212-为什么收入不平等问题在不断加剧&#34;&gt;12.12 为什么收入不平等问题在不断加剧&lt;/h3&gt;
&lt;h3 id=&#34;1213-收入的再分配&#34;&gt;12.13 收入的再分配&lt;/h3&gt;
&lt;h3 id=&#34;1214-改变规则和社会合作&#34;&gt;12.14 改变规则和社会合作&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-11&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-11&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第13章-衡量经济系统的总体表现&#34;&gt;第13章 衡量经济系统的总体表现&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-12&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;131-国内生产总值&#34;&gt;13.1 国内生产总值&lt;/h3&gt;
&lt;h3 id=&#34;132-gdp还是gnp&#34;&gt;13.2 GDP还是GNP&lt;/h3&gt;
&lt;h3 id=&#34;133-gdp是国内经济创造的总收入&#34;&gt;13.3 GDP是国内经济创造的总收入&lt;/h3&gt;
&lt;h3 id=&#34;134-gdp衡量的不是经济体中的所有购买支出&#34;&gt;13.4 GDP衡量的不是经济体中的所有购买支出&lt;/h3&gt;
&lt;h3 id=&#34;135-gdp是所有增加价值的总和&#34;&gt;13.5 GDP是所有增加价值的总和&lt;/h3&gt;
&lt;h3 id=&#34;136-增加价值是否总是正数&#34;&gt;13.6 增加价值是否总是正数&lt;/h3&gt;
&lt;h3 id=&#34;137-尚未解答的零散问题未售出的商品和二手商品&#34;&gt;13.7 尚未解答的零散问题：未售出的商品和二手商品&lt;/h3&gt;
&lt;h3 id=&#34;138-总量波动&#34;&gt;13.8 总量波动&lt;/h3&gt;
&lt;h3 id=&#34;139-失业和未就业&#34;&gt;13.9 失业和未就业&lt;/h3&gt;
&lt;h3 id=&#34;1310-就业人口未就业人口与失业人口&#34;&gt;13.10 就业人口、未就业人口与失业人口&lt;/h3&gt;
&lt;h3 id=&#34;1311-劳动力市场的决策&#34;&gt;13.11 劳动力市场的决策&lt;/h3&gt;
&lt;h3 id=&#34;1312-失业与经济危机&#34;&gt;13.12 失业与经济危机&lt;/h3&gt;
&lt;h3 id=&#34;1313-通货膨胀&#34;&gt;13.13 通货膨胀&lt;/h3&gt;
&lt;h3 id=&#34;1314-1960年以来的经济危机与通货膨胀&#34;&gt;13.14 1960年以来的经济危机与通货膨胀&lt;/h3&gt;
&lt;h3 id=&#34;1315-哪些因素导致了总体经济表现的波动&#34;&gt;13.15 哪些因素导致了总体经济表现的波动&lt;/h3&gt;
&lt;h3 id=&#34;延伸思考国家收入统计的局限性&#34;&gt;延伸思考：国家收入统计的局限性&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-12&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-12&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第14章-货币&#34;&gt;第14章 货币&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-13&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;141-货币的演化&#34;&gt;14.1 货币的演化&lt;/h3&gt;
&lt;h3 id=&#34;142-法定货币fiat-money的故事&#34;&gt;14.2 法定货币(Fiat Money)的故事&lt;/h3&gt;
&lt;h3 id=&#34;143-今日货币的性质&#34;&gt;14.3 今日货币的性质&lt;/h3&gt;
&lt;h3 id=&#34;144-究竟有多少钱在市面上流通&#34;&gt;14.4 究竟有多少钱在市面上流通&lt;/h3&gt;
&lt;h3 id=&#34;145-信用和信心&#34;&gt;14.5 信用和信心&lt;/h3&gt;
&lt;h3 id=&#34;146-受管制的银行法定准备金要求&#34;&gt;14.6 受管制的银行：法定准备金要求&lt;/h3&gt;
&lt;h3 id=&#34;147-存款扩张与货币创造&#34;&gt;14.7 存款扩张与货币创造&lt;/h3&gt;
&lt;h3 id=&#34;148-美联储的角色是监督者和规则执行者&#34;&gt;14.8 美联储的角色是监督者和规则执行者&lt;/h3&gt;
&lt;h3 id=&#34;149-美联储使用的工具&#34;&gt;14.9 美联储使用的工具&lt;/h3&gt;
&lt;h3 id=&#34;1410-贴现率&#34;&gt;14.10 贴现率&lt;/h3&gt;
&lt;h3 id=&#34;1411-公开市场操作&#34;&gt;14.11 公开市场操作&lt;/h3&gt;
&lt;h3 id=&#34;1412-货币平衡&#34;&gt;14.12 货币平衡&lt;/h3&gt;
&lt;h3 id=&#34;1413-究竟谁说了算&#34;&gt;14.13 究竟谁说了算&lt;/h3&gt;
&lt;h3 id=&#34;延伸思考那黄金呢&#34;&gt;延伸思考：那黄金呢？&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-13&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-13&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第15章-经济表现和现实世界中的政治&#34;&gt;第15章 经济表现和现实世界中的政治&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-14&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;151-大萧条&#34;&gt;15.1 大萧条&lt;/h3&gt;
&lt;h3 id=&#34;152-经济衰退期间究竟发生了什么&#34;&gt;15.2 经济衰退期间究竟发生了什么&lt;/h3&gt;
&lt;h3 id=&#34;153-一堆错误的聚集&#34;&gt;15.3 一堆错误的聚集&lt;/h3&gt;
&lt;h3 id=&#34;154-信贷与协作自由市场上的储蓄与投资&#34;&gt;15.4 信贷与协作：自由市场上的储蓄与投资&lt;/h3&gt;
&lt;h3 id=&#34;155-信贷与协作失败不可持续的经济繁荣&#34;&gt;15.5 信贷与协作失败：不可持续的经济繁荣&lt;/h3&gt;
&lt;h3 id=&#34;156-经济衰退是一种修正过程&#34;&gt;15.6 经济衰退是一种修正过程&lt;/h3&gt;
&lt;h3 id=&#34;157-货币政策在什么情况下有效&#34;&gt;15.7 货币政策在什么情况下有效&lt;/h3&gt;
&lt;h3 id=&#34;158-为财政政策辩护&#34;&gt;15.8 为财政政策辩护&lt;/h3&gt;
&lt;h3 id=&#34;159-掌握时机的必要性&#34;&gt;15.9 掌握时机的必要性&lt;/h3&gt;
&lt;h3 id=&#34;1510-联邦预算是一种政策工具&#34;&gt;15.10 联邦预算是一种政策工具&lt;/h3&gt;
&lt;h3 id=&#34;1511-任期和政治&#34;&gt;15.11 任期和政治&lt;/h3&gt;
&lt;h3 id=&#34;1512-无限制的赤字&#34;&gt;15.12 无限制的赤字&lt;/h3&gt;
&lt;h3 id=&#34;1513-为什么赤字没有成为各级政府的普遍现象&#34;&gt;15.13 为什么赤字没有成为各级政府的普遍现象&lt;/h3&gt;
&lt;h3 id=&#34;1514-自由裁量与规则&#34;&gt;15.14 自由裁量与规则&lt;/h3&gt;
&lt;h3 id=&#34;1515-究竟由谁说了算&#34;&gt;15.15 究竟由谁说了算&lt;/h3&gt;
&lt;h3 id=&#34;1516-理解近期的经济情况&#34;&gt;15.16 理解近期的经济情况&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-14&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-14&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;第16章-国家的财富全球化与经济增长&#34;&gt;第16章 国家的财富：全球化与经济增长&lt;/h2&gt;
&lt;h3 id=&#34;学习目标-15&#34;&gt;学习目标&lt;/h3&gt;
&lt;h3 id=&#34;161-哪些国家富裕哪些国家贫穷&#34;&gt;16.1 哪些国家富裕，哪些国家贫穷&lt;/h3&gt;
&lt;h3 id=&#34;162-历史数据&#34;&gt;16.2 历史数据&lt;/h3&gt;
&lt;h3 id=&#34;163-经济增长的来源&#34;&gt;16.3 经济增长的来源&lt;/h3&gt;
&lt;h3 id=&#34;164-外国投资&#34;&gt;16.4 外国投资&lt;/h3&gt;
&lt;h3 id=&#34;165-人力资本&#34;&gt;16.5 人力资本&lt;/h3&gt;
&lt;h3 id=&#34;166-石油来自我们的头脑&#34;&gt;16.6 石油来自我们的头脑&lt;/h3&gt;
&lt;h3 id=&#34;167-经济自由指数&#34;&gt;16.7 经济自由指数&lt;/h3&gt;
&lt;h3 id=&#34;168-私有产权在经济发展方面的力量&#34;&gt;16.8 私有产权在经济发展方面的力量&lt;/h3&gt;
&lt;h3 id=&#34;169-亚洲纪录&#34;&gt;16.9 亚洲纪录&lt;/h3&gt;
&lt;h3 id=&#34;1610-亚洲以外&#34;&gt;16.10 亚洲以外&lt;/h3&gt;
&lt;h3 id=&#34;1611-对不同国家的gdp进行比较时面临的困难&#34;&gt;16.11 对不同国家的GDP进行比较时面临的困难&lt;/h3&gt;
&lt;h3 id=&#34;1612-全球化及人们对全球化的不满&#34;&gt;16.12 全球化及人们对全球化的不满&lt;/h3&gt;
&lt;h3 id=&#34;1613-民意的力量&#34;&gt;16.13 民意的力量&lt;/h3&gt;
&lt;h3 id=&#34;1614-特殊利益集团的力量&#34;&gt;16.14 特殊利益集团的力量&lt;/h3&gt;
&lt;h3 id=&#34;1615-外包的争议口号与分析&#34;&gt;16.15 外包的争议：口号与分析&lt;/h3&gt;
&lt;h3 id=&#34;简要回顾-15&#34;&gt;简要回顾&lt;/h3&gt;
&lt;h3 id=&#34;供讨论的问题-15&#34;&gt;供讨论的问题&lt;/h3&gt;
&lt;h2 id=&#34;后记-经济学家知道什么&#34;&gt;后记 经济学家知道什么&lt;/h2&gt;
&lt;h3 id=&#34;经济学以外&#34;&gt;经济学以外&lt;/h3&gt;
&lt;h2 id=&#34;核心词汇&#34;&gt;核心词汇&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;写在正文之前-1&#34;&gt;写在正文之前&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 还有人把本书当作微观经济学原理的教材。  ^6733360-7Ou92uVOT
- 💭 我刚好需要
- ⏱ 2024-01-25 17:09:18&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E7%BB%BF%E6%A4%8D%E8%BF%99%E4%B9%88%E5%85%BB%E5%B0%B1%E5%AF%B9%E4%BA%86%E6%96%B0%E6%89%8B%E4%B9%9F%E8%83%BD%E9%A9%BE%E9%A9%AD%E7%9A%8450%E7%A7%8D%E7%88%86%E7%81%AB%E5%AE%A4%E5%86%85%E6%A4%8D%E7%89%A9/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E7%BB%BF%E6%A4%8D%E8%BF%99%E4%B9%88%E5%85%BB%E5%B0%B1%E5%AF%B9%E4%BA%86%E6%96%B0%E6%89%8B%E4%B9%9F%E8%83%BD%E9%A9%BE%E9%A9%AD%E7%9A%8450%E7%A7%8D%E7%88%86%E7%81%AB%E5%AE%A4%E5%86%85%E6%A4%8D%E7%89%A9/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 绿植这么养就对了：新手也能驾驭的50种爆火室内植物&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/75/YueWen_36142597/t7_YueWen_36142597.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 绿植这么养就对了：新手也能驾驭的50种爆火室内植物|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 绿植这么养就对了：新手也能驾驭的50种爆火室内植物&lt;/li&gt;
&lt;li&gt;作者： 希瑟·罗迪诺&lt;/li&gt;
&lt;li&gt;简介： 一本有趣的室内植物养护指南，学会50种热门植物的养护方法！室内植物如今广受欢迎，正如作者说的那样，“植物可以净化空气，还能让人内心平静，是一种人人都能负担得起的装饰方式。它可以为你的家增加美感，即便是租来的房子也能因为植物的装扮而变得不一样。”本书笔调轻松，图文并茂，从琴叶榕、龟背竹到空气凤梨，详细介绍了50种广受欢迎的室内植物。关于光照、水分、土壤、植物虫害等新手关心的基础问题，作者均做出了解答。错误案例、小贴士和清单还详细列出了对宠物友好的植物以及适合差旅人士的植物这些小细节。&lt;/li&gt;
&lt;li&gt;出版时间 2020-10-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787521720877&lt;/li&gt;
&lt;li&gt;分类： 科学技术-农林牧业&lt;/li&gt;
&lt;li&gt;出版社： 中信出版集团&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/b0d32a4072277e05b0d6554&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献言&#34;&gt;献言&lt;/h2&gt;
&lt;h2 id=&#34;推荐序&#34;&gt;推荐序&lt;/h2&gt;
&lt;h2 id=&#34;序言&#34;&gt;序言&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-植物养护入门&#34;&gt;第一部分 植物养护入门&lt;/h2&gt;
&lt;h3 id=&#34;光明之路-了解光照&#34;&gt;光明之路 了解光照&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你可能没法选择迈耶柠檬树这样的品种，不过绿萝、春羽以及维多利亚时代的宠儿——蜘蛛抱蛋都能待在朝北的房间。你甚至可以在这里摆上一盆令人惊艳的兜兰，关键是尽量靠近光源。
⏱ 2021-02-26 10:54:12 ^36142597-7-2597-2679&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;水世界-关于浇水的一切&#34;&gt;水世界 关于浇水的一切&lt;/h3&gt;
&lt;h3 id=&#34;哦湿度-为什么它有时很重要&#34;&gt;哦，湿度 为什么它（有时）很重要&lt;/h3&gt;
&lt;h3 id=&#34;又弄脏了-了解盆土&#34;&gt;又弄脏了 了解盆土&lt;/h3&gt;
&lt;h3 id=&#34;一起去购物&#34;&gt;一起去购物！&lt;/h3&gt;
&lt;h3 id=&#34;嗨美人儿-怎样让你的植物更有型&#34;&gt;嗨，美人儿 怎样让你的植物更有型&lt;/h3&gt;
&lt;h3 id=&#34;搬家啦-给植物换盆&#34;&gt;搬家啦 给植物换盆&lt;/h3&gt;
&lt;h3 id=&#34;出什么事了-常见植物问题解答&#34;&gt;出什么事了？ 常见植物问题解答&lt;/h3&gt;
&lt;h3 id=&#34;繁殖-如何拥有更多植物朋友&#34;&gt;繁殖 如何拥有更多植物朋友&lt;/h3&gt;
&lt;h3 id=&#34;寻找你的专属室内植物&#34;&gt;寻找你的专属室内植物&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-植物档案&#34;&gt;第二部分 植物档案&lt;/h2&gt;
&lt;h3 id=&#34;非洲紫罗兰-saintpaulia&#34;&gt;非洲紫罗兰 Saintpaulia&lt;/h3&gt;
&lt;h3 id=&#34;空气凤梨-tillandsia&#34;&gt;空气凤梨 Tillandsia&lt;/h3&gt;
&lt;h3 id=&#34;芦荟-aloe-vera&#34;&gt;芦荟 Aloe vera&lt;/h3&gt;
&lt;h3 id=&#34;朱顶红-hippeastrum&#34;&gt;朱顶红 Hippeastrum&lt;/h3&gt;
&lt;h3 id=&#34;合果芋-syngonium-podophyllum&#34;&gt;合果芋 Syngonium podophyllum&lt;/h3&gt;
&lt;h3 id=&#34;鸟巢蕨-asplenium-nidus&#34;&gt;鸟巢蕨 Asplenium nidus&lt;/h3&gt;
&lt;h3 id=&#34;波士顿蕨-nephrolepis-exaltata-bostoniensis&#34;&gt;波士顿蕨 Nephrolepis exaltata ‘Bostoniensis’&lt;/h3&gt;
&lt;h3 id=&#34;发财树-pachira-aquatica&#34;&gt;发财树 Pachira aquatica&lt;/h3&gt;
&lt;h3 id=&#34;蜘蛛抱蛋-aspidistra-elatior&#34;&gt;蜘蛛抱蛋 Aspidistra elatior&lt;/h3&gt;
&lt;h3 id=&#34;广东万年青-aglaonema&#34;&gt;广东万年青 Aglaonema&lt;/h3&gt;
&lt;h3 id=&#34;镜面草-pilea-peperomioides&#34;&gt;镜面草 Pilea peperomioides&lt;/h3&gt;
&lt;h3 id=&#34;蟹爪兰-schlumbergera-buckleyi&#34;&gt;蟹爪兰 Schlumbergera buckleyi&lt;/h3&gt;
&lt;h3 id=&#34;花叶万年青-dieffenbachia-seguin&#34;&gt;花叶万年青 Dieffenbachia seguin&lt;/h3&gt;
&lt;h3 id=&#34;玉珠帘-sedum-morganianum&#34;&gt;玉珠帘 Sedum morganianum&lt;/h3&gt;
&lt;h3 id=&#34;鹅掌藤-schefflera-arborico&#34;&gt;鹅掌藤 Schefflera arborico&lt;/h3&gt;
&lt;h3 id=&#34;拟石莲花-echeveria&#34;&gt;拟石莲花 Echeveria&lt;/h3&gt;
&lt;h3 id=&#34;洋常春藤-hedera-helix&#34;&gt;洋常春藤 Hedera helix&lt;/h3&gt;
&lt;h3 id=&#34;琴叶榕-ficus-lyrata&#34;&gt;琴叶榕 Ficus lyrata&lt;/h3&gt;
&lt;h3 id=&#34;长寿花-kalanchoe-blossfeldiana&#34;&gt;长寿花 Kalanchoe blossfeldiana&lt;/h3&gt;
&lt;h3 id=&#34;金琥-echinocactus-grusonii&#34;&gt;金琥 Echinocactus grusonii&lt;/h3&gt;
&lt;h3 id=&#34;心叶蔓绿绒-philodendron-hederaceumsyn-philodendron-scandens&#34;&gt;心叶蔓绿绒 Philodendron hederaceum,syn. Philodendron scandens&lt;/h3&gt;
&lt;h3 id=&#34;吊竹梅-tradescatia-zebrina&#34;&gt;吊竹梅 Tradescatia zebrina&lt;/h3&gt;
&lt;h3 id=&#34;翡翠木-crassula-ovata&#34;&gt;翡翠木 Crassula ovata&lt;/h3&gt;
&lt;h3 id=&#34;兜兰-paphiopedilum&#34;&gt;兜兰 Paphiopedilum&lt;/h3&gt;
&lt;h3 id=&#34;金边银纹铁-dracaena-deremensis-lemon-lime&#34;&gt;金边银纹铁 Dracaena deremensis ‘Lemon Lime’&lt;/h3&gt;
&lt;h3 id=&#34;富贵竹-dracaena-sanderiana&#34;&gt;富贵竹 Dracaena sanderiana&lt;/h3&gt;
&lt;h3 id=&#34;迈耶柠檬树-citrus--meyeri&#34;&gt;迈耶柠檬树 Citrus × meyeri&lt;/h3&gt;
&lt;h3 id=&#34;龟背竹-monstera-deliciosa&#34;&gt;龟背竹 Monstera deliciosa&lt;/h3&gt;
&lt;h3 id=&#34;蝴蝶兰-phalaenopsis&#34;&gt;蝴蝶兰 Phalaenopsis&lt;/h3&gt;
&lt;h3 id=&#34;网纹草-fittonia&#34;&gt;网纹草 Fittonia&lt;/h3&gt;
&lt;h3 id=&#34;异叶南洋杉-araucaria-heterophylla&#34;&gt;异叶南洋杉 Araucaria heterophylla&lt;/h3&gt;
&lt;h3 id=&#34;紫叶酢浆草-oxalis-triangularis&#34;&gt;紫叶酢浆草 Oxalis triangularis&lt;/h3&gt;
&lt;h3 id=&#34;月兔耳-kalanchoe-tomentosa&#34;&gt;月兔耳 Kalanchoe tomentosa&lt;/h3&gt;
&lt;h3 id=&#34;袖珍椰子-chamaedorea-eleganssyn-neanthe-bella&#34;&gt;袖珍椰子 Chamaedorea elegans,syn. Neanthe bella&lt;/h3&gt;
&lt;h3 id=&#34;白鹤芋-spathiphyllum&#34;&gt;白鹤芋 Spathiphyllum&lt;/h3&gt;
&lt;h3 id=&#34;嫣红蔓-hypoestes-phyllostachya&#34;&gt;嫣红蔓 Hypoestes phyllostachya&lt;/h3&gt;
&lt;h3 id=&#34;酒瓶兰-beaucarnea-recurvata&#34;&gt;酒瓶兰 Beaucarnea recurvata&lt;/h3&gt;
&lt;h3 id=&#34;绿萝-epipremnum-aureum&#34;&gt;绿萝 Epipremnum aureum&lt;/h3&gt;
&lt;h3 id=&#34;豹纹竹芋-maranta-leuconeura&#34;&gt;豹纹竹芋 Maranta leuconeura&lt;/h3&gt;
&lt;h3 id=&#34;帝王秋海棠-begonia-rex&#34;&gt;帝王秋海棠 Begonia rex&lt;/h3&gt;
&lt;h3 id=&#34;橡皮树-ficus-elastica&#34;&gt;橡皮树 Ficus elastica&lt;/h3&gt;
&lt;h3 id=&#34;虎尾兰-sansevieria-trifasciata&#34;&gt;虎尾兰 Sansevieria trifasciata&lt;/h3&gt;
&lt;h3 id=&#34;吊兰-chlorophytum-comosum&#34;&gt;吊兰 Chlorophytum comosum&lt;/h3&gt;
&lt;h3 id=&#34;二歧鹿角蕨-platycerium-bifurcatum&#34;&gt;二歧鹿角蕨 Platycerium bifurcatum&lt;/h3&gt;
&lt;h3 id=&#34;春羽-philodendron-bipinnatifidumsyn-philodendron-selloum&#34;&gt;春羽 Philodendron bipinnatifidum,syn. Philodendron selloum&lt;/h3&gt;
&lt;h3 id=&#34;蜻蜓凤梨-aechmea-fasciata&#34;&gt;蜻蜓凤梨 Aechmea fasciata&lt;/h3&gt;
&lt;h3 id=&#34;西瓜皮椒草-peperomia-argyreia&#34;&gt;西瓜皮椒草 Peperomia argyreia&lt;/h3&gt;
&lt;h3 id=&#34;球兰-hoya-carnosa&#34;&gt;球兰 Hoya carnosa&lt;/h3&gt;
&lt;h3 id=&#34;条纹十二卷-haworthia-fasciata&#34;&gt;条纹十二卷 Haworthia Fasciata&lt;/h3&gt;
&lt;h3 id=&#34;金钱树-zamioculcas-zamiifolia&#34;&gt;金钱树 Zamioculcas zamiifolia&lt;/h3&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;资源库&#34;&gt;资源库&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h2 id=&#34;图片来源&#34;&gt;图片来源&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E8%83%86%E5%9B%BA%E9%86%87%E5%85%B6%E5%AE%9E%E8%B7%9F%E4%BD%A0%E6%83%B3%E7%9A%84%E4%B8%8D%E4%B8%80%E6%A0%B7/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E8%83%86%E5%9B%BA%E9%86%87%E5%85%B6%E5%AE%9E%E8%B7%9F%E4%BD%A0%E6%83%B3%E7%9A%84%E4%B8%8D%E4%B8%80%E6%A0%B7/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 胆固醇，其实跟你想的不一样！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://wfqqreader-1252317822.image.myqcloud.com/cover/484/32886484/t7_32886484.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 胆固醇，其实跟你想的不一样！|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 胆固醇，其实跟你想的不一样！&lt;/li&gt;
&lt;li&gt;作者： 吉米·摩尔 埃里克·韦斯特曼&lt;/li&gt;
&lt;li&gt;简介： 本书提供了更全面、更前沿、更专业的胆固醇信息。人们误以为解决“高胆固醇”的方法是减少饱和脂肪的摄入，多吃一些“健康”的全谷类食品和植物油，甚至可能服用像他汀类药物这样的处方药来将其降低至“理想”水平。本书不仅能告诉读者的胆固醇测试（包括低密度脂蛋白胆固醇、高密度脂蛋白胆固醇、甘油三酯和其他重要的胆固醇指标）的真正含义，还能给读者提供营养指导，帮助读者达到最佳健康状态。&lt;/li&gt;
&lt;li&gt;出版时间 2020-07-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787518075591&lt;/li&gt;
&lt;li&gt;分类： 医学健康-健康&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/caf3232071f5ced4cafcd04&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;推荐语&#34;&gt;推荐语&lt;/h2&gt;
&lt;h2 id=&#34;本书的重要医学免责声明&#34;&gt;本书的重要医学免责声明&lt;/h2&gt;
&lt;h2 id=&#34;如何使用本书&#34;&gt;如何使用本书&lt;/h2&gt;
&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;h2 id=&#34;胆固醇专家简介&#34;&gt;胆固醇专家简介&lt;/h2&gt;
&lt;h2 id=&#34;第1章-胆固醇的定义及人体为何需要胆固醇&#34;&gt;第1章 胆固醇的定义及人体为何需要胆固醇&lt;/h2&gt;
&lt;h2 id=&#34;第2章-忘记胆固醇炎症才是罪魁祸首&#34;&gt;第2章 忘记胆固醇，炎症才是罪魁祸首&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 人们如果想要确定体内是否存在炎症，可以请医生检查一下他们体内的C反应蛋白水平。
⏱ 2023-12-29 18:25:43 ^32886484-9-2235-2274&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第3章-主要健康组织对胆固醇的看法&#34;&gt;第3章 主要健康组织对胆固醇的看法&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 此外，一些动物研究表明，假如你在早年时摄入的胆碱比推荐的胆碱摄入量多3倍，那么你终生都不会患上阿尔茨海默病，而且你的记忆力和精神状态会出现重大改善。人们害怕蛋黄的主要原因是它们的胆固醇含量高，但是它们也含有其他相当重要的营养成分，其中一些营养成分很少存在于其他食物中。
⏱ 2023-12-29 18:31:16 ^32886484-10-3230-3364&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第4章-医生正在质疑抗胆固醇理论&#34;&gt;第4章 医生正在质疑抗胆固醇理论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 饱和脂肪摄入量、胆固醇水平和心脏病之间绝对没有关联。就所有国家而言，关于此问题的最准确研究是世界卫生组织从20世纪80年代中期就开始开展的“心血管疾病趋势及其决定因素监测”。假如你看到此研究的一些数据，你会很容易发现，在饱和脂肪摄入量最高的国家中，居民的胆固醇水平会偏高，但他们的心脏病发病率较低。我们讨论的可是700%的差异！居民饱和脂肪摄入量最高的国家是法国，法国居民的平均总胆固醇水平是215毫克/分升，但他们的心脏病发病率是乌克兰人的心脏病发病率的1/7。相比之下，乌克兰人的饱和脂肪摄入量不及法国人饱和脂肪摄入量的一半，并且乌克兰人的平均胆固醇水平比法国人的平均胆固醇水平略低。所以，根据这些数据，我们可以看出：在居民心脏病发病率方面，饱和脂肪摄入量最高的国家低于饱和脂肪摄入量最低的国家。各国居民胆固醇水平在195～225毫克/分升左右，其中瑞士的平均胆固醇水平最高，达到225毫克/分升，但瑞士居民的心脏病发病率在欧洲国家中位居倒数第2，仅为美国居民心脏病发病率的1/4。
⏱ 2023-12-31 06:57:49 ^32886484-11-4479-4922&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第5章-他汀类药物灵丹妙药抑或合法销售的毒药&#34;&gt;第5章 他汀类药物：灵丹妙药，抑或合法销售的毒药&lt;/h2&gt;
&lt;h2 id=&#34;第6章-有益心脏健康的真正含义是什么&#34;&gt;第6章 有益心脏健康的真正含义是什么&lt;/h2&gt;
&lt;h2 id=&#34;第7章-为何低脂饮食并不具有你所认为的健康功效&#34;&gt;第7章 为何低脂饮食并不具有你所认为的健康功效&lt;/h2&gt;
&lt;h2 id=&#34;第8章-碳水化合物和植物油两大罪魁祸首&#34;&gt;第8章 碳水化合物和植物油：两大罪魁祸首&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你正在通过减少碳水化合物的摄入量来减轻炎症和氧化应激，摄入干净、完整、未加工过的食物（即旧石器时代饮食法），并服用补充剂来完善饮食营养，那么这会对动脉粥样硬化斑块和心脏病风险产生何种影响？答案是，你罹患动脉粥样硬化斑块和心脏病风险会下降。换言之，脂蛋白分子对伤害的敏感度会下降。在这种情况下，你的胆固醇水平几乎不构成任何威胁，你无须为此担忧。
⏱ 2023-12-31 09:13:41 ^32886484-15-463-636&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 摄入大量的碳水化合物（即全谷类食物、精制谷物、糖类（例如水果中的天然糖）和淀粉类食物）会在人体内触发一系列危险的连锁反应。我们摄入的碳水化合物由葡萄糖、果糖或两者的混合物组成，这一混合物会导致体内的甘油三酯水平升高。甘油三酯水平升高又会增加小而密脂蛋白胆固醇的数量，进而导致人体动脉损伤。我们要如何阻止这种情况发生？很简单：减少会导致甘油三酯水平升高的碳水化合物的摄入量。这是一个简单的解决方案，可以立即从根本上改善我们的心脏健康。
⏱ 2023-12-31 09:16:30 ^32886484-15-2184-2400&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 你也知道，这些油品含有据说有益心脏健康的ω-6脂肪酸（一种多元不饱和脂肪酸）。请不要弄错，ω-6属于对人体最有害、最不应该摄入的一类物质。
⏱ 2023-12-31 09:23:05 ^32886484-15-3729-3798&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 胆固醇和脂肪不会堵塞我们的动脉。高脂肪食物经过消化后会被包裹成脂蛋白颗粒，这些颗粒只要构建得当，就可以将我们血流中的脂肪统统搬走，不会堵塞动脉。当我们的饮食中含有玉米油、大豆油或其他常见的工业植物油时，脂蛋白颗粒内将缺乏足够的抗氧化剂。没有了抗氧化剂，脂蛋白很容易不稳定。当这些包裹脂肪的颗粒变得不稳定并在血液中穿梭时，脂肪会很快失去保护，无法悬浮在血液中，并将会像子弹一样，射入动脉内壁。届时，动脉内壁会产生一系列复杂的反应，从而导致炎症，最终致使动脉内壁变脆、出血并堵塞，我们称这种症状为心脏病发作或中风。这就解释了为什么当人们采用不健康的饮食方式时，低密度脂蛋白胆固醇的含量会上升。不健康的饮食方式会让脂蛋白变得不稳定，而本来应该能够将脂蛋白中的脂肪输送到细胞中的酶也不起作用了。这就导致了血液中悬浮的低密度脂蛋白胆固醇颗粒（也称含有载脂蛋白B（ApoB）的颗粒）的数量看起来随时都会上升
⏱ 2023-12-31 09:24:56 ^32886484-15-6162-6559&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 简单地说，过量摄入会打破我们的体内平衡：我们目前的ω-6脂肪酸摄入量超过了ω-3脂肪酸，而后者对健康更加有益。ω-3脂肪酸多见于亚麻籽、核桃、鲑鱼、沙丁鱼和草食牛肉等食物。ω-6脂肪酸与ω-3脂肪酸的理想摄入比例应为1：1。一旦该比例高于3：1，人体健康就会受到危害。
⏱ 2023-12-31 09:27:08 ^32886484-15-7019-7153&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 低密度脂蛋白胆固醇的氧化正是心脏病和其他心血管疾病病发的根本原因。人体细胞内的氧化反应类似于金属生锈，也是一个随时间推移而逐渐推进的过程。同样地，ω-6脂肪酸会降解人体细胞，使其变得极其脆弱。或许，在你看来，植物油能降低人体内的胆固醇水平，你会因为食用植物油而变得健康。实际上，你的身体发生动脉粥样硬化的风险日益上升——也就是说，你罹患心脏病或心脏病发作的概率不断提高。
⏱ 2023-12-31 09:29:54 ^32886484-15-7985-8170&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 抛弃掉饮食中的植物油、糖类、谷物和其他不利健康的碳水化合物，选择食用新鲜、纯正的未加工食品以及天然无添加的食物源性饱和脂肪酸。如此一来，你就会走上一条健康之路。
⏱ 2023-12-31 09:32:17 ^32886484-15-9660-9740&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 碳水化合物会提高体内甘油三酯、极低密度脂蛋白胆固醇、低密度脂蛋白胆固醇小颗粒的含量。
⏱ 2023-12-31 09:32:40 ^32886484-15-10031-10073&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 谷物、糖分和淀粉中的碳水化合物最容易使人发胖。·高脂饮食研究中的食物也包含大量的碳水化合物。·富含ω-6的植物油厂商自我标榜这一产品有益于健康，但实际上它是人类摄入的最有害的脂肪。·如今市面上的所有包装食品几乎都含有植物油。·我们目前的ω-6到ω-3脂肪酸摄入比例为30：1，而二者的理想比例应为1：1。·大量摄入ω-6脂肪酸会导致低密度脂蛋白胆固醇颗粒发生氧化，最终引发心脏健康问题。·已氧化低密度脂蛋白胆固醇含量的测定比胆固醇的筛查更加重要。·选择纯正、低碳水、含天然脂肪的食物，可以保持身体健康。
⏱ 2023-12-31 09:33:00 ^32886484-15-10107-10589&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第9章-低密度脂蛋白胆固醇颗粒究竟为何物&#34;&gt;第9章 低密度脂蛋白胆固醇颗粒究竟为何物&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ·A型低密度脂蛋白胆固醇更大、更松，通常无害。·B型低密度脂蛋白胆固醇更小、更密，可能会带来危险。·你应接受其中一种颗粒检测以便评估风险。
⏱ 2023-12-31 11:18:26 ^32886484-16-7035-7170&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第10章-遗忘与忽略甘油三酯和高密度脂蛋白胆固醇&#34;&gt;第10章 遗忘与忽略：甘油三酯和高密度脂蛋白胆固醇&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 大家必须明白，“低密度脂蛋白胆固醇不好”和“高密度脂蛋白胆固醇好”这样的说法是错误的。胆固醇在人体内发挥了很多重要的作用，如果你的细胞内含有大量的胆固醇，你应该感到高兴。你的低密度脂蛋白胆固醇可能会升高这一事实并不是一件坏事。当下关于低密度脂蛋白胆固醇的各类贬损说法缺乏科学事实根据，它们只是用来吓唬消费者和提高他汀类药物销量的手段。
⏱ 2023-12-31 11:22:09 ^32886484-17-1253-1420&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  甘油三酯与低密度脂蛋白胆固醇同样与心脏病有关。低密度脂蛋白胆固醇有两种：与心脏病无关的大而松的低密度脂蛋白胆固醇，与心脏病有关的小而密的低密度脂蛋白胆固醇。确定体内哪种低密度脂蛋白胆固醇占主导地位的最佳方法是：检查你的甘油三酯水平。如果你体内的低密度脂蛋白胆固醇含量和甘油三酯水平都高，那么你体内的小而密的低密度脂蛋白胆固醇小颗粒占优势，你的胰岛素抵抗较高并有代谢综合征。这就是我在进行胆固醇检测时想要看的数据。 ^32886484-17-1554-1760&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 看甘油三酯是否控制得当 - ⏱ 2023-12-31 11:32:02&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我一般先看甘油三酯的数值。如果它们低于100毫克/分升且接近50毫克/分升，那么我会感到很满意。最重要的是，我认为甘油三酯和高密度脂蛋白胆固醇的比例最好接近1或低于1。——卡西·比约克
⏱ 2024-01-07 07:31:20 ^32886484-17-5557-5680&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你无法测量低密度脂蛋白胆固醇小颗粒数量，那么接下来最应该参考的是甘油三酯和高密度脂蛋白胆固醇这两个标志物。你应该将它们考虑在内，而不是遵循标准胆固醇检测报告单上的常规指南。甘油三酯水平在150毫克/分升以下毫无意义，努力将它减少50毫克/分升还差不多。对于高密度脂蛋白胆固醇，接近或超过50毫克/分升最好。理想情况下，高密度脂蛋白胆固醇的浓度最好在70毫克/分升至80毫克/分升之间或更高。如果你体内的甘油三酯水平较低，而高密度脂蛋白胆固醇水平较高，那么你体内可能有低密度脂蛋白胆固醇小颗粒，但可能不是很多。
⏱ 2023-12-31 12:04:36 ^32886484-17-6096-6352&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 高甘油三酯是细胞能量代谢受损的一个标志物。由于受损的细胞燃烧糖的能力变差，我们的身体就必须保持血液中的甘油三酯处于一个高水平状态，作为无法燃烧糖分的细胞的食物。受损细胞无法控制糖分的原因在于它们没有足够的硫酸盐。于是，为了储存糖分，它们需要更多的硫酸盐。这样，我们的身体就会出现高血糖和高甘油三酯的症状。
⏱ 2023-12-31 13:05:21 ^32886484-17-7379-7531&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第11章-专家关于心脏健康关键标志物的争论&#34;&gt;第11章 专家关于心脏健康关键标志物的争论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对我而言，降低甘油三酯的水平最为重要，因为甘油三酯的水平会随着加工过的碳水化合物、糖类和反式脂肪的摄入量增加而增加。如果你将甘油三酯水平控制在了50毫克/分升或更低的水平，那么你将会看到你的身体整体状况得到了改善。我还喜欢检查糖化血红蛋白（HgA1c）的数值，这个数值代表的是血糖水平随着时间的推移所呈现的一致性。理想情况下，该数值应低于5.0%。当然，我也会关注C反应蛋白（CRP）标志物，它是全身炎症的警示信号。C反应蛋白的水平应低于1.0毫克/分升。如果C反应蛋白水平上升，但你并未出现感染迹象，那么这意味着你的血管出现了炎症。C反应蛋白水平高的人，其胆固醇水平也很高，这一点都不值得惊讶，因为身体需要胆固醇来修复C反应蛋白带来的问题。对于C反应蛋白水平低于1毫克/分升的客户，我一点儿都不关心他的胆固醇水平有多高。将这些信息传递给大家真的很难，因为他们的医生只会警告他们胆固醇水平
⏱ 2023-12-31 15:06:50 ^32886484-18-1659-2053&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 成百上千人共同完成的数十项研究共同向大众表明：总胆固醇与高密度脂蛋白胆固醇的比例是心血管疾病及其死亡率的最强预测指标。此指标独立存在，基于血脂情况。
⏱ 2023-12-31 15:10:08 ^32886484-18-4323-4397&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 高密度脂蛋白胆固醇对身体有益，我们都希望自己体内的高密度脂蛋白胆固醇水平较高，但我们不能通过药物来提升高密度脂蛋白胆固醇水平。我们可以通过减少碳水化合物的摄入量、增加脂肪的摄入量和锻炼来自然地提升高密度脂蛋白胆固醇水平。
⏱ 2023-12-31 15:13:05 ^32886484-18-4534-4644&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在评估心血管风险时，我最不关注的就是标准胆固醇检测——美国医疗机构通常会提供的检测。我首先想知道甘油三酯与高密度脂蛋白胆固醇的比例。这一比值是整个血脂检测报告单中最能说明我们目前健康状况的数据。它是胰岛素抵抗和昂贵的胆固醇颗粒检测的绝佳替代品。在胆固醇检测中，只有胆固醇颗粒检测才有实际价值，因为它会告诉我们低密度脂蛋白胆固醇和高密度脂蛋白胆固醇颗粒的数量和大小。如果你无法去做胆固醇颗粒检测，那么甘油三酯与高密度脂蛋白胆固醇的比例也是一个很好的指标。如果你的甘油三酯与高密度脂蛋白胆固醇的比例过高，那么这几乎可以肯定，你体内含有大量的小而密的B型低密度脂蛋白胆固醇颗粒，这是不好的现象。然而，仅关注低密度脂蛋白胆固醇的数值就毫无意义了。—
⏱ 2023-12-31 15:36:04 ^32886484-18-7234-7585&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第12章-为何如此之多的医生对胆固醇一无所知&#34;&gt;第12章 为何如此之多的医生对胆固醇一无所知&lt;/h2&gt;
&lt;h2 id=&#34;第13章-胆固醇太低的含义&#34;&gt;第13章 “胆固醇太低”的含义&lt;/h2&gt;
&lt;h2 id=&#34;第14章-胆固醇水平上升的9个原因&#34;&gt;第14章 胆固醇水平上升的9个原因&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当人体摄入大量的碳水化合物，人体内的低密度脂蛋白胆固醇小颗粒、低密度脂蛋白胆固醇、极低密度脂蛋白颗粒和甘油三酯都会规律性地急剧增加。
⏱ 2023-12-31 15:50:32 ^32886484-21-3252-3318&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第15章-我还是担心高胆固醇给我的健康带来危害&#34;&gt;第15章 我还是担心高胆固醇给我的健康带来危害&lt;/h2&gt;
&lt;h2 id=&#34;第16章-胆固醇治疗指南难道没有坚实的科学依据&#34;&gt;第16章 《胆固醇治疗指南》难道没有坚实的科学依据&lt;/h2&gt;
&lt;h2 id=&#34;第17章-低脂素食的神话&#34;&gt;第17章 低脂素食的神话&lt;/h2&gt;
&lt;h2 id=&#34;第18章-医生如何错误地解读胆固醇检测结果&#34;&gt;第18章 医生如何（错误地）解读胆固醇检测结果&lt;/h2&gt;
&lt;h2 id=&#34;第19章-胆固醇基础检测结果意味着什么&#34;&gt;第19章 胆固醇基础检测结果意味着什么&lt;/h2&gt;
&lt;h2 id=&#34;第20章-你应该关注的8个高级健康标志物&#34;&gt;第20章 你应该关注的8个高级健康标志物&lt;/h2&gt;
&lt;h2 id=&#34;第21章-测试你解读胆固醇检测结果的能力&#34;&gt;第21章 测试你解读胆固醇检测结果的能力&lt;/h2&gt;
&lt;h2 id=&#34;结语-既然你已经了解真相那么接下来你会怎么做呢&#34;&gt;结语 既然你已经了解真相，那么接下来你会怎么做呢&lt;/h2&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h2 id=&#34;术语表&#34;&gt;术语表&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第5章-他汀类药物灵丹妙药抑或合法销售的毒药-1&#34;&gt;第5章 他汀类药物：灵丹妙药，抑或合法销售的毒药&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在过去10年里，格拉韦林博士已通过自然的手段，即采用低碳水化合物和高脂肪饮食法（包括：经常喝全脂牛奶、食用真正的黄油和全蛋），使其胆固醇水平下降到了200毫克/分升。但是，自患上短暂性全面性遗忘症开始，他的认知能力衰退症逐渐发展成了肌萎缩侧索硬化症（ALS），又名卢伽雷氏病（Lou Gehrig’s disease）——他认为，他之所以患这种病，绝对是因为他的医生给他开了他汀类药物。
格拉韦林博士告诉我说，肌萎缩侧索硬化症使他“慢慢地变残疾”，并且他将“很快就只能依靠轮椅出行”。他还在担心目前大多数人完全没有意识到他汀类药物“必然会给身体造成的不良反应”，其中包括他汀类药物对大脑关键功能的干扰。“这些他汀类药物在阻断辅酶Q10和多萜醇等维持生命所必需的生物化学物质的同时，阻断胆固醇”，格拉韦林博士说道，“胆固醇对记忆的影响已有完整记录。胆固醇对我们大脑中每个记忆突触的形成和功能都至关重要。有成千上万的人可以作证，当我们的身体内没有胆固醇时，我们的记忆也会随之消失。”  ^6733360-7NRtOsnWX
- 💭 卧槽，幸亏医生开了没吃
- ⏱ 2023-12-31 07:06:20&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第8章-碳水化合物和植物油两大罪魁祸首-1&#34;&gt;第8章 碳水化合物和植物油：两大罪魁祸首&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 膳食中的胆固醇和脂肪对我们的健康和体力不可或缺，我们不应该对它们产生恐惧。慢性炎症是心脏病的罪魁祸首，而慢性炎症发生的部分原因在于人体摄入了糖分以及导致血糖升高的碳水化合物，例如全谷类食物和加工食品。他汀类药物可降低血液中的胆固醇水平，但它们不仅不会明显降低心脏病突发概率和心脏疾病的发病率，而且还可能会引起不良反应。  ^6733360-7NRCeVEPN
- 💭 整本书就这段是干货
- ⏱ 2023-12-31 09:15:01&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第10章-遗忘与忽略甘油三酯和高密度脂蛋白胆固醇-1&#34;&gt;第10章 遗忘与忽略：甘油三酯和高密度脂蛋白胆固醇&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 甘油三酯与低密度脂蛋白胆固醇同样与心脏病有关。低密度脂蛋白胆固醇有两种：与心脏病无关的大而松的低密度脂蛋白胆固醇，与心脏病有关的小而密的低密度脂蛋白胆固醇。确定体内哪种低密度脂蛋白胆固醇占主导地位的最佳方法是：检查你的甘油三酯水平。如果你体内的低密度脂蛋白胆固醇含量和甘油三酯水平都高，那么你体内的小而密的低密度脂蛋白胆固醇小颗粒占优势，你的胰岛素抵抗较高并有代谢综合征。这就是我在进行胆固醇检测时想要看的数据。  ^6733360-7NRLexsrM
- 💭 看甘油三酯是否控制得当
- ⏱ 2023-12-31 11:32:20&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第14章-胆固醇水平上升的9个原因-1&#34;&gt;第14章 胆固醇水平上升的9个原因&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果你的血液中含有过量的糖分，那么糖分就会附着并攻击低密度脂蛋白胆固醇，从而导致所谓的糖基化损伤。血液中的蛋白质会因为过量的糖分发生糖化，这与糖尿病密切相关。当患有糖尿病时，你的血糖就会很高，而糖分会攻击血液中的蛋白质，其中就包括低密度脂蛋白胆固醇。这就像，车钥匙孔被冰堵住了，你就无法上车。你的身体也会出现同样的问题。低密度脂蛋白胆固醇被糖化之后，其输送到组织的效率就会降低，人体需要更多的低密度脂蛋白胆固醇才能维持正常功能。此外，低密度脂蛋白胆固醇糖化之后就不能被肝脏循环利用。因此，这些小而密的低密度脂蛋白胆固醇颗粒基本上是人体内的积垢。它们是人体无法摆脱的垃圾，对人体健康极其有害。它们集聚在人体之内，但人体却无法利用它们。这就是为何巨噬细胞会进入菌斑清除垃圾——将这些低密度脂蛋白基本扫入细胞进行清理，然后再通过高密度脂蛋白胆固醇将其送出体外。在将小而密的低密度脂蛋白胆固醇排出体内循环的过程中，巨噬细胞表现得很英勇。低密度脂蛋白胆固醇颗粒的功能是向组织输送胆固醇和脂肪。在此过程中，小而密的低密度脂蛋白胆固醇颗粒会被运送回肝脏进行重新清洁和清理。然而，因为血糖过高的缘故，这一过程无法继续运行。  ^6733360-7NS2g26XU
- 💭 这才是低碳饮食的真正原因
- ⏱ 2023-12-31 15:52:16&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 然而，有一部分人对低碳水高脂肪饮食有一种神秘的反应：他们的低密度脂蛋白胆固醇、低密度脂蛋白胆固醇颗粒、载脂蛋白B和总胆固醇等数值会急剧上升，目前原因不明。  ^6733360-7NS2pkMlB
- 💭 希望自己不是
- ⏱ 2023-12-31 15:54:34&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80%E7%AC%AC3%E7%89%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80%E7%AC%AC3%E7%89%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 计算机体系结构基础（第3版）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/83/YueWen_41795830/t7_YueWen_41795830.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 计算机体系结构基础（第3版）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 计算机体系结构基础（第3版）&lt;/li&gt;
&lt;li&gt;作者： 胡伟武等&lt;/li&gt;
&lt;li&gt;简介： 本书由国内从事微处理器设计的一线科研人员编写而成。作者从微处理器设计的角度出发，充分考虑计算机体系结构的学科完整性，强调体系结构、基础软件、电路和器件的融会贯通。全书共分12章，包括指令系统结构、计算机硬件结构、CPU微结构、并行处理结构、计算机性能分析等主要内容，重点放在作为软硬件界面的指令系统结构，以及包含CPU、GPU、南北桥协同的计算机硬件结构上。本书可作为高等院校“计算机体系结构”课程的本科生教材，同时也适合相关专业研究生或计算机技术人员参考阅读。&lt;/li&gt;
&lt;li&gt;出版时间 2021-09-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111691624&lt;/li&gt;
&lt;li&gt;分类： 计算机-理论知识&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/ff132750727dc0f6ff1f7b5&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;h2 id=&#34;编委会名单&#34;&gt;编委会名单&lt;/h2&gt;
&lt;h2 id=&#34;丛书序言&#34;&gt;丛书序言&lt;/h2&gt;
&lt;h2 id=&#34;推荐序&#34;&gt;推荐序&lt;/h2&gt;
&lt;h2 id=&#34;第3版自序&#34;&gt;第3版自序&lt;/h2&gt;
&lt;h2 id=&#34;第2版自序&#34;&gt;第2版自序&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 计算机体系结构（Computer Architecture）是描述计算机各组成部分及其相互关系的一组规则和方法，是程序员所看到的计算机属性。计算机体系结构的主要研究内容包括指令系统结构（Instruction Set Architecture，简称ISA）和计算机组织结构（Computer Organization）。微体系结构（Micro-architecture）是微处理器的组织结构，并行体系结构是并行计算机的组织结构。冯·诺依曼结构的存储程序和指令驱动执行原理是现代计算机体系结构的基础。
⏱ 2024-03-01 17:38:42 ^41795830-9-926-1236&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第一部分-引言&#34;&gt;第一部分 引言&lt;/h2&gt;
&lt;h3 id=&#34;第1章-引言&#34;&gt;第1章 引言&lt;/h3&gt;
&lt;h4 id=&#34;11-计算机体系结构的研究内容&#34;&gt;1.1 计算机体系结构的研究内容&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如高速缓存的容量是制约CPU主频和面积的重要因素，多发射结构的发射电路是制约主频的重要因素，在微结构设计时都是进行权衡取舍的重要内容
⏱ 2024-03-01 17:55:37 ^41795830-12-5057-5123&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;12-衡量计算机的指标&#34;&gt;1.2 衡量计算机的指标&lt;/h4&gt;
&lt;h4 id=&#34;13-计算机体系结构的发展&#34;&gt;1.3 计算机体系结构的发展&lt;/h4&gt;
&lt;h4 id=&#34;14-体系结构设计的基本原则&#34;&gt;1.4 体系结构设计的基本原则&lt;/h4&gt;
&lt;h4 id=&#34;15-本章小结&#34;&gt;1.5 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题&#34;&gt;习题&lt;/h4&gt;
&lt;h2 id=&#34;第二部分-指令系统结构&#34;&gt;第二部分 指令系统结构&lt;/h2&gt;
&lt;h3 id=&#34;第2章-指令系统&#34;&gt;第2章 指令系统&lt;/h3&gt;
&lt;h4 id=&#34;22-指令系统设计原则&#34;&gt;2.2 指令系统设计原则&lt;/h4&gt;
&lt;h4 id=&#34;23-指令系统发展历程&#34;&gt;2.3 指令系统发展历程&lt;/h4&gt;
&lt;h4 id=&#34;24-指令系统组成&#34;&gt;2.4 指令系统组成&lt;/h4&gt;
&lt;h4 id=&#34;25-risc指令集比较&#34;&gt;2.5 RISC指令集比较&lt;/h4&gt;
&lt;h4 id=&#34;26-c语言的机器表示&#34;&gt;2.6 C语言的机器表示&lt;/h4&gt;
&lt;h4 id=&#34;27-本章小结&#34;&gt;2.7 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-1&#34;&gt;习题&lt;/h4&gt;
&lt;h3 id=&#34;第3章-特权指令系统&#34;&gt;第3章 特权指令系统&lt;/h3&gt;
&lt;h4 id=&#34;32-异常与中断&#34;&gt;3.2 异常与中断&lt;/h4&gt;
&lt;h4 id=&#34;33-存储管理&#34;&gt;3.3 存储管理&lt;/h4&gt;
&lt;h4 id=&#34;34-本章小结&#34;&gt;3.4 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-2&#34;&gt;习题&lt;/h4&gt;
&lt;h3 id=&#34;第4章-软硬件协同&#34;&gt;第4章 软硬件协同&lt;/h3&gt;
&lt;h4 id=&#34;41-应用程序二进制接口&#34;&gt;4.1 应用程序二进制接口&lt;/h4&gt;
&lt;h4 id=&#34;42-六种常见的上下文切换场景&#34;&gt;4.2 六种常见的上下文切换场景&lt;/h4&gt;
&lt;h4 id=&#34;43-同步机制&#34;&gt;4.3 同步机制&lt;/h4&gt;
&lt;h4 id=&#34;44-本章小结&#34;&gt;4.4 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-3&#34;&gt;习题&lt;/h4&gt;
&lt;h2 id=&#34;第三部分-计算机硬件结构&#34;&gt;第三部分 计算机硬件结构&lt;/h2&gt;
&lt;h3 id=&#34;第5章-计算机组成原理和结构&#34;&gt;第5章 计算机组成原理和结构&lt;/h3&gt;
&lt;h4 id=&#34;51-冯诺依曼结构&#34;&gt;5.1 冯·诺依曼结构&lt;/h4&gt;
&lt;h4 id=&#34;52-计算机的组成部件&#34;&gt;5.2 计算机的组成部件&lt;/h4&gt;
&lt;h4 id=&#34;53-计算机系统硬件结构发展&#34;&gt;5.3 计算机系统硬件结构发展&lt;/h4&gt;
&lt;h4 id=&#34;54-处理器和io设备间的通信&#34;&gt;5.4 处理器和IO设备间的通信&lt;/h4&gt;
&lt;h4 id=&#34;55-本章小结&#34;&gt;5.5 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-4&#34;&gt;习题&lt;/h4&gt;
&lt;h3 id=&#34;第6章-计算机总线接口技术&#34;&gt;第6章 计算机总线接口技术&lt;/h3&gt;
&lt;h4 id=&#34;61-总线概述&#34;&gt;6.1 总线概述&lt;/h4&gt;
&lt;h4 id=&#34;62-总线分类&#34;&gt;6.2 总线分类&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 半双工总线是指在一个时间段内，数据只能从一个方向传送到另一个方向，数据不能同时在两个方向传递。全双工总线是指数据可以同时在两个方向传递
⏱ 2024-03-12 20:58:51 ^41795830-48-572-639&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 全双工总线包含两组数据线，分别用于两个方向的数据传输。
⏱ 2024-03-12 20:58:58 ^41795830-48-640-667&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 PCI总线、DDR总线等都是传统的并行总线，而USB、SATA、PCIE等都是串行总线。以串行总线传输方式为基础，使用多条串行总线进行数据传输的方式正在被广泛采用。以PCIE协议为例，PCIE的接口规范中，可以使用x1、x4、x8、x16等不同宽度的接口，其中，x16就是采用16对串行总线进行数据传输
⏱ 2024-03-12 21:00:07 ^41795830-48-951-1102&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 而并行总线使用同一个时钟对所有的数据线进行同时采样，因此对数据传输线之间的对齐有非常严格的要求。
⏱ 2024-03-12 21:00:20 ^41795830-48-1179-1227&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;63-片上总线&#34;&gt;6.3 片上总线&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 这些模块形成了IP（Intellectual Property），一家公司在设计芯片时常常需要集成其他公司的IP
⏱ 2024-03-12 21:01:31 ^41795830-49-857-940&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因此，设计者可以很容易地在通道中插入寄存器缓冲，这对于高频设计是很重要的。
⏱ 2024-03-13 06:36:15 ^41795830-49-3920-3957&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;64-内存总线&#34;&gt;6.4 内存总线&lt;/h4&gt;
&lt;h4 id=&#34;65-系统总线&#34;&gt;6.5 系统总线&lt;/h4&gt;
&lt;h4 id=&#34;66-设备总线&#34;&gt;6.6 设备总线&lt;/h4&gt;
&lt;h4 id=&#34;67-本章小结&#34;&gt;6.7 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-5&#34;&gt;习题&lt;/h4&gt;
&lt;h3 id=&#34;第7章-计算机系统启动过程分析&#34;&gt;第7章 计算机系统启动过程分析&lt;/h3&gt;
&lt;h4 id=&#34;71-处理器核初始化&#34;&gt;7.1 处理器核初始化&lt;/h4&gt;
&lt;h4 id=&#34;72-总线接口初始化&#34;&gt;7.2 总线接口初始化&lt;/h4&gt;
&lt;h4 id=&#34;73-设备的探测及驱动加载&#34;&gt;7.3 设备的探测及驱动加载&lt;/h4&gt;
&lt;h4 id=&#34;74-多核启动过程&#34;&gt;7.4 多核启动过程&lt;/h4&gt;
&lt;h4 id=&#34;75-本章小结&#34;&gt;7.5 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-6&#34;&gt;习题&lt;/h4&gt;
&lt;h2 id=&#34;第四部分-cpu微结构&#34;&gt;第四部分 CPU微结构&lt;/h2&gt;
&lt;h3 id=&#34;第8章-运算器设计&#34;&gt;第8章 运算器设计&lt;/h3&gt;
&lt;h4 id=&#34;82-简单运算器设计&#34;&gt;8.2 简单运算器设计&lt;/h4&gt;
&lt;h4 id=&#34;83-定点补码乘法器&#34;&gt;8.3 定点补码乘法器&lt;/h4&gt;
&lt;h4 id=&#34;84-本章小结&#34;&gt;8.4 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-7&#34;&gt;习题&lt;/h4&gt;
&lt;h3 id=&#34;第9章-指令流水线&#34;&gt;第9章 指令流水线&lt;/h3&gt;
&lt;h4 id=&#34;91-单周期处理器&#34;&gt;9.1 单周期处理器&lt;/h4&gt;
&lt;h4 id=&#34;92-流水线处理器&#34;&gt;9.2 流水线处理器&lt;/h4&gt;
&lt;h4 id=&#34;93-指令相关和流水线冲突&#34;&gt;9.3 指令相关和流水线冲突&lt;/h4&gt;
&lt;h4 id=&#34;94-流水线与异常处理&#34;&gt;9.4 流水线与异常处理&lt;/h4&gt;
&lt;h4 id=&#34;95-提高流水线效率的技术&#34;&gt;9.5 提高流水线效率的技术&lt;/h4&gt;
&lt;h4 id=&#34;96-本章小结&#34;&gt;9.6 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-8&#34;&gt;习题&lt;/h4&gt;
&lt;h2 id=&#34;第五部分-并行处理结构&#34;&gt;第五部分 并行处理结构&lt;/h2&gt;
&lt;h3 id=&#34;第10章-并行编程基础&#34;&gt;第10章 并行编程基础&lt;/h3&gt;
&lt;h4 id=&#34;102-并行编程模型&#34;&gt;10.2 并行编程模型&lt;/h4&gt;
&lt;h4 id=&#34;103-典型并行编程环境&#34;&gt;10.3 典型并行编程环境&lt;/h4&gt;
&lt;h4 id=&#34;104-本章小结&#34;&gt;10.4 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-9&#34;&gt;习题&lt;/h4&gt;
&lt;h3 id=&#34;第11章-多核处理结构&#34;&gt;第11章 多核处理结构&lt;/h3&gt;
&lt;h4 id=&#34;111-多核处理器的发展演化&#34;&gt;11.1 多核处理器的发展演化&lt;/h4&gt;
&lt;h4 id=&#34;112-多核处理器的访存结构&#34;&gt;11.2 多核处理器的访存结构&lt;/h4&gt;
&lt;h4 id=&#34;113-多核处理器的互连结构&#34;&gt;11.3 多核处理器的互连结构&lt;/h4&gt;
&lt;h4 id=&#34;114-多核处理器的同步机制&#34;&gt;11.4 多核处理器的同步机制&lt;/h4&gt;
&lt;h4 id=&#34;115-典型多核处理器&#34;&gt;11.5 典型多核处理器&lt;/h4&gt;
&lt;h4 id=&#34;116-本章小结&#34;&gt;11.6 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-10&#34;&gt;习题&lt;/h4&gt;
&lt;h2 id=&#34;第六部分-系统评价与性能分析&#34;&gt;第六部分 系统评价与性能分析&lt;/h2&gt;
&lt;h3 id=&#34;第12章-计算机系统评价和性能分析&#34;&gt;第12章 计算机系统评价和性能分析&lt;/h3&gt;
&lt;h4 id=&#34;121-计算机系统性能评价指标&#34;&gt;12.1 计算机系统性能评价指标&lt;/h4&gt;
&lt;h4 id=&#34;122-测试程序集&#34;&gt;12.2 测试程序集&lt;/h4&gt;
&lt;h4 id=&#34;123-性能分析方法&#34;&gt;12.3 性能分析方法&lt;/h4&gt;
&lt;h4 id=&#34;124-性能测试和分析实例&#34;&gt;12.4 性能测试和分析实例&lt;/h4&gt;
&lt;h4 id=&#34;125-本章小结&#34;&gt;12.5 本章小结&lt;/h4&gt;
&lt;h4 id=&#34;习题-11&#34;&gt;习题&lt;/h4&gt;
&lt;h2 id=&#34;总结什么是计算机体系结构&#34;&gt;总结：什么是计算机体系结构&lt;/h2&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;11-计算机体系结构的研究内容-1&#34;&gt;1.1 计算机体系结构的研究内容&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 指令系统除了实现加减乘除等操作的指令外，还包括系统状态的切换、地址空间的安排、寄存器的设置、中断的传递等运行时环境的内容。  ^6733360-7PmWUFMXD
- 💭 包括的内容很多
- ⏱ 2024-03-01 17:51:02&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 首先，指令系统就是从应用程序算法中抽取出来的“算子”。只有对应用程序有深入的了解，才能决定哪些事情通过指令系统由硬件直接实现，哪些事情通过指令组合由软件实现。  ^6733360-7PmX56jfq
- 💭 软件定义硬件结构
- ⏱ 2024-03-01 17:53:36&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%E7%A1%AC%E4%BB%B6%E8%BD%AF%E4%BB%B6%E6%8E%A5%E5%8F%A3-risc-v%E7%89%88%E5%8E%9F%E4%B9%A6%E7%AC%AC2%E7%89%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%E7%A1%AC%E4%BB%B6%E8%BD%AF%E4%BB%B6%E6%8E%A5%E5%8F%A3-risc-v%E7%89%88%E5%8E%9F%E4%B9%A6%E7%AC%AC2%E7%89%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 计算机组成与设计：硬件/软件接口 RISC-V版（原书第2版）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/49/cpplatform_wrzsezedv6rtg5ujlyzyzg/t7_cpplatform_wrzsezedv6rtg5ujlyzyzg1699933995.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 计算机组成与设计：硬件/软件接口 RISC-V版（原书第2版）|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 计算机组成与设计：硬件/软件接口 RISC-V版（原书第2版）&lt;/li&gt;
&lt;li&gt;作者： 戴维·A.帕特森 约翰·L.亨尼斯&lt;/li&gt;
&lt;li&gt;简介： 本书由2017年图灵奖得主Patterson和Hennessy共同撰写，是计算机体系结构领域的经典书籍，强调软硬件协同设计及其对性能的影响。本书采用开源的RISC-V指令系统体系结构, 讲解硬件技术、指令、算术运算、流水线、存储层次、I/O以及并行处理器等。第2版将RV64切换为RV32以降低学习难度，新增关于领域定制体系结构（DSA）的讨论以反映新的技术趋势。此外，每一章都增加了“性能提升”和“自学”章节，并更新了大量练习题。本书适合计算机体系结构领域的专业技术人员参考，也适合高等院校计算机相关专业的学生阅读。&lt;/li&gt;
&lt;li&gt;出版时间 2023-07-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111727972&lt;/li&gt;
&lt;li&gt;分类： 计算机-编程设计&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/ecc32510813ab84d1g019c12&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;译者简介&#34;&gt;译者简介&lt;/h2&gt;
&lt;h2 id=&#34;赞誉&#34;&gt;赞誉&lt;/h2&gt;
&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我们认为，在学习计算机科学与工程时，除了掌握计算的基本原理外，还应该了解该领域的最新进展。同时，我们还认为，各种计算领域中的读者都应学习计算机系统的组成理论，因为这是决定计算机系统的功能、性能、能耗甚至最终成功的关键。
⏱ 2024-04-07 07:08:09 ^3300077619-6-589-698&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;h2 id=&#34;第1章-计算机抽象及相关技术&#34;&gt;第1章 计算机抽象及相关技术&lt;/h2&gt;
&lt;h3 id=&#34;12-计算机体系结构中的7个伟大思想&#34;&gt;1.2 计算机体系结构中的7个伟大思想&lt;/h3&gt;
&lt;h3 id=&#34;13-程序表象之下&#34;&gt;1.3 程序表象之下&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 机器学习的研究人员等
⏱ 2024-04-27 07:30:10 ^3300077619-10-5397-5407&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;14-箱盖后的硬件&#34;&gt;1.4 箱盖后的硬件&lt;/h3&gt;
&lt;h3 id=&#34;15-处理器和存储制造技术&#34;&gt;1.5 处理器和存储制造技术&lt;/h3&gt;
&lt;h3 id=&#34;16-性能&#34;&gt;1.6 性能&lt;/h3&gt;
&lt;h3 id=&#34;17-功耗墙&#34;&gt;1.7 功耗墙&lt;/h3&gt;
&lt;h3 id=&#34;18-沧海巨变从单处理器向多处理器转变&#34;&gt;1.8 沧海巨变：从单处理器向多处理器转变&lt;/h3&gt;
&lt;h3 id=&#34;19-实例评测intel-core-i7&#34;&gt;1.9 实例：评测Intel Core i7&lt;/h3&gt;
&lt;h3 id=&#34;110-性能提升使用python语言编写矩阵乘法程序&#34;&gt;1.10 性能提升：使用Python语言编写矩阵乘法程序&lt;/h3&gt;
&lt;h3 id=&#34;111-谬误与陷阱&#34;&gt;1.11 谬误与陷阱&lt;/h3&gt;
&lt;h3 id=&#34;112-本章小结&#34;&gt;1.12 本章小结&lt;/h3&gt;
&lt;h3 id=&#34;113-历史视角和拓展阅读&#34;&gt;1.13 历史视角和拓展阅读&lt;/h3&gt;
&lt;h3 id=&#34;114-自学&#34;&gt;1.14 自学&lt;/h3&gt;
&lt;h3 id=&#34;115-练习&#34;&gt;1.15 练习&lt;/h3&gt;
&lt;h2 id=&#34;第2章-指令计算机的语言&#34;&gt;第2章 指令：计算机的语言&lt;/h2&gt;
&lt;h3 id=&#34;21-引言&#34;&gt;2.1 引言&lt;/h3&gt;
&lt;h3 id=&#34;22-计算机硬件的操作&#34;&gt;2.2 计算机硬件的操作&lt;/h3&gt;
&lt;h3 id=&#34;23-计算机硬件的操作数&#34;&gt;2.3 计算机硬件的操作数&lt;/h3&gt;
&lt;h3 id=&#34;24-有符号数与无符号数&#34;&gt;2.4 有符号数与无符号数&lt;/h3&gt;
&lt;h3 id=&#34;25-计算机中的指令表示&#34;&gt;2.5 计算机中的指令表示&lt;/h3&gt;
&lt;h3 id=&#34;26-逻辑操作&#34;&gt;2.6 逻辑操作&lt;/h3&gt;
&lt;h3 id=&#34;27-用于决策的指令&#34;&gt;2.7 用于决策的指令&lt;/h3&gt;
&lt;h3 id=&#34;28-计算机硬件对过程的支持&#34;&gt;2.8 计算机硬件对过程的支持&lt;/h3&gt;
&lt;h3 id=&#34;29-人机交互&#34;&gt;2.9 人机交互&lt;/h3&gt;
&lt;h3 id=&#34;210-对大立即数的risc-v编址和寻址&#34;&gt;2.10 对大立即数的RISC-V编址和寻址&lt;/h3&gt;
&lt;h3 id=&#34;211-并行性与指令同步&#34;&gt;2.11 并行性与指令：同步&lt;/h3&gt;
&lt;h3 id=&#34;212-翻译并启动程序&#34;&gt;2.12 翻译并启动程序&lt;/h3&gt;
&lt;h3 id=&#34;213-以c排序程序为例的汇总整理&#34;&gt;2.13 以C排序程序为例的汇总整理&lt;/h3&gt;
&lt;h3 id=&#34;214-数组与指针&#34;&gt;2.14 数组与指针&lt;/h3&gt;
&lt;h3 id=&#34;215-高级专题编译c语言和解释java语言&#34;&gt;2.15 高级专题：编译C语言和解释Java语言&lt;/h3&gt;
&lt;h3 id=&#34;216-实例mips指令&#34;&gt;2.16 实例：MIPS指令&lt;/h3&gt;
&lt;h3 id=&#34;217-实例armv732位指令&#34;&gt;2.17 实例：ARMv7（32位）指令&lt;/h3&gt;
&lt;h3 id=&#34;218-实例armv864位指令&#34;&gt;2.18 实例：ARMv8（64位）指令&lt;/h3&gt;
&lt;h3 id=&#34;219-实例x86指令&#34;&gt;2.19 实例：x86指令&lt;/h3&gt;
&lt;h3 id=&#34;220-实例risc-v指令系统的剩余部分&#34;&gt;2.20 实例：RISC-V指令系统的剩余部分&lt;/h3&gt;
&lt;h3 id=&#34;221-性能提升使用c语言编写矩阵乘法程序&#34;&gt;2.21 性能提升：使用C语言编写矩阵乘法程序&lt;/h3&gt;
&lt;h3 id=&#34;222-谬误与陷阱&#34;&gt;2.22 谬误与陷阱&lt;/h3&gt;
&lt;h3 id=&#34;223-本章小结&#34;&gt;2.23 本章小结&lt;/h3&gt;
&lt;h3 id=&#34;224-历史视角和扩展阅读&#34;&gt;2.24 历史视角和扩展阅读&lt;/h3&gt;
&lt;h3 id=&#34;225-自学&#34;&gt;2.25 自学&lt;/h3&gt;
&lt;h3 id=&#34;226-练习&#34;&gt;2.26 练习&lt;/h3&gt;
&lt;h2 id=&#34;第3章-计算机的算术运算&#34;&gt;第3章 计算机的算术运算&lt;/h2&gt;
&lt;h3 id=&#34;31-引言&#34;&gt;3.1 引言&lt;/h3&gt;
&lt;h3 id=&#34;32-加法和减法&#34;&gt;3.2 加法和减法&lt;/h3&gt;
&lt;h3 id=&#34;33-乘法&#34;&gt;3.3 乘法&lt;/h3&gt;
&lt;h3 id=&#34;34-除法&#34;&gt;3.4 除法&lt;/h3&gt;
&lt;h3 id=&#34;35-浮点运算&#34;&gt;3.5 浮点运算&lt;/h3&gt;
&lt;h3 id=&#34;36-并行性与计算机算术子字并行&#34;&gt;3.6 并行性与计算机算术：子字并行&lt;/h3&gt;
&lt;h3 id=&#34;37-实例x86中的simd扩展和高级向量扩展&#34;&gt;3.7 实例：x86中的SIMD扩展和高级向量扩展&lt;/h3&gt;
&lt;h3 id=&#34;38-性能提升子字并行和矩阵乘法&#34;&gt;3.8 性能提升：子字并行和矩阵乘法&lt;/h3&gt;
&lt;h3 id=&#34;39-谬误与陷阱&#34;&gt;3.9 谬误与陷阱&lt;/h3&gt;
&lt;h3 id=&#34;310-本章小结&#34;&gt;3.10 本章小结&lt;/h3&gt;
&lt;h3 id=&#34;311-历史视角和拓展阅读&#34;&gt;3.11 历史视角和拓展阅读&lt;/h3&gt;
&lt;h3 id=&#34;312-自学&#34;&gt;3.12 自学&lt;/h3&gt;
&lt;h3 id=&#34;313-练习&#34;&gt;3.13 练习&lt;/h3&gt;
&lt;h2 id=&#34;第4章-处理器&#34;&gt;第4章 处理器&lt;/h2&gt;
&lt;h3 id=&#34;41-引言&#34;&gt;4.1 引言&lt;/h3&gt;
&lt;h3 id=&#34;42-逻辑设计的一般方法&#34;&gt;4.2 逻辑设计的一般方法&lt;/h3&gt;
&lt;h3 id=&#34;43-建立数据通路&#34;&gt;4.3 建立数据通路&lt;/h3&gt;
&lt;h3 id=&#34;44-一个简单的实现方案&#34;&gt;4.4 一个简单的实现方案&lt;/h3&gt;
&lt;h3 id=&#34;45-多周期实现&#34;&gt;4.5 多周期实现&lt;/h3&gt;
&lt;h3 id=&#34;46-流水线概述&#34;&gt;4.6 流水线概述&lt;/h3&gt;
&lt;h3 id=&#34;47-流水线数据通路和控制&#34;&gt;4.7 流水线数据通路和控制&lt;/h3&gt;
&lt;h3 id=&#34;48-数据冒险前递与停顿&#34;&gt;4.8 数据冒险：前递与停顿&lt;/h3&gt;
&lt;h3 id=&#34;49-控制冒险&#34;&gt;4.9 控制冒险&lt;/h3&gt;
&lt;h3 id=&#34;410-例外&#34;&gt;4.10 例外&lt;/h3&gt;
&lt;h3 id=&#34;411-指令间的并行性&#34;&gt;4.11 指令间的并行性&lt;/h3&gt;
&lt;h3 id=&#34;412-实例arm-cortex-a53和intel-core-i7-6700&#34;&gt;4.12 实例：ARM Cortex-A53和Intel Core i7 6700&lt;/h3&gt;
&lt;h3 id=&#34;413-性能提升指令级并行和矩阵乘法&#34;&gt;4.13 性能提升：指令级并行和矩阵乘法&lt;/h3&gt;
&lt;h3 id=&#34;414-高级专题数字设计概述使用硬件设计语言进行流水线建模以及更多流水线示例&#34;&gt;4.14 高级专题：数字设计概述——使用硬件设计语言进行流水线建模以及更多流水线示例&lt;/h3&gt;
&lt;h3 id=&#34;415-谬误与陷阱&#34;&gt;4.15 谬误与陷阱&lt;/h3&gt;
&lt;h3 id=&#34;416-本章小结&#34;&gt;4.16 本章小结&lt;/h3&gt;
&lt;h3 id=&#34;417-历史视角和拓展阅读&#34;&gt;4.17 历史视角和拓展阅读&lt;/h3&gt;
&lt;h3 id=&#34;418-自学&#34;&gt;4.18 自学&lt;/h3&gt;
&lt;h3 id=&#34;419-练习&#34;&gt;4.19 练习&lt;/h3&gt;
&lt;h2 id=&#34;第5章-大而快层次化存储&#34;&gt;第5章 大而快：层次化存储&lt;/h2&gt;
&lt;h3 id=&#34;51-引言&#34;&gt;5.1 引言&lt;/h3&gt;
&lt;h3 id=&#34;52-存储技术&#34;&gt;5.2 存储技术&lt;/h3&gt;
&lt;h3 id=&#34;53-cache基础&#34;&gt;5.3 cache基础&lt;/h3&gt;
&lt;h3 id=&#34;54-cache的性能评估和改进&#34;&gt;5.4 cache的性能评估和改进&lt;/h3&gt;
&lt;h3 id=&#34;55-可靠的存储器层次&#34;&gt;5.5 可靠的存储器层次&lt;/h3&gt;
&lt;h3 id=&#34;56-虚拟机&#34;&gt;5.6 虚拟机&lt;/h3&gt;
&lt;h3 id=&#34;57-虚拟存储&#34;&gt;5.7 虚拟存储&lt;/h3&gt;
&lt;h3 id=&#34;58-存储层次结构的一般框架&#34;&gt;5.8 存储层次结构的一般框架&lt;/h3&gt;
&lt;h3 id=&#34;59-使用有限状态自动机控制简单的cache&#34;&gt;5.9 使用有限状态自动机控制简单的cache&lt;/h3&gt;
&lt;h3 id=&#34;510-并行和存储层次结构cache一致性&#34;&gt;5.10 并行和存储层次结构：cache一致性&lt;/h3&gt;
&lt;h3 id=&#34;511-并行与存储层次结构廉价磁盘冗余阵列&#34;&gt;5.11 并行与存储层次结构：廉价磁盘冗余阵列&lt;/h3&gt;
&lt;h3 id=&#34;512-高级专题实现cache控制器&#34;&gt;5.12 高级专题：实现cache控制器&lt;/h3&gt;
&lt;h3 id=&#34;513-实例arm-cortex-a53和intel-core-i7的存储层次结构&#34;&gt;5.13 实例：ARM Cortex-A53和Intel Core i7的存储层次结构&lt;/h3&gt;
&lt;h3 id=&#34;514-实例risc-v系统的其他部分和特殊指令&#34;&gt;5.14 实例：RISC-V系统的其他部分和特殊指令&lt;/h3&gt;
&lt;h3 id=&#34;515-性能提升cache分块和矩阵乘法&#34;&gt;5.15 性能提升：cache分块和矩阵乘法&lt;/h3&gt;
&lt;h3 id=&#34;516-谬误与陷阱&#34;&gt;5.16 谬误与陷阱&lt;/h3&gt;
&lt;h3 id=&#34;517-本章小结&#34;&gt;5.17 本章小结&lt;/h3&gt;
&lt;h3 id=&#34;518-历史视角和拓展阅读&#34;&gt;5.18 历史视角和拓展阅读&lt;/h3&gt;
&lt;h3 id=&#34;519-自学&#34;&gt;5.19 自学&lt;/h3&gt;
&lt;h3 id=&#34;520-练习&#34;&gt;5.20 练习&lt;/h3&gt;
&lt;h2 id=&#34;第6章-并行处理器从客户端到云&#34;&gt;第6章 并行处理器：从客户端到云&lt;/h2&gt;
&lt;h3 id=&#34;61-引言&#34;&gt;6.1 引言&lt;/h3&gt;
&lt;h3 id=&#34;62-创建并行处理程序的难点&#34;&gt;6.2 创建并行处理程序的难点&lt;/h3&gt;
&lt;h3 id=&#34;63-sisdmimdsimdspmd和向量机&#34;&gt;6.3 SISD、MIMD、SIMD、SPMD和向量机&lt;/h3&gt;
&lt;h3 id=&#34;64-硬件多线程&#34;&gt;6.4 硬件多线程&lt;/h3&gt;
&lt;h3 id=&#34;65-多核及其他共享内存多处理器&#34;&gt;6.5 多核及其他共享内存多处理器&lt;/h3&gt;
&lt;h3 id=&#34;66-gpu简介&#34;&gt;6.6 GPU简介&lt;/h3&gt;
&lt;h3 id=&#34;67-领域定制体系结构&#34;&gt;6.7 领域定制体系结构&lt;/h3&gt;
&lt;h3 id=&#34;68-集群仓储级计算机和其他消息传递多处理器&#34;&gt;6.8 集群、仓储级计算机和其他消息传递多处理器&lt;/h3&gt;
&lt;h3 id=&#34;69-多处理器网络拓扑简介&#34;&gt;6.9 多处理器网络拓扑简介&lt;/h3&gt;
&lt;h3 id=&#34;610-与外界通信集群网络&#34;&gt;6.10 与外界通信：集群网络&lt;/h3&gt;
&lt;h3 id=&#34;611-多处理器测试基准和性能模型&#34;&gt;6.11 多处理器测试基准和性能模型&lt;/h3&gt;
&lt;h3 id=&#34;612-实例评测google-tpuv3超级计算机和nvidia-volta-gpu集群&#34;&gt;6.12 实例：评测Google TPUv3超级计算机和NVIDIA Volta GPU集群&lt;/h3&gt;
&lt;h3 id=&#34;613-性能提升多处理器和矩阵乘法&#34;&gt;6.13 性能提升：多处理器和矩阵乘法&lt;/h3&gt;
&lt;h3 id=&#34;614-谬误与陷阱&#34;&gt;6.14 谬误与陷阱&lt;/h3&gt;
&lt;h3 id=&#34;615-本章小结&#34;&gt;6.15 本章小结&lt;/h3&gt;
&lt;h3 id=&#34;616-历史视角和拓展阅读&#34;&gt;6.16 历史视角和拓展阅读&lt;/h3&gt;
&lt;h3 id=&#34;617-自学&#34;&gt;6.17 自学&lt;/h3&gt;
&lt;h3 id=&#34;618-练习&#34;&gt;6.18 练习&lt;/h3&gt;
&lt;h2 id=&#34;附录a-逻辑设计基础&#34;&gt;附录A 逻辑设计基础&lt;/h2&gt;
&lt;h2 id=&#34;术语表&#34;&gt;术语表&lt;/h2&gt;
&lt;h2 id=&#34;文后&#34;&gt;文后&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E8%AE%A9%E6%95%B0%E5%AD%97%E8%AF%B4%E8%AF%9D%E5%AE%A1%E8%AE%A1%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E8%AE%A9%E6%95%B0%E5%AD%97%E8%AF%B4%E8%AF%9D%E5%AE%A1%E8%AE%A1%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 让数字说话：审计，就这么简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/95/YueWen_813610/t7_YueWen_813610.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 让数字说话：审计，就这么简单|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 让数字说话：审计，就这么简单&lt;/li&gt;
&lt;li&gt;作者： 孙含晖 王苏颖 阎歌&lt;/li&gt;
&lt;li&gt;简介： 这本书真实、生动地讲述了审计的概念、理论和工作，为圈外人揭开了审计的神秘面纱，也给业内人以新的视角看待审计这份工作。恰逢今年是我在这个行业的第30个年头，这本书让我回忆起一路走来的30年，从认识什么是审计，学习如何做审计，到经历审计工作的苦与乐。审计对不同的人有什么不同的意义？这本书将让你思路大开、一探究竟。&lt;/li&gt;
&lt;li&gt;出版时间 2016-03-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111530817&lt;/li&gt;
&lt;li&gt;分类： 经济理财-财经&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/1cf32a205c6a2a1cf21e7f9&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;赞誉&#34;&gt;赞誉&lt;/h2&gt;
&lt;h2 id=&#34;推荐序&#34;&gt;推荐序&lt;/h2&gt;
&lt;h2 id=&#34;再版序&#34;&gt;再版序&lt;/h2&gt;
&lt;h2 id=&#34;1-前言&#34;&gt;1 前言&lt;/h2&gt;
&lt;h2 id=&#34;2-审计的一些概念&#34;&gt;2 审计的一些概念&lt;/h2&gt;
&lt;h3 id=&#34;22-什么是审计&#34;&gt;2.2 什么是审计&lt;/h3&gt;
&lt;h3 id=&#34;23-审计工作的成果&#34;&gt;2.3 审计工作的成果&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 审计工作涉及实施审计程序，以获取有关财务报表金额和披露的审计证据。选择的审计程序取决于注册会计师的判断，包括对由于舞弊或错误导致的财务报表重大错报风险的评估。
⏱ 2021-03-17 06:23:31 ^813610-9-2235-2314&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在进行风险评估时，注册会计师考虑与财务报表编制和公允列报相关的内部控制，以设计恰当的审计程序，但目的并非对内部控制的有效性发表意见。审计工作还包括评价管理层选用会计政策的恰当性和做出会计估计的合理性，以及评价财务报表的总体列报。
⏱ 2021-03-17 06:23:40 ^813610-9-2314-2459&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 还做了现金流模型测试评估资产的可回收金额，项目合伙人与治理层沟通审计进展时，也着重讨论了资产减值测试中的重要会计判断，那么，资产的减值准备十之八九会是这家公司当年的关键审计事项
⏱ 2021-03-17 06:34:37 ^813610-9-6573-6661&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;24-会计师事务所与注册会计师&#34;&gt;2.4 会计师事务所与注册会计师&lt;/h3&gt;
&lt;h3 id=&#34;25-业务约定书&#34;&gt;2.5 业务约定书&lt;/h3&gt;
&lt;h3 id=&#34;26-声明书&#34;&gt;2.6 声明书&lt;/h3&gt;
&lt;h3 id=&#34;27-管理建议书&#34;&gt;2.7 管理建议书&lt;/h3&gt;
&lt;h2 id=&#34;3-审计的理论&#34;&gt;3 审计的理论&lt;/h2&gt;
&lt;h3 id=&#34;32-审计的思考方法&#34;&gt;3.2 审计的思考方法&lt;/h3&gt;
&lt;h3 id=&#34;33-对企业内控的关注&#34;&gt;3.3 对企业内控的关注&lt;/h3&gt;
&lt;h3 id=&#34;34-工作底稿&#34;&gt;3.4 工作底稿&lt;/h3&gt;
&lt;h3 id=&#34;35-审计项目的风险控制&#34;&gt;3.5 审计项目的风险控制&lt;/h3&gt;
&lt;h3 id=&#34;36-利用其他专家的工作&#34;&gt;3.6 利用其他专家的工作&lt;/h3&gt;
&lt;h3 id=&#34;37-反舞弊审计&#34;&gt;3.7 反舞弊审计&lt;/h3&gt;
&lt;h2 id=&#34;4-按会计科目来谈一谈实质性测试&#34;&gt;4 按会计科目来谈一谈实质性测试&lt;/h2&gt;
&lt;h3 id=&#34;42-应收账款和坏账准备&#34;&gt;4.2 应收账款和坏账准备&lt;/h3&gt;
&lt;h3 id=&#34;43-其他应收款&#34;&gt;4.3 其他应收款&lt;/h3&gt;
&lt;h3 id=&#34;44-与关联方的往来账&#34;&gt;4.4 与关联方的往来账&lt;/h3&gt;
&lt;h3 id=&#34;45-预付账款&#34;&gt;4.5 预付账款&lt;/h3&gt;
&lt;h3 id=&#34;46-存货&#34;&gt;4.6 存货&lt;/h3&gt;
&lt;h3 id=&#34;47-固定资产&#34;&gt;4.7 固定资产&lt;/h3&gt;
&lt;h3 id=&#34;48-租赁&#34;&gt;4.8 租赁&lt;/h3&gt;
&lt;h3 id=&#34;49-在建工程&#34;&gt;4.9 在建工程&lt;/h3&gt;
&lt;h3 id=&#34;410-无形资产&#34;&gt;4.10 无形资产&lt;/h3&gt;
&lt;h3 id=&#34;411-应付账款&#34;&gt;4.11 应付账款&lt;/h3&gt;
&lt;h3 id=&#34;412-预收账款&#34;&gt;4.12 预收账款&lt;/h3&gt;
&lt;h3 id=&#34;413-其他应付款&#34;&gt;4.13 其他应付款&lt;/h3&gt;
&lt;h3 id=&#34;414-其他负债类科目&#34;&gt;4.14 其他负债类科目&lt;/h3&gt;
&lt;h3 id=&#34;415-收入&#34;&gt;4.15 收入&lt;/h3&gt;
&lt;h3 id=&#34;416-成本和费用&#34;&gt;4.16 成本和费用&lt;/h3&gt;
&lt;h3 id=&#34;417-金融工具&#34;&gt;4.17 金融工具&lt;/h3&gt;
&lt;h3 id=&#34;418-合并&#34;&gt;4.18 合并&lt;/h3&gt;
&lt;h3 id=&#34;419-其他&#34;&gt;4.19 其他&lt;/h3&gt;
&lt;h2 id=&#34;5-结语&#34;&gt;5 结语&lt;/h2&gt;
&lt;h2 id=&#34;6-后记&#34;&gt;6 后记&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E8%B6%8A%E8%BF%87%E5%86%85%E5%BF%83%E9%82%A3%E5%BA%A7%E5%B1%B112%E4%B8%AA%E6%99%AE%E9%81%8D%E5%BF%83%E7%90%86%E9%97%AE%E9%A2%98%E7%9A%84%E8%87%AA%E6%88%91%E7%96%97%E6%84%88/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E8%B6%8A%E8%BF%87%E5%86%85%E5%BF%83%E9%82%A3%E5%BA%A7%E5%B1%B112%E4%B8%AA%E6%99%AE%E9%81%8D%E5%BF%83%E7%90%86%E9%97%AE%E9%A2%98%E7%9A%84%E8%87%AA%E6%88%91%E7%96%97%E6%84%88/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 越过内心那座山：12个普遍心理问题的自我疗愈&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/32/3300018232/t7_3300018232.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 越过内心那座山：12个普遍心理问题的自我疗愈|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 越过内心那座山：12个普遍心理问题的自我疗愈&lt;/li&gt;
&lt;li&gt;作者： 【美】伊迪丝·伊娃·埃格尔&lt;/li&gt;
&lt;li&gt;简介： 北师大心理学部教授张西超、中科院心理所教授祝卓宏作序推荐！从奥斯维辛集中营幸存的心理医生告诉你，打开心灵牢笼的钥匙，就握在我们自己手中。
将我们的心灵牢牢困住的，往往并非外在的力量，而是我们给自己搭建的牢笼，是我们植入自己脑海的想法。
面对突如其来的不幸，我们无法坦然面对，指责苍天不公，被困在受害者心态里；
面对亲朋好友的期待，我们隐藏甚至扭曲了真实的自我，被困在他人的眼光里；
面对至亲挚爱的离去，我们用懊恼和内疚避免面对现实，被困在未解决的悲伤里。
我们每个人都能在本书描述的12种最普遍的心理困境中找到自己的影子，却不知道，获得自由所需的力量就藏在我们的内心；
我们都在这些自我编织的牢笼中苦苦挣扎，却不知道，打开牢笼的钥匙就握在自己的手中。
著名心理学家、奥斯维辛集中营幸存者伊迪丝·埃格尔博士用她疗愈自己的刻骨创伤和打开无数来访者心灵枷锁的故事告诉我们，自由的基础是具备选择的力量，而走出困境的关键在于以何种态度、何种方式回应我们的遭遇。
改变我们能够改变的，接受我们不能改变的，我们就能解救自己，让心灵得到自由。&lt;/li&gt;
&lt;li&gt;出版时间 2022-05-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787516661802&lt;/li&gt;
&lt;li&gt;分类： 心理-积极心理学&lt;/li&gt;
&lt;li&gt;出版社： 新华出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/ad3326c0813ab6d9fg012c85&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;推荐序一&#34;&gt;推荐序一&lt;/h2&gt;
&lt;h2 id=&#34;推荐序二&#34;&gt;推荐序二&lt;/h2&gt;
&lt;h2 id=&#34;译者序-改变自己可以改变的接纳自己无法改变的&#34;&gt;译者序 改变自己可以改变的，接纳自己无法改变的&lt;/h2&gt;
&lt;h2 id=&#34;献词&#34;&gt;献词&lt;/h2&gt;
&lt;h2 id=&#34;序言-释放我们的心智囚徒&#34;&gt;序言 释放我们的心智囚徒&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 自由需要终身练习——我们每天都要重复进行这项选择。归根结底，自由需要人们心怀希望。我对希望有两方面的定义：一个是能够意识到不论自己的痛苦多么强烈都只是暂时的；另外一个是对即将发生的事情充满好奇。希望让我们活在当下而不是把自己锁在过去经历的事件的牢笼中，并且开启精神牢笼的大门。
⏱ 2024-02-21 12:56:10 ^3300018232-6-4514-4652&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第一章-受害者心态型牢笼&#34;&gt;第一章 受害者心态型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第二章-逃避型牢笼&#34;&gt;第二章 逃避型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第三章-自我忽视型牢笼&#34;&gt;第三章 自我忽视型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第四章-秘密型牢笼&#34;&gt;第四章 秘密型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第五章-内疚和羞耻型牢笼&#34;&gt;第五章 内疚和羞耻型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第六章-未解决的悲伤型牢笼&#34;&gt;第六章 未解决的悲伤型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第七章-僵化思维型牢笼&#34;&gt;第七章 僵化思维型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第八章-怨恨型牢笼&#34;&gt;第八章 怨恨型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第九章-恐惧型牢笼&#34;&gt;第九章 恐惧型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第十章-评判型牢笼&#34;&gt;第十章 评判型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第十一章-绝望型牢笼&#34;&gt;第十一章 绝望型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;第十二章-不宽恕型牢笼&#34;&gt;第十二章 不宽恕型牢笼&lt;/h2&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E8%B7%A8%E8%B6%8A%E4%B8%8D%E5%8F%AF%E8%83%BD/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E8%B7%A8%E8%B6%8A%E4%B8%8D%E5%8F%AF%E8%83%BD/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 跨越不可能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/64/cpplatform_c56nkbq8f8xxagk49wwuss/t7_cpplatform_c56nkbq8f8xxagk49wwuss1684822837.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 跨越不可能|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 跨越不可能&lt;/li&gt;
&lt;li&gt;作者： 史蒂芬·科特勒&lt;/li&gt;
&lt;li&gt;简介： 如何在短时间内成为行业高手？
如何做到看似不可能做到的事？
如何在专业内取得颠覆性突破？
如何让自己的效能提升500%？
普通人如何取得非凡的成就？
大多数人做事的方法，都只是希望将效率提升10%、20%……就已经心满意足了，但是你有没有想过，是否有一种方法能够将效率提升500%，甚至更高呢？
如何完成高难度目标？如何完成看似不可能完成的任务？
巅峰表现专家史蒂芬·科特勒用前沿神经科学研究成果研究了各行各业的高手，包括极限运动员、特种部队士兵、艺术家、科学家、企业管理者以及其他领域高手，证明完成不可能完成的任务有一套生物学公式。普通人按照这套公式去做，也能够实现巅峰表现，在短时间内成为高手，获得超预期的成就。&lt;/li&gt;
&lt;li&gt;出版时间 2021-11-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787521735970&lt;/li&gt;
&lt;li&gt;分类： 个人成长-人在职场&lt;/li&gt;
&lt;li&gt;出版社： 中信出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/229326d0813ab7dbcg017770&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献词&#34;&gt;献词&lt;/h2&gt;
&lt;h2 id=&#34;推荐语&#34;&gt;推荐语&lt;/h2&gt;
&lt;h2 id=&#34;推荐序一-从这本书开始找到适合自己的方法&#34;&gt;推荐序一 从这本书开始，找到适合自己的方法&lt;/h2&gt;
&lt;h2 id=&#34;推荐序二-普通人如何达成巅峰表现&#34;&gt;推荐序二 普通人如何达成巅峰表现&lt;/h2&gt;
&lt;h2 id=&#34;推荐序三-在挑战中孕育人才&#34;&gt;推荐序三 在挑战中孕育人才&lt;/h2&gt;
&lt;h2 id=&#34;前言-不可能的公式&#34;&gt;前言 “不可能”的公式&lt;/h2&gt;
&lt;h2 id=&#34;第一部分-动机&#34;&gt;第一部分 动机&lt;/h2&gt;
&lt;h3 id=&#34;第1章-解码动机&#34;&gt;第1章 解码动机&lt;/h3&gt;
&lt;h3 id=&#34;第2章-激情的培养秘诀&#34;&gt;第2章 激情的培养秘诀&lt;/h3&gt;
&lt;h3 id=&#34;第3章-充分叠加内在驱动力&#34;&gt;第3章 充分叠加内在驱动力&lt;/h3&gt;
&lt;h3 id=&#34;第4章-目标&#34;&gt;第4章 目标&lt;/h3&gt;
&lt;h3 id=&#34;第5章-坚毅力&#34;&gt;第5章 坚毅力&lt;/h3&gt;
&lt;h3 id=&#34;第6章-勇猛精进的习惯&#34;&gt;第6章 勇猛精进的习惯&lt;/h3&gt;
&lt;h2 id=&#34;第二部分-学习力&#34;&gt;第二部分 学习力&lt;/h2&gt;
&lt;h3 id=&#34;第7章-不可能的必备知识库&#34;&gt;第7章 不可能的必备知识库&lt;/h3&gt;
&lt;h3 id=&#34;第8章-成长型思维和真相过滤器&#34;&gt;第8章 成长型思维和真相过滤器&lt;/h3&gt;
&lt;h3 id=&#34;第9章-阅读的投资回报率&#34;&gt;第9章 阅读的投资回报率&lt;/h3&gt;
&lt;h3 id=&#34;第10章-获取知识的五个步骤&#34;&gt;第10章 获取知识的五个步骤&lt;/h3&gt;
&lt;h3 id=&#34;第11章-学习新技能的方法&#34;&gt;第11章 学习新技能的方法&lt;/h3&gt;
&lt;h3 id=&#34;第12章-训练你的核心优势&#34;&gt;第12章 训练你的核心优势&lt;/h3&gt;
&lt;h3 id=&#34;第13章-训练情商的方法&#34;&gt;第13章 训练情商的方法&lt;/h3&gt;
&lt;h3 id=&#34;第14章-成为高手的最短路径&#34;&gt;第14章 成为高手的最短路径&lt;/h3&gt;
&lt;h2 id=&#34;第三部分-创造力&#34;&gt;第三部分 创造力&lt;/h2&gt;
&lt;h3 id=&#34;第15章-创造力的优势&#34;&gt;第15章 创造力的优势&lt;/h3&gt;
&lt;h3 id=&#34;第16章-黑入创造力&#34;&gt;第16章 “黑入”创造力&lt;/h3&gt;
&lt;h3 id=&#34;第17章-持久的创造力&#34;&gt;第17章 持久的创造力&lt;/h3&gt;
&lt;h3 id=&#34;第18章-创造力心流&#34;&gt;第18章 创造力心流&lt;/h3&gt;
&lt;h2 id=&#34;第四部分-心流&#34;&gt;第四部分 心流&lt;/h2&gt;
&lt;h3 id=&#34;第19章-心流解码器&#34;&gt;第19章 心流解码器&lt;/h3&gt;
&lt;h3 id=&#34;第20章-心流科学&#34;&gt;第20章 心流科学&lt;/h3&gt;
&lt;h3 id=&#34;第21章-心流触发器&#34;&gt;第21章 心流触发器&lt;/h3&gt;
&lt;h3 id=&#34;第22章-心流循环&#34;&gt;第22章 心流循环&lt;/h3&gt;
&lt;h3 id=&#34;第23章-巅峰表现的元策略&#34;&gt;第23章 巅峰表现的元策略&lt;/h3&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
&lt;h2 id=&#34;书评-no1&#34;&gt;书评 No.1&lt;/h2&gt;
&lt;p&gt;从神经生物学角度解析学习方法，非常推荐 ^6733360-7MDXoio5k
⏱ 2023-11-11 15:31:00&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E8%BF%99%E5%B0%B1%E6%98%AFchatgpt/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E8%BF%99%E5%B0%B1%E6%98%AFchatgpt/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 这就是ChatGPT&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/24/cpplatform_4cn8w4tmgzntjobg9ffeny/t7_cpplatform_4cn8w4tmgzntjobg9ffeny1703648785.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 这就是ChatGPT|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 这就是ChatGPT&lt;/li&gt;
&lt;li&gt;作者： 斯蒂芬·沃尔弗拉姆&lt;/li&gt;
&lt;li&gt;简介： ChatGPT是OpenAI开发的人工智能聊天机器人程序，于2022年11月推出。它能够自动生成一些表面上看起来像人类写的文字，这是一件很厉害且出乎大家意料的事。那么，它是如何做到的呢？又为何能做到呢？本书会大致介绍ChatGPT的内部机制，然后探讨一下为什么它能很好地生成我们认为有意义的文本。&lt;/li&gt;
&lt;li&gt;出版时间 2023-07-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115618085&lt;/li&gt;
&lt;li&gt;分类： 科学技术-工业技术&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社有限公司&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/74332a90813ab86c4g019d98&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;导读序-奇事奇人奇书&#34;&gt;导读序 奇事·奇人·奇书&lt;/h2&gt;
&lt;h3 id=&#34;奇人&#34;&gt;奇人&lt;/h3&gt;
&lt;h3 id=&#34;奇书&#34;&gt;奇书&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在神经网络的早期发展阶段，人们倾向于认为应该“让神经网络做尽可能少的事”。例如，在将语音转换为文本时，人们认为应该先分析语音的音频，再将其分解为音素，等等。但是后来发现，（至少对于“类人任务”）最好的方法通常是尝试训练神经网络来“解决端到端的问题”，让它自己“发现”必要的中间特征、编码等。
⏱ 2024-02-23 14:15:11 ^3300082609-5-1842-1987&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h2 id=&#34;第一篇-chatgpt在做什么它为何能做到这些&#34;&gt;第一篇 ChatGPT在做什么？它为何能做到这些？&lt;/h2&gt;
&lt;h3 id=&#34;概率从何而来&#34;&gt;概率从何而来&lt;/h3&gt;
&lt;h3 id=&#34;什么是模型&#34;&gt;什么是模型&lt;/h3&gt;
&lt;h3 id=&#34;类人任务human-like-task的模型&#34;&gt;类人任务(human-like task)的模型&lt;/h3&gt;
&lt;h3 id=&#34;神经网络&#34;&gt;神经网络&lt;/h3&gt;
&lt;h3 id=&#34;机器学习和神经网络的训练&#34;&gt;机器学习和神经网络的训练&lt;/h3&gt;
&lt;h3 id=&#34;神经网络训练的实践和学问&#34;&gt;神经网络训练的实践和学问&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 未来，是否会有更好的方法来训练神经网络或者完成神经网络的任务呢？我认为答案几乎是肯定的。神经网络的基本思想是利用大量简单（本质上相同）的组件来创建一个灵活的“计算结构”，并使其能够逐步通过学习样例得到改进。在当前的神经网络中，基本上是利用微积分的思想（应用于实数）来进行这种逐步的改进。但越来越清楚的是，重点并不是拥有高精度数值，即使使用当前的方法，8位或更少的数也可能已经足够了。
⏱ 2024-05-01 14:39:03 ^3300082609-13-4607-4798&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;足够大的神经网络当然无所不能&#34;&gt;“足够大的神经网络当然无所不能！”&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当然，你可能会问，能够进行不可约计算是否真的很重要
⏱ 2024-05-01 14:58:29 ^3300082609-14-1845-1870&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;嵌入的概念&#34;&gt;“嵌入”的概念&lt;/h3&gt;
&lt;h3 id=&#34;chatgpt的内部原理&#34;&gt;ChatGPT的内部原理&lt;/h3&gt;
&lt;h3 id=&#34;chatgpt的训练&#34;&gt;ChatGPT的训练&lt;/h3&gt;
&lt;h3 id=&#34;在基础训练之外&#34;&gt;在基础训练之外&lt;/h3&gt;
&lt;h3 id=&#34;真正让chatgpt发挥作用的是什么&#34;&gt;真正让ChatGPT发挥作用的是什么&lt;/h3&gt;
&lt;h3 id=&#34;意义空间和语义运动定律&#34;&gt;意义空间和语义运动定律&lt;/h3&gt;
&lt;h3 id=&#34;语义语法和计算语言的力量&#34;&gt;语义语法和计算语言的力量&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我们不仅可以用符号话语语言来做“独立的陈述”，而且可以用它来问关于世界的问题，就像对Wolfram|Alpha所做的那样。此外，也可以用它来陈述我们“想要实现”的事情，这可能需要一些外部激活机制；还可以用它来做断言—也许是关于实际世界的，也许是关于某个我们正在考虑的（无论是虚构还是其他的）特定世界的。
⏱ 2024-02-23 13:59:22 ^3300082609-21-2078-2229&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;那么chatgpt到底在做什么它为什么能做到这些&#34;&gt;那么，ChatGPT到底在做什么？它为什么能做到这些？&lt;/h3&gt;
&lt;h3 id=&#34;致谢&#34;&gt;致谢&lt;/h3&gt;
&lt;h2 id=&#34;第二篇-利用wolframalpha为chatgpt赋予计算知识超能力&#34;&gt;第二篇 利用Wolfram|Alpha为ChatGPT赋予计算知识超能力&lt;/h2&gt;
&lt;h3 id=&#34;chatgpt和wolframalpha&#34;&gt;ChatGPT和Wolfram|Alpha&lt;/h3&gt;
&lt;h3 id=&#34;一个简单的例子&#34;&gt;一个简单的例子&lt;/h3&gt;
&lt;h3 id=&#34;再举几个例子&#34;&gt;再举几个例子&lt;/h3&gt;
&lt;h3 id=&#34;前方的路&#34;&gt;前方的路&lt;/h3&gt;
&lt;h3 id=&#34;相关资源&#34;&gt;相关资源&lt;/h3&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;第一篇-chatgpt在做什么它为何能做到这些-1&#34;&gt;第一篇 ChatGPT在做什么？它为何能做到这些？&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 值得注意的是，当ChatGPT做一些事情，比如写一篇文章时，它实质上只是在一遍又一遍地询问“根据目前的文本，下一个词应该是什么”，并且每次都添加一个词。［正如我将要解释的那样，更准确地说，它是每次都添加一个“标记”(token)，而标记可能只是词的一部分。这就是它有时可以“造词”的原因。］  ^6733360-7PLh3mbgt
- 💭 token原义在此
- ⏱ 2024-03-17 17:38:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E9%87%91%E6%A6%9C%E9%A2%98%E5%90%8D%E4%B9%8B%E5%90%8E%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%87%BA%E8%B7%AF%E5%88%86%E5%8C%96%E4%B9%8B%E8%B0%9C/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E9%87%91%E6%A6%9C%E9%A2%98%E5%90%8D%E4%B9%8B%E5%90%8E%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%87%BA%E8%B7%AF%E5%88%86%E5%8C%96%E4%B9%8B%E8%B0%9C/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 金榜题名之后：大学生出路分化之谜&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/71/cpplatform_aftwrezfyfjnrtaahokipe/t7_cpplatform_aftwrezfyfjnrtaahokipe1685436175.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 金榜题名之后：大学生出路分化之谜|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 金榜题名之后：大学生出路分化之谜&lt;/li&gt;
&lt;li&gt;作者： 郑雅君&lt;/li&gt;
&lt;li&gt;简介： 重点大学寄托了万千家庭改变命运的梦想，如今一系列专项招生计划也为更多学子打开了机会之门。然而，金榜题名之后，学子是否如想象那般顺遂？不同社会经济背景的学生在毕业出路和职业前景上的差距是如何拉开的？通过对位于京沪的两所重点高校毕业班学生的深度访谈，本书揭示了大学生在上大学过程中遭遇的一种隐性的挑战：是否洞察大学场域的“游戏规则”，掌握其中“默认”为常规的一系列认知和实践模式。本书指出，家庭背景优势不仅带来了雄厚的物质支持，更意味一整套关于“上大学”的文化技艺的传承，这使得出身优渥的大学生得以在白热化的出路竞争中抢占先机，而家境平平者却更容易与机会失之交臂。本书也关注了意义感在出路获得中的重要作用，指出了在当前的制度背景下，内化主流价值信念、扩充“文化工具箱”有助于帮助大学生走出生涯目标迷失的困境，从而更高效地利用大学资源，获得生涯出彩机会。&lt;/li&gt;
&lt;li&gt;出版时间 2023-01-30 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787542677815&lt;/li&gt;
&lt;li&gt;分类： 教育学习-教育&lt;/li&gt;
&lt;li&gt;出版社： 上海三联书店&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/f0032f50813ab7e04g012a8d&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献词&#34;&gt;献词&lt;/h2&gt;
&lt;h2 id=&#34;序言&#34;&gt;序言&lt;/h2&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;h2 id=&#34;导论&#34;&gt;导论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对学生来说真正重要的，不是学校在多大程度上平等，而是他们离开学校时是否能不受自己社会出身的影响，在平等的原则下去迎接同辈的竞争……换句话说，学校只有使学生的前景尽可能免受其社会出身的制约，才算完成了它的使命。
⏱ 2024-05-29 12:41:36 ^3300060202-6-361-496&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第一章-迷宫&#34;&gt;第一章 迷宫&lt;/h2&gt;
&lt;h2 id=&#34;第二章-视角&#34;&gt;第二章 视角&lt;/h2&gt;
&lt;h2 id=&#34;第三章-家境&#34;&gt;第三章 家境&lt;/h2&gt;
&lt;h2 id=&#34;第四章-努力&#34;&gt;第四章 努力&lt;/h2&gt;
&lt;h2 id=&#34;第五章-方向&#34;&gt;第五章 方向&lt;/h2&gt;
&lt;h2 id=&#34;第六章-余论&#34;&gt;第六章 余论&lt;/h2&gt;
&lt;h2 id=&#34;附录一-个案描述&#34;&gt;附录一 个案描述&lt;/h2&gt;
&lt;h2 id=&#34;附录二-被访者基本信息&#34;&gt;附录二 被访者基本信息&lt;/h2&gt;
&lt;h2 id=&#34;附录三-访谈提纲&#34;&gt;附录三 访谈提纲&lt;/h2&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E9%A5%AE%E9%A3%9F%E6%BB%8B%E5%91%B3/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E9%A5%AE%E9%A3%9F%E6%BB%8B%E5%91%B3/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 饮食滋味&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/77/YueWen_23484705/t7_YueWen_23484705.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 饮食滋味|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 饮食滋味&lt;/li&gt;
&lt;li&gt;作者： 徐文兵&lt;/li&gt;
&lt;li&gt;简介： 我们这一代中国人，饮食结构和习惯发生了巨大变化，流行摧毁了传统，营养和元素代替了味道……关于吃的一切都有了变化。怎样吃才是中国人的饮食之道，才真正能抚慰中国人的身心呢？为什么选择读《饮食滋味》？因为，《饮食滋味》讲的是适合中国人每个人体质的饮食之道。也许你会觉得，活了这么多年，别的不敢说，如何饮食是根本不用学的。其实，读完这本书，你的饮食观和人生观将会有巨大的改变。本书是《黄帝内经说什么》的作者徐文兵老师从《黄帝内经》等经典中总结出的适合中国人体质的饮食营养智慧，从“以人为本”的角度出发，解答我们的身体真正缺什么，应该吃什么以及怎样吃的重大生命问题。&lt;/li&gt;
&lt;li&gt;出版时间 2018-03-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787539061771&lt;/li&gt;
&lt;li&gt;分类： 医学健康-健康&lt;/li&gt;
&lt;li&gt;出版社： 江西科学技术出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/c9832ac071665921c980b47&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;h2 id=&#34;序言-生命的平安需要饮食滋味&#34;&gt;序言 生命的平安需要饮食滋味&lt;/h2&gt;
&lt;h2 id=&#34;第一章-以人为本还是以食物为本中西方营养学的最大区别&#34;&gt;第一章 “以人为本”还是“以食物为本”——中西方营养学的最大区别&lt;/h2&gt;
&lt;h3 id=&#34;1-希望人人都能懂点儿中医营养学&#34;&gt;1 希望人人都能懂点儿中医营养学&lt;/h3&gt;
&lt;h3 id=&#34;2-饮食滋味的滋是什么&#34;&gt;2 饮食滋味的“滋”是什么&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一旦吃东西过量，唾液质量马上就会下降。
⏱ 2024-05-10 19:03:02 ^23484705-6-2379-2398&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 古代有一个说法叫“口衔丁香”，字面意思就是口里含一块儿丁香，后来指在朝为官，随后又逐渐演变为朝臣及文人雅士的常见礼节。
⏱ 2024-05-10 20:21:56 ^23484705-6-3871-3930&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 除了丁香，还有几个非常好的香料药效也不错。一个是白豆蔻。白豆蔻本身就是一味非常好的化湿药，可以治疗诸如肠胃不蠕动、湿气太重等症。白豆蔻不辣，嚼碎了含在嘴里，很清香，个人感觉白豆蔻有一种偏凉的香味儿。
⏱ 2024-05-10 20:23:21 ^23484705-6-4231-4330&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 为什么我不提倡人没事大量喝水？因为喝水会冲淡唾液和胃液，降低我们的消化功能。同理，我不赞同吃汤泡饭。
⏱ 2024-05-10 20:34:17 ^23484705-6-5580-5637&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-饮食滋味的味是什么&#34;&gt;3 饮食滋味的“味”是什么&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 黄帝内经·素问·刺法论》中提到：“欲令脾实，气无滞饱，无久坐，食无太酸，无食一切生物，宜甘宜淡。”
⏱ 2024-05-10 20:45:56 ^23484705-7-1148-1197&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因为我也会找西医看病。不管是中医还是西医，都以治好病为原则，只不过是方法不同罢了。中医和西医并不像我们想象的那样水火不容，相互对立，其实双方之间有很多相互借鉴的地方
⏱ 2024-05-10 20:47:33 ^23484705-7-1570-1652&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在日本，最近一百多年来出现了很多中医，他们把中医叫作汉方医学。这些医生都是先学完西医，然后又学的中医。因此，他们现在写的论著，既有对现代科学的认识，又有对中医的理解。我妈妈的老师——马先生对“西学中”的那些日本人的论著非常推崇。我们家有很多这些日本人写的中医书，其中有个人叫矢数道明，他的医学论著特别适合那些有科学头脑，又想学中医的人读
⏱ 2024-05-10 21:00:03 ^23484705-7-1881-2049&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;4-中医的饮食观和西医一样吗&#34;&gt;4 中医的饮食观和西医一样吗&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 可见，蒜是一种温通心神的食物。
⏱ 2024-05-10 21:58:30 ^23484705-8-3352-3367&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;5-中医营养学的讲究&#34;&gt;5 中医营养学的讲究&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在过去，说极端一些，过年、过节是那些吃不饱、穿不暖的穷人唯一可以吃饱、吃好的时候。所以中国的节日大多沿袭着浓厚的吃不饱、穿不暖的生活习俗，节日期间的饮食，基本都是黏腻、肥厚、难消化的。时过境迁，在现在这个时代，我们可就不能再那么吃了。
⏱ 2024-05-11 11:02:05 ^23484705-9-2191-2336&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第二章-为什么要应地而食一方水土养一方人&#34;&gt;第二章 为什么要“应地而食”——一方水土养一方人&lt;/h2&gt;
&lt;h3 id=&#34;1-吃的最终目的是求和&#34;&gt;1 吃的最终目的是“求和”&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我有一次到了陕西，当地朋友请我吃稷面。稷子比黍子颗粒小，黏度不如黍子，但甜度更高，另外，稷子更抗旱。如果在播种时不下雨（农民就是靠天吃饭，下雨了才能播种），其他作物就会错过农时，但是稷子不一样，之后只要再下点儿雨，撒上种子，就能长。而且它的生长期特别短，四五个月就有收成，所以当地人把稷子当成救命的东西（稷为百谷之长，古代帝王奉稷为谷神）。“江山社稷”这个词就充分说明了稷的重要性。
⏱ 2024-05-11 11:06:28 ^23484705-11-3130-3377&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 一个还在地下埋着，一个已经冒出来了，所以要想滋肾阴，冬笋烧猪肉是最佳的选择。苏东坡说：“宁可食无肉，不可居无竹。”做一顿笋烧肉，就可以既有竹，又有肉。冬笋特别肥厚，味道偏苦，入肾，类似于生地一样会滋补肾阴。
⏱ 2024-05-11 11:07:48 ^23484705-11-4771-4903&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 春笋是开始冒尖的那种，是入肝的，而且很多人吃了会过敏。为什么过敏？其实它是把人体内在的很多阴寒、湿浊之气透出来了。
⏱ 2024-05-11 11:08:01 ^23484705-11-4936-5023&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-谁吃什么时候吃在什么心情下吃&#34;&gt;2 谁吃，什么时候吃，在什么心情下吃&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 为什么会出现这样的情况？因为我们现在的教育是以谋生为主的教育，它教我们掌握一门技术，然后给别人当个“才”。在这样的教育之后，当我们工作也有了，钱也有了，但往往却不会生活了。于是只好去挥霍时间、挥霍生命——瞎造，造的结果必然是人财两空。所以有些人自杀，就是因为他们虽然变成了有用之才，但是却失去了自己的本性
⏱ 2024-05-11 11:21:45 ^23484705-12-1832-2013&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 很多小孩都有异食癖，比如挖墙皮吃、抠鼻屎吃，为什么？其中很重要的一点就是因为饿。换言之，他没吃到他该吃的东西，这就需要给他去调养
⏱ 2024-05-11 12:27:07 ^23484705-12-3823-3887&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-各种食物自有老天给的不同能量&#34;&gt;3 各种食物，自有老天给的不同能量&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 而且，我们原来吃鸡的做法是小鸡炖蘑菇，而现在吃的都是麦当劳、肯德基的炸鸡，还有辣子鸡丁、烤鸡翅、麻辣鸡翅等。但麻辣鸭还是可以理解的，因为鸭虽然是飞禽，但它是水禽，性质偏寒；但鸡是阳性的动物。
⏱ 2024-05-11 12:32:52 ^23484705-13-1540-1635&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第三章-一生的营养之路五谷五畜五果五菜&#34;&gt;第三章 一生的营养之路——“五谷、五畜、五果、五菜”&lt;/h2&gt;
&lt;h3 id=&#34;1-为什么中医说五谷最养人五谷为养&#34;&gt;1 为什么中医说五谷最养人——“五谷为养”&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因此，普通人健康的饮食结构应该是，一碗小米饭或白米饭，有块儿咸菜，就行了，再加块儿肉。如果刚好有几把青菜，这就更好了，没有也够了。
⏱ 2024-05-11 12:36:52 ^23484705-15-1179-1244&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 脾气虚，吃东西吸收不了时，要多吃粟（小米）
⏱ 2024-05-11 12:42:41 ^23484705-15-2829-2850&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 那如果我们想吃东北大米，又怕大米寒会导致胃酸怎么办呢？其实只要在焖大米的时候，往里面加点儿带辛温之气的孜然或者桂皮，就可以平衡大米的寒气了（焖完之后只要把桂皮拿出来、孜然挑出来就可以了，也可以不挑）。
⏱ 2024-05-11 12:44:00 ^23484705-15-3579-3707&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-为什么中医说吃肉只是为身体锦上添花五畜为益&#34;&gt;2 为什么中医说吃肉只是为身体锦上添花——“五畜为益”&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 螃蟹最寒的地方就是蟹膏和蟹黄，但是如果一个阴虚特别重、火特别大的人，吃了蟹膏和蟹黄，就是刚好合适的。螃蟹的滋阴效果是最好的。另外，螃蟹那么寒，包裹螃蟹的壳又是什么性质的呢？螃蟹壳是最好的化痰、散结的药，可以用来治疗乳腺增生、小叶增生、乳腺结节、纤维瘤等疾病。把螃蟹壳打碎了，磨成粉，中医用它来软坚散结。
⏱ 2024-05-11 12:53:42 ^23484705-16-3786-4001&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在所有这些具有滋补性的海产品中，滋阴、壮阳效果好，而且比较温性，容易被人接受的，就是牡蛎。
⏱ 2024-05-11 12:54:18 ^23484705-16-4049-4094&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 什么叫元？元就是混沌不分的状态，混沌初开还没开的状态，而甲鱼蛋就是王八蛋，是没有蛋黄和蛋清之分的，是个“混蛋”。因此，甲鱼是滋补肾阴最好的一种食材。
⏱ 2024-05-11 12:56:28 ^23484705-16-5656-5758&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 小孩子如果脾胃消化不好，又不爱吃东西，就可以把带鱼做好给他吃。只有带鱼是入脾、入土的，所以带鱼属于水中的异类。
⏱ 2024-05-11 12:58:03 ^23484705-16-6872-6948&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-为什么中医说水果是五谷五畜吃多以后帮助消化的一种东西五果为助&#34;&gt;3 为什么中医说水果是五谷、五畜吃多以后帮助消化的一种东西——“五果为助”&lt;/h3&gt;
&lt;h3 id=&#34;4-为什么中医说蔬菜绝对不能当主食五菜为充&#34;&gt;4 为什么中医说蔬菜绝对不能当主食——“五菜为充”&lt;/h3&gt;
&lt;h2 id=&#34;第四章-如何通过饮食来调神&#34;&gt;第四章 如何通过饮食来调神&lt;/h2&gt;
&lt;h3 id=&#34;1-饮食的味道比饮食本身重要得多&#34;&gt;1 饮食的味道比饮食本身重要得多&lt;/h3&gt;
&lt;h3 id=&#34;2-五味是如何调神的&#34;&gt;2 五味是如何调神的&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 中药的药方里面经常加的姜和枣，还有南方卖的姜糖，都有些什么用呢？这些都起到了缓解辛温、辛辣对身体产生的刺激作用。
⏱ 2024-05-12 12:01:44 ^23484705-21-2614-2670&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 以前有人闹洞房的时候，会给刺猬喂盐，然后把刺猬放到婚床底下，结果刺猬就会一直咳。新婚夫妇就觉得有个老头在床下咳嗽，下去看看又没有，一晚上都睡不着。
⏱ 2024-05-12 12:01:45 ^23484705-21-3256-3329&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第五章-饮食饮食缺饮不可&#34;&gt;第五章 饮食饮食，缺“饮”不可&lt;/h2&gt;
&lt;h3 id=&#34;1-有多少人一生都不识水为何物&#34;&gt;1 有多少人，一生都不识“水”为何物&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 王安石用苏东坡带回来的水一泡茶，就知道那水并非取自中峡，而是下峡之水。苏东坡当时还不承认，说：“你凭什么认为我所取为下峡之水，而非中峡之水呢？”王安石说：“上、中、下三峡水的气势完全不一样：上峡的水流势很急，下峡的水流势很缓，只有中峡的水是流势缓急适中的。用三峡的水泡茶，上峡的味道偏浓，下峡的味道偏淡，中峡的味道处于浓淡之间。”
⏱ 2024-05-12 12:01:43 ^23484705-23-3555-3720&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-喝什么不重要喝完的结果才重要&#34;&gt;2 喝什么不重要，喝完的结果才重要&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 三焦是中医“脏象学说”中一个特有的名词，是六腑之一，是上焦、中焦和下焦的合称，将躯干划分为三个部位，横膈以上的内脏器官为上焦，包括心、肺；横膈以下至脐的内脏器官为中焦，包括脾、胃、肝、胆等内脏；脐以下的内脏器官为下焦，包括肾、大肠、小肠、膀胱）。
⏱ 2024-05-12 12:01:44 ^23484705-24-2672-2802&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-喝进去的东西不等同于我们的津液体液&#34;&gt;3 喝进去的东西不等同于我们的津液（体液）&lt;/h3&gt;
&lt;h3 id=&#34;4-卫气推动体液运行的动力&#34;&gt;4 卫气：推动体液运行的动力&lt;/h3&gt;
&lt;h2 id=&#34;第六章-吃最适合自己的&#34;&gt;第六章 吃最适合自己的&lt;/h2&gt;
&lt;h3 id=&#34;1-汤对人好在哪儿&#34;&gt;1 汤对人好在哪儿&lt;/h3&gt;
&lt;h3 id=&#34;2-汁对人好在哪儿&#34;&gt;2 汁对人好在哪儿&lt;/h3&gt;
&lt;h3 id=&#34;3-浆对人好在哪儿&#34;&gt;3 浆对人好在哪儿&lt;/h3&gt;
&lt;h3 id=&#34;4-液对人好在哪儿&#34;&gt;4 液对人好在哪儿&lt;/h3&gt;
&lt;h3 id=&#34;5-胶对人好在哪儿&#34;&gt;5 胶对人好在哪儿&lt;/h3&gt;
&lt;h3 id=&#34;6-糜对人好在哪儿&#34;&gt;6 糜对人好在哪儿&lt;/h3&gt;
&lt;h3 id=&#34;7-髓对人好在哪儿&#34;&gt;7 髓对人好在哪儿&lt;/h3&gt;
&lt;h2 id=&#34;第七章-你会喝酒吗&#34;&gt;第七章 你会喝酒吗&lt;/h2&gt;
&lt;h3 id=&#34;1-世上有多少人会饮酒&#34;&gt;1 世上有多少人会饮酒&lt;/h3&gt;
&lt;h3 id=&#34;2-酒无美恶过则为灾&#34;&gt;2 酒无美恶，过则为灾&lt;/h3&gt;
&lt;h2 id=&#34;第八章-你会消化食物吗使用水油火的智慧&#34;&gt;第八章 你会“消”“化”食物吗——使用水、油、火的智慧&lt;/h2&gt;
&lt;h3 id=&#34;1-食物为什么要烹&#34;&gt;1 食物为什么要烹&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 就消化而言，大块儿的肉，成条的面，成颗粒的米，硬脆的蔬菜、水果，经过我们的口腔咀嚼、胃的研磨，形成了乳糜，这就是消的过程。但当食物经过胃的研磨、消解、搅拌之后，就被送到了小肠（小肠又称赤肠，是受盛之官，化物出于此）。胰脏分泌的胰液和肝分泌的胆汁注入十二指肠，手太阳小肠为酶的工作提供了合适的温度，使得化的工作得以顺利进行。食物经过酶的作用重新组合，变成人的组织的时候，这个过程就被称为“化”了。
⏱ 2024-05-12 18:06:08 ^23484705-39-1668-1893&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-帮助身体消的方法有哪些&#34;&gt;2 帮助身体消的方法有哪些&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在民间，切肉有个讲究，叫“横切牛羊顺切猪”。猪肉嫩，可以顺着切；而牛羊肉的纤维比较粗、比较老，所以必须得横着切断，这样切出来的肉才会好吃。不然的话，要么会塞牙，要么就是吞咽不下去，即使吞咽下去了也不消化。
⏱ 2024-05-12 18:07:23 ^23484705-40-1079-1188&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 因此我建议大家尽量少去外面吃饭，而且在外面吃饭还有一个问题，就是众所周知的地沟油问题。尤其是那种低成本的小吃店，我们算一下成本就可以知道，如果用好油，扣除房租和人工费等费用，他们必然是赚不到钱的。
⏱ 2024-05-12 18:07:46 ^23484705-40-1365-1491&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-会吃的人要懂焯煮蒸之道&#34;&gt;3 会吃的人要懂焯、煮、蒸之道&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 煮是把食物放在水里面长时间地加热，比如，有些餐饮店的招牌就是煮物。但是有一点请大家记住：当菜和肉类在一个锅里煮的时候，一定要先放肉后放菜，不然的话，那一锅东西会很难吃的。
⏱ 2024-05-12 18:11:44 ^23484705-41-1669-1775&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;4-吃油最好吃天然油胡麻油猪油&#34;&gt;4 吃油最好吃天然油（胡麻油、猪油）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 以前我们用的植物油，最好的就是胡麻油（胡麻产量特别低，而且燃点比较低）。
⏱ 2024-05-12 19:38:24 ^23484705-42-953-1017&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;5-会吃的人要懂煎炸烹爆炒之道&#34;&gt;5 会吃的人要懂煎、炸、烹、爆（炒）之道&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 另外，凡是需要爆的食材都比较嫩，如果你用煎或者炸的方式，最后会使食材嚼不动。比如腰花、猪肝这些比较嫩的东西，如果用煎或者炸的方式，最后都会变成硬块儿。我们常吃的像宫保鸡丁、酱爆鸡丁，都是采用的这种方式
⏱ 2024-05-13 11:30:28 ^23484705-43-1448-1576&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;6-会吃的人要懂炙烧烙炮焖之道&#34;&gt;6 会吃的人要懂炙、烧、烙、炮、焖之道&lt;/h3&gt;
&lt;h2 id=&#34;第九章-你会吃酱茶酒肉蛋吗&#34;&gt;第九章 你会吃酱、茶、酒、肉、蛋吗&lt;/h2&gt;
&lt;h3 id=&#34;1-不得其酱不食豆豉纳豆酱豆腐臭豆腐豆瓣酱等&#34;&gt;1 “不得其酱不食”：豆豉、纳豆、酱豆腐（臭豆腐）、豆瓣酱等&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 中医治疗失眠有一个很经典的方子——栀子豉汤。方子很简单，只有两味药，“炒栀子十四枚，豆豉若干，栀子豉汤主之”。大家了解之后可以尝试着给身边的人调调失眠的问题。
⏱ 2024-05-13 13:04:14 ^23484705-46-1862-1941&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-什么人喝什么茶&#34;&gt;2 什么人喝什么茶&lt;/h3&gt;
&lt;h3 id=&#34;3-喝酒最好喝粮食酒&#34;&gt;3 喝酒最好喝粮食酒&lt;/h3&gt;
&lt;h3 id=&#34;4-如何吃肉蛋才能保证好吃又营养&#34;&gt;4 如何吃肉、蛋才能保证好吃又营养&lt;/h3&gt;
&lt;h2 id=&#34;第十章-芳香类食材对人有什么好处&#34;&gt;第十章 芳香类食材对人有什么好处&lt;/h2&gt;
&lt;h3 id=&#34;1-辛香温的食材对人有什么好处&#34;&gt;1 辛、香、温的食材对人有什么好处&lt;/h3&gt;
&lt;h3 id=&#34;2-酸味对人有什么好处&#34;&gt;2 酸味对人有什么好处&lt;/h3&gt;
&lt;h3 id=&#34;3-肉药唤醒我们的消化系统&#34;&gt;3 肉药：唤醒我们的消化系统&lt;/h3&gt;
&lt;h3 id=&#34;4-不同的香料分别对人有什么好处&#34;&gt;4 不同的香料分别对人有什么好处&lt;/h3&gt;
&lt;h2 id=&#34;第十一章-调身的智慧&#34;&gt;第十一章 调身的智慧&lt;/h2&gt;
&lt;h3 id=&#34;1-为什么饮食要调和五味&#34;&gt;1 为什么饮食要调和五味&lt;/h3&gt;
&lt;h3 id=&#34;2-要想活到天年先把自己的五脏调好再说&#34;&gt;2 要想活到天年，先把自己的五脏调好再说&lt;/h3&gt;
&lt;h2 id=&#34;第十二章-调肝的智慧&#34;&gt;第十二章 调肝的智慧&lt;/h2&gt;
&lt;h3 id=&#34;1-知道什么时候该补泻损益&#34;&gt;1 知道什么时候该“补”“泻”“损”“益”&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 补是有漏洞了，需要堵上；泻是积攒的东西太多了，需要捅个窟窿，让它漏出来；益是锦上添花，就是首先保证不存在漏洞，然后再往里面加东西，才能达到益；损，道家有句话叫“为学日益，为道日损”，损就是量的减少。
⏱ 2024-05-14 22:13:41 ^23484705-59-623-722&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-肝气虚肝气实的人会得什么病&#34;&gt;2 肝气虚、肝气实的人会得什么病&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 有的人脾气特别暴躁，如果总用疏发肝气的药，肝是补上了，但是脾胃却被削弱了，所以这时候一定要记着把脾补起来，适当吃点儿甜的（脾胃主土
⏱ 2024-05-14 22:25:27 ^23484705-60-3378-3464&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-自己在家如何调肝&#34;&gt;3 自己在家如何调肝&lt;/h3&gt;
&lt;h2 id=&#34;第十三章-调心的智慧&#34;&gt;第十三章 调心的智慧&lt;/h2&gt;
&lt;h3 id=&#34;1-心病分为心病心包病两种你是哪一种&#34;&gt;1 心病分为心病、心包病两种，你是哪一种&lt;/h3&gt;
&lt;h3 id=&#34;2-心病还要经方医&#34;&gt;2 心病还要经方医&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 前面讲过，“肝德在散”，所以很多人就认为应该克制、压抑自己的情绪，要制怒，其实这样做反而会把肝气伤得很严重。
⏱ 2024-05-16 08:53:29 ^23484705-147-779-833&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 所以如果有人说，“别人骗了我，出卖了我，但我却恨不起来”，那说明说这话的人是个好人。因为，恨是需要积蓄很多力量的，凡是怀恨在心的人，心肠都是硬和冷的；而恨不起来的人，心肠都软，而且偏热。
⏱ 2024-05-16 08:53:47 ^23484705-147-944-1057&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我有几个患者跟我说，他们想辞职不干了，回家歇一个月。我劝他们千万别那样做。因为人一旦放松太久，就很难再提起精神来，慢慢就会变得像一摊软泥。
⏱ 2024-05-16 08:54:17 ^23484705-147-1395-1464&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 有很多冠心病患者，都是在吃完饭或者是吃饱饭之后发病的。所以民间有句话叫“压炕头饭要少吃”，就是说晚上睡觉前要尽量少吃饭，尤其是老年人。
⏱ 2024-05-16 08:55:43 ^23484705-147-2542-2629&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-心包病是个什么病&#34;&gt;3 心包病是个什么病&lt;/h3&gt;
&lt;h2 id=&#34;第十四章-调脾的智慧&#34;&gt;第十四章 调脾的智慧&lt;/h2&gt;
&lt;h3 id=&#34;1-脾胃不好有什么表现&#34;&gt;1 脾胃不好有什么表现&lt;/h3&gt;
&lt;h3 id=&#34;2-治疗脾病有什么名方&#34;&gt;2 治疗脾病有什么名方&lt;/h3&gt;
&lt;h2 id=&#34;第十五章-调肺的智慧&#34;&gt;第十五章 调肺的智慧&lt;/h2&gt;
&lt;h3 id=&#34;1-肺不好有什么表现&#34;&gt;1 肺不好有什么表现&lt;/h3&gt;
&lt;h3 id=&#34;2-治疗肺病有什么名方&#34;&gt;2 治疗肺病有什么名方&lt;/h3&gt;
&lt;h2 id=&#34;第十六章-调肾的智慧&#34;&gt;第十六章 调肾的智慧&lt;/h2&gt;
&lt;h3 id=&#34;1-肾不好有什么表现&#34;&gt;1 肾不好有什么表现&lt;/h3&gt;
&lt;h3 id=&#34;2-治疗肾病有什么名方&#34;&gt;2 治疗肾病有什么名方&lt;/h3&gt;
&lt;h2 id=&#34;第十七章-辅行诀中的食疗名方&#34;&gt;第十七章 《辅行诀》中的食疗名方&lt;/h2&gt;
&lt;h3 id=&#34;1-养生补肝汤&#34;&gt;1 养生补肝汤&lt;/h3&gt;
&lt;h3 id=&#34;2-调中补心汤&#34;&gt;2 调中补心汤&lt;/h3&gt;
&lt;h3 id=&#34;3-建中补脾汤&#34;&gt;3 建中补脾汤&lt;/h3&gt;
&lt;h3 id=&#34;4-宁气补肺汤&#34;&gt;4 宁气补肺汤&lt;/h3&gt;
&lt;h3 id=&#34;5-固元补肾汤&#34;&gt;5 固元补肾汤&lt;/h3&gt;
&lt;h3 id=&#34;6-小汤变大汤之法&#34;&gt;6 “小汤”变“大汤”之法&lt;/h3&gt;
&lt;h2 id=&#34;内容简介&#34;&gt;内容简介&lt;/h2&gt;
&lt;h2 id=&#34;饮食的真谛以人为本&#34;&gt;饮食的真谛——以人为本&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;2-谁吃什么时候吃在什么心情下吃-1&#34;&gt;2 谁吃，什么时候吃，在什么心情下吃&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 我之前开玩笑地讲过，对于一个特别胖，但还特别喜欢吃肉的人，怎么治？把他头朝下吊起来，底下放盘红烧肉。他的鼻涕、眼泪、痰涎就会往外流。流完之后，他对这盘肉的欲望就没有了。他那种欲望是邪恶的欲望，我们帮他把内心邪恶的东西找到，最后才能达到平的目的。  ^6733360-7R6BRgRpW
- 💭 怎么想到千与千寻里面的画面
- ⏱ 2024-05-11 12:29:58&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1-为什么中医说五谷最养人五谷为养-1&#34;&gt;1 为什么中医说五谷最养人——“五谷为养”&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 豆子的正确吃法是做成豆腐吃，并且最好吃卤水点的豆腐。豆腐本身磨得很细，而且既营养又美味。  ^6733360-7R6CWXfXx
- 💭 豆腐是道菜
- ⏱ 2024-05-11 12:46:39&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1-肾不好有什么表现-1&#34;&gt;1 肾不好有什么表现&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 道家说：“精足不思淫，气足不思食，神足不思睡。”精足之人的层次和境界是精不足之人所无法理解的。女性根本不是精足之人关注的重点，他们的想法是拯救世界。  ^6733360-7RxZV8757
- 💭 厉害
- ⏱ 2024-05-29 12:37:29&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E9%AB%98%E6%80%A7%E8%83%BD%E8%B6%85%E6%A0%87%E9%87%8Fcpu%E5%BE%AE%E6%9E%B6%E6%9E%84%E5%89%96%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E9%AB%98%E6%80%A7%E8%83%BD%E8%B6%85%E6%A0%87%E9%87%8Fcpu%E5%BE%AE%E6%9E%B6%E6%9E%84%E5%89%96%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 高性能超标量CPU：微架构剖析与设计&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/39/cpplatform_fryrydqbg1a7d5xqwb7bzm/t7_cpplatform_fryrydqbg1a7d5xqwb7bzm1690771297.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 高性能超标量CPU：微架构剖析与设计|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 高性能超标量CPU：微架构剖析与设计&lt;/li&gt;
&lt;li&gt;作者： 李东声 等&lt;/li&gt;
&lt;li&gt;简介： 《高性能超标量CPU：微架构剖析与设计》基于当前主流的高性能CPU设计规格，全面介绍了高性能超标量CPU微架构的设计，并做出对应的分析。主要内容包括业界主流高性能处理器架构及超标量流水线背景知识（第1章）；CPU前端，包括指令提取单元、分支预测单元、指令译码单元的设计和优化，以及指令缓存的相关设计（第2、3章）；分支预测单元的原理、设计和优化，寄存器重命名与发射队列的原理和设计（第4、5章）；执行单元与浮点运算单元的设计实现（第6、7章）；访存单元与数据缓存设计（第8章）；重排序缓冲的原理及设计（第9章）；Intel P6 CPU微架构设计实例（第10章）。微架构设计对应于指令的生命周期，为读者提供直观和清晰的视角，便于读者对高性能CPU设计深入理解。
《高性能超标量CPU：微架构剖析与设计》提供了高清学习视频，读者可以直接扫描二维码观看。
《高性能超标量CPU：微架构剖析与设计》可作为从事高性能CPU相关研发工作专业人员的参考书，或用作高等院校计算机及集成电路相关专业研究生和高年级本科生的教学参考用书，也可供对CPU设计感兴趣的读者阅读。&lt;/li&gt;
&lt;li&gt;出版时间 2023-03-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787111724605&lt;/li&gt;
&lt;li&gt;分类： 计算机-理论知识&lt;/li&gt;
&lt;li&gt;出版社： 机械工业出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/b6a32d70813ab8026g012fd1&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;h2 id=&#34;序&#34;&gt;序&lt;/h2&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在计算机体系结构领域，无论对于在校生还是从业者，加州大学伯克利分校的David Patterson博士和斯坦福大学的John Hennessy博士的两部经典著作Computer Organization and Design: The Hardware/Software Interface和Computer Architecture: A Quantitative Approach都是必读的。
⏱ 2024-04-01 19:25:36 ^3300065662-5-679-933&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 南加州大学教授Michel Dubois博士是IEEE会士，笔者认为他的著作Parallel Computer Organization and Design看来是一部非常优秀的讲解CPU设计的书籍，内容详实逻辑清晰。然而，笔者在校时Michel Dubois博士开设的课程并没有得到学生的追捧，究其原因有其个人风格的关系，但是归根结底还是偏重于高屋建瓴，这有可能会让学生对于CPU设计的“道”和“术”无法顺畅地相互印证
⏱ 2024-04-01 19:26:26 ^3300065662-5-1307-1545&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第1章-cpu架构与流水线技术概述&#34;&gt;第1章 CPU架构与流水线技术概述&lt;/h2&gt;
&lt;h3 id=&#34;11-复杂指令集与精简指令集概述&#34;&gt;1.1 复杂指令集与精简指令集概述&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 此处需要说明，整型类指令大部分一般一个时钟周期能执行完运算，浮点类指令只有极少数可以做到一个时钟周期能执行完成，大部分的执行都是几个时钟周期
⏱ 2024-04-05 10:25:14 ^3300065662-7-3617-3687&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 RISC强调使用寄存器而不是内存，因为寄存器是访问最快的可用资源。RISC中的通用寄存器放置在与运算单元和控制单元接近的位置上，指令对寄存器中存储的操作数进行操作。
⏱ 2024-04-05 10:43:55 ^3300065662-7-4036-4118&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;12-arm指令集概述&#34;&gt;1.2 ARM指令集概述&lt;/h3&gt;
&lt;h3 id=&#34;13-risc-v指令集概述&#34;&gt;1.3 RISC-V指令集概述&lt;/h3&gt;
&lt;h3 id=&#34;14-mips指令集概述&#34;&gt;1.4 MIPS指令集概述&lt;/h3&gt;
&lt;h3 id=&#34;15-超标量cpu设计概述&#34;&gt;1.5 超标量CPU设计概述&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在超标量CPU中，指令分发器(Dispatcher)决定了哪些指令可以并行运行，并将每个指令分发到多个执行单元。
⏱ 2024-04-05 20:26:13 ^3300065662-11-880-936&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当经典5级流水线中的1级需要运行超过一个周期并被进一步流水线化时，就引出了一个概念——超流水线(Superpipelined)。相比于经典5级流水线，这种设计的优点是提高了指令吞吐量，同时对于逻辑级数较多或者内存访问延迟较大的场景，也可以通过增加流水线级数来减轻时序收敛的压力
⏱ 2024-04-06 06:19:31 ^3300065662-11-4060-4224&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 此处需要提请读者注意，将复杂逻辑尽量优化压缩在一个时钟周期内能够减少流水线级数从而提高IPC。然而，CPU的整体性能是IPC与运行时钟频率的综合考量，单时钟周期内过于复杂的逻辑会限制时钟频率的提升。前文提到，设计人员不应贸然通过增加流水线级数来解决时序收敛问题，这里从另一层面来说，更深的流水线设计能够使CPU以更高的时钟频率运行，过度关注IPC优化可能导致整体性能产生负面收益。
⏱ 2024-04-06 06:26:12 ^3300065662-11-5019-5209&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 具体来说，乱序CPU微架构设计基于动态寄存器重命名、动态内存消歧、分支预测、重排序缓冲和回滚机制来进行指令的投机执行。随着动态微架构试图在每个时钟周期调度越来越多的指令，硬件变得更加复杂，流水线更深且功耗更多
⏱ 2024-04-06 06:38:31 ^3300065662-11-6074-6178&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 而且，在生态为王的CPU领域，Intel的安腾(Itanium)架构失败的教训是不得不讲的。这款基于VLIW的CPU具有非常大的缓存（其中一级指令缓存512KB，一级数据缓存256KB，二级缓存6MB，三级缓存32MB），每个周期可以处理12条指令，注意这是2012年的设计规格[Itanium 9500(Poulson)]，之后除了在2017年的Itanium 9700(Kittson)提升了一点时钟频率之外并没有做其他改动。最后就是2021年7月这套架构彻底落幕。一言以蔽之，在为某些应用程序部署时，安腾非常强大，在其指令集和微架构做得好的范围内，它比任何x86架构的CPU都高效得多，这是业界的共识。但是，它的初始部署成本和软件开发成本也高得多。之前提到VLIW削减了相关的动态硬件调度资源，从而极其依赖编译器的静态调度，这使得用编写编译器来为安腾开发软件要比为其他架构CPU开发软件困难得多。
⏱ 2024-04-06 06:46:44 ^3300065662-11-7986-8387&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 回到CPU设计本身，在超标量CPU中将指令分发给N个并行单元的硬件开销是比较大的，因此指令发射的宽度目前做不了太大（开销大，收益小，权衡下来不划算
⏱ 2024-04-06 06:56:03 ^3300065662-11-9152-9225&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第2章-cpu前端与指令缓存设计&#34;&gt;第2章 CPU前端与指令缓存设计&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  对于ARM架构的CPU来说，前端转换实际上是两个步骤：将ARM指令转换成宏操作(Macro-operations)，然后将宏操作翻译成微操作进行分发（需要注意的是，在一个时钟周期内能够处理的指令、宏操作和微操作的数量是有限制的）。 ^3300065662-12-1275-1390&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 这个限制典型值是多少 - ⏱ 2024-04-06 06:58:46&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;21-内存的层次结构与缓存的基本架构&#34;&gt;2.1 内存的层次结构与缓存的基本架构&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 通常，为了支持数据访问和指令获取的重叠，CPU有两个一级缓存，一个用于程序数据（数据缓存，Data Cache），一个用于程序指令（指令缓存，Instruction Cache）。这样的一级缓存也被称为哈佛缓存(Harvard Cache)
⏱ 2024-04-06 09:00:46 ^3300065662-13-1483-1603&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 多级缓存的各级缓存均由硬件管理，其基本原理是缓存越大，访问的地址就越有可能出现在缓存中，但缓存也越慢。较大的缓存速度较慢，因为对存储器的访问时间主要由连线延迟（地址线、行线、列线）决定，并且不会随着技术规模的扩大而改善
⏱ 2024-04-06 09:21:00 ^3300065662-13-1748-1857&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;22-指令缓存分类与访问读取&#34;&gt;2.2 指令缓存分类与访问读取&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 为了能够快速读写，有效位信息的存储一般基于寄存器而非静态存储器。
⏱ 2024-04-06 09:36:59 ^3300065662-14-744-776&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;23-指令缓存的替换策略选择&#34;&gt;2.3 指令缓存的替换策略选择&lt;/h3&gt;
&lt;h3 id=&#34;24-指令缓存的性能衡量标准与硬件预取设计&#34;&gt;2.4 指令缓存的性能衡量标准与硬件预取设计&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  当CPU前端对指令的供应变慢时，流水线的发射宽度和执行资源无论多么丰富都会被浪费。 ^3300065662-16-2667-2708&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 指令预取也可能是指令执行的瓶颈 - ⏱ 2024-04-06 10:43:44&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;25-tlb与缓存的组织方式&#34;&gt;2.5 TLB与缓存的组织方式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 CPU层所操作的内存地址称作虚拟地址（逻辑地址），并不是物理的内存地址，从虚拟地址至物理地址的映射由硬件内存管理单元(Memory Management Unit, MMU)来执行
⏱ 2024-03-07 14:04:20 ^3300065662-17-527-617&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;26-微操作缓存与循环缓冲器设计&#34;&gt;2.6 微操作缓存与循环缓冲器设计&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 微操作可以编码为固定长度的CISC指令，从而节省微操作缓存面积，但代价是识别重命名、分发和执行每个微操作字段所需的译码逻辑开销。
⏱ 2024-04-06 22:27:41 ^3300065662-18-1749-1813&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 如果微操作缓存查找命中，则命中的整个微操作缓存条目[存储在命中的微操作缓存行中的微操作集合（组）]将在单个时钟周期内发送到微操作队列
⏱ 2024-04-06 22:28:11 ^3300065662-18-1929-1995&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 此架构可以为后端引擎提供微操作。指令缓存存储x86指令，微操作缓存和循环缓冲区保存已解码的微操作
⏱ 2024-04-06 22:30:04 ^3300065662-18-3140-3188&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;📌  从指令缓存提取的指令需要进行译码操作，而从微操作缓存或循环缓存中提取的微操作可以绕过指令译码单元，从而节省了译码单元的流水线延迟和功耗。循环缓冲区存储在较小循环的微操作中，而剩余的微操作存储在微操作缓存中。因此，任何增加从微操作缓存或循环缓冲区馈送到后端的微操作百分比的技术都可以提高性能和功耗效率。 ^3300065662-18-3189-3339&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;💭 还可以这么玩儿 - ⏱ 2024-04-06 22:30:17&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;27-指令提取单元设计&#34;&gt;2.7 指令提取单元设计&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 指令队列的作用在于解耦取指单元和译码单元两边的流水线，平衡取指单元流水线中断（如缓存未命中）造成的“气泡”和后级单元流水线阻塞造成的效率降低。其存储的指令条目数根据设计性能的需求定义，至少大于取指单元流水线深度乘以指令发射宽度，才能在理论上保证不会出现流水线“气泡”（理想情况）。如果指令队列的深度过大，在控制类指令的路径上可能会造成提取到过多错误路径指令而导致无谓的功耗开销，所以设计深度要平衡各方面的因素考虑。
⏱ 2024-04-07 06:52:08 ^3300065662-19-1219-1426&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;28-指令译码单元设计&#34;&gt;2.8 指令译码单元设计&lt;/h3&gt;
&lt;h2 id=&#34;第3章-分支预测单元设计&#34;&gt;第3章 分支预测单元设计&lt;/h2&gt;
&lt;h3 id=&#34;31-分支预测的原理&#34;&gt;3.1 分支预测的原理&lt;/h3&gt;
&lt;h3 id=&#34;32-分支跳转方向预测&#34;&gt;3.2 分支跳转方向预测&lt;/h3&gt;
&lt;h3 id=&#34;33-分支跳转目标预测&#34;&gt;3.3 分支跳转目标预测&lt;/h3&gt;
&lt;h3 id=&#34;34-分支预测单元与取指令单元解耦合设计&#34;&gt;3.4 分支预测单元与取指令单元解耦合设计&lt;/h3&gt;
&lt;h3 id=&#34;35-分支预测单元的设计思路&#34;&gt;3.5 分支预测单元的设计思路&lt;/h3&gt;
&lt;h2 id=&#34;第4章-寄存器重命名单元设计&#34;&gt;第4章 寄存器重命名单元设计&lt;/h2&gt;
&lt;h3 id=&#34;41-寄存器重命名技术概述&#34;&gt;4.1 寄存器重命名技术概述&lt;/h3&gt;
&lt;h3 id=&#34;42-寄存器重命名的原理与过程概述&#34;&gt;4.2 寄存器重命名的原理与过程概述&lt;/h3&gt;
&lt;h3 id=&#34;43-寄存器重命名技术的设计空间&#34;&gt;4.3 寄存器重命名技术的设计空间&lt;/h3&gt;
&lt;h3 id=&#34;44-寄存器重命名的映射方法&#34;&gt;4.4 寄存器重命名的映射方法&lt;/h3&gt;
&lt;h3 id=&#34;45-寄存器重命名可能的实现方案&#34;&gt;4.5 寄存器重命名可能的实现方案&lt;/h3&gt;
&lt;h3 id=&#34;46-寄存器重命名的实现过程&#34;&gt;4.6 寄存器重命名的实现过程&lt;/h3&gt;
&lt;h2 id=&#34;第5章-发射队列设&#34;&gt;第5章 发射队列设&lt;/h2&gt;
&lt;h3 id=&#34;51-发射队列的原理&#34;&gt;5.1 发射队列的原理&lt;/h3&gt;
&lt;h3 id=&#34;52-发射队列设计空间&#34;&gt;5.2 发射队列设计空间&lt;/h3&gt;
&lt;h3 id=&#34;53-操作数获取策略&#34;&gt;5.3 操作数获取策略&lt;/h3&gt;
&lt;h3 id=&#34;54-发射队列的工作机制&#34;&gt;5.4 发射队列的工作机制&lt;/h3&gt;
&lt;h3 id=&#34;55-发射队列在超标量cpu中的应用&#34;&gt;5.5 发射队列在超标量CPU中的应用&lt;/h3&gt;
&lt;h2 id=&#34;第6章-执行单元设计&#34;&gt;第6章 执行单元设计&lt;/h2&gt;
&lt;h3 id=&#34;61-算术逻辑运算单元设计&#34;&gt;6.1 算术逻辑运算单元设计&lt;/h3&gt;
&lt;h3 id=&#34;62-定点乘法运算设计&#34;&gt;6.2 定点乘法运算设计&lt;/h3&gt;
&lt;h3 id=&#34;63-单指令多数据simd设计&#34;&gt;6.3 单指令多数据SIMD设计&lt;/h3&gt;
&lt;h3 id=&#34;64-旁路网络设计&#34;&gt;6.4 旁路网络设计&lt;/h3&gt;
&lt;h2 id=&#34;第7章-浮点运算单元设计&#34;&gt;第7章 浮点运算单元设计&lt;/h2&gt;
&lt;h3 id=&#34;71-浮点数据格式与运算标准ieee754&#34;&gt;7.1 浮点数据格式与运算标准——IEEE754&lt;/h3&gt;
&lt;h3 id=&#34;72-浮点加法运算原理与设计&#34;&gt;7.2 浮点加法运算原理与设计&lt;/h3&gt;
&lt;h3 id=&#34;73-浮点乘法运算原理与设计&#34;&gt;7.3 浮点乘法运算原理与设计&lt;/h3&gt;
&lt;h3 id=&#34;74-浮点除法开方运算原理与设计&#34;&gt;7.4 浮点除法/开方运算原理与设计&lt;/h3&gt;
&lt;h2 id=&#34;第8章-访存单元设计&#34;&gt;第8章 访存单元设计&lt;/h2&gt;
&lt;h3 id=&#34;81-内存模型概述&#34;&gt;8.1 内存模型概述&lt;/h3&gt;
&lt;h3 id=&#34;82-数据缓存概述&#34;&gt;8.2 数据缓存概述&lt;/h3&gt;
&lt;h3 id=&#34;83-数据缓存控制设计&#34;&gt;8.3 数据缓存控制设计&lt;/h3&gt;
&lt;h3 id=&#34;84-数据缓存预取技术&#34;&gt;8.4 数据缓存预取技术&lt;/h3&gt;
&lt;h2 id=&#34;第9章-重排序缓冲设计&#34;&gt;第9章 重排序缓冲设计&lt;/h2&gt;
&lt;h3 id=&#34;91-重排序缓冲的原理&#34;&gt;9.1 重排序缓冲的原理&lt;/h3&gt;
&lt;h3 id=&#34;92-重排序缓冲的设计空间&#34;&gt;9.2 重排序缓冲的设计空间&lt;/h3&gt;
&lt;h3 id=&#34;93-重排序缓冲运行示例&#34;&gt;9.3 重排序缓冲运行示例&lt;/h3&gt;
&lt;h2 id=&#34;第10章-高性能cpu设计实例intel-p6微架构&#34;&gt;第10章 高性能CPU设计实例：Intel P6微架构&lt;/h2&gt;
&lt;h3 id=&#34;101-intel-p6微架构概述&#34;&gt;10.1 Intel P6微架构概述&lt;/h3&gt;
&lt;h3 id=&#34;102-intel-p6微架构的流水线设计&#34;&gt;10.2 Intel P6微架构的流水线设计&lt;/h3&gt;
&lt;h3 id=&#34;103-intel-p6微架构前端设计&#34;&gt;10.3 Intel P6微架构前端设计&lt;/h3&gt;
&lt;h3 id=&#34;104-intel-p6微架构乱序执行引擎设计&#34;&gt;10.4 Intel P6微架构乱序执行引擎设计&lt;/h3&gt;
&lt;h3 id=&#34;105-intel-p6微架构内存子系统设计&#34;&gt;10.5 Intel P6微架构内存子系统设计&lt;/h3&gt;
&lt;h2 id=&#34;文后&#34;&gt;文后&lt;/h2&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;15-超标量cpu设计概述-1&#34;&gt;1.5 超标量CPU设计概述&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 超标量乱序对指令级并行处理是在执行过程中而不是编译过程中，是硬件（而不是编译器）通过不同的信息来决定的。相比编译器，硬件能够感知程序的动态特性，包括缓存未命中，最近的分支等。当然，编译器对代码拥有更宏观的视角，而硬件是没有的。  ^6733360-7Qf04nNIV
- 💭 编译器视角更大
- ⏱ 2024-04-06 06:39:27&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-1&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 编译器也可以重命名寄存器，但只能重命名为架构寄存器，其数量受ISA限制。  ^6733360-7Qf0jiI9G
- 💭 架构寄存器是ISA手册里面的寄存器，实际物理寄存器更多
- ⏱ 2024-04-06 06:43:07&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-2&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 两个加载/存储槽，两个浮点运算槽，一个定点运算槽和一个定点与分支指令共用的指令槽。一般每个指令槽字段可以设计为16～32-bit，长指令的大小设计为80～160-bit。  ^6733360-7Qf0pRjPC
- 💭 指令槽的概念
- ⏱ 2024-04-06 06:44:44&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-3&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 超标量乱序执行的优点是能够最大限度地在指令流中发现尽可能多的指令级并行，并且在同一时刻执行更多的指令。即在指令执行过程中可以动态调度，指令次序可以被调整以达到最优执行。不像VLIW，指令停顿只能单纯等待，静态调度也无法优化处理缓存未命中和分支预测失败。即一旦编译器在编译时无法看到尽可能多的指令级并行，那么编译器就需要插入更多的NOPs，伤害代码密度。  ^6733360-7Qf1dzTeS
- 💭 静态调度是编译器插入nops保证的
- ⏱ 2024-04-06 06:56:59&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第2章-cpu前端与指令缓存设计-1&#34;&gt;第2章 CPU前端与指令缓存设计&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-4&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 对于ARM架构的CPU来说，前端转换实际上是两个步骤：将ARM指令转换成宏操作(Macro-operations)，然后将宏操作翻译成微操作进行分发（需要注意的是，在一个时钟周期内能够处理的指令、宏操作和微操作的数量是有限制的）。  ^6733360-7Qf1lP6BP
- 💭 这个限制典型值是多少
- ⏱ 2024-04-06 06:59:00&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-5&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 具体来说，指令提取单元会根据设计的提取窗口（也就是一个时钟周期提取的指令块中的指令数）获取一个指令块，它可以识别提取窗口内（以及跨窗口）的指令。然后译码单元会将指令转换为一个或多个宏操作，也有可能将多个指令融合到单个宏操作中。同时，寄存器被重命名为临时保存中间结果的内部寄存器堆，允许微操作在不违反架构寄存器之间的数据依赖性的情况下乱序(Out-of-Order)执行。之后将宏操作转换为微操作，并将微操作分发(Dispatch)到属于适当功能单元的发射队列(Issue Queue)，一般一个发射队列对应两个或者多个执行流水线。当一条指令成功执行完成时，就会退出并将其结果提交给相应的寄存器。写回/退出阶段跟踪“退出指针(Retire Pointer)”，负责维护一个重排序缓冲(Reorder Buffer)，因为之前的乱序执行，此处用于保存有关指令和微操作状态来顺序提交和写回，是一个保序的操作。  ^6733360-7Qf2bvLdm
- 💭 宏观视野
- ⏱ 2024-04-06 07:11:44&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-6&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 在正常情况下，高性能CPU设计为每个周期可以维持一个取指令操作[需要注意的是，此处的一个取指令操作并不意味着仅仅取一条指令，一般是N条指令的集合，被称为指令块（Fetch Bundle或Fetch Block）]，每个周期都必须计算一个新的取指地址。  ^6733360-7Qf98tPR7
- 💭 bundle从这里来的
- ⏱ 2024-04-06 08:57:52&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;22-指令缓存分类与访问读取-1&#34;&gt;2.2 指令缓存分类与访问读取&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-7&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 图2-6所示为一个四路(4-Way)组相联型缓存的架构，即缓存中的组数为S=2s，每组包含四行。四个标签和数据存储条目分别使用内存地址的s和s+w位从四路并行获取，然后将标签存储器中的标签与每路中块地址的标签进行比较。每路返回一个命中或未命中指示，可以触发未命中或选择命中路返回的缓存行。顺便一提，直接映射缓存可以看作是单路(1-Way)组相联缓存。  ^6733360-7QfeNrn6T
- 💭 这里没有说清楚
- ⏱ 2024-04-06 10:24:18&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;24-指令缓存的性能衡量标准与硬件预取设计-1&#34;&gt;2.4 指令缓存的性能衡量标准与硬件预取设计&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-8&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 指第一次将内存块写入缓存所无法避免的未命中，也被称为冷未命中，因为这种未命中发生在缓存冷（空）时  ^6733360-7QffLePDE
- 💭 这种是天然无法消除的
- ⏱ 2024-04-06 10:39:02&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-9&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 出于性能优化考虑，超标量CPU的缓存设计通常会加入预取(Prefetch)，这是一种尝试在程序访问数据之前将数据写入缓存的技术。预取减少了程序等待获取数据的时间，因此可以加快程序执行速度。然而，预取是以额外带宽使用作为代价的，因为需要预测CPU将来可能需要哪些数据。这种预测永远不可能是完美的，因此CPU可能永远不会使用一些预取的内存块。  ^6733360-7QffXugky
- 💭 程序预取是非常不错的减少强制未命中的对策
- ⏱ 2024-04-06 10:42:03&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-10&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 当CPU前端对指令的供应变慢时，流水线的发射宽度和执行资源无论多么丰富都会被浪费。  ^6733360-7Qfg6snDn
- 💭 指令预取也可能是指令执行的瓶颈
- ⏱ 2024-04-06 10:44:15&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-11&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但是，乱序执行通常无法隐藏指令提取延迟，而指令提取阶段产生的停顿通常占整体停顿的较大一部分。指令的硬件预取(Instruction Hardware Prefetch)作为提升性能的特性由于应运而生  ^6733360-7Qfga8F6G
- 💭 硬件预取看起来会是非常重要的提升ILP的手段
- ⏱ 2024-04-06 10:45:10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;26-微操作缓存与循环缓冲器设计-1&#34;&gt;2.6 微操作缓存与循环缓冲器设计&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-12&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 ntel的解决方案是将CISC指令翻译成类似RISC的指令，也就是说指令在译码阶段被转换为固定长度的微操作(Micro-operation，μop)。微操作遵循RISC设计理念中的固定长度和加载存储执行模型(load-store execution model)。这些固定长度的微操作使指令发射和执行逻辑更简单，并且对指令集架构(ISA)隐藏，以确保向后兼容。这种ISA级别的抽象使CPU供应商能够根据他们的自定义微架构以不同的方式实现x86指令  ^6733360-7QfRD2TVZ
- 💭 npu指令集设计看起来模仿了CISC的做法
- ⏱ 2024-04-06 20:17:14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;划线评论-13&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 从指令缓存提取的指令需要进行译码操作，而从微操作缓存或循环缓存中提取的微操作可以绕过指令译码单元，从而节省了译码单元的流水线延迟和功耗。循环缓冲区存储在较小循环的微操作中，而剩余的微操作存储在微操作缓存中。因此，任何增加从微操作缓存或循环缓冲区馈送到后端的微操作百分比的技术都可以提高性能和功耗效率。  ^6733360-7Qg0mDUdw
- 💭 还可以这么玩儿
- ⏱ 2024-04-06 22:30:37&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;63-单指令多数据simd设计-1&#34;&gt;6.3 单指令多数据SIMD设计&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-14&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 单指令多数据(Single Instruction Multiple Data, SIMD)是提高数据并行处理能力的重要手段。顾名思义，SIMD指令对多组数据并行运行相同的指令，SIMD的操作数来自矢量寄存器。  ^6733360-7PvQhi4vy
- 💭 矢量寄存器实现SIMD
- ⏱ 2024-03-07 14:09:45&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第8章-访存单元设计-1&#34;&gt;第8章 访存单元设计&lt;/h2&gt;
&lt;h3 id=&#34;划线评论-15&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 综上所述，LSU集复杂功能、高性能、低功耗等需求于一体，对于芯片的整体PPA(Power-Performance-Area)具有决定性的影响。因此，如何设计一款完全符合需求的LSU是高性能CPU设计中最具挑战性的工作。  ^6733360-7PvQqDePI
- 💭 挑战
- ⏱ 2024-03-07 14:12:03&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://blog.bugxch.top/weread/%E9%BA%A6%E8%82%AF%E9%94%A1%E7%BB%93%E6%9E%84%E5%8C%96%E6%88%98%E7%95%A5%E6%80%9D%E7%BB%B4%E5%A6%82%E4%BD%95%E6%83%B3%E6%B8%85%E6%A5%9A%E8%AF%B4%E6%98%8E%E7%99%BD%E5%81%9A%E5%88%B0%E4%BD%8D/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/weread/%E9%BA%A6%E8%82%AF%E9%94%A1%E7%BB%93%E6%9E%84%E5%8C%96%E6%88%98%E7%95%A5%E6%80%9D%E7%BB%B4%E5%A6%82%E4%BD%95%E6%83%B3%E6%B8%85%E6%A5%9A%E8%AF%B4%E6%98%8E%E7%99%BD%E5%81%9A%E5%88%B0%E4%BD%8D/</guid>
        <description>&lt;h1 id=&#34;元数据&#34;&gt;元数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;[!abstract] 麦肯锡结构化战略思维：如何想清楚、说明白、做到位&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://cdn.weread.qq.com/weread/cover/79/YueWen_34916572/t7_YueWen_34916572.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34; 麦肯锡结构化战略思维：如何想清楚、说明白、做到位|200&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;书名： 麦肯锡结构化战略思维：如何想清楚、说明白、做到位&lt;/li&gt;
&lt;li&gt;作者： 周国元&lt;/li&gt;
&lt;li&gt;简介： 《麦肯锡结构化战略思维：如何想清楚、说明白、做到位》作者根据自己在麦肯锡工作的经验，首次体系化地从思考、交流到实施全流程，介绍了结构化战略思维，拆解了其方法论，着重讲了“结构化思维4大原则”“新麦肯锡5步法”和“培养结构化战略思维需要养成的10个习惯”，同时把12个知识要点用图解的方式做了直观呈现，以帮助我们学习并掌握“自上而下”的结构化战略思维方式和方法，让我们在复杂、多变、模糊而不确定的时代冲破专业与经验的禁锢，以数字和逻辑为工具，自信地面对和分解任何问题与挑战，并能快速提出高效而有创造性的解决方案，逐渐成长为解决问题的高手。&lt;/li&gt;
&lt;li&gt;出版时间 2021-01-01 00:00:00&lt;/li&gt;
&lt;li&gt;ISBN： 9787115552365&lt;/li&gt;
&lt;li&gt;分类： 哲学宗教-逻辑学&lt;/li&gt;
&lt;li&gt;出版社： 人民邮电出版社&lt;/li&gt;
&lt;li&gt;PC地址：https://weread.qq.com/web/reader/c8a324607214c8dcc8ab841&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;高亮划线&#34;&gt;高亮划线&lt;/h1&gt;
&lt;h2 id=&#34;封面&#34;&gt;封面&lt;/h2&gt;
&lt;h2 id=&#34;版权信息&#34;&gt;版权信息&lt;/h2&gt;
&lt;h2 id=&#34;献给&#34;&gt;献给&lt;/h2&gt;
&lt;h2 id=&#34;引言-为什么需要结构化战略思维&#34;&gt;引言 为什么需要结构化战略思维&lt;/h2&gt;
&lt;h3 id=&#34;焦虑在vuca时代蔓延&#34;&gt;“焦虑”在VUCA时代蔓延&lt;/h3&gt;
&lt;h2 id=&#34;上篇-认识结构化战略思维&#34;&gt;上篇 认识结构化战略思维&lt;/h2&gt;
&lt;h3 id=&#34;第1章-结构化战略思维是什么&#34;&gt;第1章 结构化战略思维是什么&lt;/h3&gt;
&lt;h3 id=&#34;第2章-维度结构化战略思维的核心概念&#34;&gt;第2章 维度：结构化战略思维的核心概念&lt;/h3&gt;
&lt;h4 id=&#34;21-重塑问题观&#34;&gt;2.1 重塑“问题观”&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 但自下而上的专业思维方式的局限性也十分明显。首先是学习周期长。随着学科细分和知识积累的指数倍增加，单个个体已经很难成为多领域的专家。VUCA时代已经不可能再见到文艺复兴时期达·芬奇般的传奇人物——可以在绘画、生物学、植物学和建筑学多个领域成为泰斗。活在当下的人们连某一细分领域都难以精通，更没有多余的时间线性学习多个领域，因此专业思维的长周期积累就成了跨界的壁垒。有人将这种自下而上的“慢工出细活”形容为“把海水煮热而取一瓢水”，在时间压力大的情况下不可行。
⏱ 2023-12-16 14:08:40 ^34916572-74-2460-2689&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;22-跨界的简单按钮&#34;&gt;2.2 跨界的“简单按钮”&lt;/h4&gt;
&lt;h4 id=&#34;23-切名词是结构化战略思维的起点&#34;&gt;2.3 “切”名词是结构化战略思维的起点&lt;/h4&gt;
&lt;h4 id=&#34;24-切问题更上一层楼&#34;&gt;2.4 “切”问题，更上一层楼&lt;/h4&gt;
&lt;h4 id=&#34;25-从单一维度到多维度的飞跃&#34;&gt;2.5 从单一维度到多维度的飞跃&lt;/h4&gt;
&lt;h4 id=&#34;26-小结&#34;&gt;2.6 小结&lt;/h4&gt;
&lt;h3 id=&#34;第3章-结构化战略思维四大原则&#34;&gt;第3章 结构化战略思维四大原则&lt;/h3&gt;
&lt;h4 id=&#34;31-原则1数字说话&#34;&gt;3.1 原则1：数字说话&lt;/h4&gt;
&lt;h4 id=&#34;32-原则2洞见优于表象&#34;&gt;3.2 原则2：洞见优于表象&lt;/h4&gt;
&lt;h4 id=&#34;33-原则3mece原则&#34;&gt;3.3 原则3：MECE原则&lt;/h4&gt;
&lt;h4 id=&#34;34-原则4假设为前提&#34;&gt;3.4 原则4：假设为前提&lt;/h4&gt;
&lt;h2 id=&#34;下篇-结构化战略思维的应用&#34;&gt;下篇 结构化战略思维的应用&lt;/h2&gt;
&lt;h3 id=&#34;第4章-新麦肯锡五步法结构化战略思维的综合运用&#34;&gt;第4章 新麦肯锡五步法：结构化战略思维的综合运用&lt;/h3&gt;
&lt;h4 id=&#34;新麦肯锡五步法&#34;&gt;新麦肯锡五步法&lt;/h4&gt;
&lt;h3 id=&#34;第5章-第一步定义问题&#34;&gt;第5章 第一步：定义问题&lt;/h3&gt;
&lt;h4 id=&#34;52-定义正确问题的衡量标准&#34;&gt;5.2 定义正确问题的衡量标准&lt;/h4&gt;
&lt;h3 id=&#34;第6章-第二步结构化分析&#34;&gt;第6章 第二步：结构化分析&lt;/h3&gt;
&lt;h4 id=&#34;62-分析问题要小心逻辑陷阱&#34;&gt;6.2 分析问题要小心逻辑陷阱&lt;/h4&gt;
&lt;h4 id=&#34;63-规避分析问题的误区&#34;&gt;6.3 规避分析问题的误区&lt;/h4&gt;
&lt;h3 id=&#34;第7章-第三步提出假设&#34;&gt;第7章 第三步：提出假设&lt;/h3&gt;
&lt;h4 id=&#34;72-提出假设的关键举措头脑风暴&#34;&gt;7.2 提出假设的关键举措：头脑风暴&lt;/h4&gt;
&lt;h4 id=&#34;73-提出假设时杜绝专家过早参与&#34;&gt;7.3 提出假设时杜绝专家过早参与&lt;/h4&gt;
&lt;h3 id=&#34;第8章-第四步验证假设&#34;&gt;第8章 第四步：验证假设&lt;/h3&gt;
&lt;h4 id=&#34;82-实地调研的技巧&#34;&gt;8.2 实地调研的技巧&lt;/h4&gt;
&lt;h3 id=&#34;第9章-第五步交付&#34;&gt;第9章 第五步：交付&lt;/h3&gt;
&lt;h4 id=&#34;91-交付前从来没有过度的准备&#34;&gt;9.1 交付前：从来没有“过度的准备”&lt;/h4&gt;
&lt;h4 id=&#34;92-交付时高效的商务沟通&#34;&gt;9.2 交付时：高效的商务沟通&lt;/h4&gt;
&lt;h3 id=&#34;第10章-培养结构化战略思维需要养成的十个习惯&#34;&gt;第10章 培养结构化战略思维需要养成的十个习惯&lt;/h3&gt;
&lt;h4 id=&#34;101-反对的责任&#34;&gt;10.1 反对的责任&lt;/h4&gt;
&lt;h4 id=&#34;102-解决正确的问题&#34;&gt;10.2 解决正确的问题&lt;/h4&gt;
&lt;h4 id=&#34;103-下一层面的细节&#34;&gt;10.3 下一层面的细节&lt;/h4&gt;
&lt;h4 id=&#34;104-总结提炼&#34;&gt;10.4 总结提炼&lt;/h4&gt;
&lt;h4 id=&#34;105-第一天的答案&#34;&gt;10.5 第一天的答案&lt;/h4&gt;
&lt;h4 id=&#34;106-问正确的问题&#34;&gt;10.6 问正确的问题&lt;/h4&gt;
&lt;h4 id=&#34;107-认为还是知道&#34;&gt;10.7 认为还是知道&lt;/h4&gt;
&lt;h4 id=&#34;108-移动时间轴&#34;&gt;10.8 移动时间轴&lt;/h4&gt;
&lt;h4 id=&#34;109-数字和逻辑&#34;&gt;10.9 数字和逻辑&lt;/h4&gt;
&lt;h4 id=&#34;1010-知道边界&#34;&gt;10.10 知道边界&lt;/h4&gt;
&lt;h3 id=&#34;结语-成长的痛&#34;&gt;结语 成长的痛&lt;/h3&gt;
&lt;h4 id=&#34;出逃的唐僧&#34;&gt;出逃的唐僧&lt;/h4&gt;
&lt;h4 id=&#34;改变就趁现在&#34;&gt;改变，就趁现在&lt;/h4&gt;
&lt;h3 id=&#34;附录-知识要点图解卡片&#34;&gt;附录 知识要点图解卡片&lt;/h3&gt;
&lt;h4 id=&#34;卡片2切与mece原则&#34;&gt;卡片2：“切”与MECE原则&lt;/h4&gt;
&lt;h4 id=&#34;卡片3切问题的四大招式&#34;&gt;卡片3：“切”问题的四大招式&lt;/h4&gt;
&lt;h4 id=&#34;卡片4逻辑推理的主要方法归纳法演绎法&#34;&gt;卡片4：逻辑推理的主要方法——归纳法&amp;amp;演绎法&lt;/h4&gt;
&lt;h4 id=&#34;卡片5高效交流1沟通的形式&#34;&gt;卡片5：高效交流（1）——沟通的形式&lt;/h4&gt;
&lt;h4 id=&#34;卡片6高效沟通2沟通的成功要素&#34;&gt;卡片6：高效沟通（2）——沟通的成功要素&lt;/h4&gt;
&lt;h4 id=&#34;卡片7专业ppt示例&#34;&gt;卡片7：专业PPT示例&lt;/h4&gt;
&lt;h4 id=&#34;卡片8可复用的多维图谱&#34;&gt;卡片8：可复用的多维图谱&lt;/h4&gt;
&lt;h4 id=&#34;卡片9故事线&#34;&gt;卡片9：故事线&lt;/h4&gt;
&lt;h4 id=&#34;卡片10scp-i叙述框架&#34;&gt;卡片10：SCP-I叙述框架&lt;/h4&gt;
&lt;h4 id=&#34;卡片11结构化战略思维四大原则&#34;&gt;卡片11：结构化战略思维四大原则&lt;/h4&gt;
&lt;h4 id=&#34;卡片12问题定义工具&#34;&gt;卡片12：问题定义工具&lt;/h4&gt;
&lt;h1 id=&#34;读书笔记&#34;&gt;读书笔记&lt;/h1&gt;
&lt;h2 id=&#34;焦虑在vuca时代蔓延-1&#34;&gt;“焦虑”在VUCA时代蔓延&lt;/h2&gt;
&lt;h3 id=&#34;划线评论&#34;&gt;划线评论&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 就这样，“焦虑”在VUCA时代蔓延着，而一些职场人士大多时候处于P.A.I.D.(Pressured,Action Addicted,Information Overload and Distracted)的亚健康状态。“Pressured”指的是压力大，在有限的时间和资源下，人们总要完成更多的任务。因此，人们总在做事。“Action Addicted”指的是人们没有时间思考，怕丧失机会而不得不尽快行动。“Information Overload”指的是信息超载，信息唾手可得却真假难辨，到处都是的信息“噪声”[插图]，让人们无所适从。很多人经常处于不集中、不聚焦的“Distracted”状态，不停地查看手机，似乎离线几分钟就会被整个世界遗忘，时刻处于一个什么都想做但什么也做不好的焦躁而低效的状态。  ^6733360-7Nv2VpmR8
- 💭 太像自己现在的状态了
- ⏱ 2023-12-16 13:09:02&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本书评论&#34;&gt;本书评论&lt;/h1&gt;
</description>
        </item>
        <item>
        <title>收集</title>
        <link>https://blog.bugxch.top/%E6%94%B6%E9%9B%86/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/%E6%94%B6%E9%9B%86/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://pic.imgdb.cn/item/626a76df239250f7c590771e.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;个人博客&#34;&gt;个人博客&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pmthinking.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;产品沉思录 · Product Thinking&lt;/a&gt;，2020年发现的比较好的产品的网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hugoloveit.com/zh-cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LoveIt&lt;/a&gt;，当前网站的主题介绍文章，可以参考文章插入图片、视频和音乐&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.sharetechnote.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ShareTechnote&lt;/a&gt;，一个韩国高级工程师搭建的专业知识共享网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://coolshell.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;酷壳 – CoolShell.cn&lt;/a&gt;，左耳朵耗子的官方博客，对我影响比较大的技术大佬&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://spaces.ac.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;科学空间|Scientific Spaces&lt;/a&gt;，非常不错的后生，天文、数学、AI、竞赛，博文质量极高，在这么小的年龄以十年的尺度更新不辍，非常难得&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.ruanyifeng.com/blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阮一峰的网络日志&lt;/a&gt;，IT圈子中小有名气的大佬，比较喜欢他每周一推的科技爱好者周刊系列&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jhuo.ca/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HuoJu&#39;s BLOG&lt;/a&gt;，一个在盛大创新院干过的大佬的博客&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://labuladong.gitbook.io/algo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;labuladong的算法小抄&lt;/a&gt;，数据结构与算法的不错的博客&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.shenmezhidedu.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;好书推荐-什么值得读-推荐一本好书&lt;/a&gt;，好书推荐网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bookfere.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;书伴&lt;/a&gt;，kindle配套的不错的网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.changhai.org/index.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;卢昌海个人主页&lt;/a&gt;，卢昌海的个人网站&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://macshuo.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MacTalk-池建强的随想录 | 让创作成为一种生活方式&lt;/a&gt;，一个持续创业者&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术网站&#34;&gt;技术网站&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cppreference.com&lt;/a&gt;，c++参考手册中文版&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://changkun.de/modern-cpp/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;现代 C++ 教程: 高速上手 C++ 11/14/17/20&lt;/a&gt;，现代C++高速上手
&lt;a class=&#34;link&#34; href=&#34;https://runestone.academy/runestone/books/published/pythonds/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Problem Solving with Algorithms and Data Structures using Python — Problem Solving with Algorithms and Data Structures&lt;/a&gt;，python数据结构与算法&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://kaisery.github.io/trpl-zh-cn/title-page.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rust 程序设计语言 - Rust 程序设计语言 简体中文版&lt;/a&gt;，Rust语言教程&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#main&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C++ Core Guidelines&lt;/a&gt;，C++核心指南&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://icyfenix.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;凤凰架构：构筑可靠的大型分布式系统 | 凤凰架构&lt;/a&gt;，凤凰架构在线电子书&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://web.dev/learn/css/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Learn CSS&lt;/a&gt;，google的CSS教程&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://runestone.academy/runestone/books/published/pythonds/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Problem Solving with Algorithms and Data Structures using Python — Problem Solving with Algorithms and Data Structures&lt;/a&gt;，python的数据结构与算法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他网站&#34;&gt;其他网站&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.todaybing.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;必应壁纸｜必应美图 -超高质量的必应壁纸4K无水印下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>搜索</title>
        <link>https://blog.bugxch.top/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bugxch.top/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
